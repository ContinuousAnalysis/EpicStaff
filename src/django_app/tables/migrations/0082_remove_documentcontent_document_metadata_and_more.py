# Generated by Django 5.1.3 on 2025-04-22 11:21

import django.db.models.deletion
from django.db import migrations, models


_metadata_to_content_mapping = {}


def store_mapping(apps, schema_editor):
    """Store the relationship mapping before making any changes"""
    global _metadata_to_content_mapping
    DocumentContent = apps.get_model("tables", "DocumentContent")

    _metadata_to_content_mapping.clear()

    # Create mapping from content ID to metadata ID
    for content in DocumentContent.objects.all():
        if hasattr(content, "document_metadata_id") and content.document_metadata_id:
            _metadata_to_content_mapping[content.document_metadata_id] = content.id

    print(f"Stored {len(_metadata_to_content_mapping)} document relationships")


def apply_mapping(apps, schema_editor):
    """Apply the stored mapping to the new ForeignKey field"""
    global _metadata_to_content_mapping
    DocumentMetadata = apps.get_model("tables", "DocumentMetadata")

    updated_count = 0
    for metadata_id, content_id in _metadata_to_content_mapping.items():
        try:
            metadata = DocumentMetadata.objects.get(document_id=metadata_id)
            metadata.document_content_id = content_id
            metadata.save(update_fields=["document_content_id"])
            updated_count += 1
        except DocumentMetadata.DoesNotExist:
            print(
                f"Transfering knowledge data Warning: DocumentMetadata with ID {metadata_id} not found"
            )

    print(f"Updated {updated_count} DocumentMetadata records")


class Migration(migrations.Migration):

    dependencies = [
        ("tables", "0081_alter_realtimeagent_agent_and_more"),
    ]

    operations = [
        migrations.RunPython(
            code=store_mapping, reverse_code=migrations.RunPython.noop
        ),
        migrations.RemoveField(
            model_name="documentcontent",
            name="document_metadata",
        ),
        migrations.AddField(
            model_name="documentmetadata",
            name="document_content",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="document_metadata",
                to="tables.documentcontent",
            ),
        ),
        migrations.RunPython(
            code=apply_mapping, reverse_code=migrations.RunPython.noop
        ),
    ]
