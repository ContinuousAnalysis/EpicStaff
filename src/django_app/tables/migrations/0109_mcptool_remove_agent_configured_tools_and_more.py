# Generated by Django 5.1.3 on 2025-09-23 11:28

import django.db.models.deletion
from django.db import migrations, models


def migrate_agent_tools(apps, schema_editor):
    Agent = apps.get_model("tables", "Agent")
    AgentConfiguredTools = apps.get_model("tables", "AgentConfiguredTools")
    AgentPythonCodeTools = apps.get_model("tables", "AgentPythonCodeTools")

    for agent in Agent.objects.all():
        for toolconfig in getattr(agent, "configured_tools", []).all():
            AgentConfiguredTools.objects.get_or_create(agent=agent, toolconfig=toolconfig)

        for pytool in getattr(agent, "python_code_tools", []).all():
            AgentPythonCodeTools.objects.get_or_create(agent=agent, pythoncodetool=pytool)


class Migration(migrations.Migration):

    dependencies = [
        ("tables", "0108_alter_session_graph"),
    ]

    operations = [
        migrations.CreateModel(
            name="McpTool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transport",
                    models.CharField(
                        help_text="URL of the remote MCP server (SSE). Required.",
                        max_length=2048,
                    ),
                ),
                (
                    "tool_name",
                    models.CharField(help_text="Name of the MCP tool.", max_length=255),
                ),
                (
                    "timeout",
                    models.FloatField(
                        default=30,
                        help_text="Request timeout in seconds. Recommended to set.",
                    ),
                ),
                (
                    "auth",
                    models.TextField(
                        blank=True,
                        help_text="Authorization token or OAuth string, if the server requires it.",
                        null=True,
                    ),
                ),
                (
                    "init_timeout",
                    models.FloatField(
                        default=10,
                        help_text="Timeout for session initialization. Optional, default is 10 seconds.",
                    ),
                ),
            ],
            options={
                "verbose_name": "MCP Tool Data",
                "verbose_name_plural": "MCP Tool Data",
            },
        ),
        migrations.CreateModel(
            name="AgentConfiguredTools",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configured_tools_m2m",
                        to="tables.agent",
                    ),
                ),
                (
                    "toolconfig",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tables.toolconfig",
                    ),
                ),
            ],
            options={
                "db_table": "tables_agent_configured_tools_m2m",
                "unique_together": {("agent_id", "toolconfig_id")},
            },
        ),
        migrations.CreateModel(
            name="AgentPythonCodeTools",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="python_code_tools_m2m",
                        to="tables.agent",
                    ),
                ),
                (
                    "pythoncodetool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tables.pythoncodetool",
                    ),
                ),
            ],
            options={
                "db_table": "tables_agent_python_code_tools_m2m",
                "unique_together": {("agent_id", "pythoncodetool_id")},
            },
        ),
        migrations.CreateModel(
            name="AgentMcpTools",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mcp_tools",
                        to="tables.agent",
                    ),
                ),
                (
                    "mcptool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tables.mcptool"
                    ),
                ),
            ],
            options={
                "db_table": "tables_agent_mcp_tools_m2m",
                "unique_together": {("agent_id", "mcptool_id")},
            },
        ),
        migrations.CreateModel(
            name="TaskMcpTools",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_mcp_tool_list",
                        to="tables.task",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tables.mcptool"
                    ),
                ),
            ],
            options={
                "db_table": "tables_task_mcp_tools",
                "unique_together": {("task", "tool")},
            },
        ),
        migrations.RunPython(migrate_agent_tools, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="agent",
            name="configured_tools",
        ),
        migrations.RemoveField(
            model_name="agent",
            name="python_code_tools",
        ),
    ]
