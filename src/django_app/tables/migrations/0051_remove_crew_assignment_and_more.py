# Generated by Django 5.1.3 on 2025-02-18 13:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("tables", "0050_graphsessionmessage"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="crew",
            name="assignment",
        ),
        migrations.RemoveField(
            model_name="defaultcrewconfig",
            name="process",
        ),
        migrations.RemoveField(
            model_name="defaultllmconfig",
            name="num_ctx",
        ),
        migrations.RemoveField(
            model_name="llmconfig",
            name="num_ctx",
        ),
        migrations.AddField(
            model_name="agent",
            name="allow_code_execution",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="agent",
            name="cache",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="agent",
            name="default_temperature",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="agent",
            name="max_execution_time",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="agent",
            name="max_retry_limit",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="agent",
            name="max_rpm",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="agent",
            name="respect_context_window",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="crew",
            name="cache",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="crew",
            name="config",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="crew",
            name="default_temperature",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="crew",
            name="full_output",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="crew",
            name="max_rpm",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="crew",
            name="planning",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="crew",
            name="planning_llm_config",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="tables.llmconfig",
            ),
        ),
        migrations.AddField(
            model_name="defaultagentconfig",
            name="allow_code_execution",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="defaultagentconfig",
            name="cache",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="defaultagentconfig",
            name="default_temperature",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="defaultagentconfig",
            name="max_execution_time",
            field=models.IntegerField(default=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultagentconfig",
            name="max_retry_limit",
            field=models.IntegerField(default=2),
        ),
        migrations.AddField(
            model_name="defaultagentconfig",
            name="max_rpm",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="defaultagentconfig",
            name="respect_context_window",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="defaultcrewconfig",
            name="cache",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="defaultcrewconfig",
            name="default_temperature",
            field=models.IntegerField(default=0.7),
        ),
        migrations.AddField(
            model_name="defaultcrewconfig",
            name="max_rpm",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="defaultcrewconfig",
            name="planning_llm_config",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_planning_crews",
                to="tables.llmconfig",
            ),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="api_version",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="base_url",
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="frequency_penalty",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="logit_bias",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="logprobs",
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="max_completion_tokens",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="max_tokens",
            field=models.IntegerField(blank=True, default=25, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="n",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="presence_penalty",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="response_format",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="seed",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="stop",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="timeout",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="top_logprobs",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="defaultllmconfig",
            name="top_p",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="api_version",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="base_url",
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="frequency_penalty",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="logit_bias",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="logprobs",
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="max_completion_tokens",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="max_tokens",
            field=models.IntegerField(blank=True, default=25, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="n",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="presence_penalty",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="response_format",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="seed",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="stop",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="timeout",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="top_logprobs",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="llmconfig",
            name="top_p",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="task",
            name="async_execution",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="task",
            name="config",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="task",
            name="output_model",
            field=models.JSONField(default=None, null=True),
        ),
        migrations.AlterField(
            model_name="agent",
            name="allow_delegation",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AlterField(
            model_name="agent",
            name="max_iter",
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AlterField(
            model_name="agent",
            name="memory",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AlterField(
            model_name="crew",
            name="memory",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AlterField(
            model_name="defaultagentconfig",
            name="max_iter",
            field=models.IntegerField(default=20, null=True),
        ),
        migrations.AlterField(
            model_name="defaultcrewconfig",
            name="manager_llm_config",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_manager_crews",
                to="tables.llmconfig",
            ),
        ),
        migrations.AlterField(
            model_name="defaultllmconfig",
            name="temperature",
            field=models.FloatField(blank=True, default=0.7, null=True),
        ),
        migrations.AlterField(
            model_name="llmconfig",
            name="temperature",
            field=models.FloatField(blank=True, default=0.7, null=True),
        ),
        migrations.CreateModel(
            name="TaskContext",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "context",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tables.task"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_context_list",
                        to="tables.task",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("task", models.F("context")), _negated=True
                        ),
                        name="task_not_equal_context",
                    )
                ],
                "unique_together": {("task", "context")},
            },
        ),
        migrations.CreateModel(
            name="TaskTools",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_tool_list",
                        to="tables.task",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tables.tool"
                    ),
                ),
            ],
            options={
                "unique_together": {("task", "tool")},
            },
        ),
    ]
