[build-system]
requires = ["setuptools>=80.3.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "epicstaff-installer"
version = "0.1.0"
description = "EpicStaff Docker container management tool"
readme = "README.md"
requires-python = ">=3.12,<3.14"
license = {text = "Proprietary"}
authors = [
    {name = "Maksym Yevstratiev", email = "maksym.yevstratiev@hys-enterprise.com"}
]
package-mode = false
dependencies = [
    "altgraph==0.17.4",
    "blinker==1.9.0",
    "certifi==2025.4.26",
    "charset-normalizer==3.4.2",
    "click==8.1.8",
    "colorama==0.4.6",
    "docker==7.1.0",
    "Flask==3.1.0",
    "idna==3.10",
    "iniconfig==2.1.0",
    "itsdangerous==2.2.0",
    "Jinja2==3.1.6",
    "MarkupSafe==3.0.2",
    "packaging==25.0",
    "pefile==2023.2.7",
    "pluggy==1.5.0",
    "pyinstaller==6.13.0",
    "pyinstaller-hooks-contrib==2025.4",
    "requests==2.32.3",
    "urllib3==2.4.0",
    "Werkzeug==3.1.3",
    "flask-socketio (>=5.5.1,<6.0.0)",
    "python-engineio (>=4.12.1,<5.0.0)",
]

[project.optional-dependencies]
dev = [
    "coverage==7.8.0",
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
]

[tool.setuptools]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=app --cov-report=term-missing"

[tool.coverage.run]
source = ["app"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
] 
[tool.poetry.group.win.dependencies]
pywin32 = "310"
pywin32-ctypes = "0.2.3"