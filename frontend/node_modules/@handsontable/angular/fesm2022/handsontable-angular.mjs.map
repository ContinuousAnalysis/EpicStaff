{"version":3,"file":"handsontable-angular.mjs","sources":["../../../projects/hot-table/src/lib/hot-table-registerer.service.ts","../../../projects/hot-table/src/lib/hot-settings-resolver.service.ts","../../../projects/hot-table/src/lib/hot-table.component.ts","../../../projects/hot-table/src/lib/hot-column.component.ts","../../../projects/hot-table/src/lib/hot-table.module.ts","../../../projects/hot-table/src/public-api.ts","../../../projects/hot-table/src/handsontable-angular.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport Handsontable from 'handsontable/base';\n\nconst instances = new Map<string, Handsontable>();\n\nexport const HOT_DESTROYED_WARNING = 'The Handsontable instance bound to this component was destroyed and cannot be' +\n  ' used properly.';\n\n@Injectable()\nexport class HotTableRegisterer {\n  public getInstance(id: string): Handsontable {\n    const hotInstance = instances.get(id);\n\n    if (hotInstance.isDestroyed) {\n      console.warn(HOT_DESTROYED_WARNING);\n\n      return null;\n    }\n\n    return hotInstance;\n  }\n\n  public registerInstance(id: string, instance: Handsontable): Map<string, Handsontable> {\n    return instances.set(id, instance);\n  }\n\n  public removeInstance(id: string): boolean {\n    return instances.delete(id);\n  }\n}\n","import { Injectable, SimpleChanges } from '@angular/core';\nimport { HotTableComponent } from './hot-table.component';\nimport { HotColumnComponent } from './hot-column.component';\nimport Handsontable from 'handsontable/base';\n\nconst AVAILABLE_OPTIONS: string[] = Object.keys(Handsontable.DefaultSettings);\nconst AVAILABLE_HOOKS: string[] = Handsontable.hooks.getRegistered();\n\n@Injectable()\nexport class HotSettingsResolver {\n  mergeSettings(component: HotColumnComponent | HotTableComponent | Handsontable.GridSettings):\n    Handsontable.GridSettings | Handsontable.ColumnSettings {\n    const isSettingsObject = 'settings' in component && (typeof component['settings'] === 'object');\n    const mergedSettings: Handsontable.GridSettings = isSettingsObject ? (component as HotTableComponent)['settings'] : {};\n    const options = AVAILABLE_HOOKS.concat(AVAILABLE_OPTIONS);\n\n    options.forEach(key => {\n      const isHook = AVAILABLE_HOOKS.indexOf(key) > -1;\n      let option;\n\n      if (isSettingsObject && isHook) {\n        option = component['settings'][key];\n      }\n\n      if (component[key] !== void 0) {\n        option = component[key];\n      }\n\n      if (option === void 0) {\n        return;\n\n      } else if (('ngZone' in component) && (typeof option === 'function' && isHook)) {\n        mergedSettings[key] = function(...args: any) {\n          return component.ngZone.run(() => option.apply(this, args));\n        };\n\n      } else {\n        mergedSettings[key] = option;\n      }\n    });\n\n    return mergedSettings;\n  }\n\n  prepareChanges(changes: SimpleChanges): Handsontable.GridSettings {\n    const result: Handsontable.GridSettings = {};\n    const parameters: string[] = Object.keys(changes);\n\n    parameters.forEach((param) => {\n      if (changes.hasOwnProperty(param)) {\n        result[param] = changes[param].currentValue;\n      }\n    });\n\n    return result;\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport Handsontable from 'handsontable/base';\nimport {\n  HotTableRegisterer,\n  HOT_DESTROYED_WARNING\n} from './hot-table-registerer.service';\nimport { HotSettingsResolver } from './hot-settings-resolver.service';\nimport { HotColumnComponent } from './hot-column.component';\n\n@Component({\n  selector: 'hot-table',\n  template: '<div #container [id]=\"hotId\"></div>',\n  encapsulation: ViewEncapsulation.None,\n  providers: [ HotTableRegisterer, HotSettingsResolver ],\n})\nexport class HotTableComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild('container', { static: false }) public container;\n\n  private __hotInstance: Handsontable | null = null;\n  private columnsComponents: HotColumnComponent[] = [];\n  // component inputs\n  @Input() settings: Handsontable.GridSettings;\n  @Input() hotId = '';\n  // handsontable options\n  @Input() activeHeaderClassName: Handsontable.GridSettings['activeHeaderClassName'];\n  @Input() allowEmpty: Handsontable.GridSettings['allowEmpty'];\n  @Input() allowHtml: Handsontable.GridSettings['allowHtml'];\n  @Input() allowInsertColumn: Handsontable.GridSettings['allowInsertColumn'];\n  @Input() allowInsertRow: Handsontable.GridSettings['allowInsertRow'];\n  @Input() allowInvalid: Handsontable.GridSettings['allowInvalid'];\n  @Input() allowRemoveColumn: Handsontable.GridSettings['allowRemoveColumn'];\n  @Input() allowRemoveRow: Handsontable.GridSettings['allowRemoveRow'];\n  @Input() ariaTags: Handsontable.GridSettings['ariaTags'];\n  @Input() autoColumnSize: Handsontable.GridSettings['autoColumnSize'];\n  @Input() autoRowSize: Handsontable.GridSettings['autoRowSize'];\n  @Input() autoWrapCol: Handsontable.GridSettings['autoWrapCol'];\n  @Input() autoWrapRow: Handsontable.GridSettings['autoWrapRow'];\n  @Input() bindRowsWithHeaders: Handsontable.GridSettings['bindRowsWithHeaders'];\n  @Input() cell: Handsontable.GridSettings['cell'];\n  @Input() cells: Handsontable.GridSettings['cells'];\n  @Input() checkedTemplate: Handsontable.GridSettings['checkedTemplate'];\n  @Input() className: Handsontable.GridSettings['className'];\n  @Input() colHeaders: Handsontable.GridSettings['colHeaders'];\n  @Input() collapsibleColumns: Handsontable.GridSettings['collapsibleColumns'];\n  @Input() columnHeaderHeight: Handsontable.GridSettings['columnHeaderHeight'];\n  @Input() columns: Handsontable.GridSettings['columns'];\n  @Input() columnSorting: Handsontable.GridSettings['columnSorting'];\n  @Input() columnSummary: Handsontable.GridSettings['columnSummary'];\n  @Input() colWidths: Handsontable.GridSettings['colWidths'];\n  @Input() commentedCellClassName: Handsontable.GridSettings['commentedCellClassName'];\n  @Input() comments: Handsontable.GridSettings['comments'];\n  @Input() contextMenu: Handsontable.GridSettings['contextMenu'];\n  @Input() copyable: Handsontable.GridSettings['copyable'];\n  @Input() copyPaste: Handsontable.GridSettings['copyPaste'];\n  @Input() correctFormat: Handsontable.GridSettings['correctFormat'];\n  @Input() currentColClassName: Handsontable.GridSettings['currentColClassName'];\n  @Input() currentHeaderClassName: Handsontable.GridSettings['currentHeaderClassName'];\n  @Input() currentRowClassName: Handsontable.GridSettings['currentRowClassName'];\n  @Input() customBorders: Handsontable.GridSettings['customBorders'];\n  @Input() data: Handsontable.GridSettings['data'];\n  @Input() dataDotNotation: Handsontable.GridSettings['dataDotNotation'];\n  @Input() dataSchema: Handsontable.GridSettings['dataSchema'];\n  @Input() dateFormat: Handsontable.GridSettings['dateFormat'];\n  @Input() datePickerConfig: Handsontable.GridSettings['datePickerConfig'];\n  @Input() defaultDate: Handsontable.GridSettings['defaultDate'];\n  @Input() tabNavigation: Handsontable.GridSettings['tabNavigation'];\n  @Input() disableVisualSelection: Handsontable.GridSettings['disableVisualSelection'];\n  @Input() dragToScroll: Handsontable.GridSettings['dragToScroll'];\n  @Input() dropdownMenu: Handsontable.GridSettings['dropdownMenu'];\n  @Input() editor: Handsontable.GridSettings['editor'];\n  @Input() enterBeginsEditing: Handsontable.GridSettings['enterBeginsEditing'];\n  @Input() enterMoves: Handsontable.GridSettings['enterMoves'];\n  @Input() fillHandle: Handsontable.GridSettings['fillHandle'];\n  @Input() filter: Handsontable.GridSettings['filter'];\n  @Input() filteringCaseSensitive: Handsontable.GridSettings['filteringCaseSensitive'];\n  @Input() filters: Handsontable.GridSettings['filters'];\n  @Input() fixedColumnsLeft: Handsontable.GridSettings['fixedColumnsLeft'];\n  @Input() fixedColumnsStart: Handsontable.GridSettings['fixedColumnsStart'];\n  @Input() fixedRowsBottom: Handsontable.GridSettings['fixedRowsBottom'];\n  @Input() fixedRowsTop: Handsontable.GridSettings['fixedRowsTop'];\n  @Input() formulas: Handsontable.GridSettings['formulas'];\n  @Input() fragmentSelection: Handsontable.GridSettings['fragmentSelection'];\n  @Input() headerClassName: Handsontable.GridSettings['headerClassName'];\n  @Input() height: Handsontable.GridSettings['height'];\n  @Input() hiddenColumns: Handsontable.GridSettings['hiddenColumns'];\n  @Input() hiddenRows: Handsontable.GridSettings['hiddenRows'];\n  @Input() invalidCellClassName: Handsontable.GridSettings['invalidCellClassName'];\n  @Input() imeFastEdit: Handsontable.GridSettings['imeFastEdit'];\n  @Input() label: Handsontable.GridSettings['label'];\n  @Input() language: Handsontable.GridSettings['language'];\n  @Input() layoutDirection: Handsontable.GridSettings['layoutDirection'];\n  @Input() licenseKey: Handsontable.GridSettings['licenseKey'];\n  @Input() locale: Handsontable.GridSettings['locale'];\n  @Input() manualColumnFreeze: Handsontable.GridSettings['manualColumnFreeze'];\n  @Input() manualColumnMove: Handsontable.GridSettings['manualColumnMove'];\n  @Input() manualColumnResize: Handsontable.GridSettings['manualColumnResize'];\n  @Input() manualRowMove: Handsontable.GridSettings['manualRowMove'];\n  @Input() manualRowResize: Handsontable.GridSettings['manualRowResize'];\n  @Input() maxCols: Handsontable.GridSettings['maxCols'];\n  @Input() maxRows: Handsontable.GridSettings['maxRows'];\n  @Input() mergeCells: Handsontable.GridSettings['mergeCells'];\n  @Input() minCols: Handsontable.GridSettings['minCols'];\n  @Input() minRows: Handsontable.GridSettings['minRows'];\n  @Input() minSpareCols: Handsontable.GridSettings['minSpareCols'];\n  @Input() minSpareRows: Handsontable.GridSettings['minSpareRows'];\n  @Input() multiColumnSorting: Handsontable.GridSettings['multiColumnSorting'];\n  @Input() navigableHeaders: Handsontable.GridSettings['navigableHeaders'];\n  @Input() nestedHeaders: Handsontable.GridSettings['nestedHeaders'];\n  @Input() nestedRows: Handsontable.GridSettings['nestedRows'];\n  @Input() noWordWrapClassName: Handsontable.GridSettings['noWordWrapClassName'];\n  @Input() numericFormat: Handsontable.GridSettings['numericFormat'];\n  @Input() observeDOMVisibility: Handsontable.GridSettings['observeDOMVisibility'];\n  @Input() outsideClickDeselects: Handsontable.GridSettings['outsideClickDeselects'];\n  @Input() persistentState: Handsontable.GridSettings['persistentState'];\n  @Input() placeholder: Handsontable.GridSettings['placeholder'];\n  @Input() placeholderCellClassName: Handsontable.GridSettings['placeholderCellClassName'];\n  @Input() preventOverflow: Handsontable.GridSettings['preventOverflow'];\n  @Input() preventWheel: Handsontable.GridSettings['preventWheel'];\n  @Input() readOnly: Handsontable.GridSettings['readOnly'];\n  @Input() readOnlyCellClassName: Handsontable.GridSettings['readOnlyCellClassName'];\n  @Input() renderAllColumns: Handsontable.GridSettings['renderAllColumns'];\n  @Input() renderAllRows: Handsontable.GridSettings['renderAllRows'];\n  @Input() renderer: Handsontable.GridSettings['renderer'];\n  @Input() rowHeaders: Handsontable.GridSettings['rowHeaders'];\n  @Input() rowHeaderWidth: Handsontable.GridSettings['rowHeaderWidth'];\n  @Input() rowHeights: Handsontable.GridSettings['rowHeights'];\n  @Input() search: Handsontable.GridSettings['search'];\n  @Input() selectionMode: Handsontable.GridSettings['selectionMode'];\n  @Input() selectOptions: Handsontable.GridSettings['selectOptions'];\n  @Input() skipColumnOnPaste: Handsontable.GridSettings['skipColumnOnPaste'];\n  @Input() skipRowOnPaste: any;\n  @Input() sortByRelevance: Handsontable.GridSettings['sortByRelevance'];\n  @Input() source: Handsontable.GridSettings['source'];\n  @Input() startCols: Handsontable.GridSettings['startCols'];\n  @Input() startRows: Handsontable.GridSettings['startRows'];\n  @Input() stretchH: Handsontable.GridSettings['stretchH'];\n  @Input() strict: Handsontable.GridSettings['strict'];\n  @Input() tableClassName: Handsontable.GridSettings['tableClassName'];\n  @Input() tabMoves: Handsontable.GridSettings['tabMoves'];\n  @Input() title: Handsontable.GridSettings['title'];\n  @Input() trimDropdown: Handsontable.GridSettings['trimDropdown'];\n  @Input() trimRows: Handsontable.GridSettings['nestedRows'];\n  @Input() trimWhitespace: Handsontable.GridSettings['trimWhitespace'];\n  @Input() type: Handsontable.GridSettings['type'];\n  @Input() uncheckedTemplate: Handsontable.GridSettings['uncheckedTemplate'];\n  @Input() undo: Handsontable.GridSettings['undo'];\n  @Input() validator: Handsontable.GridSettings['validator'];\n  @Input() viewportColumnRenderingOffset: Handsontable.GridSettings['viewportColumnRenderingOffset'];\n  @Input() viewportRowRenderingOffset: Handsontable.GridSettings['viewportRowRenderingOffset'];\n  @Input() visibleRows: Handsontable.GridSettings['visibleRows'];\n  @Input() width: Handsontable.GridSettings['width'];\n  @Input() wordWrap: Handsontable.GridSettings['wordWrap'];\n\n  // handsontable hooks\n  @Input() afterAddChild: Handsontable.GridSettings['afterAddChild'];\n  @Input() afterAutofill: Handsontable.GridSettings['afterAutofill'];\n  @Input() afterBeginEditing: Handsontable.GridSettings['afterBeginEditing'];\n  @Input() afterCellMetaReset: Handsontable.GridSettings['afterCellMetaReset'];\n  @Input() afterChange: Handsontable.GridSettings['afterChange'];\n  @Input() afterChangesObserved: Handsontable.GridSettings['afterChangesObserved'];\n  @Input() afterColumnCollapse: Handsontable.GridSettings['afterColumnCollapse'];\n  @Input() afterColumnExpand: Handsontable.GridSettings['afterColumnExpand'];\n  @Input() afterColumnFreeze: Handsontable.GridSettings['afterColumnFreeze'];\n  @Input() afterColumnMove: Handsontable.GridSettings['afterColumnMove'];\n  @Input() afterColumnResize: Handsontable.GridSettings['afterColumnResize'];\n  @Input() afterColumnSequenceChange: Handsontable.GridSettings['afterColumnSequenceChange'];\n  @Input() afterColumnSort: Handsontable.GridSettings['afterColumnSort'];\n  @Input() afterColumnUnfreeze: Handsontable.GridSettings['afterColumnUnfreeze'];\n  @Input() afterContextMenuDefaultOptions: Handsontable.GridSettings['afterContextMenuDefaultOptions'];\n  @Input() afterContextMenuHide: Handsontable.GridSettings['afterContextMenuHide'];\n  @Input() afterContextMenuShow: Handsontable.GridSettings['afterContextMenuShow'];\n  @Input() afterCopy: Handsontable.GridSettings['afterCopy'];\n  @Input() afterCopyLimit: Handsontable.GridSettings['afterCopyLimit'];\n  @Input() afterCreateCol: Handsontable.GridSettings['afterCreateCol'];\n  @Input() afterCreateRow: Handsontable.GridSettings['afterCreateRow'];\n  @Input() afterCut: Handsontable.GridSettings['afterCut'];\n  @Input() afterDeselect: Handsontable.GridSettings['afterDeselect'];\n  @Input() afterDestroy: Handsontable.GridSettings['afterDestroy'];\n  @Input() afterDetachChild: Handsontable.GridSettings['afterDetachChild'];\n  @Input() afterDocumentKeyDown: Handsontable.GridSettings['afterDocumentKeyDown'];\n  @Input() afterDrawSelection: Handsontable.GridSettings['afterDrawSelection'];\n  @Input() afterDropdownMenuDefaultOptions: Handsontable.GridSettings['afterDropdownMenuDefaultOptions'];\n  @Input() afterDropdownMenuHide: Handsontable.GridSettings['afterDropdownMenuHide'];\n  @Input() afterDropdownMenuShow: Handsontable.GridSettings['afterDropdownMenuShow'];\n  @Input() afterFilter: Handsontable.GridSettings['afterFilter'];\n  @Input() afterFormulasValuesUpdate: Handsontable.GridSettings['afterFormulasValuesUpdate'];\n  @Input() afterGetCellMeta: Handsontable.GridSettings['afterGetCellMeta'];\n  @Input() afterGetColHeader: Handsontable.GridSettings['afterGetColHeader'];\n  @Input() afterGetColumnHeaderRenderers: Handsontable.GridSettings['afterGetColumnHeaderRenderers'];\n  @Input() afterGetRowHeader: Handsontable.GridSettings['afterGetRowHeader'];\n  @Input() afterGetRowHeaderRenderers: Handsontable.GridSettings['afterGetRowHeaderRenderers'];\n  @Input() afterHideColumns: Handsontable.GridSettings['afterHideColumns'];\n  @Input() afterHideRows: Handsontable.GridSettings['afterHideRows'];\n  @Input() afterInit: Handsontable.GridSettings['afterInit'];\n  @Input() afterLanguageChange: Handsontable.GridSettings['afterLanguageChange'];\n  @Input() afterListen: Handsontable.GridSettings['afterListen'];\n  @Input() afterLoadData: Handsontable.GridSettings['afterLoadData'];\n  @Input() afterMergeCells: Handsontable.GridSettings['afterMergeCells'];\n  @Input() afterModifyTransformEnd: Handsontable.GridSettings['afterModifyTransformEnd'];\n  @Input() afterModifyTransformFocus: Handsontable.GridSettings['afterModifyTransformFocus'];\n  @Input() afterModifyTransformStart: Handsontable.GridSettings['afterModifyTransformStart'];\n  @Input() afterMomentumScroll: Handsontable.GridSettings['afterMomentumScroll'];\n  @Input() afterNamedExpressionAdded: Handsontable.GridSettings['afterNamedExpressionAdded'];\n  @Input() afterNamedExpressionRemoved: Handsontable.GridSettings['afterNamedExpressionRemoved'];\n  @Input() afterOnCellContextMenu: Handsontable.GridSettings['afterOnCellContextMenu'];\n  @Input() afterOnCellCornerDblClick: Handsontable.GridSettings['afterOnCellCornerDblClick'];\n  @Input() afterOnCellCornerMouseDown: Handsontable.GridSettings['afterOnCellCornerMouseDown'];\n  @Input() afterOnCellMouseDown: Handsontable.GridSettings['afterOnCellMouseDown'];\n  @Input() afterOnCellMouseOut: Handsontable.GridSettings['afterOnCellMouseOut'];\n  @Input() afterOnCellMouseOver: Handsontable.GridSettings['afterOnCellMouseOver'];\n  @Input() afterOnCellMouseUp: Handsontable.GridSettings['afterOnCellMouseUp'];\n  @Input() afterPaste: Handsontable.GridSettings['afterPaste'];\n  @Input() afterPluginsInitialized: Handsontable.GridSettings['afterPluginsInitialized'];\n  @Input() afterRedo: Handsontable.GridSettings['afterRedo'];\n  @Input() afterRedoStackChange: Handsontable.GridSettings['afterRedoStackChange'];\n  @Input() afterRefreshDimensions: Handsontable.GridSettings['afterRefreshDimensions'];\n  @Input() afterRemoveCellMeta: Handsontable.GridSettings['afterRemoveCellMeta'];\n  @Input() afterRemoveCol: Handsontable.GridSettings['afterRemoveCol'];\n  @Input() afterRemoveRow: Handsontable.GridSettings['afterRemoveRow'];\n  @Input() afterRender: Handsontable.GridSettings['afterRender'];\n  @Input() afterRenderer: Handsontable.GridSettings['afterRenderer'];\n  @Input() afterRowMove: Handsontable.GridSettings['afterRowMove'];\n  @Input() afterRowResize: Handsontable.GridSettings['afterRowResize'];\n  @Input() afterRowSequenceChange: Handsontable.GridSettings['afterRowSequenceChange'];\n  @Input() afterScrollHorizontally: Handsontable.GridSettings['afterScrollHorizontally'];\n  @Input() afterScrollVertically: Handsontable.GridSettings['afterScrollVertically'];\n  @Input() afterScroll: Handsontable.GridSettings['afterScroll'];\n  @Input() afterSelectColumns: Handsontable.GridSettings['afterSelectColumns'];\n  @Input() afterSelection: Handsontable.GridSettings['afterSelection'];\n  @Input() afterSelectionByProp: Handsontable.GridSettings['afterSelectionByProp'];\n  @Input() afterSelectionEnd: Handsontable.GridSettings['afterSelectionEnd'];\n  @Input() afterSelectionEndByProp: Handsontable.GridSettings['afterSelectionEndByProp'];\n  @Input() afterSelectionFocusSet: Handsontable.GridSettings['afterSelectionFocusSet'];\n  @Input() afterSelectRows: Handsontable.GridSettings['afterSelectRows'];\n  @Input() afterSetCellMeta: Handsontable.GridSettings['afterSetCellMeta'];\n  @Input() afterSetDataAtCell: Handsontable.GridSettings['afterSetDataAtCell'];\n  @Input() afterSetDataAtRowProp: Handsontable.GridSettings['afterSetDataAtRowProp'];\n  @Input() afterSetSourceDataAtCell: Handsontable.GridSettings['afterSetSourceDataAtCell'];\n  @Input() afterSheetAdded: Handsontable.GridSettings['afterSheetAdded'];\n  @Input() afterSheetRenamed: Handsontable.GridSettings['afterSheetRenamed'];\n  @Input() afterSheetRemoved: Handsontable.GridSettings['afterSheetRemoved'];\n  @Input() afterTrimRow: Handsontable.GridSettings['afterTrimRow'];\n  @Input() afterUndo: Handsontable.GridSettings['afterUndo'];\n  @Input() afterUndoStackChange: Handsontable.GridSettings['afterUndoStackChange'];\n  @Input() afterUnhideColumns: Handsontable.GridSettings['afterUnhideColumns'];\n  @Input() afterUnhideRows: Handsontable.GridSettings['afterUnhideRows'];\n  @Input() afterUnlisten: Handsontable.GridSettings['afterUnlisten'];\n  @Input() afterUnmergeCells: Handsontable.GridSettings['afterUnmergeCells'];\n  @Input() afterUntrimRow: Handsontable.GridSettings['afterUntrimRow'];\n  @Input() afterUpdateData: Handsontable.GridSettings['afterUpdateData'];\n  @Input() afterUpdateSettings: Handsontable.GridSettings['afterUpdateSettings'];\n  @Input() afterValidate: Handsontable.GridSettings['afterValidate'];\n  @Input() afterViewportColumnCalculatorOverride: Handsontable.GridSettings['afterViewportColumnCalculatorOverride'];\n  @Input() afterViewportRowCalculatorOverride: Handsontable.GridSettings['afterViewportRowCalculatorOverride'];\n  @Input() afterViewRender: Handsontable.GridSettings['afterViewRender'];\n  @Input() beforeAddChild: Handsontable.GridSettings['beforeAddChild'];\n  @Input() beforeAutofill: Handsontable.GridSettings['beforeAutofill'];\n  @Input() beforeBeginEditing: Handsontable.GridSettings['beforeBeginEditing'];\n  @Input() beforeCellAlignment: Handsontable.GridSettings['beforeCellAlignment'];\n  @Input() beforeChange: Handsontable.GridSettings['beforeChange'];\n  @Input() beforeChangeRender: Handsontable.GridSettings['beforeChangeRender'];\n  @Input() beforeColumnCollapse: Handsontable.GridSettings['beforeColumnCollapse'];\n  @Input() beforeColumnExpand: Handsontable.GridSettings['beforeColumnExpand'];\n  @Input() beforeColumnFreeze: Handsontable.GridSettings['beforeColumnFreeze'];\n  @Input() beforeColumnMove: Handsontable.GridSettings['beforeColumnMove'];\n  @Input() beforeColumnResize: Handsontable.GridSettings['beforeColumnResize'];\n  @Input() beforeColumnSort: Handsontable.GridSettings['beforeColumnSort'];\n  @Input() beforeColumnWrap: Handsontable.GridSettings['beforeColumnWrap'];\n  @Input() beforeColumnUnfreeze: Handsontable.GridSettings['beforeColumnUnfreeze'];\n  @Input() beforeContextMenuSetItems: Handsontable.GridSettings['beforeContextMenuSetItems'];\n  @Input() beforeContextMenuShow: Handsontable.GridSettings['beforeContextMenuShow'];\n  @Input() beforeCopy: Handsontable.GridSettings['beforeCopy'];\n  @Input() beforeCreateCol: Handsontable.GridSettings['beforeCreateCol'];\n  @Input() beforeCreateRow: Handsontable.GridSettings['beforeCreateRow'];\n  @Input() beforeCut: Handsontable.GridSettings['beforeCut'];\n  @Input() beforeDetachChild: Handsontable.GridSettings['beforeDetachChild'];\n  @Input() beforeDrawBorders: Handsontable.GridSettings['beforeDrawBorders'];\n  @Input() beforeDropdownMenuSetItems: Handsontable.GridSettings['beforeDropdownMenuSetItems'];\n  @Input() beforeDropdownMenuShow: Handsontable.GridSettings['beforeDropdownMenuShow'];\n  @Input() beforeFilter: Handsontable.GridSettings['beforeFilter'];\n  @Input() beforeGetCellMeta: Handsontable.GridSettings['beforeGetCellMeta'];\n  @Input() beforeHideColumns: Handsontable.GridSettings['beforeHideColumns'];\n  @Input() beforeHideRows: Handsontable.GridSettings['beforeHideRows'];\n  @Input() beforeHighlightingColumnHeader: Handsontable.GridSettings['beforeHighlightingColumnHeader'];\n  @Input() beforeHighlightingRowHeader: Handsontable.GridSettings['beforeHighlightingRowHeader'];\n  @Input() beforeInit: Handsontable.GridSettings['beforeInit'];\n  @Input() beforeInitWalkontable: Handsontable.GridSettings['beforeInitWalkontable'];\n  @Input() beforeKeyDown: Handsontable.GridSettings['beforeKeyDown'];\n  @Input() beforeLanguageChange: Handsontable.GridSettings['beforeLanguageChange'];\n  @Input() beforeLoadData: Handsontable.GridSettings['beforeLoadData'];\n  @Input() beforeMergeCells: Handsontable.GridSettings['beforeMergeCells'];\n  @Input() beforeOnCellContextMenu: Handsontable.GridSettings['beforeOnCellContextMenu'];\n  @Input() beforeOnCellMouseDown: Handsontable.GridSettings['beforeOnCellMouseDown'];\n  @Input() beforeOnCellMouseOut: Handsontable.GridSettings['beforeOnCellMouseOut'];\n  @Input() beforeOnCellMouseOver: Handsontable.GridSettings['beforeOnCellMouseOver'];\n  @Input() beforeOnCellMouseUp: Handsontable.GridSettings['beforeOnCellMouseUp'];\n  @Input() beforePaste: Handsontable.GridSettings['beforePaste'];\n  @Input() beforeRedo: Handsontable.GridSettings['beforeRedo'];\n  @Input() beforeRedoStackChange: Handsontable.GridSettings['beforeRedoStackChange'];\n  @Input() beforeRefreshDimensions: Handsontable.GridSettings['beforeRefreshDimensions'];\n  @Input() beforeRemoveCellClassNames: Handsontable.GridSettings['beforeRemoveCellClassNames'];\n  @Input() beforeRemoveCellMeta: Handsontable.GridSettings['beforeRemoveCellMeta'];\n  @Input() beforeRemoveCol: Handsontable.GridSettings['beforeRemoveCol'];\n  @Input() beforeRemoveRow: Handsontable.GridSettings['beforeRemoveRow'];\n  @Input() beforeRender: Handsontable.GridSettings['beforeRender'];\n  @Input() beforeRenderer: Handsontable.GridSettings['beforeRenderer'];\n  @Input() beforeRowMove: Handsontable.GridSettings['beforeRowMove'];\n  @Input() beforeRowResize: Handsontable.GridSettings['beforeRowResize'];\n  @Input() beforeRowWrap: Handsontable.GridSettings['beforeRowWrap'];\n  @Input() beforeSelectColumns: Handsontable.GridSettings['beforeSelectColumns'];\n  @Input() beforeSelectionFocusSet: Handsontable.GridSettings['beforeSelectionFocusSet'];\n  @Input() beforeSelectionHighlightSet: Handsontable.GridSettings['beforeSelectionHighlightSet'];\n  @Input() beforeSelectRows: Handsontable.GridSettings['beforeSelectRows'];\n  @Input() beforeSetCellMeta: Handsontable.GridSettings['beforeSetCellMeta'];\n  @Input() beforeSetRangeEnd: Handsontable.GridSettings['beforeSetRangeEnd'];\n  @Input() beforeSetRangeStart: Handsontable.GridSettings['beforeSetRangeStart'];\n  @Input() beforeSetRangeStartOnly: Handsontable.GridSettings['beforeSetRangeStartOnly'];\n  @Input() beforeStretchingColumnWidth: Handsontable.GridSettings['beforeStretchingColumnWidth'];\n  @Input() beforeTouchScroll: Handsontable.GridSettings['beforeTouchScroll'];\n  @Input() beforeTrimRow: Handsontable.GridSettings['beforeTrimRow'];\n  @Input() beforeUndo: Handsontable.GridSettings['beforeUndo'];\n  @Input() beforeUndoStackChange: Handsontable.GridSettings['beforeUndoStackChange'];\n  @Input() beforeUnhideColumns: Handsontable.GridSettings['beforeUnhideColumns'];\n  @Input() beforeUnhideRows: Handsontable.GridSettings['beforeUnhideRows'];\n  @Input() beforeUnmergeCells: Handsontable.GridSettings['beforeUnmergeCells'];\n  @Input() beforeUntrimRow: Handsontable.GridSettings['beforeUntrimRow'];\n  @Input() beforeUpdateData: Handsontable.GridSettings['beforeUpdateData'];\n  @Input() beforeValidate: Handsontable.GridSettings['beforeValidate'];\n  @Input() beforeValueRender: Handsontable.GridSettings['beforeValueRender'];\n  @Input() beforeViewportScroll: Handsontable.GridSettings['beforeViewportScroll'];\n  @Input() beforeViewportScrollHorizontally: Handsontable.GridSettings['beforeViewportScrollHorizontally'];\n  @Input() beforeViewportScrollVertically: Handsontable.GridSettings['beforeViewportScrollVertically'];\n  @Input() beforeViewRender: Handsontable.GridSettings['beforeViewRender'];\n  @Input() construct: Handsontable.GridSettings['construct'];\n  @Input() init: Handsontable.GridSettings['init'];\n  @Input() modifyAutoColumnSizeSeed: Handsontable.GridSettings['modifyAutoColumnSizeSeed'];\n  @Input() modifyAutofillRange: Handsontable.GridSettings['modifyAutofillRange'];\n  @Input() modifyColHeader: Handsontable.GridSettings['modifyColHeader'];\n  @Input() modifyColumnHeaderHeight: Handsontable.GridSettings['modifyColumnHeaderHeight'];\n  @Input() modifyColumnHeaderValue: Handsontable.GridSettings['modifyColumnHeaderValue'];\n  @Input() modifyColWidth: Handsontable.GridSettings['modifyColWidth'];\n  @Input() modifyCopyableRange: Handsontable.GridSettings['modifyCopyableRange'];\n  @Input() modifyFiltersMultiSelectValue: Handsontable.GridSettings['modifyFiltersMultiSelectValue'];\n  @Input() modifyFocusedElement: Handsontable.GridSettings['modifyFocusedElement'];\n  @Input() modifyData: Handsontable.GridSettings['modifyData'];\n  @Input() modifyFocusOnTabNavigation: Handsontable.GridSettings['modifyFocusOnTabNavigation'];\n  @Input() modifyGetCellCoords: Handsontable.GridSettings['modifyGetCellCoords'];\n  @Input() modifyRowData: Handsontable.GridSettings['modifyRowData'];\n  @Input() modifyRowHeader: Handsontable.GridSettings['modifyRowHeader'];\n  @Input() modifyRowHeaderWidth: Handsontable.GridSettings['modifyRowHeaderWidth'];\n  @Input() modifyRowHeight: Handsontable.GridSettings['modifyRowHeight'];\n  @Input() modifyRowHeightByOverlayName: Handsontable.GridSettings['modifyRowHeightByOverlayName'];\n  @Input() modifySourceData: Handsontable.GridSettings['modifySourceData'];\n  @Input() modifyTransformEnd: Handsontable.GridSettings['modifyTransformEnd'];\n  @Input() modifyTransformFocus: Handsontable.GridSettings['modifyTransformFocus'];\n  @Input() modifyTransformStart: Handsontable.GridSettings['modifyTransformStart'];\n  @Input() persistentStateLoad: Handsontable.GridSettings['persistentStateLoad'];\n  @Input() persistentStateReset: Handsontable.GridSettings['persistentStateReset'];\n  @Input() persistentStateSave: Handsontable.GridSettings['persistentStateSave'];\n\n  constructor(\n    private _hotTableRegisterer: HotTableRegisterer,\n    private _hotSettingsResolver: HotSettingsResolver,\n    public ngZone: NgZone,\n  ) {}\n\n  private get hotInstance(): Handsontable | null {\n    if (!this.__hotInstance || (this.__hotInstance && !this.__hotInstance.isDestroyed)) {\n\n      // Will return the Handsontable instance or `null` if it's not yet been created.\n      return this.__hotInstance;\n\n    } else {\n      this._hotTableRegisterer.removeInstance(this.hotId);\n\n      console.warn(HOT_DESTROYED_WARNING);\n\n      return null;\n    }\n  }\n\n  private set hotInstance(hotInstance) {\n    this.__hotInstance = hotInstance;\n  }\n\n  ngAfterViewInit(): void {\n    const options: Handsontable.GridSettings = (this._hotSettingsResolver.mergeSettings(this) as Handsontable.GridSettings);\n\n    if (this.columnsComponents.length > 0) {\n      const columns: Handsontable.ColumnSettings[] = [];\n\n      this.columnsComponents.forEach((column) => {\n        columns.push((this._hotSettingsResolver.mergeSettings(column) as Handsontable.ColumnSettings));\n      });\n\n      options['columns'] = columns;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.hotInstance = new Handsontable.Core(this.container.nativeElement, options);\n\n      if (this.hotId) {\n        this._hotTableRegisterer.registerInstance(this.hotId, this.hotInstance);\n      }\n      // @ts-ignore\n      this.hotInstance.init();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.hotInstance === null) {\n      return;\n    }\n\n    const newOptions: Handsontable.GridSettings = this._hotSettingsResolver.prepareChanges(changes);\n\n    this.updateHotTable(newOptions);\n  }\n\n  ngOnDestroy(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.hotInstance) {\n        this.hotInstance.destroy();\n      }\n    });\n\n    if (this.hotId) {\n      this._hotTableRegisterer.removeInstance(this.hotId);\n    }\n  }\n\n  updateHotTable(newSettings: Handsontable.GridSettings ): void {\n    if (!this.hotInstance) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.hotInstance.updateSettings(newSettings, false);\n    });\n  }\n\n  onAfterColumnsChange(): void {\n    if (this.columnsComponents === void 0) {\n      return;\n    }\n\n    if (this.columnsComponents.length > 0) {\n      const columns: Handsontable.ColumnSettings[] = [];\n\n      this.columnsComponents.forEach((column) => {\n        columns.push((this._hotSettingsResolver.mergeSettings(column) as Handsontable.ColumnSettings));\n      });\n\n      const newOptions: Handsontable.GridSettings = {\n        columns: columns\n      };\n\n      this.updateHotTable(newOptions);\n    }\n  }\n\n  onAfterColumnsNumberChange(): void {\n    const columns: Handsontable.ColumnSettings[] = [];\n\n    if (this.columnsComponents.length > 0) {\n      this.columnsComponents.forEach((column) => {\n        columns.push((this._hotSettingsResolver.mergeSettings(column) as Handsontable.ColumnSettings));\n      });\n    }\n\n    this.updateHotTable({ columns });\n  }\n\n  addColumn(column: HotColumnComponent): void {\n    this.columnsComponents.push(column);\n    this.onAfterColumnsNumberChange();\n  }\n\n  removeColumn(column: HotColumnComponent): void {\n    const index: number = this.columnsComponents.indexOf(column);\n\n    this.columnsComponents.splice(index, 1);\n    this.onAfterColumnsNumberChange();\n  }\n\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Input,\n} from '@angular/core';\nimport { HotTableComponent } from './hot-table.component';\nimport Handsontable from 'handsontable/base';\n\n@Component({\n  selector: 'hot-column',\n  template: '',\n})\nexport class HotColumnComponent implements OnInit, OnChanges, OnDestroy {\n  private firstRun = true;\n  // handsontable column options\n  @Input() allowEmpty: Handsontable.ColumnSettings['allowEmpty'];\n  @Input() allowHtml: Handsontable.ColumnSettings['allowHtml'];\n  @Input() allowInvalid: Handsontable.ColumnSettings['allowInvalid'];\n  @Input() checkedTemplate: Handsontable.ColumnSettings['checkedTemplate'];\n  @Input() className: Handsontable.ColumnSettings['className'];\n  @Input() columnSorting: Handsontable.ColumnSettings['columnSorting'];\n  @Input() colWidths: Handsontable.ColumnSettings['colWidths'];\n  @Input() commentedCellClassName: Handsontable.ColumnSettings['commentedCellClassName'];\n  @Input() copyable: Handsontable.ColumnSettings['copyable'];\n  @Input() correctFormat: Handsontable.ColumnSettings['correctFormat'];\n  @Input() data: Handsontable.ColumnSettings['data'];\n  @Input() dateFormat: Handsontable.ColumnSettings['dateFormat'];\n  @Input() defaultDate: Handsontable.ColumnSettings['defaultDate'];\n  @Input() editor: Handsontable.ColumnSettings['editor'];\n  @Input() filteringCaseSensitive: Handsontable.ColumnSettings['filteringCaseSensitive'];\n  @Input() headerClassName: Handsontable.GridSettings['headerClassName'];\n  @Input() invalidCellClassName: Handsontable.ColumnSettings['invalidCellClassName'];\n  @Input() label: Handsontable.ColumnSettings['label'];\n  @Input() language: Handsontable.ColumnSettings['language'];\n  @Input() noWordWrapClassName: Handsontable.ColumnSettings['noWordWrapClassName'];\n  @Input() numericFormat: Handsontable.ColumnSettings['numericFormat'];\n  @Input() placeholder: Handsontable.ColumnSettings['placeholder'];\n  @Input() placeholderCellClassName: Handsontable.ColumnSettings['placeholderCellClassName'];\n  @Input() readOnly: Handsontable.ColumnSettings['readOnly'];\n  @Input() readOnlyCellClassName: Handsontable.ColumnSettings['readOnlyCellClassName'];\n  @Input() renderer: Handsontable.ColumnSettings['renderer'];\n  @Input() selectOptions: Handsontable.ColumnSettings['selectOptions'];\n  @Input() skipColumnOnPaste: Handsontable.ColumnSettings['skipColumnOnPaste'];\n  @Input() sortByRelevance: Handsontable.ColumnSettings['sortByRelevance'];\n  @Input() source: Handsontable.ColumnSettings['source'];\n  @Input() strict: Handsontable.ColumnSettings['strict'];\n  @Input() title: Handsontable.ColumnSettings['title'];\n  @Input() trimDropdown: Handsontable.ColumnSettings['trimDropdown'];\n  @Input() type: Handsontable.ColumnSettings['type'];\n  @Input() uncheckedTemplate: Handsontable.ColumnSettings['uncheckedTemplate'];\n  @Input() validator: Handsontable.ColumnSettings['validator'];\n  @Input() visibleRows: Handsontable.ColumnSettings['visibleRows'];\n  @Input() width: Handsontable.ColumnSettings['width'];\n  @Input() wordWrap: Handsontable.ColumnSettings['wordWrap'];\n\n  constructor(private parentComponent: HotTableComponent) {}\n\n  ngOnInit(): void {\n    this.firstRun = false;\n    this.parentComponent.addColumn(this);\n  }\n\n  ngOnChanges(): void {\n    if (this.firstRun) {\n      return;\n    }\n\n    this.parentComponent.onAfterColumnsChange();\n  }\n\n  ngOnDestroy(): void {\n    this.parentComponent.removeColumn(this);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HotTableComponent } from './hot-table.component';\nimport { HotColumnComponent } from './hot-column.component';\nimport { HotTableRegisterer } from './hot-table-registerer.service';\n\n@NgModule({\n  declarations: [\n    HotTableComponent,\n    HotColumnComponent,\n  ],\n  exports: [\n    HotTableComponent,\n    HotColumnComponent,\n  ]\n})\nexport class HotTableModule {\n  static version = '14.5.0';\n\n  public static forRoot(): ModuleWithProviders<HotTableModule> {\n    return {\n      ngModule: HotTableModule,\n      providers: [ HotTableRegisterer ],\n    };\n  }\n}\n","/*\n * Public API Surface of hot-table\n */\n\nexport * from './lib/hot-table.component';\nexport * from './lib/hot-column.component';\nexport * from './lib/hot-table-registerer.service';\nexport * from './lib/hot-settings-resolver.service';\nexport * from './lib/hot-table.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.HotTableRegisterer","i2.HotSettingsResolver","i1.HotTableComponent"],"mappings":"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"}