import { Component, Input, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./hot-table.component";
export class HotColumnComponent {
    parentComponent;
    firstRun = true;
    // handsontable column options
    allowEmpty;
    allowHtml;
    allowInvalid;
    checkedTemplate;
    className;
    columnSorting;
    colWidths;
    commentedCellClassName;
    copyable;
    correctFormat;
    data;
    dateFormat;
    defaultDate;
    editor;
    filteringCaseSensitive;
    headerClassName;
    invalidCellClassName;
    label;
    language;
    noWordWrapClassName;
    numericFormat;
    placeholder;
    placeholderCellClassName;
    readOnly;
    readOnlyCellClassName;
    renderer;
    selectOptions;
    skipColumnOnPaste;
    sortByRelevance;
    source;
    strict;
    title;
    trimDropdown;
    type;
    uncheckedTemplate;
    validator;
    visibleRows;
    width;
    wordWrap;
    constructor(parentComponent) {
        this.parentComponent = parentComponent;
    }
    ngOnInit() {
        this.firstRun = false;
        this.parentComponent.addColumn(this);
    }
    ngOnChanges() {
        if (this.firstRun) {
            return;
        }
        this.parentComponent.onAfterColumnsChange();
    }
    ngOnDestroy() {
        this.parentComponent.removeColumn(this);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.11", ngImport: i0, type: HotColumnComponent, deps: [{ token: i1.HotTableComponent }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.11", type: HotColumnComponent, selector: "hot-column", inputs: { allowEmpty: "allowEmpty", allowHtml: "allowHtml", allowInvalid: "allowInvalid", checkedTemplate: "checkedTemplate", className: "className", columnSorting: "columnSorting", colWidths: "colWidths", commentedCellClassName: "commentedCellClassName", copyable: "copyable", correctFormat: "correctFormat", data: "data", dateFormat: "dateFormat", defaultDate: "defaultDate", editor: "editor", filteringCaseSensitive: "filteringCaseSensitive", headerClassName: "headerClassName", invalidCellClassName: "invalidCellClassName", label: "label", language: "language", noWordWrapClassName: "noWordWrapClassName", numericFormat: "numericFormat", placeholder: "placeholder", placeholderCellClassName: "placeholderCellClassName", readOnly: "readOnly", readOnlyCellClassName: "readOnlyCellClassName", renderer: "renderer", selectOptions: "selectOptions", skipColumnOnPaste: "skipColumnOnPaste", sortByRelevance: "sortByRelevance", source: "source", strict: "strict", title: "title", trimDropdown: "trimDropdown", type: "type", uncheckedTemplate: "uncheckedTemplate", validator: "validator", visibleRows: "visibleRows", width: "width", wordWrap: "wordWrap" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.11", ngImport: i0, type: HotColumnComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'hot-column',
                    template: '',
                }]
        }], ctorParameters: () => [{ type: i1.HotTableComponent }], propDecorators: { allowEmpty: [{
                type: Input
            }], allowHtml: [{
                type: Input
            }], allowInvalid: [{
                type: Input
            }], checkedTemplate: [{
                type: Input
            }], className: [{
                type: Input
            }], columnSorting: [{
                type: Input
            }], colWidths: [{
                type: Input
            }], commentedCellClassName: [{
                type: Input
            }], copyable: [{
                type: Input
            }], correctFormat: [{
                type: Input
            }], data: [{
                type: Input
            }], dateFormat: [{
                type: Input
            }], defaultDate: [{
                type: Input
            }], editor: [{
                type: Input
            }], filteringCaseSensitive: [{
                type: Input
            }], headerClassName: [{
                type: Input
            }], invalidCellClassName: [{
                type: Input
            }], label: [{
                type: Input
            }], language: [{
                type: Input
            }], noWordWrapClassName: [{
                type: Input
            }], numericFormat: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], placeholderCellClassName: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], readOnlyCellClassName: [{
                type: Input
            }], renderer: [{
                type: Input
            }], selectOptions: [{
                type: Input
            }], skipColumnOnPaste: [{
                type: Input
            }], sortByRelevance: [{
                type: Input
            }], source: [{
                type: Input
            }], strict: [{
                type: Input
            }], title: [{
                type: Input
            }], trimDropdown: [{
                type: Input
            }], type: [{
                type: Input
            }], uncheckedTemplate: [{
                type: Input
            }], validator: [{
                type: Input
            }], visibleRows: [{
                type: Input
            }], width: [{
                type: Input
            }], wordWrap: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG90LWNvbHVtbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9ob3QtdGFibGUvc3JjL2xpYi9ob3QtY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUlULEtBQUssR0FDTixNQUFNLGVBQWUsQ0FBQzs7O0FBUXZCLE1BQU0sT0FBTyxrQkFBa0I7SUEyQ1Q7SUExQ1osUUFBUSxHQUFHLElBQUksQ0FBQztJQUN4Qiw4QkFBOEI7SUFDckIsVUFBVSxDQUE0QztJQUN0RCxTQUFTLENBQTJDO0lBQ3BELFlBQVksQ0FBOEM7SUFDMUQsZUFBZSxDQUFpRDtJQUNoRSxTQUFTLENBQTJDO0lBQ3BELGFBQWEsQ0FBK0M7SUFDNUQsU0FBUyxDQUEyQztJQUNwRCxzQkFBc0IsQ0FBd0Q7SUFDOUUsUUFBUSxDQUEwQztJQUNsRCxhQUFhLENBQStDO0lBQzVELElBQUksQ0FBc0M7SUFDMUMsVUFBVSxDQUE0QztJQUN0RCxXQUFXLENBQTZDO0lBQ3hELE1BQU0sQ0FBd0M7SUFDOUMsc0JBQXNCLENBQXdEO0lBQzlFLGVBQWUsQ0FBK0M7SUFDOUQsb0JBQW9CLENBQXNEO0lBQzFFLEtBQUssQ0FBdUM7SUFDNUMsUUFBUSxDQUEwQztJQUNsRCxtQkFBbUIsQ0FBcUQ7SUFDeEUsYUFBYSxDQUErQztJQUM1RCxXQUFXLENBQTZDO0lBQ3hELHdCQUF3QixDQUEwRDtJQUNsRixRQUFRLENBQTBDO0lBQ2xELHFCQUFxQixDQUF1RDtJQUM1RSxRQUFRLENBQTBDO0lBQ2xELGFBQWEsQ0FBK0M7SUFDNUQsaUJBQWlCLENBQW1EO0lBQ3BFLGVBQWUsQ0FBaUQ7SUFDaEUsTUFBTSxDQUF3QztJQUM5QyxNQUFNLENBQXdDO0lBQzlDLEtBQUssQ0FBdUM7SUFDNUMsWUFBWSxDQUE4QztJQUMxRCxJQUFJLENBQXNDO0lBQzFDLGlCQUFpQixDQUFtRDtJQUNwRSxTQUFTLENBQTJDO0lBQ3BELFdBQVcsQ0FBNkM7SUFDeEQsS0FBSyxDQUF1QztJQUM1QyxRQUFRLENBQTBDO0lBRTNELFlBQW9CLGVBQWtDO1FBQWxDLG9CQUFlLEdBQWYsZUFBZSxDQUFtQjtJQUFHLENBQUM7SUFFMUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLE9BQU87U0FDUjtRQUVELElBQUksQ0FBQyxlQUFlLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUM5QyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFDLENBQUM7d0dBNURVLGtCQUFrQjs0RkFBbEIsa0JBQWtCLHVzQ0FGbkIsRUFBRTs7NEZBRUQsa0JBQWtCO2tCQUo5QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxZQUFZO29CQUN0QixRQUFRLEVBQUUsRUFBRTtpQkFDYjtzRkFJVSxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csWUFBWTtzQkFBcEIsS0FBSztnQkFDRyxlQUFlO3NCQUF2QixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csYUFBYTtzQkFBckIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLHNCQUFzQjtzQkFBOUIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLGFBQWE7c0JBQXJCLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csV0FBVztzQkFBbkIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csc0JBQXNCO3NCQUE5QixLQUFLO2dCQUNHLGVBQWU7c0JBQXZCLEtBQUs7Z0JBQ0csb0JBQW9CO3NCQUE1QixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLG1CQUFtQjtzQkFBM0IsS0FBSztnQkFDRyxhQUFhO3NCQUFyQixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csd0JBQXdCO3NCQUFoQyxLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0cscUJBQXFCO3NCQUE3QixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csYUFBYTtzQkFBckIsS0FBSztnQkFDRyxpQkFBaUI7c0JBQXpCLEtBQUs7Z0JBQ0csZUFBZTtzQkFBdkIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxZQUFZO3NCQUFwQixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDRyxpQkFBaUI7c0JBQXpCLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIE9uQ2hhbmdlcyxcbiAgT25EZXN0cm95LFxuICBJbnB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIb3RUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vaG90LXRhYmxlLmNvbXBvbmVudCc7XG5pbXBvcnQgSGFuZHNvbnRhYmxlIGZyb20gJ2hhbmRzb250YWJsZS9iYXNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaG90LWNvbHVtbicsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgSG90Q29sdW1uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gIHByaXZhdGUgZmlyc3RSdW4gPSB0cnVlO1xuICAvLyBoYW5kc29udGFibGUgY29sdW1uIG9wdGlvbnNcbiAgQElucHV0KCkgYWxsb3dFbXB0eTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydhbGxvd0VtcHR5J107XG4gIEBJbnB1dCgpIGFsbG93SHRtbDogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydhbGxvd0h0bWwnXTtcbiAgQElucHV0KCkgYWxsb3dJbnZhbGlkOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2FsbG93SW52YWxpZCddO1xuICBASW5wdXQoKSBjaGVja2VkVGVtcGxhdGU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snY2hlY2tlZFRlbXBsYXRlJ107XG4gIEBJbnB1dCgpIGNsYXNzTmFtZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydjbGFzc05hbWUnXTtcbiAgQElucHV0KCkgY29sdW1uU29ydGluZzogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydjb2x1bW5Tb3J0aW5nJ107XG4gIEBJbnB1dCgpIGNvbFdpZHRoczogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydjb2xXaWR0aHMnXTtcbiAgQElucHV0KCkgY29tbWVudGVkQ2VsbENsYXNzTmFtZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydjb21tZW50ZWRDZWxsQ2xhc3NOYW1lJ107XG4gIEBJbnB1dCgpIGNvcHlhYmxlOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2NvcHlhYmxlJ107XG4gIEBJbnB1dCgpIGNvcnJlY3RGb3JtYXQ6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snY29ycmVjdEZvcm1hdCddO1xuICBASW5wdXQoKSBkYXRhOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2RhdGEnXTtcbiAgQElucHV0KCkgZGF0ZUZvcm1hdDogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydkYXRlRm9ybWF0J107XG4gIEBJbnB1dCgpIGRlZmF1bHREYXRlOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2RlZmF1bHREYXRlJ107XG4gIEBJbnB1dCgpIGVkaXRvcjogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydlZGl0b3InXTtcbiAgQElucHV0KCkgZmlsdGVyaW5nQ2FzZVNlbnNpdGl2ZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydmaWx0ZXJpbmdDYXNlU2Vuc2l0aXZlJ107XG4gIEBJbnB1dCgpIGhlYWRlckNsYXNzTmFtZTogSGFuZHNvbnRhYmxlLkdyaWRTZXR0aW5nc1snaGVhZGVyQ2xhc3NOYW1lJ107XG4gIEBJbnB1dCgpIGludmFsaWRDZWxsQ2xhc3NOYW1lOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2ludmFsaWRDZWxsQ2xhc3NOYW1lJ107XG4gIEBJbnB1dCgpIGxhYmVsOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2xhYmVsJ107XG4gIEBJbnB1dCgpIGxhbmd1YWdlOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2xhbmd1YWdlJ107XG4gIEBJbnB1dCgpIG5vV29yZFdyYXBDbGFzc05hbWU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snbm9Xb3JkV3JhcENsYXNzTmFtZSddO1xuICBASW5wdXQoKSBudW1lcmljRm9ybWF0OiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ251bWVyaWNGb3JtYXQnXTtcbiAgQElucHV0KCkgcGxhY2Vob2xkZXI6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1sncGxhY2Vob2xkZXInXTtcbiAgQElucHV0KCkgcGxhY2Vob2xkZXJDZWxsQ2xhc3NOYW1lOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3BsYWNlaG9sZGVyQ2VsbENsYXNzTmFtZSddO1xuICBASW5wdXQoKSByZWFkT25seTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydyZWFkT25seSddO1xuICBASW5wdXQoKSByZWFkT25seUNlbGxDbGFzc05hbWU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1sncmVhZE9ubHlDZWxsQ2xhc3NOYW1lJ107XG4gIEBJbnB1dCgpIHJlbmRlcmVyOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3JlbmRlcmVyJ107XG4gIEBJbnB1dCgpIHNlbGVjdE9wdGlvbnM6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snc2VsZWN0T3B0aW9ucyddO1xuICBASW5wdXQoKSBza2lwQ29sdW1uT25QYXN0ZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydza2lwQ29sdW1uT25QYXN0ZSddO1xuICBASW5wdXQoKSBzb3J0QnlSZWxldmFuY2U6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snc29ydEJ5UmVsZXZhbmNlJ107XG4gIEBJbnB1dCgpIHNvdXJjZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydzb3VyY2UnXTtcbiAgQElucHV0KCkgc3RyaWN0OiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3N0cmljdCddO1xuICBASW5wdXQoKSB0aXRsZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWyd0aXRsZSddO1xuICBASW5wdXQoKSB0cmltRHJvcGRvd246IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1sndHJpbURyb3Bkb3duJ107XG4gIEBJbnB1dCgpIHR5cGU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1sndHlwZSddO1xuICBASW5wdXQoKSB1bmNoZWNrZWRUZW1wbGF0ZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWyd1bmNoZWNrZWRUZW1wbGF0ZSddO1xuICBASW5wdXQoKSB2YWxpZGF0b3I6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1sndmFsaWRhdG9yJ107XG4gIEBJbnB1dCgpIHZpc2libGVSb3dzOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3Zpc2libGVSb3dzJ107XG4gIEBJbnB1dCgpIHdpZHRoOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3dpZHRoJ107XG4gIEBJbnB1dCgpIHdvcmRXcmFwOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3dvcmRXcmFwJ107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYXJlbnRDb21wb25lbnQ6IEhvdFRhYmxlQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuZmlyc3RSdW4gPSBmYWxzZTtcbiAgICB0aGlzLnBhcmVudENvbXBvbmVudC5hZGRDb2x1bW4odGhpcyk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5maXJzdFJ1bikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucGFyZW50Q29tcG9uZW50Lm9uQWZ0ZXJDb2x1bW5zQ2hhbmdlKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLnBhcmVudENvbXBvbmVudC5yZW1vdmVDb2x1bW4odGhpcyk7XG4gIH1cbn1cbiJdfQ==