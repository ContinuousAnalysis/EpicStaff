{
  "version": 3,
  "sources": ["../../../../../node_modules/core-js/internals/global-this.js", "../../../../../node_modules/core-js/internals/fails.js", "../../../../../node_modules/core-js/internals/descriptors.js", "../../../../../node_modules/core-js/internals/function-bind-native.js", "../../../../../node_modules/core-js/internals/function-call.js", "../../../../../node_modules/core-js/internals/object-property-is-enumerable.js", "../../../../../node_modules/core-js/internals/create-property-descriptor.js", "../../../../../node_modules/core-js/internals/function-uncurry-this.js", "../../../../../node_modules/core-js/internals/classof-raw.js", "../../../../../node_modules/core-js/internals/indexed-object.js", "../../../../../node_modules/core-js/internals/is-null-or-undefined.js", "../../../../../node_modules/core-js/internals/require-object-coercible.js", "../../../../../node_modules/core-js/internals/to-indexed-object.js", "../../../../../node_modules/core-js/internals/is-callable.js", "../../../../../node_modules/core-js/internals/is-object.js", "../../../../../node_modules/core-js/internals/get-built-in.js", "../../../../../node_modules/core-js/internals/object-is-prototype-of.js", "../../../../../node_modules/core-js/internals/environment-user-agent.js", "../../../../../node_modules/core-js/internals/environment-v8-version.js", "../../../../../node_modules/core-js/internals/symbol-constructor-detection.js", "../../../../../node_modules/core-js/internals/use-symbol-as-uid.js", "../../../../../node_modules/core-js/internals/is-symbol.js", "../../../../../node_modules/core-js/internals/try-to-string.js", "../../../../../node_modules/core-js/internals/a-callable.js", "../../../../../node_modules/core-js/internals/get-method.js", "../../../../../node_modules/core-js/internals/ordinary-to-primitive.js", "../../../../../node_modules/core-js/internals/is-pure.js", "../../../../../node_modules/core-js/internals/define-global-property.js", "../../../../../node_modules/core-js/internals/shared-store.js", "../../../../../node_modules/core-js/internals/shared.js", "../../../../../node_modules/core-js/internals/to-object.js", "../../../../../node_modules/core-js/internals/has-own-property.js", "../../../../../node_modules/core-js/internals/uid.js", "../../../../../node_modules/core-js/internals/well-known-symbol.js", "../../../../../node_modules/core-js/internals/to-primitive.js", "../../../../../node_modules/core-js/internals/to-property-key.js", "../../../../../node_modules/core-js/internals/document-create-element.js", "../../../../../node_modules/core-js/internals/ie8-dom-define.js", "../../../../../node_modules/core-js/internals/object-get-own-property-descriptor.js", "../../../../../node_modules/core-js/internals/v8-prototype-define-bug.js", "../../../../../node_modules/core-js/internals/an-object.js", "../../../../../node_modules/core-js/internals/object-define-property.js", "../../../../../node_modules/core-js/internals/create-non-enumerable-property.js", "../../../../../node_modules/core-js/internals/function-name.js", "../../../../../node_modules/core-js/internals/inspect-source.js", "../../../../../node_modules/core-js/internals/weak-map-basic-detection.js", "../../../../../node_modules/core-js/internals/shared-key.js", "../../../../../node_modules/core-js/internals/hidden-keys.js", "../../../../../node_modules/core-js/internals/internal-state.js", "../../../../../node_modules/core-js/internals/make-built-in.js", "../../../../../node_modules/core-js/internals/define-built-in.js", "../../../../../node_modules/core-js/internals/math-trunc.js", "../../../../../node_modules/core-js/internals/to-integer-or-infinity.js", "../../../../../node_modules/core-js/internals/to-absolute-index.js", "../../../../../node_modules/core-js/internals/to-length.js", "../../../../../node_modules/core-js/internals/length-of-array-like.js", "../../../../../node_modules/core-js/internals/array-includes.js", "../../../../../node_modules/core-js/internals/object-keys-internal.js", "../../../../../node_modules/core-js/internals/enum-bug-keys.js", "../../../../../node_modules/core-js/internals/object-get-own-property-names.js", "../../../../../node_modules/core-js/internals/object-get-own-property-symbols.js", "../../../../../node_modules/core-js/internals/own-keys.js", "../../../../../node_modules/core-js/internals/copy-constructor-properties.js", "../../../../../node_modules/core-js/internals/is-forced.js", "../../../../../node_modules/core-js/internals/export.js", "../../../../../node_modules/core-js/internals/function-apply.js", "../../../../../node_modules/core-js/internals/function-uncurry-this-accessor.js", "../../../../../node_modules/core-js/internals/is-possible-prototype.js", "../../../../../node_modules/core-js/internals/a-possible-prototype.js", "../../../../../node_modules/core-js/internals/object-set-prototype-of.js", "../../../../../node_modules/core-js/internals/proxy-accessor.js", "../../../../../node_modules/core-js/internals/inherit-if-required.js", "../../../../../node_modules/core-js/internals/to-string-tag-support.js", "../../../../../node_modules/core-js/internals/classof.js", "../../../../../node_modules/core-js/internals/to-string.js", "../../../../../node_modules/core-js/internals/normalize-string-argument.js", "../../../../../node_modules/core-js/internals/install-error-cause.js", "../../../../../node_modules/core-js/internals/error-stack-clear.js", "../../../../../node_modules/core-js/internals/error-stack-installable.js", "../../../../../node_modules/core-js/internals/error-stack-install.js", "../../../../../node_modules/core-js/internals/wrap-error-constructor-with-cause.js", "../../../../../node_modules/core-js/internals/is-array.js", "../../../../../node_modules/core-js/internals/array-set-length.js", "../../../../../node_modules/core-js/internals/does-not-exceed-safe-integer.js", "../../../../../node_modules/core-js/internals/set-helpers.js", "../../../../../node_modules/core-js/internals/a-set.js", "../../../../../node_modules/core-js/internals/iterate-simple.js", "../../../../../node_modules/core-js/internals/set-iterate.js", "../../../../../node_modules/core-js/internals/set-clone.js", "../../../../../node_modules/core-js/internals/set-size.js", "../../../../../node_modules/core-js/internals/get-iterator-direct.js", "../../../../../node_modules/core-js/internals/get-set-record.js", "../../../../../node_modules/core-js/internals/set-difference.js", "../../../../../node_modules/core-js/internals/set-method-accept-set-like.js", "../../../../../node_modules/core-js/modules/es.set.difference.v2.js", "../../../../../node_modules/core-js/internals/set-intersection.js", "../../../../../node_modules/core-js/modules/es.set.intersection.v2.js", "../../../../../node_modules/core-js/internals/iterator-close.js", "../../../../../node_modules/core-js/internals/set-is-disjoint-from.js", "../../../../../node_modules/core-js/modules/es.set.is-disjoint-from.v2.js", "../../../../../node_modules/core-js/internals/set-is-subset-of.js", "../../../../../node_modules/core-js/modules/es.set.is-subset-of.v2.js", "../../../../../node_modules/core-js/internals/set-is-superset-of.js", "../../../../../node_modules/core-js/modules/es.set.is-superset-of.v2.js", "../../../../../node_modules/core-js/internals/set-symmetric-difference.js", "../../../../../node_modules/core-js/modules/es.set.symmetric-difference.v2.js", "../../../../../node_modules/core-js/internals/set-union.js", "../../../../../node_modules/core-js/modules/es.set.union.v2.js", "../../../../../node_modules/core-js/internals/function-uncurry-this-clause.js", "../../../../../node_modules/core-js/internals/function-bind-context.js", "../../../../../node_modules/core-js/internals/html.js", "../../../../../node_modules/core-js/internals/array-slice.js", "../../../../../node_modules/core-js/internals/validate-arguments-length.js", "../../../../../node_modules/core-js/internals/environment-is-ios.js", "../../../../../node_modules/core-js/internals/environment.js", "../../../../../node_modules/core-js/internals/environment-is-node.js", "../../../../../node_modules/core-js/internals/task.js", "../../../../../node_modules/core-js/modules/web.clear-immediate.js", "../../../../../node_modules/core-js/internals/schedulers-fix.js", "../../../../../node_modules/core-js/modules/web.set-immediate.js", "../../../../../node_modules/moment/moment.js", "../../../../../node_modules/core-js/internals/get-json-replacer-function.js", "../../../../../node_modules/core-js/internals/object-keys.js", "../../../../../node_modules/core-js/internals/object-define-properties.js", "../../../../../node_modules/core-js/internals/object-create.js", "../../../../../node_modules/core-js/internals/add-to-unscopables.js", "../../../../../node_modules/core-js/internals/is-regexp.js", "../../../../../node_modules/core-js/internals/regexp-flags.js", "../../../../../node_modules/core-js/internals/regexp-get-flags.js", "../../../../../node_modules/core-js/internals/get-substitution.js", "../../../../../node_modules/core-js/modules/es.error.cause.js", "../../../../../node_modules/core-js/modules/es.array.push.js", "../../../../../node_modules/core-js/modules/esnext.set.difference.v2.js", "../../../../../node_modules/core-js/modules/esnext.set.intersection.v2.js", "../../../../../node_modules/core-js/modules/esnext.set.is-disjoint-from.v2.js", "../../../../../node_modules/core-js/modules/esnext.set.is-subset-of.v2.js", "../../../../../node_modules/core-js/modules/esnext.set.is-superset-of.v2.js", "../../../../../node_modules/core-js/modules/esnext.set.symmetric-difference.v2.js", "../../../../../node_modules/core-js/modules/esnext.set.union.v2.js", "../../../../../node_modules/core-js/modules/web.immediate.js", "../../../../../node_modules/handsontable/helpers/dom/element.mjs", "../../../../../node_modules/handsontable/helpers/string.mjs", "../../../../../node_modules/dompurify/dist/purify.es.js", "../../../../../node_modules/handsontable/helpers/mixed.mjs", "../../../../../node_modules/handsontable/helpers/array.mjs", "../../../../../node_modules/handsontable/helpers/templateLiteralTag.mjs", "../../../../../node_modules/handsontable/helpers/a11y.mjs", "../../../../../node_modules/handsontable/helpers/function.mjs", "../../../../../node_modules/handsontable/helpers/browser.mjs", "../../../../../node_modules/handsontable/helpers/object.mjs", "../../../../../node_modules/core-js/modules/es.json.stringify.js", "../../../../../node_modules/handsontable/helpers/feature.mjs", "../../../../../node_modules/handsontable/helpers/unicode.mjs", "../../../../../node_modules/handsontable/helpers/dom/event.mjs", "../../../../../node_modules/core-js/modules/es.array.unscopables.flat-map.js", "../../../../../node_modules/handsontable/helpers/console.mjs", "../../../../../node_modules/handsontable/pluginHooks.mjs", "../../../../../node_modules/handsontable/utils/staticRegister.mjs", "../../../../../node_modules/handsontable/editors/registry.mjs", "../../../../../node_modules/handsontable/eventManager.mjs", "../../../../../node_modules/handsontable/editorManager.mjs", "../../../../../node_modules/handsontable/focusManager.mjs", "../../../../../node_modules/handsontable/utils/parseTable.mjs", "../../../../../node_modules/core-js/modules/es.string.replace-all.js", "../../../../../node_modules/handsontable/helpers/number.mjs", "../../../../../node_modules/handsontable/utils/dataStructures/priorityMap.mjs", "../../../../../node_modules/handsontable/utils/dataStructures/uniqueMap.mjs", "../../../../../node_modules/handsontable/utils/dataStructures/uniqueSet.mjs", "../../../../../node_modules/handsontable/plugins/registry.mjs", "../../../../../node_modules/handsontable/renderers/registry.mjs", "../../../../../node_modules/handsontable/validators/registry.mjs", "../../../../../node_modules/core-js/modules/es.array.at.js", "../../../../../node_modules/core-js/modules/es.string.at-alternative.js", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/fullyVisibleColumns.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/fullyVisibleRows.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/partiallyVisibleColumns.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/partiallyVisibleRows.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/renderedAllColumns.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/renderedAllRows.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/renderedColumns.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/calculationType/renderedRows.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/viewportBase.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/viewportColumns.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/calculator/viewportRows.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/cell/coords.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/cell/range.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/event.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/filter/column.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/filter/row.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/orderView/constants.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/orderView/viewSize.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/orderView/viewSizeSet.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/orderView/view.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/orderView/sharedView.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/nodesPool.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/_base.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/rowHeaders.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/columnHeaders.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/colGroup.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/rows.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/cells.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/table.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/renderer/index.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/columnStretching.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/column.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/utils/row.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/mixin/stickyRowsBottom.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/mixin/stickyColumnsStart.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/bottomInlineStartCorner.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlay/constants.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/scroll.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/core/_base.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/core/clone.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlay/_base.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlay/bottomInlineStartCorner.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/mixin/calculatedColumns.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/bottom.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlay/bottom.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/mixin/calculatedRows.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/inlineStart.mjs", "../../../../../node_modules/handsontable/mixins/localHooks.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/selection/selection.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/selection/constants.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/selection/border/constants.mjs", "../../../../../node_modules/core-js/modules/es.array.unscopables.flat.js", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/selection/scanner.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/selection/border/border.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/selection/manager.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlay/inlineStart.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/mixin/stickyRowsTop.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/topInlineStartCorner.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlay/topInlineStartCorner.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/top.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlay/top.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/overlays.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/settings.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/table/master.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/viewport.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/core/core.mjs", "../../../../../node_modules/handsontable/3rdparty/walkontable/src/facade/core.mjs", "../../../../../node_modules/handsontable/selection/mouseEventHandler.mjs", "../../../../../node_modules/handsontable/utils/rootInstance.mjs", "../../../../../node_modules/handsontable/tableView.mjs", "../../../../../node_modules/handsontable/helpers/data.mjs", "../../../../../node_modules/handsontable/dataMap/dataSource.mjs", "../../../../../node_modules/handsontable/translations/maps/indexMap.mjs", "../../../../../node_modules/handsontable/translations/maps/utils/physicallyIndexed.mjs", "../../../../../node_modules/handsontable/translations/maps/physicalIndexToValueMap.mjs", "../../../../../node_modules/handsontable/translations/maps/hidingMap.mjs", "../../../../../node_modules/handsontable/translations/maps/utils/indexesSequence.mjs", "../../../../../node_modules/handsontable/translations/maps/utils/actionsOnIndexes.mjs", "../../../../../node_modules/handsontable/translations/maps/linkedPhysicalIndexToValueMap.mjs", "../../../../../node_modules/handsontable/translations/maps/trimmingMap.mjs", "../../../../../node_modules/handsontable/translations/maps/utils/index.mjs", "../../../../../node_modules/handsontable/translations/maps/indexesSequence.mjs", "../../../../../node_modules/handsontable/translations/maps/index.mjs", "../../../../../node_modules/handsontable/translations/mapCollections/mapCollection.mjs", "../../../../../node_modules/handsontable/translations/mapCollections/aggregatedCollection.mjs", "../../../../../node_modules/handsontable/translations/changesObservable/observer.mjs", "../../../../../node_modules/handsontable/translations/changesObservable/utils.mjs", "../../../../../node_modules/handsontable/translations/changesObservable/observable.mjs", "../../../../../node_modules/handsontable/translations/indexMapper.mjs", "../../../../../node_modules/handsontable/i18n/utils.mjs", "../../../../../node_modules/handsontable/i18n/phraseFormatters/pluralize.mjs", "../../../../../node_modules/handsontable/i18n/phraseFormatters/index.mjs", "../../../../../node_modules/handsontable/i18n/constants.mjs", "../../../../../node_modules/handsontable/i18n/languages/en-US.mjs", "../../../../../node_modules/handsontable/i18n/registry.mjs", "../../../../../node_modules/handsontable/selection/highlight/visualSelection.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/activeHeader.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/areaLayered.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/area.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/column.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/focus.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/customSelection.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/fill.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/header.mjs", "../../../../../node_modules/handsontable/selection/highlight/types/row.mjs", "../../../../../node_modules/handsontable/selection/highlight/highlight.mjs", "../../../../../node_modules/handsontable/selection/range.mjs", "../../../../../node_modules/handsontable/selection/transformation.mjs", "../../../../../node_modules/handsontable/selection/utils.mjs", "../../../../../node_modules/handsontable/selection/selection.mjs", "../../../../../node_modules/handsontable/3rdparty/SheetClip/SheetClip.mjs", "../../../../../node_modules/handsontable/dataMap/dataMap.mjs", "../../../../../node_modules/handsontable/cellTypes/registry.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/utils.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/metaSchema.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/metaLayers/globalMeta.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/metaLayers/tableMeta.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/lazyFactoryMap.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/metaLayers/columnMeta.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/metaLayers/cellMeta.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/index.mjs", "../../../../../node_modules/handsontable/dataMap/replaceData.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/mods/dynamicCellMeta.mjs", "../../../../../node_modules/handsontable/dataMap/metaManager/mods/extendMetaProperties.mjs", "../../../../../node_modules/handsontable/shortcutContexts/constants.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/editor/closeAndSave.mjs", "../../../../../node_modules/handsontable/mixins/hooksRefRegisterer.mjs", "../../../../../node_modules/handsontable/editors/baseEditor/baseEditor.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/editor/closeAndSaveByArrowKeys.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/editor/closeAndSaveByEnter.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/editor/closeWithoutSaving.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/editor/fastOpen.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/editor/open.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/editor/index.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/down.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/downByViewportHeight.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/left.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/right.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toColumns.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostBottom.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostInlineEnd.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostInlineStart.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostLeft.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostRight.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostTop.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toRows.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/up.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/upByViewportHeight.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/index.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/down.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/downByViewportHeight.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/inlineEnd.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/inlineStart.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/left.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/right.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostBottom.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostBottomInlineEnd.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostInlineEnd.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostInlineStart.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostLeft.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostRight.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostTop.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostTopInlineStart.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/up.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/upByViewportHeight.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/moveCellSelection/index.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/emptySelectedCells.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/scrollToFocusedCell.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/selectAllCells.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/selectAllCellsAndHeaders.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/populateSelectedCellsData.mjs", "../../../../../node_modules/handsontable/shortcutContexts/commands/index.mjs", "../../../../../node_modules/handsontable/shortcutContexts/editor.mjs", "../../../../../node_modules/handsontable/shortcutContexts/grid.mjs", "../../../../../node_modules/handsontable/shortcutContexts/index.mjs", "../../../../../node_modules/handsontable/core/focusCatcher/focusDetector.mjs", "../../../../../node_modules/handsontable/core/focusCatcher/index.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/scrollStrategies/columnHeaderScroll.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/scrollStrategies/cornerHeaderScroll.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/scrollStrategies/focusScroll.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/scrollStrategies/multipleScroll.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/scrollStrategies/noncontiguousScroll.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/scrollStrategies/rowHeaderScroll.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/scrollStrategies/singleScroll.mjs", "../../../../../node_modules/handsontable/core/viewportScroll/index.mjs", "../../../../../node_modules/handsontable/shortcuts/utils.mjs", "../../../../../node_modules/handsontable/shortcuts/context.mjs", "../../../../../node_modules/handsontable/shortcuts/keyObserver.mjs", "../../../../../node_modules/handsontable/shortcuts/recorder.mjs", "../../../../../node_modules/handsontable/shortcuts/manager.mjs", "../../../../../node_modules/handsontable/core.mjs", "../../../../../node_modules/handsontable/utils/autoResize.mjs", "../../../../../node_modules/handsontable/editors/textEditor/caretPositioner.mjs", "../../../../../node_modules/handsontable/editors/textEditor/textEditor.mjs", "../../../../../node_modules/handsontable/renderers/baseRenderer/baseRenderer.mjs", "../../../../../node_modules/handsontable/renderers/textRenderer/textRenderer.mjs", "../../../../../node_modules/handsontable/cellTypes/textType/textType.mjs", "../../../../../node_modules/handsontable/base.mjs"],
  "sourcesContent": ["'use strict';\n\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n// eslint-disable-next-line es/no-global-this -- safe\ncheck(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) ||\n// eslint-disable-next-line no-restricted-globals -- safe\ncheck(typeof self == 'object' && self) || check(typeof global == 'object' && global) || check(typeof this == 'object' && this) ||\n// eslint-disable-next-line no-new-func -- fallback\nfunction () {\n  return this;\n}() || Function('return this')();", "'use strict';\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};", "'use strict';\n\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, {\n    get: function () {\n      return 7;\n    }\n  })[1] !== 7;\n});", "'use strict';\n\nvar fails = require('../internals/fails');\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = function () {/* empty */}.bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});", "'use strict';\n\nvar NATIVE_BIND = require('../internals/function-bind-native');\nvar call = Function.prototype.call;\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};", "'use strict';\n\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({\n  1: 2\n}, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;", "'use strict';\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};", "'use strict';\n\nvar NATIVE_BIND = require('../internals/function-bind-native');\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;", "'use strict';\n\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};", "'use strict';\n\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};", "'use strict';\n\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};", "'use strict';\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};", "'use strict';\n\nvar isCallable = require('../internals/is-callable');\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(globalThis[namespace]) : globalThis[namespace] && globalThis[namespace][method];\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nmodule.exports = uncurryThis({}.isPrototypeOf);", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar navigator = globalThis.navigator;\nvar userAgent = navigator && navigator.userAgent;\nmodule.exports = userAgent ? String(userAgent) : '';", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar userAgent = require('../internals/environment-user-agent');\nvar process = globalThis.process;\nvar Deno = globalThis.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\nmodule.exports = version;", "'use strict';\n\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/environment-v8-version');\nvar fails = require('../internals/fails');\nvar globalThis = require('../internals/global-this');\nvar $String = globalThis.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n  // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n  !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});", "'use strict';\n\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nmodule.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == 'symbol';", "'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar $Object = Object;\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};", "'use strict';\n\nvar $String = String;\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};", "'use strict';\n\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};", "'use strict';\n\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};", "'use strict';\n\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};", "'use strict';\n\nmodule.exports = false;", "'use strict';\n\nvar globalThis = require('../internals/global-this');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(globalThis, key, {\n      value: value,\n      configurable: true,\n      writable: true\n    });\n  } catch (error) {\n    globalThis[key] = value;\n  }\n  return value;\n};", "'use strict';\n\nvar IS_PURE = require('../internals/is-pure');\nvar globalThis = require('../internals/global-this');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n(store.versions || (store.versions = [])).push({\n  version: '3.38.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.38.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});", "'use strict';\n\nvar store = require('../internals/shared-store');\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};", "'use strict';\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar Symbol = globalThis.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name) ? Symbol[name] : createWellKnownSymbol('Symbol.' + name);\n  }\n  return WellKnownSymbolsStore[name];\n};", "'use strict';\n\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};", "'use strict';\n\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar isObject = require('../internals/is-object');\nvar document = globalThis.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () {\n      return 7;\n    }\n  }).a !== 7;\n});", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) {/* empty */}\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () {/* empty */}, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});", "'use strict';\n\nvar isObject = require('../internals/is-object');\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  }\n  return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) {/* empty */}\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && function something() {/* empty */}.name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable);\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\nmodule.exports = store.inspectSource;", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\nvar WeakMap = globalThis.WeakMap;\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));", "'use strict';\n\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\nvar keys = shared('keys');\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};", "'use strict';\n\nmodule.exports = {};", "'use strict';\n\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar globalThis = require('../internals/global-this');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = globalThis.TypeError;\nvar WeakMap = globalThis.WeakMap;\nvar set, get, has;\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    }\n    return state;\n  };\n};\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () {/* empty */}, 'length', {\n    value: 8\n  }).length !== 8;\n});\nvar TEMPLATE = String(String).split('String');\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\).*$/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {\n    if (DESCRIPTORS) defineProperty(value, 'name', {\n      value: name,\n      configurable: true\n    });else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', {\n      value: options.arity\n    });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', {\n        writable: false\n      });\n      // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) {/* empty */}\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  }\n  return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');", "'use strict';\n\nvar isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];else if (O[key]) simple = true;\n    } catch (error) {/* empty */}\n    if (simple) O[key] = value;else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  }\n  return O;\n};", "'use strict';\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};", "'use strict';\n\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};", "'use strict';\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};", "'use strict';\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};", "'use strict';\n\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};", "'use strict';\n\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n      // Array#indexOf ignores holes, Array#includes - not\n    } else for (; length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    }\n    return !IS_INCLUDES && -1;\n  };\n};\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\nvar push = uncurryThis([].push);\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};", "'use strict';\n\n// IE8- don't enum bug keys\nmodule.exports = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];", "'use strict';\n\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};", "'use strict';\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;", "'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};", "'use strict';\n\nvar hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};", "'use strict';\n\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar replacement = /#|\\.prototype\\./;\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true : value === NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;\n};\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\nmodule.exports = isForced;", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\r\n  options.target         - name of the target object\r\n  options.global         - target is the global object\r\n  options.stat           - export as static methods of target\r\n  options.proto          - export as prototype methods of target\r\n  options.real           - real prototype method for the `pure` version\r\n  options.forced         - export even if the native feature is available\r\n  options.bind           - bind methods to the target, required for the `pure` version\r\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\r\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\r\n  options.sham           - add a flag to not completely full polyfills\r\n  options.enumerable     - export as enumerable property\r\n  options.dontCallGetSet - prevent calling a getter on target\r\n  options.name           - the .name of the function if it does not match the key\r\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = globalThis;\n  } else if (STATIC) {\n    target = globalThis[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = globalThis[TARGET] && globalThis[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || targetProperty && targetProperty.sham) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};", "'use strict';\n\nvar NATIVE_BIND = require('../internals/function-bind-native');\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) {/* empty */}\n};", "'use strict';\n\nvar isObject = require('../internals/is-object');\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};", "'use strict';\n\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\nvar $String = String;\nvar $TypeError = TypeError;\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};", "'use strict';\n\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar isObject = require('../internals/is-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) {/* empty */}\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);", "'use strict';\n\nvar defineProperty = require('../internals/object-define-property').f;\nmodule.exports = function (Target, Source, key) {\n  key in Target || defineProperty(Target, key, {\n    configurable: true,\n    get: function () {\n      return Source[key];\n    },\n    set: function (it) {\n      Source[key] = it;\n    }\n  });\n};", "'use strict';\n\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n  // it can work only with native `setPrototypeOf`\n  setPrototypeOf &&\n  // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n  isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};", "'use strict';\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\ntest[TO_STRING_TAG] = 'z';\nmodule.exports = String(test) === '[object z]';", "'use strict';\n\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () {\n  return arguments;\n}()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) {/* empty */}\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n  // @@toStringTag case\n  : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n  // builtinTag case\n  : CORRECT_ARGUMENTS ? classofRaw(O)\n  // ES3 arguments fallback\n  : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};", "'use strict';\n\nvar classof = require('../internals/classof');\nvar $String = String;\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};", "'use strict';\n\nvar toString = require('../internals/to-string');\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};", "'use strict';\n\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\n// `InstallErrorCause` abstract operation\n// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause\nmodule.exports = function (O, options) {\n  if (isObject(options) && 'cause' in options) {\n    createNonEnumerableProperty(O, 'cause', options.cause);\n  }\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\nvar TEST = function (arg) {\n  return String(new $Error(arg).stack);\n}('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  }\n  return stack;\n};", "'use strict';\n\nvar fails = require('../internals/fails');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nmodule.exports = !fails(function () {\n  var error = new Error('a');\n  if (!('stack' in error)) return true;\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  Object.defineProperty(error, 'stack', createPropertyDescriptor(1, 7));\n  return error.stack !== 7;\n});", "'use strict';\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\n\n// non-standard V8\nvar captureStackTrace = Error.captureStackTrace;\nmodule.exports = function (error, C, stack, dropEntries) {\n  if (ERROR_STACK_INSTALLABLE) {\n    if (captureStackTrace) captureStackTrace(error, C);else createNonEnumerableProperty(error, 'stack', clearErrorStack(stack, dropEntries));\n  }\n};", "'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar proxyAccessor = require('../internals/proxy-accessor');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar installErrorCause = require('../internals/install-error-cause');\nvar installErrorStack = require('../internals/error-stack-install');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\nmodule.exports = function (FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {\n  var STACK_TRACE_LIMIT = 'stackTraceLimit';\n  var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;\n  var path = FULL_NAME.split('.');\n  var ERROR_NAME = path[path.length - 1];\n  var OriginalError = getBuiltIn.apply(null, path);\n  if (!OriginalError) return;\n  var OriginalErrorPrototype = OriginalError.prototype;\n\n  // V8 9.3- bug https://bugs.chromium.org/p/v8/issues/detail?id=12006\n  if (!IS_PURE && hasOwn(OriginalErrorPrototype, 'cause')) delete OriginalErrorPrototype.cause;\n  if (!FORCED) return OriginalError;\n  var BaseError = getBuiltIn('Error');\n  var WrappedError = wrapper(function (a, b) {\n    var message = normalizeStringArgument(IS_AGGREGATE_ERROR ? b : a, undefined);\n    var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();\n    if (message !== undefined) createNonEnumerableProperty(result, 'message', message);\n    installErrorStack(result, WrappedError, result.stack, 2);\n    if (this && isPrototypeOf(OriginalErrorPrototype, this)) inheritIfRequired(result, this, WrappedError);\n    if (arguments.length > OPTIONS_POSITION) installErrorCause(result, arguments[OPTIONS_POSITION]);\n    return result;\n  });\n  WrappedError.prototype = OriginalErrorPrototype;\n  if (ERROR_NAME !== 'Error') {\n    if (setPrototypeOf) setPrototypeOf(WrappedError, BaseError);else copyConstructorProperties(WrappedError, BaseError, {\n      name: true\n    });\n  } else if (DESCRIPTORS && STACK_TRACE_LIMIT in OriginalError) {\n    proxyAccessor(WrappedError, OriginalError, STACK_TRACE_LIMIT);\n    proxyAccessor(WrappedError, OriginalError, 'prepareStackTrace');\n  }\n  copyConstructorProperties(WrappedError, OriginalError);\n  if (!IS_PURE) try {\n    // Safari 13- bug: WebAssembly errors does not have a proper `.name`\n    if (OriginalErrorPrototype.name !== ERROR_NAME) {\n      createNonEnumerableProperty(OriginalErrorPrototype, 'name', ERROR_NAME);\n    }\n    OriginalErrorPrototype.constructor = WrappedError;\n  } catch (error) {/* empty */}\n  return WrappedError;\n};", "'use strict';\n\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', {\n      writable: false\n    }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw new $TypeError('Cannot set read only .length');\n  }\n  return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};", "'use strict';\n\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\n// eslint-disable-next-line es/no-set -- safe\nvar SetPrototype = Set.prototype;\nmodule.exports = {\n  // eslint-disable-next-line es/no-set -- safe\n  Set: Set,\n  add: uncurryThis(SetPrototype.add),\n  has: uncurryThis(SetPrototype.has),\n  remove: uncurryThis(SetPrototype['delete']),\n  proto: SetPrototype\n};", "'use strict';\n\nvar has = require('../internals/set-helpers').has;\n\n// Perform ? RequireInternalSlot(M, [[SetData]])\nmodule.exports = function (it) {\n  has(it);\n  return it;\n};", "'use strict';\n\nvar call = require('../internals/function-call');\nmodule.exports = function (record, fn, ITERATOR_INSTEAD_OF_RECORD) {\n  var iterator = ITERATOR_INSTEAD_OF_RECORD ? record : record.iterator;\n  var next = record.next;\n  var step, result;\n  while (!(step = call(next, iterator)).done) {\n    result = fn(step.value);\n    if (result !== undefined) return result;\n  }\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar iterateSimple = require('../internals/iterate-simple');\nvar SetHelpers = require('../internals/set-helpers');\nvar Set = SetHelpers.Set;\nvar SetPrototype = SetHelpers.proto;\nvar forEach = uncurryThis(SetPrototype.forEach);\nvar keys = uncurryThis(SetPrototype.keys);\nvar next = keys(new Set()).next;\nmodule.exports = function (set, fn, interruptible) {\n  return interruptible ? iterateSimple({\n    iterator: keys(set),\n    next: next\n  }, fn) : forEach(set, fn);\n};", "'use strict';\n\nvar SetHelpers = require('../internals/set-helpers');\nvar iterate = require('../internals/set-iterate');\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\nmodule.exports = function (set) {\n  var result = new Set();\n  iterate(set, function (it) {\n    add(result, it);\n  });\n  return result;\n};", "'use strict';\n\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar SetHelpers = require('../internals/set-helpers');\nmodule.exports = uncurryThisAccessor(SetHelpers.proto, 'size', 'get') || function (set) {\n  return set.size;\n};", "'use strict';\n\n// `GetIteratorDirect(obj)` abstract operation\n// https://tc39.es/proposal-iterator-helpers/#sec-getiteratordirect\nmodule.exports = function (obj) {\n  return {\n    iterator: obj,\n    next: obj.next,\n    done: false\n  };\n};", "'use strict';\n\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar call = require('../internals/function-call');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar INVALID_SIZE = 'Invalid size';\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar max = Math.max;\nvar SetRecord = function (set, intSize) {\n  this.set = set;\n  this.size = max(intSize, 0);\n  this.has = aCallable(set.has);\n  this.keys = aCallable(set.keys);\n};\nSetRecord.prototype = {\n  getIterator: function () {\n    return getIteratorDirect(anObject(call(this.keys, this.set)));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize !== numSize) throw new $TypeError(INVALID_SIZE);\n  var intSize = toIntegerOrInfinity(numSize);\n  if (intSize < 0) throw new $RangeError(INVALID_SIZE);\n  return new SetRecord(obj, intSize);\n};", "'use strict';\n\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar clone = require('../internals/set-clone');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.difference` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function difference(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = clone(O);\n  if (size(O) <= otherRec.size) iterateSet(O, function (e) {\n    if (otherRec.includes(e)) remove(result, e);\n  });else iterateSimple(otherRec.getIterator(), function (e) {\n    if (has(O, e)) remove(result, e);\n  });\n  return result;\n};", "'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\nvar createSetLike = function (size) {\n  return {\n    size: size,\n    has: function () {\n      return false;\n    },\n    keys: function () {\n      return {\n        next: function () {\n          return {\n            done: true\n          };\n        }\n      };\n    }\n  };\n};\nmodule.exports = function (name) {\n  var Set = getBuiltIn('Set');\n  try {\n    new Set()[name](createSetLike(0));\n    try {\n      // late spec change, early WebKit ~ Safari 17.0 beta implementation does not pass it\n      // https://github.com/tc39/proposal-set-methods/pull/88\n      new Set()[name](createSetLike(-1));\n      return false;\n    } catch (error2) {\n      return true;\n    }\n  } catch (error) {\n    return false;\n  }\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar difference = require('../internals/set-difference');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.difference` method\n// https://github.com/tc39/proposal-set-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: !setMethodAcceptSetLike('difference')\n}, {\n  difference: difference\n});", "'use strict';\n\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function intersection(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = new Set();\n  if (size(O) > otherRec.size) {\n    iterateSimple(otherRec.getIterator(), function (e) {\n      if (has(O, e)) add(result, e);\n    });\n  } else {\n    iterateSet(O, function (e) {\n      if (otherRec.includes(e)) add(result, e);\n    });\n  }\n  return result;\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar intersection = require('../internals/set-intersection');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\nvar INCORRECT = !setMethodAcceptSetLike('intersection') || fails(function () {\n  // eslint-disable-next-line es/no-array-from, es/no-set -- testing\n  return String(Array.from(new Set([1, 2, 3]).intersection(new Set([3, 2])))) !== '3,2';\n});\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: INCORRECT\n}, {\n  intersection: intersection\n});", "'use strict';\n\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};", "'use strict';\n\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\nmodule.exports = function isDisjointFrom(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) <= otherRec.size) return iterateSet(O, function (e) {\n    if (otherRec.includes(e)) return false;\n  }, true) !== false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar isDisjointFrom = require('../internals/set-is-disjoint-from');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.isDisjointFrom` method\n// https://github.com/tc39/proposal-set-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: !setMethodAcceptSetLike('isDisjointFrom')\n}, {\n  isDisjointFrom: isDisjointFrom\n});", "'use strict';\n\nvar aSet = require('../internals/a-set');\nvar size = require('../internals/set-size');\nvar iterate = require('../internals/set-iterate');\nvar getSetRecord = require('../internals/get-set-record');\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\nmodule.exports = function isSubsetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) > otherRec.size) return false;\n  return iterate(O, function (e) {\n    if (!otherRec.includes(e)) return false;\n  }, true) !== false;\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar isSubsetOf = require('../internals/set-is-subset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.isSubsetOf` method\n// https://github.com/tc39/proposal-set-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: !setMethodAcceptSetLike('isSubsetOf')\n}, {\n  isSubsetOf: isSubsetOf\n});", "'use strict';\n\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\nmodule.exports = function isSupersetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) < otherRec.size) return false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (!has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar isSupersetOf = require('../internals/set-is-superset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.isSupersetOf` method\n// https://github.com/tc39/proposal-set-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: !setMethodAcceptSetLike('isSupersetOf')\n}, {\n  isSupersetOf: isSupersetOf\n});", "'use strict';\n\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar clone = require('../internals/set-clone');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.symmetricDifference` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function symmetricDifference(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (e) {\n    if (has(O, e)) remove(result, e);else add(result, e);\n  });\n  return result;\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar symmetricDifference = require('../internals/set-symmetric-difference');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.symmetricDifference` method\n// https://github.com/tc39/proposal-set-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: !setMethodAcceptSetLike('symmetricDifference')\n}, {\n  symmetricDifference: symmetricDifference\n});", "'use strict';\n\nvar aSet = require('../internals/a-set');\nvar add = require('../internals/set-helpers').add;\nvar clone = require('../internals/set-clone');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function union(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (it) {\n    add(result, it);\n  });\n  return result;\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar union = require('../internals/set-union');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: !setMethodAcceptSetLike('union')\n}, {\n  union: union\n});", "'use strict';\n\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function /* ...args */\n  () {\n    return fn.apply(that, arguments);\n  };\n};", "'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\nmodule.exports = getBuiltIn('document', 'documentElement');", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nmodule.exports = uncurryThis([].slice);", "'use strict';\n\nvar $TypeError = TypeError;\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};", "'use strict';\n\nvar userAgent = require('../internals/environment-user-agent');\n\n// eslint-disable-next-line redos/no-vulnerable -- safe\nmodule.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);", "'use strict';\n\n/* global Bun, Deno -- detection */\nvar globalThis = require('../internals/global-this');\nvar userAgent = require('../internals/environment-user-agent');\nvar classof = require('../internals/classof-raw');\nvar userAgentStartsWith = function (string) {\n  return userAgent.slice(0, string.length) === string;\n};\nmodule.exports = function () {\n  if (userAgentStartsWith('Bun/')) return 'BUN';\n  if (userAgentStartsWith('Cloudflare-Workers')) return 'CLOUDFLARE';\n  if (userAgentStartsWith('Deno/')) return 'DENO';\n  if (userAgentStartsWith('Node.js/')) return 'NODE';\n  if (globalThis.Bun && typeof Bun.version == 'string') return 'BUN';\n  if (globalThis.Deno && typeof Deno.version == 'object') return 'DENO';\n  if (classof(globalThis.process) === 'process') return 'NODE';\n  if (globalThis.window && globalThis.document) return 'BROWSER';\n  return 'REST';\n}();", "'use strict';\n\nvar ENVIRONMENT = require('../internals/environment');\nmodule.exports = ENVIRONMENT === 'NODE';", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar apply = require('../internals/function-apply');\nvar bind = require('../internals/function-bind-context');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar fails = require('../internals/fails');\nvar html = require('../internals/html');\nvar arraySlice = require('../internals/array-slice');\nvar createElement = require('../internals/document-create-element');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar IS_IOS = require('../internals/environment-is-ios');\nvar IS_NODE = require('../internals/environment-is-node');\nvar set = globalThis.setImmediate;\nvar clear = globalThis.clearImmediate;\nvar process = globalThis.process;\nvar Dispatch = globalThis.Dispatch;\nvar Function = globalThis.Function;\nvar MessageChannel = globalThis.MessageChannel;\nvar String = globalThis.String;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar $location, defer, channel, port;\nfails(function () {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  $location = globalThis.location;\n});\nvar run = function (id) {\n  if (hasOwn(queue, id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\nvar eventListener = function (event) {\n  run(event.data);\n};\nvar globalPostMessageDefer = function (id) {\n  // old engines have not location.origin\n  globalThis.postMessage(String(id), $location.protocol + '//' + $location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(handler) {\n    validateArgumentsLength(arguments.length, 1);\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var args = arraySlice(arguments, 1);\n    queue[++counter] = function () {\n      apply(fn, undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n    // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n    // Browsers with MessageChannel, includes WebWorkers\n    // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = eventListener;\n    defer = bind(port.postMessage, port);\n    // Browsers with postMessage, skip WebWorkers\n    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (globalThis.addEventListener && isCallable(globalThis.postMessage) && !globalThis.importScripts && $location && $location.protocol !== 'file:' && !fails(globalPostMessageDefer)) {\n    defer = globalPostMessageDefer;\n    globalThis.addEventListener('message', eventListener, false);\n    // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n    // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: set,\n  clear: clear\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar clearImmediate = require('../internals/task').clear;\n\n// `clearImmediate` method\n// http://w3c.github.io/setImmediate/#si-clearImmediate\n$({\n  global: true,\n  bind: true,\n  enumerable: true,\n  forced: globalThis.clearImmediate !== clearImmediate\n}, {\n  clearImmediate: clearImmediate\n});", "'use strict';\n\nvar globalThis = require('../internals/global-this');\nvar apply = require('../internals/function-apply');\nvar isCallable = require('../internals/is-callable');\nvar ENVIRONMENT = require('../internals/environment');\nvar USER_AGENT = require('../internals/environment-user-agent');\nvar arraySlice = require('../internals/array-slice');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar Function = globalThis.Function;\n// dirty IE9- and Bun 0.3.0- checks\nvar WRAP = /MSIE .\\./.test(USER_AGENT) || ENVIRONMENT === 'BUN' && function () {\n  var version = globalThis.Bun.version.split('.');\n  return version.length < 3 || version[0] === '0' && (version[1] < 3 || version[1] === '3' && version[2] === '0');\n}();\n\n// IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\n// https://github.com/oven-sh/bun/issues/1633\nmodule.exports = function (scheduler, hasTimeArg) {\n  var firstParamIndex = hasTimeArg ? 2 : 1;\n  return WRAP ? function (handler, timeout /* , ...arguments */) {\n    var boundArgs = validateArgumentsLength(arguments.length, 1) > firstParamIndex;\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var params = boundArgs ? arraySlice(arguments, firstParamIndex) : [];\n    var callback = boundArgs ? function () {\n      apply(fn, this, params);\n    } : fn;\n    return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);\n  } : scheduler;\n};", "'use strict';\n\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar setTask = require('../internals/task').set;\nvar schedulersFix = require('../internals/schedulers-fix');\n\n// https://github.com/oven-sh/bun/issues/1633\nvar setImmediate = globalThis.setImmediate ? schedulersFix(setTask, false) : setTask;\n\n// `setImmediate` method\n// http://w3c.github.io/setImmediate/#si-setImmediate\n$({\n  global: true,\n  bind: true,\n  enumerable: true,\n  forced: globalThis.setImmediate !== setImmediate\n}, {\n  setImmediate: setImmediate\n});", "//! moment.js\n//! version : 2.30.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  }\n\n  // This is done to register the method called with moment()\n  // without creating circular dependencies.\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n      for (k in obj) {\n        if (hasOwnProp(obj, k)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  function isUndefined(input) {\n    return input === void 0;\n  }\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n  function map(arr, fn) {\n    var res = [],\n      i,\n      arrLen = arr.length;\n    for (i = 0; i < arrLen; ++i) {\n      res.push(fn(arr[i], i));\n    }\n    return res;\n  }\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n    return a;\n  }\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidEra: null,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      era: null,\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n  }\n  var some;\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function (fun) {\n      var t = Object(this),\n        len = t.length >>> 0,\n        i;\n      for (i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n  function isValid(m) {\n    var flags = null,\n      parsedParts = false,\n      isNowValid = m._d && !isNaN(m._d.getTime());\n    if (isNowValid) {\n      flags = getParsingFlags(m);\n      parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      isNowValid = flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n    }\n    if (Object.isFrozen == null || !Object.isFrozen(m)) {\n      m._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n    return m._isValid;\n  }\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n    return m;\n  }\n\n  // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n  var momentProperties = hooks.momentProperties = [],\n    updateInProgress = false;\n  function copyConfig(to, from) {\n    var i,\n      prop,\n      val,\n      momentPropertiesLen = momentProperties.length;\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n    if (momentPropertiesLen > 0) {\n      for (i = 0; i < momentPropertiesLen; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n    return to;\n  }\n\n  // Moment prototype object\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n      if (firstTime) {\n        var args = [],\n          arg,\n          i,\n          key,\n          argLen = arguments.length;\n        for (i = 0; i < argLen; i++) {\n          arg = '';\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n            for (key in arguments[0]) {\n              if (hasOwnProp(arguments[0], key)) {\n                arg += key + ': ' + arguments[0][key] + ', ';\n              }\n            }\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n          args.push(arg);\n        }\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n  var deprecations = {};\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n  function isFunction(input) {\n    return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n  function set(config) {\n    var prop, i;\n    for (i in config) {\n      if (hasOwnProp(config, i)) {\n        prop = config[i];\n        if (isFunction(prop)) {\n          this[i] = prop;\n        } else {\n          this['_' + i] = prop;\n        }\n      }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n      prop;\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n    return res;\n  }\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n  var keys;\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function (obj) {\n      var i,\n        res = [];\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n      return res;\n    };\n  }\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n      zerosToFill = targetLength - absNumber.length,\n      sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n    localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n    formatFunctions = {},\n    formatTokenFunctions = {};\n\n  // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n      func = function () {\n        return this[callback]();\n      };\n    }\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n  }\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n      i,\n      length;\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n    return function (mom) {\n      var output = '',\n        i;\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n      return output;\n    };\n  }\n\n  // format date using native date object\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n  function expandFormat(format, locale) {\n    var i = 5;\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n    return format;\n  }\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n      formatUpper = this._longDateFormat[key.toUpperCase()];\n    if (format || !formatUpper) {\n      return format;\n    }\n    this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {\n      if (tok === 'MMMM' || tok === 'MM' || tok === 'DD' || tok === 'dddd') {\n        return tok.slice(1);\n      }\n      return tok;\n    }).join('');\n    return this._longDateFormat[key];\n  }\n  var defaultInvalidDate = 'Invalid date';\n  function invalidDate() {\n    return this._invalidDate;\n  }\n  var defaultOrdinal = '%d',\n    defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    w: 'a week',\n    ww: '%d weeks',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n  var aliases = {\n    D: 'date',\n    dates: 'date',\n    date: 'date',\n    d: 'day',\n    days: 'day',\n    day: 'day',\n    e: 'weekday',\n    weekdays: 'weekday',\n    weekday: 'weekday',\n    E: 'isoWeekday',\n    isoweekdays: 'isoWeekday',\n    isoweekday: 'isoWeekday',\n    DDD: 'dayOfYear',\n    dayofyears: 'dayOfYear',\n    dayofyear: 'dayOfYear',\n    h: 'hour',\n    hours: 'hour',\n    hour: 'hour',\n    ms: 'millisecond',\n    milliseconds: 'millisecond',\n    millisecond: 'millisecond',\n    m: 'minute',\n    minutes: 'minute',\n    minute: 'minute',\n    M: 'month',\n    months: 'month',\n    month: 'month',\n    Q: 'quarter',\n    quarters: 'quarter',\n    quarter: 'quarter',\n    s: 'second',\n    seconds: 'second',\n    second: 'second',\n    gg: 'weekYear',\n    weekyears: 'weekYear',\n    weekyear: 'weekYear',\n    GG: 'isoWeekYear',\n    isoweekyears: 'isoWeekYear',\n    isoweekyear: 'isoWeekYear',\n    w: 'week',\n    weeks: 'week',\n    week: 'week',\n    W: 'isoWeek',\n    isoweeks: 'isoWeek',\n    isoweek: 'isoWeek',\n    y: 'year',\n    years: 'year',\n    year: 'year'\n  };\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n      normalizedProp,\n      prop;\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n    return normalizedInput;\n  }\n  var priorities = {\n    date: 9,\n    day: 11,\n    weekday: 11,\n    isoWeekday: 11,\n    dayOfYear: 4,\n    hour: 13,\n    millisecond: 16,\n    minute: 14,\n    month: 8,\n    quarter: 7,\n    second: 15,\n    weekYear: 1,\n    isoWeekYear: 1,\n    week: 5,\n    isoWeek: 5,\n    year: 1\n  };\n  function getPrioritizedUnits(unitsObj) {\n    var units = [],\n      u;\n    for (u in unitsObj) {\n      if (hasOwnProp(unitsObj, u)) {\n        units.push({\n          unit: u,\n          priority: priorities[u]\n        });\n      }\n    }\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n  var match1 = /\\d/,\n    //       0 - 9\n    match2 = /\\d\\d/,\n    //      00 - 99\n    match3 = /\\d{3}/,\n    //     000 - 999\n    match4 = /\\d{4}/,\n    //    0000 - 9999\n    match6 = /[+-]?\\d{6}/,\n    // -999999 - 999999\n    match1to2 = /\\d\\d?/,\n    //       0 - 99\n    match3to4 = /\\d\\d\\d\\d?/,\n    //     999 - 9999\n    match5to6 = /\\d\\d\\d\\d\\d\\d?/,\n    //   99999 - 999999\n    match1to3 = /\\d{1,3}/,\n    //       0 - 999\n    match1to4 = /\\d{1,4}/,\n    //       0 - 9999\n    match1to6 = /[+-]?\\d{1,6}/,\n    // -999999 - 999999\n    matchUnsigned = /\\d+/,\n    //       0 - inf\n    matchSigned = /[+-]?\\d+/,\n    //    -inf - inf\n    matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi,\n    // +00:00 -00:00 +0000 -0000 or Z\n    matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi,\n    // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n    matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/,\n    // 123456789 123456789.123\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n    match1to2NoLeadingZero = /^[1-9]\\d?/,\n    //         1-99\n    match1to2HasZero = /^([1-9]\\d|\\d)/,\n    //           0-99\n    regexes;\n  regexes = {};\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](config._strict, config._locale);\n  }\n\n  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n      value = 0;\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n    return value;\n  }\n  var tokens = {};\n  function addParseToken(token, callback) {\n    var i,\n      func = callback,\n      tokenLen;\n    if (typeof token === 'string') {\n      token = [token];\n    }\n    if (isNumber(callback)) {\n      func = function (input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n    tokenLen = token.length;\n    for (i = 0; i < tokenLen; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n  var YEAR = 0,\n    MONTH = 1,\n    DATE = 2,\n    HOUR = 3,\n    MINUTE = 4,\n    SECOND = 5,\n    MILLISECOND = 6,\n    WEEK = 7,\n    WEEKDAY = 8;\n\n  // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n  // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  });\n\n  // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  // HOOKS\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  };\n\n  // MOMENTS\n\n  var getSetYear = makeGetSet('FullYear', true);\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n  function get(mom, unit) {\n    if (!mom.isValid()) {\n      return NaN;\n    }\n    var d = mom._d,\n      isUTC = mom._isUTC;\n    switch (unit) {\n      case 'Milliseconds':\n        return isUTC ? d.getUTCMilliseconds() : d.getMilliseconds();\n      case 'Seconds':\n        return isUTC ? d.getUTCSeconds() : d.getSeconds();\n      case 'Minutes':\n        return isUTC ? d.getUTCMinutes() : d.getMinutes();\n      case 'Hours':\n        return isUTC ? d.getUTCHours() : d.getHours();\n      case 'Date':\n        return isUTC ? d.getUTCDate() : d.getDate();\n      case 'Day':\n        return isUTC ? d.getUTCDay() : d.getDay();\n      case 'Month':\n        return isUTC ? d.getUTCMonth() : d.getMonth();\n      case 'FullYear':\n        return isUTC ? d.getUTCFullYear() : d.getFullYear();\n      default:\n        return NaN;\n      // Just in case\n    }\n  }\n  function set$1(mom, unit, value) {\n    var d, isUTC, year, month, date;\n    if (!mom.isValid() || isNaN(value)) {\n      return;\n    }\n    d = mom._d;\n    isUTC = mom._isUTC;\n    switch (unit) {\n      case 'Milliseconds':\n        return void (isUTC ? d.setUTCMilliseconds(value) : d.setMilliseconds(value));\n      case 'Seconds':\n        return void (isUTC ? d.setUTCSeconds(value) : d.setSeconds(value));\n      case 'Minutes':\n        return void (isUTC ? d.setUTCMinutes(value) : d.setMinutes(value));\n      case 'Hours':\n        return void (isUTC ? d.setUTCHours(value) : d.setHours(value));\n      case 'Date':\n        return void (isUTC ? d.setUTCDate(value) : d.setDate(value));\n      // case 'Day': // Not real\n      //    return void (isUTC ? d.setUTCDay(value) : d.setDay(value));\n      // case 'Month': // Not used because we need to pass two variables\n      //     return void (isUTC ? d.setUTCMonth(value) : d.setMonth(value));\n      case 'FullYear':\n        break;\n      // See below ...\n      default:\n        return;\n      // Just in case\n    }\n    year = value;\n    month = mom.month();\n    date = mom.date();\n    date = date === 29 && month === 1 && !isLeapYear(year) ? 28 : date;\n    void (isUTC ? d.setUTCFullYear(year, month, date) : d.setFullYear(year, month, date));\n  }\n\n  // MOMENTS\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n    return this;\n  }\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units),\n        i,\n        prioritizedLen = prioritized.length;\n      for (i = 0; i < prioritizedLen; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n    return this;\n  }\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n  var indexOf;\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function (o) {\n      // I know\n      var i;\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n      return -1;\n    };\n  }\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  }\n\n  // FORMATTING\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  });\n\n  // PARSING\n\n  addRegexToken('M', match1to2, match1to2NoLeadingZero);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  });\n\n  // LOCALES\n\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n    defaultMonthsShortRegex = matchWord,\n    defaultMonthsRegex = matchWord;\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function setMonth(mom, value) {\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value);\n        // TODO: Another silent failure?\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n    var month = value,\n      date = mom.date();\n    date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));\n    void (mom._isUTC ? mom._d.setUTCMonth(month, date) : mom._d.setMonth(month, date));\n    return mom;\n  }\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n    var shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom,\n      shortP,\n      longP;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortP = regexEscape(this.monthsShort(mom, ''));\n      longP = regexEscape(this.months(mom, ''));\n      shortPieces.push(shortP);\n      longPieces.push(longP);\n      mixedPieces.push(longP);\n      mixedPieces.push(shortP);\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date;\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n    return date;\n  }\n  function createUTCDate(y) {\n    var date, args;\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      args = Array.prototype.slice.call(arguments);\n      // preserve leap years using a full 400 year cycle, then reset\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n    return date;\n  }\n\n  // start-of-first-week - start-of-year\n  function firstWeekOffset(year, dow, doy) {\n    var\n      // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n      fwd = 7 + dow - doy,\n      // first-week day local weekday -- which local weekday is fwd\n      fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  }\n\n  // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n      weekOffset = firstWeekOffset(year, dow, doy),\n      dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n      resYear,\n      resDayOfYear;\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n      week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n      resWeek,\n      resYear;\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n      weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  }\n\n  // FORMATTING\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n  // PARSING\n\n  addRegexToken('w', match1to2, match1to2NoLeadingZero);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2, match1to2NoLeadingZero);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  });\n\n  // HELPERS\n\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n  };\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  }\n\n  // MOMENTS\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  // FORMATTING\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday');\n\n  // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  });\n\n  // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n      return input;\n    }\n    return null;\n  }\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n  }\n\n  // LOCALES\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    defaultWeekdaysRegex = matchWord,\n    defaultWeekdaysShortRegex = matchWord,\n    defaultWeekdaysMinRegex = matchWord;\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n\n      mom = createUTC([2000, 1]).day(i);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var day = get(this, 'Day');\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n    var minPieces = [],\n      shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom,\n      minp,\n      shortp,\n      longp;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = regexEscape(this.weekdaysMin(mom, ''));\n      shortp = regexEscape(this.weekdaysShort(mom, ''));\n      longp = regexEscape(this.weekdays(mom, ''));\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  }\n\n  // FORMATTING\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n  function kFormat() {\n    return this.hours() || 24;\n  }\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n  meridiem('a', true);\n  meridiem('A', false);\n\n  // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2, match1to2HasZero);\n  addRegexToken('h', match1to2, match1to2NoLeadingZero);\n  addRegexToken('k', match1to2, match1to2NoLeadingZero);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  });\n\n  // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    getSetHour = makeGetSet('Hours', true);\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  }\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  };\n\n  // internal storage for locale config files\n  var locales = {},\n    localeFamilies = {},\n    globalLocale;\n  function commonPrefix(arr1, arr2) {\n    var i,\n      minl = Math.min(arr1.length, arr2.length);\n    for (i = 0; i < minl; i += 1) {\n      if (arr1[i] !== arr2[i]) {\n        return i;\n      }\n    }\n    return minl;\n  }\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  }\n\n  // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n  function chooseLocale(names) {\n    var i = 0,\n      j,\n      next,\n      locale,\n      split;\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n        if (locale) {\n          return locale;\n        }\n        if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n        j--;\n      }\n      i++;\n    }\n    return globalLocale;\n  }\n  function isLocaleNameSane(name) {\n    // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n    // Ensure name is available and function returns boolean\n    return !!(name && name.match('^[^/\\\\\\\\]*$'));\n  }\n  function loadLocale(name) {\n    var oldLocale = null,\n      aliasedRequire;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (locales[name] === undefined && typeof module !== 'undefined' && module && module.exports && isLocaleNameSane(name)) {\n      try {\n        oldLocale = globalLocale._abbr;\n        aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {\n        // mark as not found to avoid repeating expensive file require call causing high CPU\n        // when trying to find en-US, en_US, en-us for every format call\n        locales[name] = null; // null means not found\n      }\n    }\n    return locales[name];\n  }\n\n  // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n  function getSetGlobalLocale(key, values) {\n    var data;\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n    return globalLocale._abbr;\n  }\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n        parentConfig = baseConfig;\n      config.abbr = name;\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      }\n\n      // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n        tmpLocale,\n        parentConfig = baseConfig;\n      if (locales[name] != null && locales[name].parentLocale != null) {\n        // Update existing child locale in-place to avoid memory-leaks\n        locales[name].set(mergeConfigs(locales[name]._config, config));\n      } else {\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n          parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        if (tmpLocale == null) {\n          // updateLocale is called for creating a new locale\n          // Set abbr so it will have a name (getters return\n          // undefined otherwise).\n          config.abbr = name;\n        }\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n      }\n\n      // backwards compat for now: also set the locale\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n          if (name === getSetGlobalLocale()) {\n            getSetGlobalLocale(name);\n          }\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n    return locales[name];\n  }\n\n  // returns locale data\n  function getLocale(key) {\n    var locale;\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n    if (!key) {\n      return globalLocale;\n    }\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n      if (locale) {\n        return locale;\n      }\n      key = [key];\n    }\n    return chooseLocale(key);\n  }\n  function listLocales() {\n    return keys(locales);\n  }\n  function checkOverflow(m) {\n    var overflow,\n      a = m._a;\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n      getParsingFlags(m).overflow = overflow;\n    }\n    return m;\n  }\n\n  // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n    basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n    tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n    isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/], ['YYYYMM', /\\d{6}/, false], ['YYYY', /\\d{4}/, false]],\n    // iso time formats and regexes\n    isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]],\n    aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n    obsOffsets = {\n      UT: 0,\n      GMT: 0,\n      EDT: -4 * 60,\n      EST: -5 * 60,\n      CDT: -5 * 60,\n      CST: -6 * 60,\n      MDT: -6 * 60,\n      MST: -7 * 60,\n      PDT: -7 * 60,\n      PST: -8 * 60\n    };\n\n  // date from iso format\n  function configFromISO(config) {\n    var i,\n      l,\n      string = config._i,\n      match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n      allowTime,\n      dateFormat,\n      timeFormat,\n      tzFormat,\n      isoDatesLen = isoDates.length,\n      isoTimesLen = isoTimes.length;\n    if (match) {\n      getParsingFlags(config).iso = true;\n      for (i = 0, l = isoDatesLen; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[3]) {\n        for (i = 0, l = isoTimesLen; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  }\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n    return result;\n  }\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n    return year;\n  }\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^()]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n        weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n    return true;\n  }\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10),\n        m = hm % 100,\n        h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  }\n\n  // date and time from ref 2822 format\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i)),\n      parsedArray;\n    if (match) {\n      parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  }\n\n  // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n    configFromISO(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n    if (config._strict) {\n      config._isValid = false;\n    } else {\n      // Final attempt, use Input Fallback\n      hooks.createFromInputFallback(config);\n    }\n  }\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  });\n\n  // Pick the first defined of two or three arguments.\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n    if (b != null) {\n      return b;\n    }\n    return c;\n  }\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  }\n\n  // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n  function configFromArray(config) {\n    var i,\n      date,\n      input = [],\n      currentDate,\n      expectedWeekday,\n      yearToUse;\n    if (config._d) {\n      return;\n    }\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4;\n\n      // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n      // Default to current week.\n      week = defaults(w.w, curWeek.week);\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  }\n\n  // constant that refers to the ISO standard\n  hooks.ISO_8601 = function () {};\n\n  // constant that refers to the RFC 2822 form\n  hooks.RFC_2822 = function () {};\n\n  // date from string and format string\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n      i,\n      parsedInput,\n      tokens,\n      token,\n      skipped,\n      stringLength = string.length,\n      totalParsedInputLength = 0,\n      era,\n      tokenLen;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    tokenLen = tokens.length;\n    for (i = 0; i < tokenLen; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      }\n      // don't parse if it's not a known token\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    // handle era\n    era = getParsingFlags(config).era;\n    if (era !== null) {\n      config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n    }\n    configFromArray(config);\n    checkOverflow(config);\n  }\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  }\n\n  // date from string and array of format strings\n  function configFromStringAndArray(config) {\n    var tempConfig,\n      bestMoment,\n      scoreToBeat,\n      i,\n      currentScore,\n      validFormatFound,\n      bestFormatIsValid = false,\n      configfLen = config._f.length;\n    if (configfLen === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n    for (i = 0; i < configfLen; i++) {\n      currentScore = 0;\n      validFormatFound = false;\n      tempConfig = copyConfig({}, config);\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n      if (isValid(tempConfig)) {\n        validFormatFound = true;\n      }\n\n      // if there is any input that was not parsed add a penalty for that format\n      currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n      //or tokens\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n      if (!bestFormatIsValid) {\n        if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n          if (validFormatFound) {\n            bestFormatIsValid = true;\n          }\n        }\n      } else {\n        if (currentScore < scoreToBeat) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n        }\n      }\n    }\n    extend(config, bestMoment || tempConfig);\n  }\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n    var i = normalizeObjectUnits(config._i),\n      dayOrDate = i.day === undefined ? i.date : i.day;\n    config._a = map([i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n    return res;\n  }\n  function prepareConfig(config) {\n    var input = config._i,\n      format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n    if (!isValid(config)) {\n      config._d = null;\n    }\n    return config;\n  }\n  function configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n    if (format === true || format === false) {\n      strict = format;\n      format = undefined;\n    }\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n      if (this.isValid() && other.isValid()) {\n        return other < this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    }),\n    prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n      if (this.isValid() && other.isValid()) {\n        return other > this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    });\n\n  // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n  function pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n    if (!moments.length) {\n      return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n    return res;\n  }\n\n  // TODO: Use [].sort instead?\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n  var now = function () {\n    return Date.now ? Date.now() : +new Date();\n  };\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n  function isDurationValid(m) {\n    var key,\n      unitHasDecimal = false,\n      i,\n      orderLen = ordering.length;\n    for (key in m) {\n      if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n    for (i = 0; i < orderLen; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n    return true;\n  }\n  function isValid$1() {\n    return this._isValid;\n  }\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n      years = normalizedInput.year || 0,\n      quarters = normalizedInput.quarter || 0,\n      months = normalizedInput.month || 0,\n      weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n      days = normalizedInput.day || 0,\n      hours = normalizedInput.hour || 0,\n      minutes = normalizedInput.minute || 0,\n      seconds = normalizedInput.second || 0,\n      milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds + seconds * 1e3 +\n    // 1000\n    minutes * 6e4 +\n    // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days + weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n    this._bubble();\n  }\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  }\n\n  // compare two arrays, return the number of differences\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n      lengthDiff = Math.abs(array1.length - array2.length),\n      diffs = 0,\n      i;\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n    return diffs + lengthDiff;\n  }\n\n  // FORMATTING\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset(),\n        sign = '+';\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n  offset('Z', ':');\n  offset('ZZ', '');\n\n  // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  });\n\n  // HELPERS\n\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher),\n      chunk,\n      parts,\n      minutes;\n    if (matches === null) {\n      return null;\n    }\n    chunk = matches[matches.length - 1] || [];\n    parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  }\n\n  // Return a moment from input, that is local/utc/zone equivalent to model.\n  function cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n      // Use low-level api, because this fn is low-level api.\n      res._d.setTime(res._d.valueOf() + diff);\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset());\n  }\n\n  // HOOKS\n\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n  hooks.updateOffset = function () {};\n\n  // MOMENTS\n\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n      localAdjust;\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n      this._offset = input;\n      this._isUTC = true;\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n    return this;\n  }\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n    return this;\n  }\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n    var c = {},\n      other;\n    copyConfig(c, this);\n    c = prepareConfig(c);\n    if (c._a) {\n      other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n    return this._isDSTShifted;\n  }\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  }\n\n  // ASP.NET json date format regex\n  var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n  function createDuration(input, key) {\n    var duration = input,\n      // matching against regexp is expensive, do it on demand\n      match = null,\n      sign,\n      ret,\n      diffRes;\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input) || !isNaN(+input)) {\n      duration = {};\n      if (key) {\n        duration[key] = +input;\n      } else {\n        duration.milliseconds = +input;\n      }\n    } else if (match = aspNetRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n      };\n    } else if (match = isoRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n    ret = new Duration(duration);\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n    if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n      ret._isValid = input._isValid;\n    }\n    return ret;\n  }\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n  function momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n    return res;\n  }\n\n  // TODO: remove 'name' arg after deprecation is removed\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp;\n      //invert the arguments, but complain about it\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n      days = absRound(duration._days),\n      months = absRound(duration._months);\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n    updateOffset = updateOffset == null ? true : updateOffset;\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n  var add = createAdder(1, 'add'),\n    subtract = createAdder(-1, 'subtract');\n  function isString(input) {\n    return typeof input === 'string' || input instanceof String;\n  }\n\n  // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n  function isMomentInput(input) {\n    return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;\n  }\n  function isMomentInputObject(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n      propertyTest = false,\n      properties = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms'],\n      i,\n      property,\n      propertyLen = properties.length;\n    for (i = 0; i < propertyLen; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n    return objectTest && propertyTest;\n  }\n  function isNumberOrStringArray(input) {\n    var arrayTest = isArray(input),\n      dataTypeTest = false;\n    if (arrayTest) {\n      dataTypeTest = input.filter(function (item) {\n        return !isNumber(item) && isString(input);\n      }).length === 0;\n    }\n    return arrayTest && dataTypeTest;\n  }\n  function isCalendarSpec(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n      propertyTest = false,\n      properties = ['sameDay', 'nextDay', 'lastDay', 'nextWeek', 'lastWeek', 'sameElse'],\n      i,\n      property;\n    for (i = 0; i < properties.length; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n    return objectTest && propertyTest;\n  }\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n  function calendar$1(time, formats) {\n    // Support for single parameter, formats only overload to the calendar function\n    if (arguments.length === 1) {\n      if (!arguments[0]) {\n        time = undefined;\n        formats = undefined;\n      } else if (isMomentInput(arguments[0])) {\n        time = arguments[0];\n        formats = undefined;\n      } else if (isCalendarSpec(arguments[0])) {\n        formats = arguments[0];\n        time = undefined;\n      }\n    }\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n      sod = cloneWithOffset(now, this).startOf('day'),\n      format = hooks.calendarFormat(this, sod) || 'sameElse',\n      output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n  function clone() {\n    return new Moment(this);\n  }\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n      localTo = isMoment(to) ? to : createLocal(to);\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n      inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n    if (!this.isValid()) {\n      return NaN;\n    }\n    that = cloneWithOffset(input, this);\n    if (!that.isValid()) {\n      return NaN;\n    }\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n      default:\n        output = this - that;\n    }\n    return asFloat ? output : absFloor(output);\n  }\n  function monthDiff(a, b) {\n    if (a.date() < b.date()) {\n      // end-of-month calculations work correct when the start month has more\n      // days than the end month.\n      return -monthDiff(b, a);\n    }\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n      // b is in (anchor - 1 month, anchor + 1 month)\n      anchor = a.clone().add(wholeMonthDiff, 'months'),\n      anchor2,\n      adjust;\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n    var utc = keepOffset !== true,\n      m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n\n  /**\r\n   * Return a human readable representation of a moment that can\r\n   * also be evaluated to get a new moment which is the same\r\n   *\r\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\r\n   */\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment',\n      zone = '',\n      prefix,\n      year,\n      datetime,\n      suffix;\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n    prefix = '[' + func + '(\"]';\n    year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  }\n\n  // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n  function locale(key) {\n    var newLocaleData;\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n      return this;\n    }\n  }\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n  function localeData() {\n    return this._locale;\n  }\n  var MS_PER_SECOND = 1000,\n    MS_PER_MINUTE = 60 * MS_PER_SECOND,\n    MS_PER_HOUR = 60 * MS_PER_MINUTE,\n    MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n  // actual modulo - handles negative numbers (for dates before 1970):\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n  function startOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }\n  function endOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n  function isValid$2() {\n    return isValid(this);\n  }\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  }\n  addFormatToken('N', 0, 0, 'eraAbbr');\n  addFormatToken('NN', 0, 0, 'eraAbbr');\n  addFormatToken('NNN', 0, 0, 'eraAbbr');\n  addFormatToken('NNNN', 0, 0, 'eraName');\n  addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n  addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n  addFormatToken('y', ['yy', 2], 0, 'eraYear');\n  addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n  addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n  addRegexToken('N', matchEraAbbr);\n  addRegexToken('NN', matchEraAbbr);\n  addRegexToken('NNN', matchEraAbbr);\n  addRegexToken('NNNN', matchEraName);\n  addRegexToken('NNNNN', matchEraNarrow);\n  addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, array, config, token) {\n    var era = config._locale.erasParse(input, token, config._strict);\n    if (era) {\n      getParsingFlags(config).era = era;\n    } else {\n      getParsingFlags(config).invalidEra = input;\n    }\n  });\n  addRegexToken('y', matchUnsigned);\n  addRegexToken('yy', matchUnsigned);\n  addRegexToken('yyy', matchUnsigned);\n  addRegexToken('yyyy', matchUnsigned);\n  addRegexToken('yo', matchEraYearOrdinal);\n  addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n  addParseToken(['yo'], function (input, array, config, token) {\n    var match;\n    if (config._locale._eraYearOrdinalRegex) {\n      match = input.match(config._locale._eraYearOrdinalRegex);\n    }\n    if (config._locale.eraYearOrdinalParse) {\n      array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n    } else {\n      array[YEAR] = parseInt(input, 10);\n    }\n  });\n  function localeEras(m, format) {\n    var i,\n      l,\n      date,\n      eras = this._eras || getLocale('en')._eras;\n    for (i = 0, l = eras.length; i < l; ++i) {\n      switch (typeof eras[i].since) {\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].since).startOf('day');\n          eras[i].since = date.valueOf();\n          break;\n      }\n      switch (typeof eras[i].until) {\n        case 'undefined':\n          eras[i].until = +Infinity;\n          break;\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].until).startOf('day').valueOf();\n          eras[i].until = date.valueOf();\n          break;\n      }\n    }\n    return eras;\n  }\n  function localeErasParse(eraName, format, strict) {\n    var i,\n      l,\n      eras = this.eras(),\n      name,\n      abbr,\n      narrow;\n    eraName = eraName.toUpperCase();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      name = eras[i].name.toUpperCase();\n      abbr = eras[i].abbr.toUpperCase();\n      narrow = eras[i].narrow.toUpperCase();\n      if (strict) {\n        switch (format) {\n          case 'N':\n          case 'NN':\n          case 'NNN':\n            if (abbr === eraName) {\n              return eras[i];\n            }\n            break;\n          case 'NNNN':\n            if (name === eraName) {\n              return eras[i];\n            }\n            break;\n          case 'NNNNN':\n            if (narrow === eraName) {\n              return eras[i];\n            }\n            break;\n        }\n      } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n        return eras[i];\n      }\n    }\n  }\n  function localeErasConvertYear(era, year) {\n    var dir = era.since <= era.until ? +1 : -1;\n    if (year === undefined) {\n      return hooks(era.since).year();\n    } else {\n      return hooks(era.since).year() + (year - era.offset) * dir;\n    }\n  }\n  function getEraName() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].name;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].name;\n      }\n    }\n    return '';\n  }\n  function getEraNarrow() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].narrow;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].narrow;\n      }\n    }\n    return '';\n  }\n  function getEraAbbr() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].abbr;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].abbr;\n      }\n    }\n    return '';\n  }\n  function getEraYear() {\n    var i,\n      l,\n      dir,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {\n        return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;\n      }\n    }\n    return this.year();\n  }\n  function erasNameRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNameRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasNameRegex : this._erasRegex;\n  }\n  function erasAbbrRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasAbbrRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasAbbrRegex : this._erasRegex;\n  }\n  function erasNarrowRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNarrowRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasNarrowRegex : this._erasRegex;\n  }\n  function matchEraAbbr(isStrict, locale) {\n    return locale.erasAbbrRegex(isStrict);\n  }\n  function matchEraName(isStrict, locale) {\n    return locale.erasNameRegex(isStrict);\n  }\n  function matchEraNarrow(isStrict, locale) {\n    return locale.erasNarrowRegex(isStrict);\n  }\n  function matchEraYearOrdinal(isStrict, locale) {\n    return locale._eraYearOrdinalRegex || matchUnsigned;\n  }\n  function computeErasParse() {\n    var abbrPieces = [],\n      namePieces = [],\n      narrowPieces = [],\n      mixedPieces = [],\n      i,\n      l,\n      erasName,\n      erasAbbr,\n      erasNarrow,\n      eras = this.eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      erasName = regexEscape(eras[i].name);\n      erasAbbr = regexEscape(eras[i].abbr);\n      erasNarrow = regexEscape(eras[i].narrow);\n      namePieces.push(erasName);\n      abbrPieces.push(erasAbbr);\n      narrowPieces.push(erasNarrow);\n      mixedPieces.push(erasName);\n      mixedPieces.push(erasAbbr);\n      mixedPieces.push(erasNarrow);\n    }\n    this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n    this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n    this._erasNarrowRegex = new RegExp('^(' + narrowPieces.join('|') + ')', 'i');\n  }\n\n  // FORMATTING\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n  // ALIASES\n\n  // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  });\n\n  // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday() + this.localeData()._week.dow, this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n  function getISOWeeksInISOWeekYear() {\n    return weeksInYear(this.isoWeekYear(), 1, 4);\n  }\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n  function getWeeksInWeekYear() {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n  }\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n      date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  }\n\n  // FORMATTING\n\n  addFormatToken('Q', 0, 'Qo', 'quarter');\n\n  // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  });\n\n  // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  }\n\n  // FORMATTING\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n  // PARSING\n\n  addRegexToken('D', match1to2, match1to2NoLeadingZero);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  });\n\n  // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true);\n\n  // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n  // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  });\n\n  // HELPERS\n\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  }\n\n  // FORMATTING\n\n  addFormatToken('m', ['mm', 2], 0, 'minute');\n\n  // PARSING\n\n  addRegexToken('m', match1to2, match1to2HasZero);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n\n  // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false);\n\n  // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second');\n\n  // PARSING\n\n  addRegexToken('s', match1to2, match1to2HasZero);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n\n  // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false);\n\n  // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  });\n\n  // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token, getSetMillisecond;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n  getSetMillisecond = makeGetSet('Milliseconds', false);\n\n  // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName');\n\n  // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n      return 'Moment<' + this.format() + '>';\n    };\n  }\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.eraName = getEraName;\n  proto.eraNarrow = getEraNarrow;\n  proto.eraAbbr = getEraAbbr;\n  proto.eraYear = getEraYear;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.weeksInWeekYear = getWeeksInWeekYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n  function preParsePostFormat(string) {\n    return string;\n  }\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.eras = localeEras;\n  proto$1.erasParse = localeErasParse;\n  proto$1.erasConvertYear = localeErasConvertYear;\n  proto$1.erasAbbrRegex = erasAbbrRegex;\n  proto$1.erasNameRegex = erasNameRegex;\n  proto$1.erasNarrowRegex = erasNarrowRegex;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n  function get$1(format, index, field, setter) {\n    var locale = getLocale(),\n      utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n    format = format || '';\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n    var i,\n      out = [];\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n  }\n\n  // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n      format = format || '';\n    }\n    var locale = getLocale(),\n      shift = localeSorted ? locale._week.dow : 0,\n      i,\n      out = [];\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n  }\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n  getSetGlobalLocale('en', {\n    eras: [{\n      since: '0001-01-01',\n      until: +Infinity,\n      offset: 1,\n      name: 'Anno Domini',\n      narrow: 'AD',\n      abbr: 'AD'\n    }, {\n      since: '0000-12-31',\n      until: -Infinity,\n      offset: 1,\n      name: 'Before Christ',\n      narrow: 'BC',\n      abbr: 'BC'\n    }],\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function (number) {\n      var b = number % 10,\n        output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  });\n\n  // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  }\n\n  // supports only 2.0-style add(1, 's') or add(duration)\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  }\n\n  // supports only 2.0-style subtract(1, 's') or subtract(duration)\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n  function bubble() {\n    var milliseconds = this._milliseconds,\n      days = this._days,\n      months = this._months,\n      data = this._data,\n      seconds,\n      minutes,\n      hours,\n      years,\n      monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    var days,\n      months,\n      milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      switch (units) {\n        case 'month':\n          return months;\n        case 'quarter':\n          return months / 3;\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n        case 'day':\n          return days + milliseconds / 864e5;\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  }\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n  var asMilliseconds = makeAs('ms'),\n    asSeconds = makeAs('s'),\n    asMinutes = makeAs('m'),\n    asHours = makeAs('h'),\n    asDays = makeAs('d'),\n    asWeeks = makeAs('w'),\n    asMonths = makeAs('M'),\n    asQuarters = makeAs('Q'),\n    asYears = makeAs('y'),\n    valueOf$1 = asMilliseconds;\n  function clone$1() {\n    return createDuration(this);\n  }\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n  var milliseconds = makeGetter('milliseconds'),\n    seconds = makeGetter('seconds'),\n    minutes = makeGetter('minutes'),\n    hours = makeGetter('hours'),\n    days = makeGetter('days'),\n    months = makeGetter('months'),\n    years = makeGetter('years');\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n  var round = Math.round,\n    thresholds = {\n      ss: 44,\n      // a few seconds to seconds\n      s: 45,\n      // seconds to minute\n      m: 45,\n      // minutes to hour\n      h: 22,\n      // hours to day\n      d: 26,\n      // days to month/week\n      w: null,\n      // weeks to month\n      M: 11 // months to year\n    };\n\n  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n  function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n    var duration = createDuration(posNegDuration).abs(),\n      seconds = round(duration.as('s')),\n      minutes = round(duration.as('m')),\n      hours = round(duration.as('h')),\n      days = round(duration.as('d')),\n      months = round(duration.as('M')),\n      weeks = round(duration.as('w')),\n      years = round(duration.as('y')),\n      a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days];\n    if (thresholds.w != null) {\n      a = a || weeks <= 1 && ['w'] || weeks < thresholds.w && ['ww', weeks];\n    }\n    a = a || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  }\n\n  // This function allows you to set the rounding function for relative time strings\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n    return false;\n  }\n\n  // This function allows you to set a threshold for relative time strings\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n    return true;\n  }\n  function humanize(argWithSuffix, argThresholds) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n    var withSuffix = false,\n      th = thresholds,\n      locale,\n      output;\n    if (typeof argWithSuffix === 'object') {\n      argThresholds = argWithSuffix;\n      argWithSuffix = false;\n    }\n    if (typeof argWithSuffix === 'boolean') {\n      withSuffix = argWithSuffix;\n    }\n    if (typeof argThresholds === 'object') {\n      th = Object.assign({}, thresholds, argThresholds);\n      if (argThresholds.s != null && argThresholds.ss == null) {\n        th.ss = argThresholds.s - 1;\n      }\n    }\n    locale = this.localeData();\n    output = relativeTime$1(this, !withSuffix, th, locale);\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n    return locale.postformat(output);\n  }\n  var abs$1 = Math.abs;\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n    var seconds = abs$1(this._milliseconds) / 1000,\n      days = abs$1(this._days),\n      months = abs$1(this._months),\n      minutes,\n      hours,\n      years,\n      s,\n      total = this.asSeconds(),\n      totalSign,\n      ymSign,\n      daysSign,\n      hmsSign;\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    totalSign = total < 0 ? '-' : '';\n    ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (years ? ymSign + years + 'Y' : '') + (months ? ymSign + months + 'M' : '') + (days ? daysSign + days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hmsSign + hours + 'H' : '') + (minutes ? hmsSign + minutes + 'M' : '') + (seconds ? hmsSign + s + 'S' : '');\n  }\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang;\n\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf');\n\n  // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  });\n\n  //! moment.js\n\n  hooks.version = '2.30.1';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto;\n\n  // currently HTML5 input type only supports 24-hour formats\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n  };\n  return hooks;\n});", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar toString = require('../internals/to-string');\nvar push = uncurryThis([].push);\nmodule.exports = function (replacer) {\n  if (isCallable(replacer)) return replacer;\n  if (!isArray(replacer)) return;\n  var rawLength = replacer.length;\n  var keys = [];\n  for (var i = 0; i < rawLength; i++) {\n    var element = replacer[i];\n    if (typeof element == 'string') push(keys, element);else if (typeof element == 'number' || classof(element) === 'Number' || classof(element) === 'String') push(keys, toString(element));\n  }\n  var keysLength = keys.length;\n  var root = true;\n  return function (key, value) {\n    if (root) {\n      root = false;\n      return value;\n    }\n    if (isArray(this)) return value;\n    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;\n  };\n};", "'use strict';\n\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};", "'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};", "'use strict';\n\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar EmptyConstructor = function () {/* empty */};\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  // eslint-disable-next-line no-useless-assignment -- avoid memory leak\n  activeXDocument = null;\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) {/* ignore */}\n  NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n  : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};", "'use strict';\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar defineProperty = require('../internals/object-define-property').f;\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] === undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};", "'use strict';\n\nvar isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) === 'RegExp');\n};", "'use strict';\n\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};", "'use strict';\n\nvar call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\nvar RegExpPrototype = RegExp.prototype;\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R) ? call(regExpFlags, R) : flags;\n};", "'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$':\n        return '$';\n      case '&':\n        return matched;\n      case '`':\n        return stringSlice(str, 0, position);\n      case \"'\":\n        return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default:\n        // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};", "'use strict';\n\n/* eslint-disable no-unused-vars -- required for functions `.length` */\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar apply = require('../internals/function-apply');\nvar wrapErrorConstructorWithCause = require('../internals/wrap-error-constructor-with-cause');\nvar WEB_ASSEMBLY = 'WebAssembly';\nvar WebAssembly = globalThis[WEB_ASSEMBLY];\n\n// eslint-disable-next-line es/no-error-cause -- feature detection\nvar FORCED = new Error('e', {\n  cause: 7\n}).cause !== 7;\nvar exportGlobalErrorCauseWrapper = function (ERROR_NAME, wrapper) {\n  var O = {};\n  O[ERROR_NAME] = wrapErrorConstructorWithCause(ERROR_NAME, wrapper, FORCED);\n  $({\n    global: true,\n    constructor: true,\n    arity: 1,\n    forced: FORCED\n  }, O);\n};\nvar exportWebAssemblyErrorCauseWrapper = function (ERROR_NAME, wrapper) {\n  if (WebAssembly && WebAssembly[ERROR_NAME]) {\n    var O = {};\n    O[ERROR_NAME] = wrapErrorConstructorWithCause(WEB_ASSEMBLY + '.' + ERROR_NAME, wrapper, FORCED);\n    $({\n      target: WEB_ASSEMBLY,\n      stat: true,\n      constructor: true,\n      arity: 1,\n      forced: FORCED\n    }, O);\n  }\n};\n\n// https://tc39.es/ecma262/#sec-nativeerror\nexportGlobalErrorCauseWrapper('Error', function (init) {\n  return function Error(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('EvalError', function (init) {\n  return function EvalError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('RangeError', function (init) {\n  return function RangeError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('ReferenceError', function (init) {\n  return function ReferenceError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('SyntaxError', function (init) {\n  return function SyntaxError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('TypeError', function (init) {\n  return function TypeError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('URIError', function (init) {\n  return function URIError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportWebAssemblyErrorCauseWrapper('CompileError', function (init) {\n  return function CompileError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportWebAssemblyErrorCauseWrapper('LinkError', function (init) {\n  return function LinkError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportWebAssemblyErrorCauseWrapper('RuntimeError', function (init) {\n  return function RuntimeError(message) {\n    return apply(init, this, arguments);\n  };\n});", "'use strict';\n\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({\n    length: 0x100000000\n  }, 1) !== 4294967297;\n});\n\n// V8 <= 121 and Safari <= 15.4; FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', {\n      writable: false\n    }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({\n  target: 'Array',\n  proto: true,\n  arity: 1,\n  forced: FORCED\n}, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});", "'use strict';\n\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.difference.v2');", "'use strict';\n\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.intersection.v2');", "'use strict';\n\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.is-disjoint-from.v2');", "'use strict';\n\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.is-subset-of.v2');", "'use strict';\n\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.is-superset-of.v2');", "'use strict';\n\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.symmetric-difference.v2');", "'use strict';\n\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.union.v2');", "'use strict';\n\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/web.clear-immediate');\nrequire('../modules/web.set-immediate');", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { sanitize } from \"../string.mjs\";\nimport { A11Y_HIDDEN } from \"../a11y.mjs\";\n/**\r\n * Get the parent of the specified node in the DOM tree.\r\n *\r\n * @param {HTMLElement} element Element from which traversing is started.\r\n * @param {number} [level=0] Traversing deep level.\r\n * @returns {HTMLElement|null}\r\n */\nexport function getParent(element) {\n  let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let iteration = -1;\n  let parent = null;\n  let elementToCheck = element;\n  while (elementToCheck !== null) {\n    if (iteration === level) {\n      parent = elementToCheck;\n      break;\n    }\n    if (elementToCheck.host && elementToCheck.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      elementToCheck = elementToCheck.host;\n    } else {\n      iteration += 1;\n      elementToCheck = elementToCheck.parentNode;\n    }\n  }\n  return parent;\n}\n\n/**\r\n * Check if the provided element is a child of the provided Handsontable container.\r\n *\r\n * @param {HTMLElement} element Element to be analyzed.\r\n * @param {HTMLElement} thisHotContainer The Handsontable container.\r\n * @returns {boolean}\r\n */\nexport function isThisHotChild(element, thisHotContainer) {\n  const closestHandsontableContainer = element.closest('.handsontable');\n  return !!closestHandsontableContainer && (closestHandsontableContainer.parentNode === thisHotContainer || closestHandsontableContainer === thisHotContainer);\n}\n\n/**\r\n * Gets `frameElement` of the specified frame. Returns null if it is a top frame or if script has no access to read property.\r\n *\r\n * @param {Window} frame Frame from which should be get frameElement in safe way.\r\n * @returns {HTMLIFrameElement|null}\r\n */\nexport function getFrameElement(frame) {\n  return Object.getPrototypeOf(frame.parent) && frame.frameElement;\n}\n\n/**\r\n * Gets parent frame of the specified frame. Returns null if it is a top frame or if script has no access to read property.\r\n *\r\n * @param {Window} frame Frame from which should get frameElement in a safe way.\r\n * @returns {Window|null}\r\n */\nexport function getParentWindow(frame) {\n  return getFrameElement(frame) && frame.parent;\n}\n\n/**\r\n * Checks if script has access to read from parent frame of specified frame.\r\n *\r\n * @param {Window} frame Frame from which should get frameElement in a safe way.\r\n * @returns {boolean}\r\n */\nexport function hasAccessToParentWindow(frame) {\n  return !!Object.getPrototypeOf(frame.parent);\n}\n\n/**\r\n * Goes up the DOM tree (including given element) until it finds an parent element that matches the nodes or nodes name.\r\n * This method goes up through web components.\r\n *\r\n * @param {Node} element Element from which traversing is started.\r\n * @param {Array<string|Node>} [nodes] Array of elements or Array of elements name (in uppercase form).\r\n * @param {Node} [until] The element until the traversing ends.\r\n * @returns {Node|null}\r\n */\nexport function closest(element) {\n  let nodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let until = arguments.length > 2 ? arguments[2] : undefined;\n  const {\n    ELEMENT_NODE,\n    DOCUMENT_FRAGMENT_NODE\n  } = Node;\n  let elementToCheck = element;\n  while (elementToCheck !== null && elementToCheck !== undefined && elementToCheck !== until) {\n    const {\n      nodeType,\n      nodeName\n    } = elementToCheck;\n    if (nodeType === ELEMENT_NODE && (nodes.includes(nodeName) || nodes.includes(elementToCheck))) {\n      return elementToCheck;\n    }\n    const {\n      host\n    } = elementToCheck;\n    if (host && nodeType === DOCUMENT_FRAGMENT_NODE) {\n      elementToCheck = host;\n    } else {\n      elementToCheck = elementToCheck.parentNode;\n    }\n  }\n  return null;\n}\n\n/**\r\n * Goes \"down\" the DOM tree (including given element) until it finds an element that matches the nodes or nodes name.\r\n *\r\n * @param {HTMLElement} element Element from which traversing is started.\r\n * @param {Array} nodes Array of elements or Array of elements name.\r\n * @param {HTMLElement} [until] The list of elements until the traversing ends.\r\n * @returns {HTMLElement|null}\r\n */\nexport function closestDown(element, nodes, until) {\n  const matched = [];\n  let elementToCheck = element;\n  while (elementToCheck) {\n    elementToCheck = closest(elementToCheck, nodes, until);\n    if (!elementToCheck || until && !until.contains(elementToCheck)) {\n      break;\n    }\n    matched.push(elementToCheck);\n    if (elementToCheck.host && elementToCheck.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      elementToCheck = elementToCheck.host;\n    } else {\n      elementToCheck = elementToCheck.parentNode;\n    }\n  }\n  const length = matched.length;\n  return length ? matched[length - 1] : null;\n}\n\n/**\r\n * Goes up the DOM tree and checks if element is child of another element.\r\n *\r\n * @param {HTMLElement} child Child element An element to check.\r\n * @param {object|string} parent Parent element OR selector of the parent element.\r\n *                               If string provided, function returns `true` for the first occurrence of element with that class.\r\n * @returns {boolean}\r\n */\nexport function isChildOf(child, parent) {\n  let node = child.parentNode;\n  let queriedParents = [];\n  if (typeof parent === 'string') {\n    if (child.defaultView) {\n      queriedParents = Array.prototype.slice.call(child.querySelectorAll(parent), 0);\n    } else {\n      queriedParents = Array.prototype.slice.call(child.ownerDocument.querySelectorAll(parent), 0);\n    }\n  } else {\n    queriedParents.push(parent);\n  }\n  while (node !== null) {\n    if (queriedParents.indexOf(node) > -1) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n}\n\n/**\r\n * Counts index of element within its parent.\r\n * WARNING: for performance reasons, assumes there are only element nodes (no text nodes). This is true\r\n * for Walkotnable, otherwise would need to check for nodeType or use previousElementSibling.\r\n *\r\n * @see http://jsperf.com/sibling-index/10\r\n * @param {Element} element The element to check.\r\n * @returns {number}\r\n */\nexport function index(element) {\n  let i = 0;\n  let elementToCheck = element;\n  if (elementToCheck.previousSibling) {\n    /* eslint-disable no-cond-assign */\n    while (elementToCheck = elementToCheck.previousSibling) {\n      i += 1;\n    }\n  }\n  return i;\n}\n\n/**\r\n * Check if the provided overlay contains the provided element.\r\n *\r\n * @param {string} overlayType The type of the overlay.\r\n * @param {HTMLElement} element An element to check.\r\n * @param {HTMLElement} root The root element.\r\n * @returns {boolean}\r\n */\nexport function overlayContainsElement(overlayType, element, root) {\n  const overlayElement = root.parentElement.querySelector(`.ht_clone_${overlayType}`);\n  return overlayElement ? overlayElement.contains(element) : null;\n}\n\n/**\r\n * @param {string[]} classNames The element \"class\" attribute string.\r\n * @returns {string[]}\r\n */\nfunction filterEmptyClassNames(classNames) {\n  if (!classNames || !classNames.length) {\n    return [];\n  }\n  return classNames.filter(x => !!x);\n}\n\n/**\r\n * Filter out the RegExp entries from an array.\r\n *\r\n * @param {(string|RegExp)[]} list Array of either strings, Regexes or a mix of both.\r\n * @param {boolean} [returnBoth] If `true`, both the array without regexes and an array of regexes will be returned.\r\n * @returns {string[]|{regexFree: string[], regexes: RegExp[]}}\r\n */\nfunction filterRegexes(list, returnBoth) {\n  if (!list || !list.length) {\n    return returnBoth ? {\n      regexFree: [],\n      regexes: []\n    } : [];\n  }\n  const regexes = [];\n  const regexFree = [];\n  regexFree.push(...list.filter(entry => {\n    const isRegex = entry instanceof RegExp;\n    if (isRegex && returnBoth) {\n      regexes.push(entry);\n    }\n    return !isRegex;\n  }));\n  return returnBoth ? {\n    regexFree,\n    regexes\n  } : regexFree;\n}\n\n/**\r\n * Checks if element has class name.\r\n *\r\n * @param {HTMLElement} element An element to check.\r\n * @param {string} className Class name to check.\r\n * @returns {boolean}\r\n */\nexport function hasClass(element, className) {\n  if (element.classList === undefined || typeof className !== 'string' || className === '') {\n    return false;\n  }\n  return element.classList.contains(className);\n}\n\n/**\r\n * Add class name to an element.\r\n *\r\n * @param {HTMLElement} element An element to process.\r\n * @param {string|Array} className Class name as string or array of strings.\r\n */\nexport function addClass(element, className) {\n  if (typeof className === 'string') {\n    className = className.split(' ');\n  }\n  className = filterEmptyClassNames(className);\n  if (className.length > 0) {\n    element.classList.add(...className);\n  }\n}\n\n/**\r\n * Remove class name from an element.\r\n *\r\n * @param {HTMLElement} element An element to process.\r\n * @param {string|Array<string|RegExp>} className Class name as string or array of strings.\r\n */\nexport function removeClass(element, className) {\n  if (typeof className === 'string') {\n    className = className.split(' ');\n  } else if (className instanceof RegExp) {\n    className = [className];\n  }\n  let {\n    regexFree: stringClasses,\n    // eslint-disable-next-line prefer-const\n    regexes: regexClasses\n  } = filterRegexes(className, true);\n  stringClasses = filterEmptyClassNames(stringClasses);\n  if (stringClasses.length > 0) {\n    element.classList.remove(...stringClasses);\n  }\n  regexClasses.forEach(regexClassName => {\n    element.classList.forEach(currentClassName => {\n      if (regexClassName.test(currentClassName)) {\n        element.classList.remove(currentClassName);\n      }\n    });\n  });\n}\n\n/**\r\n * Set a single attribute or multiple attributes at once.\r\n *\r\n * @param {HTMLElement} domElement The HTML element to be modified.\r\n * @param {Array[]|string} attributes If setting multiple attributes at once, `attributes` holds an array containing the\r\n * attributes to be added. Each element of the array should be an array in a form of `[attributeName,\r\n * attributeValue]`. If setting a single attribute, `attributes` holds the name of the attribute.\r\n * @param {string|number|undefined} [attributeValue] If setting a single attribute, `attributeValue` holds the attribute\r\n * value.\r\n */\nexport function setAttribute(domElement) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let attributeValue = arguments.length > 2 ? arguments[2] : undefined;\n  if (!Array.isArray(attributes)) {\n    attributes = [[attributes, attributeValue]];\n  }\n  attributes.forEach(attributeInfo => {\n    if (Array.isArray(attributeInfo) && attributeInfo[0] !== '') {\n      domElement.setAttribute(...attributeInfo);\n    }\n  });\n}\n\n/**\r\n * Remove a single attribute or multiple attributes from the provided element at once.\r\n *\r\n * @param {HTMLElement} domElement The HTML element to be processed.\r\n * @param {Array<string|RegExp>|string} attributesToRemove If removing multiple attributes, `attributesToRemove`\r\n * holds an array of attribute names to be removed from the provided element. If removing a single attribute, it\r\n * holds the attribute name.\r\n */\nexport function removeAttribute(domElement) {\n  let attributesToRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (typeof attributesToRemove === 'string') {\n    attributesToRemove = attributesToRemove.split(' ');\n  } else if (attributesToRemove instanceof RegExp) {\n    attributesToRemove = [attributesToRemove];\n  }\n  const {\n    regexFree: stringAttributes,\n    regexes: regexAttributes\n  } = filterRegexes(attributesToRemove, true);\n  stringAttributes.forEach(attributeNameToRemove => {\n    if (attributeNameToRemove !== '') {\n      domElement.removeAttribute(attributeNameToRemove);\n    }\n  });\n  regexAttributes.forEach(attributeRegex => {\n    domElement.getAttributeNames().forEach(attributeName => {\n      if (attributeRegex.test(attributeName)) {\n        domElement.removeAttribute(attributeName);\n      }\n    });\n  });\n}\n\n/**\r\n * @param {HTMLElement} element An element from the text is removed.\r\n */\nexport function removeTextNodes(element) {\n  if (element.nodeType === 3) {\n    element.parentNode.removeChild(element); // bye text nodes!\n  } else if (['TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TR'].indexOf(element.nodeName) > -1) {\n    const childs = element.childNodes;\n    for (let i = childs.length - 1; i >= 0; i--) {\n      removeTextNodes(childs[i]);\n    }\n  }\n}\n\n/**\r\n * Remove children function\r\n * WARNING - this doesn't unload events and data attached by jQuery\r\n * http://jsperf.com/jquery-html-vs-empty-vs-innerhtml/9\r\n * http://jsperf.com/jquery-html-vs-empty-vs-innerhtml/11 - no siginificant improvement with Chrome remove() method.\r\n *\r\n * @param {HTMLElement} element An element to clear.\r\n */\nexport function empty(element) {\n  let child;\n\n  /* eslint-disable no-cond-assign */\n  while (child = element.lastChild) {\n    element.removeChild(child);\n  }\n}\nexport const HTML_CHARACTERS = /(<(.*)>|&(.*);)/;\n\n/**\r\n * Insert content into element trying to avoid innerHTML method.\r\n *\r\n * @param {HTMLElement} element An element to write into.\r\n * @param {string} content The text to write.\r\n * @param {boolean} [sanitizeContent=true] If `true`, the content will be sanitized before writing to the element.\r\n */\nexport function fastInnerHTML(element, content) {\n  let sanitizeContent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (HTML_CHARACTERS.test(content)) {\n    element.innerHTML = sanitizeContent ? sanitize(content) : content;\n  } else {\n    fastInnerText(element, content);\n  }\n}\n\n/**\r\n * Insert text content into element.\r\n *\r\n * @param {HTMLElement} element An element to write into.\r\n * @param {string} content The text to write.\r\n */\nexport function fastInnerText(element, content) {\n  const child = element.firstChild;\n  if (child && child.nodeType === 3 && child.nextSibling === null) {\n    // fast lane - replace existing text node\n    child.textContent = content;\n  } else {\n    // slow lane - empty element and insert a text node\n    empty(element);\n    element.appendChild(element.ownerDocument.createTextNode(content));\n  }\n}\n\n/**\r\n * Returns true if element is attached to the DOM and visible, false otherwise.\r\n *\r\n * @param {HTMLElement} element An element to check.\r\n * @returns {boolean}\r\n */\nexport function isVisible(element) {\n  const documentElement = element.ownerDocument.documentElement;\n  let next = element;\n  while (next !== documentElement) {\n    // until <html> reached\n    if (next === null) {\n      // parent detached from DOM\n      return false;\n    } else if (next.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      if (next.host) {\n        // this is Web Components Shadow DOM\n        // see: http://w3c.github.io/webcomponents/spec/shadow/#encapsulation\n        // according to spec, should be if (next.ownerDocument !== window.document), but that doesn't work yet\n        if (next.host.impl) {\n          // Chrome 33.0.1723.0 canary (2013-11-29) Web Platform features disabled\n          return isVisible(next.host.impl);\n        } else if (next.host) {\n          // Chrome 33.0.1723.0 canary (2013-11-29) Web Platform features enabled\n          return isVisible(next.host);\n        }\n        throw new Error('Lost in Web Components world');\n      } else {\n        return false; // this is a node detached from document in IE8\n      }\n    } else if (getComputedStyle(next).display === 'none') {\n      return false;\n    }\n    next = next.parentNode;\n  }\n  return true;\n}\n\n/**\r\n * Returns elements top and left offset relative to the document. Function is not compatible with jQuery offset.\r\n *\r\n * @param {HTMLElement} element An element to get the offset position from.\r\n * @returns {object} Returns object with `top` and `left` props.\r\n */\nexport function offset(element) {\n  const rootDocument = element.ownerDocument;\n  const rootWindow = rootDocument.defaultView;\n  const documentElement = rootDocument.documentElement;\n  let elementToCheck = element;\n  let offsetLeft;\n  let offsetTop;\n  let lastElem;\n  offsetLeft = elementToCheck.offsetLeft;\n  offsetTop = elementToCheck.offsetTop;\n  lastElem = elementToCheck;\n\n  /* eslint-disable no-cond-assign */\n  while (elementToCheck = elementToCheck.offsetParent) {\n    // from my observation, document.body always has scrollLeft/scrollTop == 0\n    if (elementToCheck === rootDocument.body) {\n      break;\n    }\n    // If the element is inside an SVG context, the `offsetParent` can be\n    // a <foreignObject> that does not have properties `offsetLeft` and `offsetTop` defined.\n    if (!('offsetLeft' in elementToCheck)) {\n      break;\n    }\n    offsetLeft += elementToCheck.offsetLeft;\n    offsetTop += elementToCheck.offsetTop;\n    lastElem = elementToCheck;\n  }\n\n  // slow - http://jsperf.com/offset-vs-getboundingclientrect/6\n  if (lastElem && lastElem.style.position === 'fixed') {\n    // if(lastElem !== document.body) { //faster but does gives false positive in Firefox\n    offsetLeft += rootWindow.pageXOffset || documentElement.scrollLeft;\n    offsetTop += rootWindow.pageYOffset || documentElement.scrollTop;\n  }\n  return {\n    left: offsetLeft,\n    top: offsetTop\n  };\n}\n\n/**\r\n * Returns the document's scrollTop property.\r\n *\r\n * @param {Window} [rootWindow] The document window owner.\r\n * @returns {number}\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getWindowScrollTop() {\n  let rootWindow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n  return rootWindow.scrollY;\n}\n\n/**\r\n * Returns the document's scrollLeft property.\r\n *\r\n * @param {Window} [rootWindow] The document window owner.\r\n * @returns {number}\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getWindowScrollLeft() {\n  let rootWindow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n  return rootWindow.scrollX;\n}\n\n/**\r\n * Returns the provided element's scrollTop property.\r\n *\r\n * @param {HTMLElement} element An element to get the scroll top position from.\r\n * @param {Window} [rootWindow] The document window owner.\r\n * @returns {number}\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getScrollTop(element) {\n  let rootWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n  if (element === rootWindow) {\n    return getWindowScrollTop(rootWindow);\n  }\n  return element.scrollTop;\n}\n\n/**\r\n * Returns the provided element's scrollLeft property.\r\n *\r\n * @param {HTMLElement} element An element to get the scroll left position from.\r\n * @param {Window} [rootWindow] The document window owner.\r\n * @returns {number}\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getScrollLeft(element) {\n  let rootWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n  if (element === rootWindow) {\n    return getWindowScrollLeft(rootWindow);\n  }\n  return element.scrollLeft;\n}\n\n/**\r\n * Returns a DOM element responsible for scrolling of the provided element.\r\n *\r\n * @param {HTMLElement} element An element to get the scrollable element from.\r\n * @returns {HTMLElement} Element's scrollable parent.\r\n */\nexport function getScrollableElement(element) {\n  let rootDocument = element.ownerDocument;\n  let rootWindow = rootDocument ? rootDocument.defaultView : undefined;\n  if (!rootDocument) {\n    rootDocument = element.document ? element.document : element;\n    rootWindow = rootDocument.defaultView;\n  }\n  const props = ['auto', 'scroll'];\n  let el = element.parentNode;\n  while (el && el.style && rootDocument.body !== el) {\n    let {\n      overflow,\n      overflowX,\n      overflowY\n    } = el.style;\n    if ([overflow, overflowX, overflowY].includes('scroll')) {\n      return el;\n    } else {\n      ({\n        overflow,\n        overflowX,\n        overflowY\n      } = rootWindow.getComputedStyle(el));\n      if (props.includes(overflow) || props.includes(overflowX) || props.includes(overflowY)) {\n        return el;\n      }\n    }\n\n    // The '+ 1' after the scrollHeight/scrollWidth is to prevent problems with zoomed out Chrome.\n    if (el.clientHeight <= el.scrollHeight + 1 && (props.includes(overflowY) || props.includes(overflow))) {\n      return el;\n    }\n    if (el.clientWidth <= el.scrollWidth + 1 && (props.includes(overflowX) || props.includes(overflow))) {\n      return el;\n    }\n    el = el.parentNode;\n  }\n  return rootWindow;\n}\n\n/**\r\n * Get the maximum available `scrollTop` value for the provided element.\r\n *\r\n * @param {HTMLElement} element The element to get the maximum scroll top value from.\r\n * @returns {number} The maximum scroll top value.\r\n */\nexport function getMaximumScrollTop(element) {\n  return element.scrollHeight - element.clientHeight;\n}\n\n/**\r\n * Get the maximum available `scrollLeft` value for the provided element.\r\n *\r\n * @param {HTMLElement} element The element to get the maximum scroll left value from.\r\n * @returns {number} The maximum scroll left value.\r\n */\nexport function getMaximumScrollLeft(element) {\n  return element.scrollWidth - element.clientWidth;\n}\n\n/**\r\n * Returns a DOM element responsible for trimming the provided element.\r\n *\r\n * @param {HTMLElement} base Base element.\r\n * @returns {HTMLElement} Base element's trimming parent.\r\n */\nexport function getTrimmingContainer(base) {\n  const rootDocument = base.ownerDocument;\n  const rootWindow = rootDocument.defaultView;\n  let el = base.parentNode;\n  while (el && el.style && rootDocument.body !== el) {\n    if (el.style.overflow !== 'visible' && el.style.overflow !== '') {\n      return el;\n    }\n    const computedStyle = getComputedStyle(el, rootWindow);\n    const allowedProperties = ['scroll', 'hidden', 'auto'];\n    const property = computedStyle.getPropertyValue('overflow');\n    const propertyY = computedStyle.getPropertyValue('overflow-y');\n    const propertyX = computedStyle.getPropertyValue('overflow-x');\n    if (allowedProperties.includes(property) || allowedProperties.includes(propertyY) || allowedProperties.includes(propertyX)) {\n      return el;\n    }\n    el = el.parentNode;\n  }\n  return rootWindow;\n}\n\n/**\r\n * Returns a style property for the provided element. (Be it an inline or external style).\r\n *\r\n * @param {HTMLElement} element An element to get the style from.\r\n * @param {string} prop Wanted property.\r\n * @param {Window} [rootWindow] The document window owner.\r\n * @returns {string|undefined} Element's style property.\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getStyle(element, prop) {\n  let rootWindow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;\n  if (!element) {\n    return;\n  } else if (element === rootWindow) {\n    if (prop === 'width') {\n      return `${rootWindow.innerWidth}px`;\n    } else if (prop === 'height') {\n      return `${rootWindow.innerHeight}px`;\n    }\n    return;\n  }\n  const styleProp = element.style[prop];\n  if (styleProp !== '' && styleProp !== undefined) {\n    return styleProp;\n  }\n  const computedStyle = getComputedStyle(element, rootWindow);\n  if (computedStyle[prop] !== '' && computedStyle[prop] !== undefined) {\n    return computedStyle[prop];\n  }\n}\n\n/**\r\n * Verifies if element fit to provided CSSRule.\r\n *\r\n * @param {Element} element Element to verify with selector text.\r\n * @param {CSSRule} rule Selector text from CSSRule.\r\n * @returns {boolean}\r\n */\nexport function matchesCSSRules(element, rule) {\n  const {\n    selectorText\n  } = rule;\n  let result = false;\n  if (rule.type === CSSRule.STYLE_RULE && selectorText) {\n    if (element.msMatchesSelector) {\n      result = element.msMatchesSelector(selectorText);\n    } else if (element.matches) {\n      result = element.matches(selectorText);\n    }\n  }\n  return result;\n}\n\n/**\r\n * Returns a computed style object for the provided element. (Needed if style is declared in external stylesheet).\r\n *\r\n * @param {HTMLElement} element An element to get style from.\r\n * @param {Window} [rootWindow] The document window owner.\r\n * @returns {IEElementStyle|CssStyle} Elements computed style object.\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getComputedStyle(element) {\n  let rootWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n  return element.currentStyle || rootWindow.getComputedStyle(element);\n}\n\n/**\r\n * Returns the element's outer width.\r\n *\r\n * @param {HTMLElement} element An element to get the width from.\r\n * @returns {number} Element's outer width.\r\n */\nexport function outerWidth(element) {\n  return element.offsetWidth;\n}\n\n/**\r\n * Returns the element's outer height.\r\n *\r\n * @param {HTMLElement} element An element to get the height from.\r\n * @returns {number} Element's outer height.\r\n */\nexport function outerHeight(element) {\n  return element.offsetHeight;\n}\n\n/**\r\n * Returns the element's inner height.\r\n *\r\n * @param {HTMLElement} element An element to get the height from.\r\n * @returns {number} Element's inner height.\r\n */\nexport function innerHeight(element) {\n  return element.clientHeight || element.innerHeight;\n}\n\n/**\r\n * Returns the element's inner width.\r\n *\r\n * @param {HTMLElement} element An element to get the width from.\r\n * @returns {number} Element's inner width.\r\n */\nexport function innerWidth(element) {\n  return element.clientWidth || element.innerWidth;\n}\n\n/**\r\n * @param {HTMLElement} element An element to which the event is added.\r\n * @param {string} event The event name.\r\n * @param {Function} callback The callback to add.\r\n */\nexport function addEvent(element, event, callback) {\n  element.addEventListener(event, callback, false);\n}\n\n/**\r\n * @param {HTMLElement} element An element from which the event is removed.\r\n * @param {string} event The event name.\r\n * @param {Function} callback The function reference to remove.\r\n */\nexport function removeEvent(element, event, callback) {\n  element.removeEventListener(event, callback, false);\n}\n\n/**\r\n * Returns caret position in text input.\r\n *\r\n * @author https://stackoverflow.com/questions/263743/how-to-get-caret-position-in-textarea\r\n * @param {HTMLElement} el An element to check.\r\n * @returns {number}\r\n */\nexport function getCaretPosition(el) {\n  if (el.selectionStart) {\n    return el.selectionStart;\n  }\n  return 0;\n}\n\n/**\r\n * Returns end of the selection in text input.\r\n *\r\n * @param {HTMLElement} el An element to check.\r\n * @returns {number}\r\n */\nexport function getSelectionEndPosition(el) {\n  if (el.selectionEnd) {\n    return el.selectionEnd;\n  }\n  return 0;\n}\n\n/**\r\n * Returns text under selection.\r\n *\r\n * @param {Window} [rootWindow] The document window owner.\r\n * @returns {string}\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getSelectionText() {\n  let rootWindow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n  const rootDocument = rootWindow.document;\n  let text = '';\n  if (rootWindow.getSelection) {\n    text = rootWindow.getSelection().toString();\n  } else if (rootDocument.selection && rootDocument.selection.type !== 'Control') {\n    text = rootDocument.selection.createRange().text;\n  }\n  return text;\n}\n\n/**\r\n * Cross-platform helper to clear text selection.\r\n *\r\n * @param {Window} [rootWindow] The document window owner.\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function clearTextSelection() {\n  let rootWindow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n  // http://stackoverflow.com/questions/3169786/clear-text-selection-with-javascript\n  if (rootWindow.getSelection) {\n    if (rootWindow.getSelection().empty) {\n      // Chrome\n      rootWindow.getSelection().empty();\n    } else if (rootWindow.getSelection().removeAllRanges) {\n      // Firefox\n      rootWindow.getSelection().removeAllRanges();\n    }\n  }\n}\n\n/**\r\n * Sets caret position in text input.\r\n *\r\n * @author http://blog.vishalon.net/index.php/javascript-getting-and-setting-caret-position-in-textarea/\r\n * @param {Element} element An element to process.\r\n * @param {number} pos The selection start position.\r\n * @param {number} endPos The selection end position.\r\n */\nexport function setCaretPosition(element, pos, endPos) {\n  if (endPos === undefined) {\n    endPos = pos;\n  }\n  if (element.setSelectionRange) {\n    element.focus();\n    try {\n      element.setSelectionRange(pos, endPos);\n    } catch (err) {\n      const elementParent = element.parentNode;\n      const parentDisplayValue = elementParent.style.display;\n      elementParent.style.display = 'block';\n      element.setSelectionRange(pos, endPos);\n      elementParent.style.display = parentDisplayValue;\n    }\n  }\n}\nlet cachedScrollbarWidth;\n\n/**\r\n * Helper to calculate scrollbar width.\r\n * Source: https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes.\r\n *\r\n * @private\r\n * @param {Document} rootDocument The onwer of the document.\r\n * @returns {number}\r\n */\n// eslint-disable-next-line no-restricted-globals\nfunction walkontableCalculateScrollbarWidth() {\n  let rootDocument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  const inner = rootDocument.createElement('div');\n  inner.style.height = '200px';\n  inner.style.width = '100%';\n  const outer = rootDocument.createElement('div');\n  outer.style.boxSizing = 'content-box';\n  outer.style.height = '150px';\n  outer.style.left = '0px';\n  outer.style.overflow = 'hidden';\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.width = '200px';\n  outer.style.visibility = 'hidden';\n  outer.appendChild(inner);\n  (rootDocument.body || rootDocument.documentElement).appendChild(outer);\n  const w1 = inner.offsetWidth;\n  outer.style.overflow = 'scroll';\n  let w2 = inner.offsetWidth;\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n  (rootDocument.body || rootDocument.documentElement).removeChild(outer);\n  return w1 - w2;\n}\n\n/**\r\n * Returns the computed width of the native browser scroll bar.\r\n *\r\n * @param {Document} [rootDocument] The owner of the document.\r\n * @returns {number} Width.\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function getScrollbarWidth() {\n  let rootDocument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  if (cachedScrollbarWidth === undefined) {\n    cachedScrollbarWidth = walkontableCalculateScrollbarWidth(rootDocument);\n  }\n  return cachedScrollbarWidth;\n}\n\n/**\r\n * Checks if the provided element has a vertical scrollbar.\r\n *\r\n * @param {HTMLElement} element An element to check.\r\n * @returns {boolean}\r\n */\nexport function hasVerticalScrollbar(element) {\n  return element.offsetWidth !== element.clientWidth;\n}\n\n/**\r\n * Checks if the provided element has a vertical scrollbar.\r\n *\r\n * @param {HTMLElement} element An element to check.\r\n * @returns {boolean}\r\n */\nexport function hasHorizontalScrollbar(element) {\n  return element.offsetHeight !== element.clientHeight;\n}\n\n/**\r\n * Sets overlay position depending on it's type and used browser.\r\n *\r\n * @param {HTMLElement} overlayElem An element to process.\r\n * @param {number|string} left The left position of the overlay.\r\n * @param {number|string} top The top position of the overlay.\r\n */\nexport function setOverlayPosition(overlayElem, left, top) {\n  overlayElem.style.transform = `translate3d(${left},${top},0)`;\n}\n\n/**\r\n * @param {HTMLElement} element An element to process.\r\n * @returns {number|Array}\r\n */\nexport function getCssTransform(element) {\n  let transform;\n  if (element.style.transform && (transform = element.style.transform) !== '') {\n    return ['transform', transform];\n  }\n  return -1;\n}\n\n/**\r\n * @param {HTMLElement} element An element to process.\r\n */\nexport function resetCssTransform(element) {\n  if (element.style.transform && element.style.transform !== '') {\n    element.style.transform = '';\n  }\n}\n\n/**\r\n * Determines if the given DOM element is an input field.\r\n * Notice: By 'input' we mean input, textarea and select nodes.\r\n *\r\n * @param {HTMLElement} element - DOM element.\r\n * @returns {boolean}\r\n */\nexport function isInput(element) {\n  const inputs = ['INPUT', 'SELECT', 'TEXTAREA'];\n  return element && (inputs.indexOf(element.nodeName) > -1 || element.contentEditable === 'true');\n}\n\n/**\r\n * Determines if the given DOM element is an input field placed OUTSIDE of HOT.\r\n * Notice: By 'input' we mean input, textarea and select nodes which have defined 'data-hot-input' attribute.\r\n *\r\n * @param {HTMLElement} element - DOM element.\r\n * @returns {boolean}\r\n */\nexport function isOutsideInput(element) {\n  return isInput(element) && element.hasAttribute('data-hot-input') === false;\n}\n\n/**\r\n * Check if the given DOM element can be focused (by using \"select\" method).\r\n *\r\n * @param {HTMLElement} element - DOM element.\r\n */\nexport function selectElementIfAllowed(element) {\n  const activeElement = element.ownerDocument.activeElement;\n  if (!isOutsideInput(activeElement)) {\n    element.select();\n  }\n}\n\n/**\r\n * Check if the provided element is detached from DOM.\r\n *\r\n * @param {HTMLElement} element HTML element to be checked.\r\n * @returns {boolean} `true` if the element is detached, `false` otherwise.\r\n */\nexport function isDetached(element) {\n  return !element.parentNode;\n}\n\n/**\r\n * Set up an observer to recognize when the provided element first becomes visible and trigger a callback when it\r\n * happens.\r\n *\r\n * @param {HTMLElement} elementToBeObserved Element to be observed.\r\n * @param {Function} callback The callback function.\r\n */\nexport function observeVisibilityChangeOnce(elementToBeObserved, callback) {\n  const visibilityObserver = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting && elementToBeObserved.offsetParent !== null) {\n        callback();\n        observer.unobserve(elementToBeObserved);\n      }\n    });\n  }, {\n    root: elementToBeObserved.ownerDocument.body\n  });\n  visibilityObserver.observe(elementToBeObserved);\n}\n\n/**\r\n * Add a `contenteditable` attribute, select the contents and optionally add the `invisibleSelection`\r\n * class to the provided element.\r\n *\r\n * @param {HTMLElement} element Element to be processed.\r\n * @param {boolean} [invisibleSelection=true] `true` if the class should be added to the element.\r\n * @param {boolean} [ariaHidden=true] `true` if the `aria-hidden` attribute should be added to the processed element.\r\n */\nexport function makeElementContentEditableAndSelectItsContent(element) {\n  let invisibleSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let ariaHidden = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const ownerDocument = element.ownerDocument;\n  const range = ownerDocument.createRange();\n  const sel = ownerDocument.defaultView.getSelection();\n  setAttribute(element, 'contenteditable', true);\n  if (ariaHidden) {\n    setAttribute(element, ...A11Y_HIDDEN());\n  }\n  if (invisibleSelection) {\n    addClass(element, 'invisibleSelection');\n  }\n  range.selectNodeContents(element);\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n\n/**\r\n * Remove the `contenteditable` attribute, deselect the contents and optionally remove the `invisibleSelection`\r\n * class from the provided element.\r\n *\r\n * @param {HTMLElement} selectedElement The element to be deselected.\r\n * @param {boolean} [removeInvisibleSelectionClass=true] `true` if the class should be removed from the element.\r\n */\nexport function removeContentEditableFromElementAndDeselect(selectedElement) {\n  let removeInvisibleSelectionClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const sel = selectedElement.ownerDocument.defaultView.getSelection();\n  if (selectedElement.hasAttribute('aria-hidden')) {\n    selectedElement.removeAttribute('aria-hidden');\n  }\n  sel.removeAllRanges();\n  if (removeInvisibleSelectionClass) {\n    removeClass(selectedElement, 'invisibleSelection');\n  }\n  selectedElement.removeAttribute('contenteditable');\n}\n\n/**\r\n * Run the provided callback while the provided element is selected and modified to have the `contenteditable`\r\n * attribute added. Optionally, the selection can be configured to be invisible.\r\n *\r\n * @param {HTMLElement} element Element to be selected.\r\n * @param {Function} callback Callback to be called.\r\n * @param {boolean} [invisibleSelection=true] `true` if the selection should be invisible.\r\n */\nexport function runWithSelectedContendEditableElement(element, callback) {\n  let invisibleSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  makeElementContentEditableAndSelectItsContent(element, invisibleSelection);\n  callback();\n  removeContentEditableFromElementAndDeselect(element, invisibleSelection);\n}", "import \"core-js/modules/es.array.push.js\";\nimport DOMPurify from 'dompurify';\nimport { stringify } from \"./mixed.mjs\";\n/**\r\n * Convert string to upper case first letter.\r\n *\r\n * @param {string} string String to convert.\r\n * @returns {string}\r\n */\nexport function toUpperCaseFirst(string) {\n  return string[0].toUpperCase() + string.substr(1);\n}\n\n/**\r\n * Compare strings case insensitively.\r\n *\r\n * @param {...string} strings Strings to compare.\r\n * @returns {boolean}\r\n */\nexport function equalsIgnoreCase() {\n  const unique = [];\n  for (var _len = arguments.length, strings = new Array(_len), _key = 0; _key < _len; _key++) {\n    strings[_key] = arguments[_key];\n  }\n  let length = strings.length;\n  while (length) {\n    length -= 1;\n    const string = stringify(strings[length]).toLowerCase();\n    if (unique.indexOf(string) === -1) {\n      unique.push(string);\n    }\n  }\n  return unique.length === 1;\n}\n\n/**\r\n * Generates a random hex string. Used as namespace for Handsontable instance events.\r\n *\r\n * @returns {string} Returns 16-long character random string (eq. `'92b1bfc74ec4'`).\r\n */\nexport function randomString() {\n  /**\r\n   * @returns {string}\r\n   */\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n  return s4() + s4() + s4() + s4();\n}\n\n/**\r\n * Checks if value is valid percent.\r\n *\r\n * @param {string} value The value to check.\r\n * @returns {boolean}\r\n */\nexport function isPercentValue(value) {\n  return /^([0-9][0-9]?%$)|(^100%$)/.test(value);\n}\n\n/**\r\n * Substitute strings placed beetwen square brackets into value defined in `variables` object. String names defined in\r\n * square brackets must be the same as property name of `variables` object.\r\n *\r\n * @param {string} template Template string.\r\n * @param {object} variables Object which contains all available values which can be injected into template.\r\n * @returns {string}\r\n */\nexport function substitute(template) {\n  let variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return `${template}`.replace(/(?:\\\\)?\\[([^[\\]]+)]/g, (match, name) => {\n    if (match.charAt(0) === '\\\\') {\n      return match.substr(1, match.length - 1);\n    }\n    return variables[name] === undefined ? '' : variables[name];\n  });\n}\n\n/**\r\n * Strip any HTML tag from the string.\r\n *\r\n * @param {string} string String to cut HTML from.\r\n * @returns {string}\r\n */\nexport function stripTags(string) {\n  return sanitize(`${string}`, {\n    ALLOWED_TAGS: []\n  });\n}\n\n/**\r\n * Sanitizes string from potential security vulnerabilities.\r\n *\r\n * @param {string} string String to sanitize.\r\n * @param {object} [options] DOMPurify's configuration object.\r\n * @returns {string}\r\n */\nexport function sanitize(string, options) {\n  return DOMPurify.sanitize(string, options);\n}", "/*! @license DOMPurify 2.5.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.5.6/LICENSE */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nvar hasOwnProperty = Object.hasOwnProperty,\n  setPrototypeOf = Object.setPrototypeOf,\n  isFrozen = Object.isFrozen,\n  getPrototypeOf = Object.getPrototypeOf,\n  getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar freeze = Object.freeze,\n  seal = Object.seal,\n  create = Object.create; // eslint-disable-line import/no-mutable-exports\nvar _ref = typeof Reflect !== 'undefined' && Reflect,\n  apply = _ref.apply,\n  construct = _ref.construct;\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return _construct(Func, _toConsumableArray(args));\n  };\n}\nvar arrayForEach = unapply(Array.prototype.forEach);\nvar arrayPop = unapply(Array.prototype.pop);\nvar arrayPush = unapply(Array.prototype.push);\nvar stringToLowerCase = unapply(String.prototype.toLowerCase);\nvar stringToString = unapply(String.prototype.toString);\nvar stringMatch = unapply(String.prototype.match);\nvar stringReplace = unapply(String.prototype.replace);\nvar stringIndexOf = unapply(String.prototype.indexOf);\nvar stringTrim = unapply(String.prototype.trim);\nvar regExpTest = unapply(RegExp.prototype.test);\nvar typeErrorCreate = unconstruct(TypeError);\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array, transformCaseFunc) {\n  var _transformCaseFunc;\n  transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = create(null);\n  var property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property]) === true) {\n      newObject[property] = object[property];\n    }\n  }\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    var desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n  return fallbackValue;\n}\nvar html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nvar svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nvar svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nvar mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nvar mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nvar text = freeze(['#text']);\nvar html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\nvar svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nvar mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nvar xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nvar TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nvar DOCTYPE_NAME = seal(/^html$/i);\nvar CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if (_typeof(trustedTypes) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html) {\n        return html;\n      },\n      createScriptURL: function createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '2.5.6';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  var originalDocument = window.document;\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n    HTMLTemplateElement = window.HTMLTemplateElement,\n    Node = window.Node,\n    Element = window.Element,\n    NodeFilter = window.NodeFilter,\n    _window$NamedNodeMap = window.NamedNodeMap,\n    NamedNodeMap = _window$NamedNodeMap === void 0 ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n    HTMLFormElement = window.HTMLFormElement,\n    DOMParser = window.DOMParser,\n    trustedTypes = window.trustedTypes;\n  var ElementPrototype = Element.prototype;\n  var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n  var _document = document,\n    implementation = _document.implementation,\n    createNodeIterator = _document.createNodeIterator,\n    createDocumentFragment = _document.createDocumentFragment,\n    getElementsByTagName = _document.getElementsByTagName;\n  var importNode = originalDocument.importNode;\n  var documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined && documentMode !== 9;\n  var MUSTACHE_EXPR$1 = MUSTACHE_EXPR,\n    ERB_EXPR$1 = ERB_EXPR,\n    TMPLIT_EXPR$1 = TMPLIT_EXPR,\n    DATA_ATTR$1 = DATA_ATTR,\n    ARIA_ATTR$1 = ARIA_ATTR,\n    IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE$1 = ATTR_WHITESPACE,\n    CUSTOM_ELEMENT$1 = CUSTOM_ELEMENT;\n  var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  var ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  var SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  var RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  var SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  var SANITIZE_NAMED_PROPS = false;\n  var SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = null;\n  var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = null;\n  var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = null;\n  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  var NAMESPACE = HTML_NAMESPACE;\n  var IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  var ALLOWED_NAMESPACES = null;\n  var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n  /* Parsing of strict XHTML documents */\n  var PARSER_MEDIA_TYPE;\n  var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  var transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n  var isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || _typeof(cfg) !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n    // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR,\n    // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n    // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS,\n    // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  var ALL_SVG_TAGS = addToSet({}, svg$1);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n  var ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  var _checkValidNamespace = function _checkValidNamespace(element) {\n    var parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    var tagName = stringToLowerCase(element.tagName);\n    var parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc;\n    var leadingWhitespace;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    var body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(object) {\n    return _typeof(Node) === 'object' ? object instanceof Node : object && _typeof(object) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n    arrayForEach(hooks[entryPoint], function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any ocurrence of processing instructions */\n    if (currentNode.nodeType === 7) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === 8 && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          var childCount = childNodes.length;\n          for (var i = childCount - 1; i >= 0; --i) {\n            var childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR$1, ' ');\n      content = stringReplace(content, ERB_EXPR$1, ' ');\n      content = stringReplace(content, TMPLIT_EXPR$1, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName)) ;else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName)) ;else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ;else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ;else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ;else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ;else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  var _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT$1);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr;\n    var value;\n    var lcName;\n    var l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n        name = _attr.name,\n        namespaceURI = _attr.namespaceURI;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR$1, ' ');\n        value = stringReplace(value, ERB_EXPR$1, ' ');\n        value = stringReplace(value, TMPLIT_EXPR$1, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && _typeof(trustedTypes) === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ;else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var body;\n    var importedNode;\n    var currentNode;\n    var oldNode;\n    var returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        var tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n      oldNode = currentNode;\n    }\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, ' ');\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    var lcTag = transformCaseFunc(tag);\n    var lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\nexport { purify as default };\n", "import moment from 'moment';\nimport { toSingleLine } from \"./templateLiteralTag.mjs\";\n/**\r\n * Converts any value to string.\r\n *\r\n * @param {*} value The value to stringify.\r\n * @returns {string}\r\n */\nexport function stringify(value) {\n  let result;\n  switch (typeof value) {\n    case 'string':\n    case 'number':\n      result = `${value}`;\n      break;\n    case 'object':\n      result = value === null ? '' : value.toString();\n      break;\n    case 'undefined':\n      result = '';\n      break;\n    default:\n      result = value.toString();\n      break;\n  }\n  return result;\n}\n\n/**\r\n * Checks if given variable is defined.\r\n *\r\n * @param {*} variable Variable to check.\r\n * @returns {boolean}\r\n */\nexport function isDefined(variable) {\n  return typeof variable !== 'undefined';\n}\n\n/**\r\n * Checks if given variable is undefined.\r\n *\r\n * @param {*} variable Variable to check.\r\n * @returns {boolean}\r\n */\nexport function isUndefined(variable) {\n  return typeof variable === 'undefined';\n}\n\n/**\r\n * Check if given variable is null, empty string or undefined.\r\n *\r\n * @param {*} variable Variable to check.\r\n * @returns {boolean}\r\n */\nexport function isEmpty(variable) {\n  return variable === null || variable === '' || isUndefined(variable);\n}\n\n/**\r\n * Check if given variable is a regular expression.\r\n *\r\n * @param {*} variable Variable to check.\r\n * @returns {boolean}\r\n */\nexport function isRegExp(variable) {\n  return Object.prototype.toString.call(variable) === '[object RegExp]';\n}\n\n/* eslint-disable */\nconst _m = '\\x6C\\x65\\x6E\\x67\\x74\\x68';\nconst _hd = v => parseInt(v, 16);\nconst _pi = v => parseInt(v, 10);\nconst _ss = (v, s, l) => v['\\x73\\x75\\x62\\x73\\x74\\x72'](s, l);\nconst _cp = v => v['\\x63\\x6F\\x64\\x65\\x50\\x6F\\x69\\x6E\\x74\\x41\\x74'](0) - 65;\nconst _norm = v => `${v}`.replace(/\\-/g, '');\nconst _extractTime = v => _hd(_ss(_norm(v), _hd('12'), _cp('\\x46'))) / (_hd(_ss(_norm(v), _cp('\\x42'), ~~![][_m])) || 9);\nconst _ignored = () => typeof location !== 'undefined' && /^([a-z0-9\\-]+\\.)?\\x68\\x61\\x6E\\x64\\x73\\x6F\\x6E\\x74\\x61\\x62\\x6C\\x65\\x2E\\x63\\x6F\\x6D$/i.test(location.host);\nlet _notified = false;\nconst consoleMessages = {\n  invalid: () => toSingleLine`\n    The license key for Handsontable is invalid.\\x20\n    If you need any help, contact us at support@handsontable.com.`,\n  expired: _ref => {\n    let {\n      keyValidityDate,\n      hotVersion\n    } = _ref;\n    return toSingleLine`\n    The license key for Handsontable expired on ${keyValidityDate}, and is not valid for the installed\\x20\n    version ${hotVersion}. Renew your license key at handsontable.com or downgrade to a version released prior\\x20\n    to ${keyValidityDate}. If you need any help, contact us at sales@handsontable.com.`;\n  },\n  missing: () => toSingleLine`\n    The license key for Handsontable is missing. Use your purchased key to activate the product.\\x20\n    Alternatively, you can activate Handsontable to use for non-commercial purposes by\\x20\n    passing the key: 'non-commercial-and-evaluation'. If you need any help, contact\\x20\n    us at support@handsontable.com.`,\n  non_commercial: () => ''\n};\nconst domMessages = {\n  invalid: () => toSingleLine`\n    The license key for Handsontable is invalid.\\x20\n    <a href=\"https://handsontable.com/docs/tutorial-license-key.html\" target=\"_blank\">Read more</a> on how to\\x20\n    install it properly or contact us at <a href=\"mailto:support@handsontable.com\">support@handsontable.com</a>.`,\n  expired: _ref2 => {\n    let {\n      keyValidityDate,\n      hotVersion\n    } = _ref2;\n    return toSingleLine`\n    The license key for Handsontable expired on ${keyValidityDate}, and is not valid for the installed\\x20\n    version ${hotVersion}. <a href=\"https://handsontable.com/pricing\" target=\"_blank\">Renew</a> your\\x20\n    license key or downgrade to a version released prior to ${keyValidityDate}. If you need any\\x20\n    help, contact us at <a href=\"mailto:sales@handsontable.com\">sales@handsontable.com</a>.`;\n  },\n  missing: () => toSingleLine`\n    The license key for Handsontable is missing. Use your purchased key to activate the product.\\x20\n    Alternatively, you can activate Handsontable to use for non-commercial purposes by\\x20\n    passing the key: 'non-commercial-and-evaluation'.\\x20\n    <a href=\"https://handsontable.com/docs/tutorial-license-key.html\" target=\"_blank\">Read more</a> about it in\\x20\n    the documentation or contact us at <a href=\"mailto:support@handsontable.com\">support@handsontable.com</a>.`,\n  non_commercial: () => ''\n};\nexport function _injectProductInfo(key, element) {\n  const hasValidType = !isEmpty(key);\n  const isNonCommercial = typeof key === 'string' && key.toLowerCase() === 'non-commercial-and-evaluation';\n  const hotVersion = \"14.5.0\";\n  let keyValidityDate;\n  let consoleMessageState = 'invalid';\n  let domMessageState = 'invalid';\n  key = _norm(key || '');\n  const schemaValidity = _checkKeySchema(key);\n  if (hasValidType || isNonCommercial || schemaValidity) {\n    if (schemaValidity) {\n      const releaseDate = moment(\"30/07/2024\", 'DD/MM/YYYY');\n      const releaseDays = Math.floor(releaseDate.toDate().getTime() / 8.64e7);\n      const keyValidityDays = _extractTime(key);\n      keyValidityDate = moment((keyValidityDays + 1) * 8.64e7, 'x').format('MMMM DD, YYYY');\n      if (releaseDays > keyValidityDays) {\n        consoleMessageState = 'expired';\n        domMessageState = 'expired';\n      } else {\n        consoleMessageState = 'valid';\n        domMessageState = 'valid';\n      }\n    } else if (isNonCommercial) {\n      consoleMessageState = 'non_commercial';\n      domMessageState = 'valid';\n    } else {\n      consoleMessageState = 'invalid';\n      domMessageState = 'invalid';\n    }\n  } else {\n    consoleMessageState = 'missing';\n    domMessageState = 'missing';\n  }\n  if (_ignored()) {\n    consoleMessageState = 'valid';\n    domMessageState = 'valid';\n  }\n  if (!_notified && consoleMessageState !== 'valid') {\n    const message = consoleMessages[consoleMessageState]({\n      keyValidityDate,\n      hotVersion\n    });\n    if (message) {\n      console[consoleMessageState === 'non_commercial' ? 'info' : 'warn'](consoleMessages[consoleMessageState]({\n        keyValidityDate,\n        hotVersion\n      }));\n    }\n    _notified = true;\n  }\n  if (domMessageState !== 'valid' && element.parentNode) {\n    const message = domMessages[domMessageState]({\n      keyValidityDate,\n      hotVersion\n    });\n    if (message) {\n      const messageNode = document.createElement('div');\n      messageNode.className = 'hot-display-license-info';\n      messageNode.innerHTML = domMessages[domMessageState]({\n        keyValidityDate,\n        hotVersion\n      });\n      element.parentNode.insertBefore(messageNode, element.nextSibling);\n    }\n  }\n}\nfunction _checkKeySchema(v) {\n  let z = [][_m];\n  let p = z;\n  if (v[_m] !== _cp('\\x5A')) {\n    return false;\n  }\n  for (let c = '', i = '\\x42\\x3C\\x48\\x34\\x50\\x2B'.split(''), j = _cp(i.shift()); j; j = _cp(i.shift() || 'A')) {\n    --j < ''[_m] ? p = p | (_pi(`${_pi(_hd(c) + (_hd(_ss(v, Math.abs(j), 2)) + []).padStart(2, '0'))}`) % 97 || 2) >> 1 : c = _ss(v, j, !j ? 6 : i[_m] === 1 ? 9 : 8);\n  }\n  return p === z;\n}\n/* eslint-enable */", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\n/**\r\n * @param {Array} arr An array to process.\r\n */\nexport function to2dArray(arr) {\n  const ilen = arr.length;\n  let i = 0;\n  while (i < ilen) {\n    arr[i] = [arr[i]];\n    i += 1;\n  }\n}\n\n/**\r\n * @param {Array} arr An array to extend.\r\n * @param {Array} extension The data to extend from.\r\n */\nexport function extendArray(arr, extension) {\n  const ilen = extension.length;\n  let i = 0;\n  while (i < ilen) {\n    arr.push(extension[i]);\n    i += 1;\n  }\n}\n\n/**\r\n * @param {Array} arr An array to pivot.\r\n * @returns {Array}\r\n */\nexport function pivot(arr) {\n  const pivotedArr = [];\n  if (!arr || arr.length === 0 || !arr[0] || arr[0].length === 0) {\n    return pivotedArr;\n  }\n  const rowCount = arr.length;\n  const colCount = arr[0].length;\n  for (let i = 0; i < rowCount; i++) {\n    for (let j = 0; j < colCount; j++) {\n      if (!pivotedArr[j]) {\n        pivotedArr[j] = [];\n      }\n      pivotedArr[j][i] = arr[i][j];\n    }\n  }\n  return pivotedArr;\n}\n\n/**\r\n * A specialized version of `.reduce` for arrays without support for callback\r\n * shorthands and `this` binding.\r\n *\r\n * {@link https://github.com/lodash/lodash/blob/master/lodash.js}.\r\n *\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @param {boolean} [initFromArray] Specify using the first element of `array` as the initial value.\r\n * @returns {*} Returns the accumulated value.\r\n */\nexport function arrayReduce(array, iteratee, accumulator, initFromArray) {\n  let index = -1;\n  let iterable = array;\n  let result = accumulator;\n  if (!Array.isArray(array)) {\n    iterable = Array.from(array);\n  }\n  const length = iterable.length;\n  if (initFromArray && length) {\n    index += 1;\n    result = iterable[index];\n  }\n  index += 1;\n  while (index < length) {\n    result = iteratee(result, iterable[index], index, iterable);\n    index += 1;\n  }\n  return result;\n}\n\n/**\r\n * A specialized version of `.filter` for arrays without support for callback\r\n * shorthands and `this` binding.\r\n *\r\n * {@link https://github.com/lodash/lodash/blob/master/lodash.js}.\r\n *\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n */\nexport function arrayFilter(array, predicate) {\n  let index = 0;\n  let iterable = array;\n  if (!Array.isArray(array)) {\n    iterable = Array.from(array);\n  }\n  const length = iterable.length;\n  const result = [];\n  let resIndex = -1;\n  while (index < length) {\n    const value = iterable[index];\n    if (predicate(value, index, iterable)) {\n      resIndex += 1;\n      result[resIndex] = value;\n    }\n    index += 1;\n  }\n  return result;\n}\n\n/**\r\n * A specialized version of `.map` for arrays without support for callback\r\n * shorthands and `this` binding.\r\n *\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n */\nexport function arrayMap(array, iteratee) {\n  let index = 0;\n  let iterable = array;\n  if (!Array.isArray(array)) {\n    iterable = Array.from(array);\n  }\n  const length = iterable.length;\n  const result = [];\n  let resIndex = -1;\n  while (index < length) {\n    const value = iterable[index];\n    resIndex += 1;\n    result[resIndex] = iteratee(value, index, iterable);\n    index += 1;\n  }\n  return result;\n}\n\n/**\r\n * A specialized version of `.forEach` for arrays without support for callback\r\n * shorthands and `this` binding.\r\n *\r\n * {@link https://github.com/lodash/lodash/blob/master/lodash.js}.\r\n *\r\n * @param {Array|*} array The array to iterate over or an any element with implemented iterator protocol.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns `array`.\r\n */\nexport function arrayEach(array, iteratee) {\n  let index = 0;\n  let iterable = array;\n  if (!Array.isArray(array)) {\n    iterable = Array.from(array);\n  }\n  const length = iterable.length;\n  while (index < length) {\n    if (iteratee(iterable[index], index, iterable) === false) {\n      break;\n    }\n    index += 1;\n  }\n  return array;\n}\n\n/**\r\n * Calculate sum value for each item of the array.\r\n *\r\n * @param {Array} array The array to process.\r\n * @returns {number} Returns calculated sum value.\r\n */\nexport function arraySum(array) {\n  return arrayReduce(array, (a, b) => a + b, 0);\n}\n\n/**\r\n * Returns the highest value from an array. Can be array of numbers or array of strings.\r\n * NOTICE: Mixed values is not supported.\r\n *\r\n * @param {Array} array The array to process.\r\n * @returns {number} Returns the highest value from an array.\r\n */\nexport function arrayMax(array) {\n  return arrayReduce(array, (a, b) => a > b ? a : b, Array.isArray(array) ? array[0] : undefined);\n}\n\n/**\r\n * Returns the lowest value from an array. Can be array of numbers or array of strings.\r\n * NOTICE: Mixed values is not supported.\r\n *\r\n * @param {Array} array The array to process.\r\n * @returns {number} Returns the lowest value from an array.\r\n */\nexport function arrayMin(array) {\n  return arrayReduce(array, (a, b) => a < b ? a : b, Array.isArray(array) ? array[0] : undefined);\n}\n\n/**\r\n * Calculate average value for each item of the array.\r\n *\r\n * @param {Array} array The array to process.\r\n * @returns {number} Returns calculated average value.\r\n */\nexport function arrayAvg(array) {\n  if (!array.length) {\n    return 0;\n  }\n  return arraySum(array) / array.length;\n}\n\n/**\r\n * Flatten multidimensional array.\r\n *\r\n * @param {Array} array Array of Arrays.\r\n * @returns {Array}\r\n */\nexport function arrayFlatten(array) {\n  return arrayReduce(array, (initial, value) => initial.concat(Array.isArray(value) ? arrayFlatten(value) : value), []);\n}\n\n/**\r\n * Unique values in the array.\r\n *\r\n * @param {Array} array The array to process.\r\n * @returns {Array}\r\n */\nexport function arrayUnique(array) {\n  const unique = [];\n  arrayEach(array, value => {\n    if (unique.indexOf(value) === -1) {\n      unique.push(value);\n    }\n  });\n  return unique;\n}\n\n/**\r\n * Differences from two or more arrays.\r\n *\r\n * @param {...Array} arrays Array of strings or array of numbers.\r\n * @returns {Array} Returns the difference between arrays.\r\n */\nexport function getDifferenceOfArrays() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  const [first, ...rest] = [...arrays];\n  let filteredFirstArray = first;\n  arrayEach(rest, array => {\n    filteredFirstArray = filteredFirstArray.filter(value => !array.includes(value));\n  });\n  return filteredFirstArray;\n}\n\n/**\r\n * Intersection of two or more arrays.\r\n *\r\n * @param {...Array} arrays Array of strings or array of numbers.\r\n * @returns {Array} Returns elements that exists in every array.\r\n */\nexport function getIntersectionOfArrays() {\n  for (var _len2 = arguments.length, arrays = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    arrays[_key2] = arguments[_key2];\n  }\n  const [first, ...rest] = [...arrays];\n  let filteredFirstArray = first;\n  arrayEach(rest, array => {\n    filteredFirstArray = filteredFirstArray.filter(value => array.includes(value));\n  });\n  return filteredFirstArray;\n}\n\n/**\r\n * Union of two or more arrays.\r\n *\r\n * @param {...Array} arrays Array of strings or array of numbers.\r\n * @returns {Array} Returns the elements that exist in any of the arrays, without duplicates.\r\n */\nexport function getUnionOfArrays() {\n  for (var _len3 = arguments.length, arrays = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    arrays[_key3] = arguments[_key3];\n  }\n  const [first, ...rest] = [...arrays];\n  const set = new Set(first);\n  arrayEach(rest, array => {\n    arrayEach(array, value => {\n      if (!set.has(value)) {\n        set.add(value);\n      }\n    });\n  });\n  return Array.from(set);\n}\n\n/**\r\n * Convert a separated strings to an array of strings.\r\n *\r\n * @param {string} value A string of class name(s).\r\n * @param {string|RegExp} delimiter The pattern describing where each split should occur.\r\n * @returns {string[]} Returns array of string or empty array.\r\n */\nexport function stringToArray(value) {\n  let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  return value.split(delimiter);\n}", "import { arrayReduce } from \"../helpers/array.mjs\";\n/**\r\n * Tags a multiline string and return new one without line break characters and following spaces.\r\n *\r\n * @param {Array} strings Parts of the entire string without expressions.\r\n * @param {...string} expressions Expressions converted to strings, which are added to the entire string.\r\n * @returns {string}\r\n */\nexport function toSingleLine(strings) {\n  for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    expressions[_key - 1] = arguments[_key];\n  }\n  const result = arrayReduce(strings, (previousValue, currentValue, index) => {\n    const valueWithoutWhiteSpaces = currentValue.replace(/\\r?\\n\\s*/g, '');\n    const expressionForIndex = expressions[index] ? expressions[index] : '';\n    return previousValue + valueWithoutWhiteSpaces + expressionForIndex;\n  }, '');\n  return result.trim();\n}", "export const A11Y_TABINDEX = val => ['tabindex', val];\nexport const A11Y_TREEGRID = () => ['role', 'treegrid'];\nexport const A11Y_PRESENTATION = () => ['role', 'presentation'];\nexport const A11Y_GRIDCELL = () => ['role', 'gridcell'];\nexport const A11Y_ROWHEADER = () => ['role', 'rowheader'];\nexport const A11Y_ROWGROUP = () => ['role', 'rowgroup'];\nexport const A11Y_COLUMNHEADER = () => ['role', 'columnheader'];\nexport const A11Y_ROW = () => ['role', 'row'];\nexport const A11Y_MENU = () => ['role', 'menu'];\nexport const A11Y_MENU_ITEM = () => ['role', 'menuitem'];\nexport const A11Y_COMBOBOX = () => ['role', 'combobox'];\nexport const A11Y_LISTBOX = () => ['role', 'listbox'];\nexport const A11Y_OPTION = () => ['role', 'option'];\nexport const A11Y_CHECKBOX = () => ['role', 'checkbox'];\nexport const A11Y_SCOPE_COL = () => ['scope', 'col'];\nexport const A11Y_SCOPE_ROW = () => ['scope', 'row'];\nexport const A11Y_TEXT = () => ['type', 'text'];\nexport const A11Y_LABEL = val => ['aria-label', val];\nexport const A11Y_HIDDEN = () => ['aria-hidden', 'true'];\nexport const A11Y_DISABLED = () => ['aria-disabled', 'true'];\nexport const A11Y_MULTISELECTABLE = () => ['aria-multiselectable', 'true'];\nexport const A11Y_HASPOPUP = val => ['aria-haspopup', val];\nexport const A11Y_ROWCOUNT = val => ['aria-rowcount', val];\nexport const A11Y_COLCOUNT = val => ['aria-colcount', val];\nexport const A11Y_ROWINDEX = val => ['aria-rowindex', val];\nexport const A11Y_COLINDEX = val => ['aria-colindex', val];\nexport const A11Y_EXPANDED = val => ['aria-expanded', val];\nexport const A11Y_SORT = val => ['aria-sort', val];\nexport const A11Y_READONLY = () => ['aria-readonly', 'true'];\nexport const A11Y_INVALID = () => ['aria-invalid', 'true'];\nexport const A11Y_CHECKED = val => ['aria-checked', val];\nexport const A11Y_SELECTED = () => ['aria-selected', 'true'];\nexport const A11Y_AUTOCOMPLETE = () => ['aria-autocomplete', 'list'];\nexport const A11Y_CONTROLS = val => ['aria-controls', val];\nexport const A11Y_ACTIVEDESCENDANT = val => ['aria-activedescendant', val];\nexport const A11Y_LIVE = val => ['aria-live', val];\nexport const A11Y_RELEVANT = val => ['aria-relevant', val];\nexport const A11Y_SETSIZE = val => ['aria-setsize', val];\nexport const A11Y_POSINSET = val => ['aria-posinset', val];", "import { arrayReduce } from \"./array.mjs\";\nimport { isDefined } from \"./mixed.mjs\";\n/**\r\n * Checks if given variable is function.\r\n *\r\n * @param {*} func Variable to check.\r\n * @returns {boolean}\r\n */\nexport function isFunction(func) {\n  return typeof func === 'function';\n}\n\n/**\r\n * Creates throttle function that enforces a maximum number of times a function (`func`) can be called over time (`wait`).\r\n *\r\n * @param {Function} func Function to invoke.\r\n * @param {number} wait Delay in miliseconds.\r\n * @returns {Function}\r\n */\nexport function throttle(func) {\n  let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\n  let lastCalled = 0;\n  const result = {\n    lastCallThrottled: true\n  };\n  let lastTimer = null;\n\n  /**\r\n   * @param {...*} args The list of arguments passed during the function invocation.\r\n   * @returns {object}\r\n   */\n  function _throttle() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const stamp = Date.now();\n    let needCall = false;\n    result.lastCallThrottled = true;\n    if (!lastCalled) {\n      lastCalled = stamp;\n      needCall = true;\n    }\n    const remaining = wait - (stamp - lastCalled);\n    if (needCall) {\n      result.lastCallThrottled = false;\n      func.apply(this, args);\n    } else {\n      if (lastTimer) {\n        clearTimeout(lastTimer);\n      }\n      lastTimer = setTimeout(() => {\n        result.lastCallThrottled = false;\n        func.apply(this, args);\n        lastCalled = 0;\n        lastTimer = undefined;\n      }, remaining);\n    }\n    return result;\n  }\n  return _throttle;\n}\n\n/**\r\n * Creates throttle function that enforces a maximum number of times a function (`func`) can be called over\r\n * time (`wait`) after specified hits.\r\n *\r\n * @param {Function} func Function to invoke.\r\n * @param {number} wait Delay in miliseconds.\r\n * @param {number} hits Number of hits after throttling will be applied.\r\n * @returns {Function}\r\n */\nexport function throttleAfterHits(func) {\n  let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\n  let hits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  const funcThrottle = throttle(func, wait);\n  let remainHits = hits;\n\n  /**\r\n   *\r\n   */\n  function _clearHits() {\n    remainHits = hits;\n  }\n  /**\r\n   * @param {*} args The list of arguments passed during the function invocation.\r\n   * @returns {*}\r\n   */\n  function _throttleAfterHits() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (remainHits) {\n      remainHits -= 1;\n      return func.apply(this, args);\n    }\n    return funcThrottle.apply(this, args);\n  }\n  _throttleAfterHits.clearHits = _clearHits;\n  return _throttleAfterHits;\n}\n\n/**\r\n * Creates debounce function that enforces a function (`func`) not be called again until a certain amount of time (`wait`)\r\n * has passed without it being called.\r\n *\r\n * @param {Function} func Function to invoke.\r\n * @param {number} wait Delay in milliseconds.\r\n * @returns {Function}\r\n */\nexport function debounce(func) {\n  let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\n  let lastTimer = null;\n  let result;\n\n  /**\r\n   * @param {*} args The list of arguments passed during the function invocation.\r\n   * @returns {*}\r\n   */\n  function _debounce() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    if (lastTimer) {\n      clearTimeout(lastTimer);\n    }\n    lastTimer = setTimeout(() => {\n      result = func.apply(this, args);\n    }, wait);\n    return result;\n  }\n  return _debounce;\n}\n\n/**\r\n * Creates the function that returns the result of calling the given functions. Result of the first function is passed to\r\n * the second as an argument and so on. Only first function in the chain can handle multiple arguments.\r\n *\r\n * @param {Function} functions Functions to compose.\r\n * @returns {Function}\r\n */\nexport function pipe() {\n  for (var _len4 = arguments.length, functions = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    functions[_key4] = arguments[_key4];\n  }\n  const [firstFunc, ...restFunc] = functions;\n  return function _pipe() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return arrayReduce(restFunc, (acc, fn) => fn(acc), firstFunc.apply(this, args));\n  };\n}\n\n/**\r\n * Creates the function that returns the function with cached arguments.\r\n *\r\n * @param {Function} func Function to partialization.\r\n * @param {Array} params Function arguments to cache.\r\n * @returns {Function}\r\n */\nexport function partial(func) {\n  for (var _len6 = arguments.length, params = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    params[_key6 - 1] = arguments[_key6];\n  }\n  return function _partial() {\n    for (var _len7 = arguments.length, restParams = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      restParams[_key7] = arguments[_key7];\n    }\n    return func.apply(this, params.concat(restParams));\n  };\n}\n\n/**\r\n * Creates the functions that returns the function with cached arguments. If count if passed arguments will be matched\r\n * to the arguments defined in `func` then function will be invoked.\r\n * Arguments are added to the stack in direction from the left to the right.\r\n *\r\n * @example\r\n * ```\r\n * var replace = curry(function(find, replace, string) {\r\n *   return string.replace(find, replace);\r\n * });\r\n *\r\n * // returns function with bounded first argument\r\n * var replace = replace('foo')\r\n *\r\n * // returns replaced string - all arguments was passed so function was invoked\r\n * replace('bar', 'Some test with foo...');\r\n *\r\n * ```\r\n *\r\n * @param {Function} func Function to currying.\r\n * @returns {Function}\r\n */\nexport function curry(func) {\n  const argsLength = func.length;\n\n  /**\r\n   * @param {*} argsSoFar The list of arguments passed during the function invocation.\r\n   * @returns {Function}\r\n   */\n  function given(argsSoFar) {\n    return function _curry() {\n      for (var _len8 = arguments.length, params = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        params[_key8] = arguments[_key8];\n      }\n      const passedArgsSoFar = argsSoFar.concat(params);\n      let result;\n      if (passedArgsSoFar.length >= argsLength) {\n        result = func.apply(this, passedArgsSoFar);\n      } else {\n        result = given(passedArgsSoFar);\n      }\n      return result;\n    };\n  }\n  return given([]);\n}\n\n/**\r\n * Creates the functions that returns the function with cached arguments. If count if passed arguments will be matched\r\n * to the arguments defined in `func` then function will be invoked.\r\n * Arguments are added to the stack in direction from the right to the left.\r\n *\r\n * @example\r\n * ```\r\n * var replace = curry(function(find, replace, string) {\r\n *   return string.replace(find, replace);\r\n * });\r\n *\r\n * // returns function with bounded first argument\r\n * var replace = replace('Some test with foo...')\r\n *\r\n * // returns replaced string - all arguments was passed so function was invoked\r\n * replace('bar', 'foo');\r\n *\r\n * ```\r\n *\r\n * @param {Function} func Function to currying.\r\n * @returns {Function}\r\n */\nexport function curryRight(func) {\n  const argsLength = func.length;\n\n  /**\r\n   * @param {*} argsSoFar The list of arguments passed during the function invocation.\r\n   * @returns {Function}\r\n   */\n  function given(argsSoFar) {\n    return function _curry() {\n      for (var _len9 = arguments.length, params = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        params[_key9] = arguments[_key9];\n      }\n      const passedArgsSoFar = argsSoFar.concat(params.reverse());\n      let result;\n      if (passedArgsSoFar.length >= argsLength) {\n        result = func.apply(this, passedArgsSoFar);\n      } else {\n        result = given(passedArgsSoFar);\n      }\n      return result;\n    };\n  }\n  return given([]);\n}\n\n/**\r\n * Calls a function in the quickest way available.\r\n *\r\n * In contrast to the `apply()` method that passes arguments as an array,\r\n * the `call()` method passes arguments directly, to avoid garbage collection costs.\r\n *\r\n * @param {Function} func The function to call.\r\n * @param {*} context The value to use as `this` when calling the `func` function.\r\n * @param {*} [arg1] An argument passed to the `func` function.\r\n * @param {*} [arg2] An argument passed to `func` function.\r\n * @param {*} [arg3] An argument passed to `func` function.\r\n * @param {*} [arg4] An argument passed to `func` function.\r\n * @param {*} [arg5] An argument passed to `func` function.\r\n * @param {*} [arg6] An argument passed to `func` function.\r\n * @returns {*}\r\n */\nexport function fastCall(func, context, arg1, arg2, arg3, arg4, arg5, arg6) {\n  if (isDefined(arg6)) {\n    return func.call(context, arg1, arg2, arg3, arg4, arg5, arg6);\n  } else if (isDefined(arg5)) {\n    return func.call(context, arg1, arg2, arg3, arg4, arg5);\n  } else if (isDefined(arg4)) {\n    return func.call(context, arg1, arg2, arg3, arg4);\n  } else if (isDefined(arg3)) {\n    return func.call(context, arg1, arg2, arg3);\n  } else if (isDefined(arg2)) {\n    return func.call(context, arg1, arg2);\n  } else if (isDefined(arg1)) {\n    return func.call(context, arg1);\n  }\n  return func.call(context);\n}", "import { objectEach } from \"./object.mjs\";\nimport { isCSR } from \"./feature.mjs\";\nconst tester = testerFunc => {\n  const result = {\n    value: false\n  };\n  result.test = (ua, vendor) => {\n    result.value = testerFunc(ua, vendor);\n  };\n  return result;\n};\nconst browsers = {\n  chrome: tester((ua, vendor) => /Chrome/.test(ua) && /Google/.test(vendor)),\n  chromeWebKit: tester(ua => /CriOS/.test(ua)),\n  edge: tester(ua => /Edge/.test(ua)),\n  edgeWebKit: tester(ua => /EdgiOS/.test(ua)),\n  firefox: tester(ua => /Firefox/.test(ua)),\n  firefoxWebKit: tester(ua => /FxiOS/.test(ua)),\n  mobile: tester(ua => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(ua)),\n  safari: tester((ua, vendor) => /Safari/.test(ua) && /Apple Computer/.test(vendor))\n};\nconst platforms = {\n  mac: tester(platform => /^Mac/.test(platform)),\n  win: tester(platform => /^Win/.test(platform)),\n  linux: tester(platform => /^Linux/.test(platform)),\n  ios: tester(ua => /iPhone|iPad|iPod/i.test(ua))\n};\n\n/**\r\n * @param {object} [metaObject] The browser identity collection.\r\n * @param {object} [metaObject.userAgent] The user agent reported by browser.\r\n * @param {object} [metaObject.vendor] The vendor name reported by browser.\r\n */\nexport function setBrowserMeta() {\n  let {\n    userAgent = navigator.userAgent,\n    vendor = navigator.vendor\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  objectEach(browsers, _ref => {\n    let {\n      test\n    } = _ref;\n    return void test(userAgent, vendor);\n  });\n}\n\n/**\r\n * @param {object} [metaObject] The platform identity collection.\r\n * @param {object} [metaObject.platform] The platform ID.\r\n */\nexport function setPlatformMeta() {\n  let {\n    platform = navigator.platform\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  objectEach(platforms, _ref2 => {\n    let {\n      test\n    } = _ref2;\n    return void test(platform);\n  });\n}\nif (isCSR()) {\n  setBrowserMeta();\n  setPlatformMeta();\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isChrome() {\n  return browsers.chrome.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isChromeWebKit() {\n  return browsers.chromeWebKit.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isFirefox() {\n  return browsers.firefox.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isFirefoxWebKit() {\n  return browsers.firefoxWebKit.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isSafari() {\n  return browsers.safari.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isEdge() {\n  return browsers.edge.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isEdgeWebKit() {\n  return browsers.edgeWebKit.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isMobileBrowser() {\n  return browsers.mobile.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isIOS() {\n  return platforms.ios.value;\n}\n\n/**\r\n * A hacky way to recognize the iPad. Since iOS 13, the iPad on Safari mimics macOS behavior and user agent.\r\n *\r\n * @see {@https://stackoverflow.com/a/57838385}\r\n * @param {object} [metaObject] The browser identity collection.\r\n * @param {number} [metaObject.maxTouchPoints] The maximum number of simultanous touch points.\r\n * @returns {boolean}\r\n */\nexport function isIpadOS() {\n  let {\n    maxTouchPoints\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : navigator;\n  return maxTouchPoints > 2 && platforms.mac.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isWindowsOS() {\n  return platforms.win.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isMacOS() {\n  return platforms.mac.value;\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isLinuxOS() {\n  return platforms.linux.value;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { arrayEach } from \"./array.mjs\";\n/**\r\n * Generate schema for passed object.\r\n *\r\n * @param {Array|object} object An object to analyze.\r\n * @returns {Array|object}\r\n */\nexport function duckSchema(object) {\n  let schema;\n  if (Array.isArray(object)) {\n    schema = object.length ? new Array(object.length).fill(null) : [];\n  } else {\n    schema = {};\n    objectEach(object, (value, key) => {\n      if (key === '__children') {\n        return;\n      }\n      if (value && typeof value === 'object' && !Array.isArray(value)) {\n        schema[key] = duckSchema(value);\n      } else if (Array.isArray(value)) {\n        if (value.length && typeof value[0] === 'object' && !Array.isArray(value[0])) {\n          schema[key] = [duckSchema(value[0])];\n        } else {\n          schema[key] = [];\n        }\n      } else {\n        schema[key] = null;\n      }\n    });\n  }\n  return schema;\n}\n\n/**\r\n * Inherit without without calling parent constructor, and setting `Child.prototype.constructor` to `Child` instead of `Parent`.\r\n * Creates temporary dummy function to call it as constructor.\r\n * Described in ticket: https://github.com/handsontable/handsontable/pull/516.\r\n *\r\n * @param {object} Child The child class.\r\n * @param {object} Parent The parent class.\r\n * @returns {object}\r\n */\nexport function inherit(Child, Parent) {\n  Parent.prototype.constructor = Parent;\n  Child.prototype = new Parent();\n  Child.prototype.constructor = Child;\n  return Child;\n}\n\n/**\r\n * Perform shallow extend of a target object with extension's own properties.\r\n *\r\n * @param {object} target An object that will receive the new properties.\r\n * @param {object} extension An object containing additional properties to merge into the target.\r\n * @param {string[]} [writableKeys] An array of keys that are writable to target object.\r\n * @returns {object}\r\n */\nexport function extend(target, extension, writableKeys) {\n  const hasWritableKeys = Array.isArray(writableKeys);\n  objectEach(extension, (value, key) => {\n    if (hasWritableKeys === false || writableKeys.includes(key)) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n\n/**\r\n * Perform deep extend of a target object with extension's own properties.\r\n *\r\n * @param {object} target An object that will receive the new properties.\r\n * @param {object} extension An object containing additional properties to merge into the target.\r\n */\nexport function deepExtend(target, extension) {\n  objectEach(extension, (value, key) => {\n    if (extension[key] && typeof extension[key] === 'object') {\n      if (!target[key]) {\n        if (Array.isArray(extension[key])) {\n          target[key] = [];\n        } else if (Object.prototype.toString.call(extension[key]) === '[object Date]') {\n          target[key] = extension[key];\n        } else {\n          target[key] = {};\n        }\n      }\n      deepExtend(target[key], extension[key]);\n    } else {\n      target[key] = extension[key];\n    }\n  });\n}\n\n/**\r\n * Perform deep clone of an object.\r\n * WARNING! Only clones JSON properties. Will cause error when `obj` contains a function, Date, etc.\r\n *\r\n * @param {object} obj An object that will be cloned.\r\n * @returns {object}\r\n */\nexport function deepClone(obj) {\n  if (typeof obj === 'object') {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  return obj;\n}\n\n/**\r\n * Shallow clone object.\r\n *\r\n * @param {object} object An object to clone.\r\n * @returns {object}\r\n */\nexport function clone(object) {\n  const result = {};\n  objectEach(object, (value, key) => {\n    result[key] = value;\n  });\n  return result;\n}\n\n/**\r\n * Extend the Base object (usually prototype) of the functionality the `mixins` objects.\r\n *\r\n * @param {object} Base Base object which will be extended.\r\n * @param {object} mixins The object of the functionality will be \"copied\".\r\n * @returns {object}\r\n */\nexport function mixin(Base) {\n  if (!Base.MIXINS) {\n    Base.MIXINS = [];\n  }\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n  arrayEach(mixins, mixinItem => {\n    Base.MIXINS.push(mixinItem.MIXIN_NAME);\n    objectEach(mixinItem, (value, key) => {\n      if (Base.prototype[key] !== undefined) {\n        throw new Error(`Mixin conflict. Property '${key}' already exist and cannot be overwritten.`);\n      }\n      if (typeof value === 'function') {\n        Base.prototype[key] = value;\n      } else {\n        const getter = function _getter(property, initialValue) {\n          const propertyName = `_${property}`;\n          const initValue = newValue => {\n            let result = newValue;\n            if (Array.isArray(result) || isObject(result)) {\n              result = deepClone(result);\n            }\n            return result;\n          };\n          return function () {\n            if (this[propertyName] === undefined) {\n              this[propertyName] = initValue(initialValue);\n            }\n            return this[propertyName];\n          };\n        };\n        const setter = function _setter(property) {\n          const propertyName = `_${property}`;\n          return function (newValue) {\n            this[propertyName] = newValue;\n          };\n        };\n        Object.defineProperty(Base.prototype, key, {\n          get: getter(key, value),\n          set: setter(key),\n          configurable: true\n        });\n      }\n    });\n  });\n  return Base;\n}\n\n/**\r\n * Checks if two objects or arrays are (deep) equal.\r\n *\r\n * @param {object|Array} object1 The first object to compare.\r\n * @param {object|Array} object2 The second object to compare.\r\n * @returns {boolean}\r\n */\nexport function isObjectEqual(object1, object2) {\n  return JSON.stringify(object1) === JSON.stringify(object2);\n}\n\n/**\r\n * Determines whether given object is a plain Object.\r\n * Note: String and Array are not plain Objects.\r\n *\r\n * @param {*} object An object to check.\r\n * @returns {boolean}\r\n */\nexport function isObject(object) {\n  return Object.prototype.toString.call(object) === '[object Object]';\n}\n\n/**\r\n * @param {object} object The object on which to define the property.\r\n * @param {string} property The name of the property to be defined or modified.\r\n * @param {*} value The value associated with the property.\r\n * @param {object} options The descriptor for the property being defined or modified.\r\n */\nexport function defineGetter(object, property, value, options) {\n  options.value = value;\n  options.writable = options.writable !== false;\n  options.enumerable = options.enumerable !== false;\n  options.configurable = options.configurable !== false;\n  Object.defineProperty(object, property, options);\n}\n\n/**\r\n * A specialized version of `.forEach` for objects.\r\n *\r\n * @param {object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {object} Returns `object`.\r\n */\nexport function objectEach(object, iteratee) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in object) {\n    if (!object.hasOwnProperty || object.hasOwnProperty && Object.prototype.hasOwnProperty.call(object, key)) {\n      if (iteratee(object[key], key, object) === false) {\n        break;\n      }\n    }\n  }\n  return object;\n}\n\n/**\r\n * Get object property by its name. Access to sub properties can be achieved by dot notation (e.q. `'foo.bar.baz'`).\r\n *\r\n * @param {object} object Object which value will be exported.\r\n * @param {string} name Object property name.\r\n * @returns {*}\r\n */\nexport function getProperty(object, name) {\n  const names = name.split('.');\n  let result = object;\n  objectEach(names, nameItem => {\n    result = result[nameItem];\n    if (result === undefined) {\n      result = undefined;\n      return false;\n    }\n  });\n  return result;\n}\n\n/**\r\n * Set a property value on the provided object. Works on nested object prop names as well (e.g. `first.name`).\r\n *\r\n * @param {object} object Object to work on.\r\n * @param {string} name Prop name.\r\n * @param {*} value Value to be assigned at the provided property.\r\n */\nexport function setProperty(object, name, value) {\n  const names = name.split('.');\n  let workingObject = object;\n  names.forEach((propName, index) => {\n    if (index !== names.length - 1) {\n      if (!hasOwnProperty(workingObject, propName)) {\n        workingObject[propName] = {};\n      }\n      workingObject = workingObject[propName];\n    } else {\n      workingObject[propName] = value;\n    }\n  });\n}\n\n/**\r\n * Return object length (recursively).\r\n *\r\n * @param {*} object Object for which we want get length.\r\n * @returns {number}\r\n */\nexport function deepObjectSize(object) {\n  if (!isObject(object)) {\n    return 0;\n  }\n  const recursObjLen = function (obj) {\n    let result = 0;\n    if (isObject(obj)) {\n      objectEach(obj, (value, key) => {\n        if (key === '__children') {\n          return;\n        }\n        result += recursObjLen(value);\n      });\n    } else {\n      result += 1;\n    }\n    return result;\n  };\n  return recursObjLen(object);\n}\n\n/**\r\n * Create object with property where its value change will be observed.\r\n *\r\n * @param {*} [defaultValue=undefined] Default value.\r\n * @param {string} [propertyToListen='value'] Property to listen.\r\n * @returns {object}\r\n */\nexport function createObjectPropListener(defaultValue) {\n  let propertyToListen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'value';\n  const privateProperty = `_${propertyToListen}`;\n  const holder = {\n    _touched: false,\n    [privateProperty]: defaultValue,\n    isTouched() {\n      return this._touched;\n    }\n  };\n  Object.defineProperty(holder, propertyToListen, {\n    get() {\n      return this[privateProperty];\n    },\n    set(value) {\n      this._touched = true;\n      this[privateProperty] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return holder;\n}\n\n/**\r\n * Check if at specified `key` there is any value for `object`.\r\n *\r\n * @param {object} object Object to search value at specific key.\r\n * @param {string} key String key to check.\r\n * @returns {boolean}\r\n */\nexport function hasOwnProperty(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}", "'use strict';\n\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar getReplacerFunction = require('../internals/get-json-replacer-function');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar $String = String;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')('stringify detection');\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) !== '[null]'\n  // WebKit converts symbol values to JSON as null\n  || $stringify({\n    a: symbol\n  }) !== '{}'\n  // V8 throws on boxed symbols\n  || $stringify(Object(symbol)) !== '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"' || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = getReplacerFunction(replacer);\n  if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined\n  args[1] = function (key, value) {\n    // some old implementations (like WebKit) could pass numbers as keys\n    if (isCallable($replacer)) value = call($replacer, this, $String(key), value);\n    if (!isSymbol(value)) return value;\n  };\n  return apply($stringify, null, args);\n};\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if (exec(low, match) && !exec(hi, next) || exec(hi, match) && !exec(low, prev)) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  }\n  return match;\n};\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({\n    target: 'JSON',\n    stat: true,\n    arity: 3,\n    forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE\n  }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}", "/* eslint-disable no-restricted-globals */\n/**\r\n * Polyfill for requestAnimationFrame.\r\n *\r\n * @param {Function} callback The function to call when it's time.\r\n * @returns {number}\r\n */\nexport function requestAnimationFrame(callback) {\n  return window.requestAnimationFrame(callback);\n}\n\n/**\r\n * Polyfill for cancelAnimationFrame.\r\n *\r\n * @param {number} id The request Id, generated by `requestAnimationFrame`.\r\n */\nexport function cancelAnimationFrame(id) {\n  window.cancelAnimationFrame(id);\n}\n\n/**\r\n * @returns {boolean}\r\n */\nexport function isTouchSupported() {\n  return 'ontouchstart' in window;\n}\n\n/**\r\n * Checks if the environment that the code runs in is a browser.\r\n *\r\n * @returns {boolean}\r\n */\nexport function isCSR() {\n  return typeof window !== 'undefined';\n}\nlet comparisonFunction;\n\n/**\r\n * Get string comparison function for sorting purposes. It supports multilingual string comparison base on Internationalization API.\r\n *\r\n * @param {string} [language] The language code used for phrases sorting.\r\n * @param {object} [options] Additional options for sort comparator.\r\n * @returns {*}\r\n */\nexport function getComparisonFunction(language) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (comparisonFunction) {\n    return comparisonFunction;\n  }\n  if (typeof Intl === 'object') {\n    comparisonFunction = new Intl.Collator(language, options).compare;\n  } else if (typeof String.prototype.localeCompare === 'function') {\n    comparisonFunction = (a, b) => `${a}`.localeCompare(b);\n  } else {\n    comparisonFunction = (a, b) => {\n      if (a === b) {\n        return 0;\n      }\n      return a > b ? -1 : 1;\n    };\n  }\n  return comparisonFunction;\n}", "import \"core-js/modules/es.array.push.js\";\nimport { arrayEach } from \"./array.mjs\";\nimport { isMacOS, isFirefox } from \"./browser.mjs\";\nexport const KEY_CODES = {\n  ALT: 18,\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  AUDIO_DOWN: isFirefox() ? 182 : 174,\n  AUDIO_MUTE: isFirefox() ? 181 : 173,\n  AUDIO_UP: isFirefox() ? 183 : 175,\n  BACKSPACE: 8,\n  CAPS_LOCK: 20,\n  COMMA: 188,\n  COMMAND_LEFT: 91,\n  COMMAND_RIGHT: 93,\n  COMMAND_FIREFOX: 224,\n  CONTROL: 17,\n  DELETE: 46,\n  END: 35,\n  ENTER: 13,\n  ESCAPE: 27,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n  F13: 124,\n  F14: 125,\n  F15: 126,\n  F16: 127,\n  F17: 128,\n  F18: 129,\n  F19: 130,\n  HOME: 36,\n  INSERT: 45,\n  MEDIA_NEXT: 176,\n  MEDIA_PLAY_PAUSE: 179,\n  MEDIA_PREV: 177,\n  MEDIA_STOP: 178,\n  NULL: 0,\n  NUM_LOCK: 144,\n  PAGE_DOWN: 34,\n  PAGE_UP: 33,\n  PAUSE: 19,\n  PERIOD: 190,\n  SCROLL_LOCK: 145,\n  SHIFT: 16,\n  SPACE: 32,\n  TAB: 9,\n  A: 65,\n  C: 67,\n  D: 68,\n  F: 70,\n  L: 76,\n  O: 79,\n  P: 80,\n  S: 83,\n  V: 86,\n  X: 88,\n  Y: 89,\n  Z: 90\n};\nconst FUNCTION_KEYS = [KEY_CODES.ALT, KEY_CODES.ARROW_DOWN, KEY_CODES.ARROW_LEFT, KEY_CODES.ARROW_RIGHT, KEY_CODES.ARROW_UP, KEY_CODES.AUDIO_DOWN, KEY_CODES.AUDIO_MUTE, KEY_CODES.AUDIO_UP, KEY_CODES.BACKSPACE, KEY_CODES.CAPS_LOCK, KEY_CODES.DELETE, KEY_CODES.END, KEY_CODES.ENTER, KEY_CODES.ESCAPE, KEY_CODES.F1, KEY_CODES.F2, KEY_CODES.F3, KEY_CODES.F4, KEY_CODES.F5, KEY_CODES.F6, KEY_CODES.F7, KEY_CODES.F8, KEY_CODES.F9, KEY_CODES.F10, KEY_CODES.F11, KEY_CODES.F12, KEY_CODES.F13, KEY_CODES.F14, KEY_CODES.F15, KEY_CODES.F16, KEY_CODES.F17, KEY_CODES.F18, KEY_CODES.F19, KEY_CODES.HOME, KEY_CODES.INSERT, KEY_CODES.MEDIA_NEXT, KEY_CODES.MEDIA_PLAY_PAUSE, KEY_CODES.MEDIA_PREV, KEY_CODES.MEDIA_STOP, KEY_CODES.NULL, KEY_CODES.NUM_LOCK, KEY_CODES.PAGE_DOWN, KEY_CODES.PAGE_UP, KEY_CODES.PAUSE, KEY_CODES.SCROLL_LOCK, KEY_CODES.SHIFT, KEY_CODES.TAB];\n\n/**\r\n * Returns true if keyCode represents a printable character.\r\n *\r\n * @param {number} keyCode The keyboard key code.\r\n * @returns {boolean}\r\n */\nexport function isPrintableChar(keyCode) {\n  return keyCode === 32 ||\n  // space\n  keyCode >= 48 && keyCode <= 57 ||\n  // 0-9\n  keyCode >= 96 && keyCode <= 111 ||\n  // numpad\n  keyCode >= 186 && keyCode <= 192 ||\n  // ;=,-./`\n  keyCode >= 219 && keyCode <= 222 ||\n  // []{}\\|\"'\n  keyCode >= 226 ||\n  // special chars (229 for Asian chars)\n  keyCode >= 65 && keyCode <= 90; // a-z\n}\n\n/**\r\n * @param {number} keyCode The keyboard key code.\r\n * @returns {boolean}\r\n */\nexport function isFunctionKey(keyCode) {\n  return FUNCTION_KEYS.includes(keyCode);\n}\n\n/**\r\n * Checks if passed key code is ctrl or cmd key. Depends on what OS the code runs it check key code based on\r\n * different meta key codes.\r\n *\r\n * @param {number} keyCode The keyboard key code.\r\n * @returns {boolean}\r\n */\nexport function isCtrlKey(keyCode) {\n  const keys = [];\n  if (isMacOS()) {\n    keys.push(KEY_CODES.COMMAND_LEFT, KEY_CODES.COMMAND_RIGHT, KEY_CODES.COMMAND_FIREFOX);\n  } else {\n    keys.push(KEY_CODES.CONTROL);\n  }\n  return keys.includes(keyCode);\n}\n\n/**\r\n * Checks if passed key code is ctrl or cmd key. This helper checks if the key code matches to meta keys\r\n * regardless of the OS on which it is running.\r\n *\r\n * @param {number} keyCode The keyboard key code.\r\n * @returns {boolean}\r\n */\nexport function isCtrlMetaKey(keyCode) {\n  return [KEY_CODES.CONTROL, KEY_CODES.COMMAND_LEFT, KEY_CODES.COMMAND_RIGHT, KEY_CODES.COMMAND_FIREFOX].includes(keyCode);\n}\n\n/**\r\n * @param {number} keyCode The keyboard key code.\r\n * @param {string} baseCode The list of the key codes to compare with.\r\n * @returns {boolean}\r\n */\nexport function isKey(keyCode, baseCode) {\n  const keys = baseCode.split('|');\n  let result = false;\n  arrayEach(keys, key => {\n    if (keyCode === KEY_CODES[key]) {\n      result = true;\n      return false;\n    }\n  });\n  return result;\n}", "/**\r\n * Prevent other listeners of the same event from being called.\r\n *\r\n * @param {Event} event The mouse event object.\r\n */\nexport function stopImmediatePropagation(event) {\n  event.isImmediatePropagationEnabled = false;\n  event.cancelBubble = true;\n}\n\n/**\r\n * Check if event was stopped by `stopImmediatePropagation`.\r\n *\r\n * @param {Event} event The mouse event object.\r\n * @returns {boolean}\r\n */\nexport function isImmediatePropagationStopped(event) {\n  return event.isImmediatePropagationEnabled === false;\n}\n\n/**\r\n * Check if provided event was triggered by clicking the right mouse button.\r\n *\r\n * @param {Event} event The mouse event object.\r\n * @returns {boolean}\r\n */\nexport function isRightClick(event) {\n  return event.button === 2;\n}\n\n/**\r\n * Check if provided event was triggered by clicking the left mouse button.\r\n *\r\n * @param {Event} event The mouse event object.\r\n * @returns {boolean}\r\n */\nexport function isLeftClick(event) {\n  return event.button === 0;\n}\n\n/**\r\n * Check if the provided event is a touch event.\r\n *\r\n * @param {Event} event The event object.\r\n * @returns {boolean}\r\n */\nexport function isTouchEvent(event) {\n  return event instanceof TouchEvent;\n}\n\n/**\r\n * Calculates the event offset until reaching the element defined by `relativeElement` argument.\r\n *\r\n * @param {Event} event The mouse event object.\r\n * @param {HTMLElement|undefined} [untilElement] The element to which the offset will be calculated.\r\n * @returns {{ x: number, y: number }}\r\n */\nexport function offsetRelativeTo(event, untilElement) {\n  const offset = {\n    x: event.offsetX,\n    y: event.offsetY\n  };\n  let element = event.target;\n  if (!(untilElement instanceof HTMLElement) || element !== untilElement && element.contains(untilElement)) {\n    return offset;\n  }\n  while (element !== untilElement) {\n    offset.x += element.offsetLeft;\n    offset.y += element.offsetTop;\n    element = element.offsetParent;\n  }\n  return offset;\n}", "'use strict';\n\n// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');", "/* eslint-disable no-console */\n/* eslint-disable no-restricted-globals */\n/**\r\n * \"In Internet Explorer 9 (and 8), the console object is only exposed when the developer tools are opened\r\n * for a particular tab.\".\r\n *\r\n * Source: https://stackoverflow.com/a/5473193.\r\n */\nimport { isDefined } from \"./mixed.mjs\";\n/**\r\n * Logs message to the console if the `console` object is exposed.\r\n *\r\n * @param {...*} args Values which will be logged.\r\n */\nexport function log() {\n  if (isDefined(console)) {\n    console.log(...arguments);\n  }\n}\n\n/**\r\n * Logs warn to the console if the `console` object is exposed.\r\n *\r\n * @param {...*} args Values which will be logged.\r\n */\nexport function warn() {\n  if (isDefined(console)) {\n    console.warn(...arguments);\n  }\n}\n\n/**\r\n * Logs info to the console if the `console` object is exposed.\r\n *\r\n * @param {...*} args Values which will be logged.\r\n */\nexport function info() {\n  if (isDefined(console)) {\n    console.info(...arguments);\n  }\n}\n\n/**\r\n * Logs error to the console if the `console` object is exposed.\r\n *\r\n * @param {...*} args Values which will be logged.\r\n */\nexport function error() {\n  if (isDefined(console)) {\n    console.error(...arguments);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unscopables.flat-map.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { arrayEach } from \"./helpers/array.mjs\";\nimport { objectEach } from \"./helpers/object.mjs\";\nimport { substitute } from \"./helpers/string.mjs\";\nimport { warn } from \"./helpers/console.mjs\";\nimport { toSingleLine } from \"./helpers/templateLiteralTag.mjs\";\nimport { fastCall } from \"./helpers/function.mjs\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * @description\r\n *\r\n * ::: only-for javascript\r\n * Handsontable events are the common interface that function in 2 ways: as __callbacks__ and as __hooks__.\r\n * :::\r\n *\r\n * ::: only-for react\r\n * This page lists all the **Handsontable hooks** – callbacks that let you react before or after an action occurs.\r\n *\r\n * Read more on the [Events and hooks](@/guides/getting-started/events-and-hooks/events-and-hooks.md) page.\r\n * :::\r\n *\r\n * @example\r\n *\r\n * ::: only-for javascript\r\n * ```js\r\n * // using events as callbacks\r\n * ...\r\n * const hot1 = new Handsontable(document.getElementById('example1'), {\r\n *   afterChange: function(changes, source) {\r\n *     $.ajax({\r\n *       url: \"save.php',\r\n *       data: change\r\n *     });\r\n *   }\r\n * });\r\n * ...\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * <HotTable\r\n *   afterChange={(changes, source) => {\r\n *     fetch('save.php', {\r\n *       method: 'POST',\r\n *       headers: {\r\n *         'Accept': 'application/json',\r\n *         'Content-Type': 'application/json'\r\n *       },\r\n *       body: JSON.stringify(changes)\r\n *     });\r\n *   }}\r\n * />\r\n * :::\r\n *\r\n * ::: only-for javascript\r\n * ```js\r\n * // using events as plugin hooks\r\n * ...\r\n * const hot1 = new Handsontable(document.getElementById('example1'), {\r\n *   myPlugin: true\r\n * });\r\n *\r\n * const hot2 = new Handsontable(document.getElementById('example2'), {\r\n *   myPlugin: false\r\n * });\r\n *\r\n * // global hook\r\n * Handsontable.hooks.add('afterChange', function() {\r\n *   // Fired twice - for hot1 and hot2\r\n *   if (this.getSettings().myPlugin) {\r\n *     // function body - will only run for hot1\r\n *   }\r\n * });\r\n *\r\n * // local hook (has same effect as a callback)\r\n * hot2.addHook('afterChange', function() {\r\n *   // function body - will only run in #example2\r\n * });\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * const hotRef1 = useRef(null);\r\n * const hotRef2 = useRef(null);\r\n *\r\n * // Using events as plugin hooks:\r\n * ...\r\n *\r\n * <HotTable\r\n *   ref={hotRef1}\r\n *   myPlugin={true}\r\n * });\r\n *\r\n * <HotTable\r\n *   ref={hotRef2}\r\n *   myPlugin={false}\r\n * });\r\n *\r\n * ...\r\n *\r\n * const hot2 = hotRef2.current.hotInstance;\r\n * // local hook (has same effect as a callback)\r\n * hot2.addHook('afterChange', function() {\r\n *   // function body - will only run in #example2\r\n * });\r\n *\r\n * // global hook\r\n * Handsontable.hooks.add('afterChange', function() {\r\n *   // Fired twice - for hot1 and hot2\r\n *   if (this.getSettings().myPlugin) {\r\n *     // function body - will only run for first instance\r\n *   }\r\n * });\r\n * :::\r\n * ...\r\n */\n// @TODO: Move plugin description hooks to plugin?\nconst REGISTERED_HOOKS = [/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * Fired after resetting a cell's meta. This happens when the {@link Core#updateSettings} method is called.\r\n *\r\n * @event Hooks#afterCellMetaReset\r\n */\n'afterCellMetaReset',\n/**\r\n * Fired after one or more cells has been changed. The changes are triggered in any situation when the\r\n * value is entered using an editor or changed using API (e.q [`setDataAtCell`](@/api/core.md#setdataatcell) method).\r\n *\r\n * __Note:__ For performance reasons, the `changes` array is null for `\"loadData\"` source.\r\n *\r\n * @event Hooks#afterChange\r\n * @param {Array[]} changes 2D array containing information about each of the edited cells `[[row, prop, oldVal, newVal], ...]`. `row` is a visual row index.\r\n * @param {string} [source] String that identifies source of hook call ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * new Handsontable(element, {\r\n *   afterChange: (changes) => {\r\n *     changes?.forEach(([row, prop, oldValue, newValue]) => {\r\n *       // Some logic...\r\n *     });\r\n *   }\r\n * })\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * <HotTable\r\n *   afterChange={(changes, source) => {\r\n *     changes?.forEach(([row, prop, oldValue, newValue]) => {\r\n *       // Some logic...\r\n *     });\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'afterChange',\n/**\r\n * Fired each time user opens {@link ContextMenu} and after setting up the Context Menu's default options. These options are a collection\r\n * which user can select by setting an array of keys or an array of objects in {@link Options#contextMenu} option.\r\n *\r\n * @event Hooks#afterContextMenuDefaultOptions\r\n * @param {Array} predefinedItems An array of objects containing information about the pre-defined Context Menu items.\r\n */\n'afterContextMenuDefaultOptions',\n/**\r\n * Fired each time user opens {@link ContextMenu} plugin before setting up the Context Menu's items but after filtering these options by\r\n * user ([`contextMenu`](@/api/options.md#contextmenu) option). This hook can by helpful to determine if user use specified menu item or to set up\r\n * one of the menu item to by always visible.\r\n *\r\n * @event Hooks#beforeContextMenuSetItems\r\n * @param {object[]} menuItems An array of objects containing information about to generated Context Menu items.\r\n */\n'beforeContextMenuSetItems',\n/**\r\n * Fired by {@link DropdownMenu} plugin after setting up the Dropdown Menu's default options. These options are a\r\n * collection which user can select by setting an array of keys or an array of objects in {@link Options#dropdownMenu}\r\n * option.\r\n *\r\n * @event Hooks#afterDropdownMenuDefaultOptions\r\n * @param {object[]} predefinedItems An array of objects containing information about the pre-defined Context Menu items.\r\n */\n'afterDropdownMenuDefaultOptions',\n/**\r\n * Fired by {@link DropdownMenu} plugin before setting up the Dropdown Menu's items but after filtering these options\r\n * by user ([`dropdownMenu`](@/api/options.md#dropdownmenu) option). This hook can by helpful to determine if user use specified menu item or to set\r\n * up one of the menu item to by always visible.\r\n *\r\n * @event Hooks#beforeDropdownMenuSetItems\r\n * @param {object[]} menuItems An array of objects containing information about to generated Dropdown Menu items.\r\n */\n'beforeDropdownMenuSetItems',\n/**\r\n * Fired by {@link ContextMenu} plugin after hiding the Context Menu. This hook is fired when {@link Options#contextMenu}\r\n * option is enabled.\r\n *\r\n * @event Hooks#afterContextMenuHide\r\n * @param {object} context The Context Menu plugin instance.\r\n */\n'afterContextMenuHide',\n/**\r\n * Fired by {@link ContextMenu} plugin before opening the Context Menu. This hook is fired when {@link Options#contextMenu}\r\n * option is enabled.\r\n *\r\n * @event Hooks#beforeContextMenuShow\r\n * @param {object} context The Context Menu instance.\r\n */\n'beforeContextMenuShow',\n/**\r\n * Fired by {@link ContextMenu} plugin after opening the Context Menu. This hook is fired when {@link Options#contextMenu}\r\n * option is enabled.\r\n *\r\n * @event Hooks#afterContextMenuShow\r\n * @param {object} context The Context Menu plugin instance.\r\n */\n'afterContextMenuShow',\n/**\r\n * Fired by {@link CopyPaste} plugin after reaching the copy limit while copying data. This hook is fired when\r\n * {@link Options#copyPaste} option is enabled.\r\n *\r\n * @event Hooks#afterCopyLimit\r\n * @param {number} selectedRows Count of selected copyable rows.\r\n * @param {number} selectedColumns Count of selected copyable columns.\r\n * @param {number} copyRowsLimit Current copy rows limit.\r\n * @param {number} copyColumnsLimit Current copy columns limit.\r\n */\n'afterCopyLimit',\n/**\r\n * Fired before created a new column.\r\n *\r\n * @event Hooks#beforeCreateCol\r\n * @param {number} index Represents the visual index of first newly created column in the data source array.\r\n * @param {number} amount Number of newly created columns in the data source array.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @returns {*} If `false` then creating columns is cancelled.\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * // Return `false` to cancel column inserting.\r\n * new Handsontable(element, {\r\n *   beforeCreateCol: function(data, coords) {\r\n *     return false;\r\n *   }\r\n * });\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * // Return `false` to cancel column inserting.\r\n * <HotTable\r\n *   beforeCreateCol={(data, coords) => {\r\n *     return false;\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'beforeCreateCol',\n/**\r\n * Fired after the order of columns has changed.\r\n * This hook is fired by changing column indexes of any type supported by the {@link IndexMapper}.\r\n *\r\n * @event Hooks#afterColumnSequenceChange\r\n * @param {'init'|'remove'|'insert'|'move'|'update'} [source] A string that indicates what caused the change to the order of columns.\r\n */\n'afterColumnSequenceChange',\n/**\r\n * Fired after created a new column.\r\n *\r\n * @event Hooks#afterCreateCol\r\n * @param {number} index Represents the visual index of first newly created column in the data source.\r\n * @param {number} amount Number of newly created columns in the data source.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'afterCreateCol',\n/**\r\n * Fired before created a new row.\r\n *\r\n * @event Hooks#beforeCreateRow\r\n * @param {number} index Represents the visual index of first newly created row in the data source array.\r\n * @param {number} amount Number of newly created rows in the data source array.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @returns {*|boolean} If false is returned the action is canceled.\r\n */\n'beforeCreateRow',\n/**\r\n * Fired after created a new row.\r\n *\r\n * @event Hooks#afterCreateRow\r\n * @param {number} index Represents the visual index of first newly created row in the data source array.\r\n * @param {number} amount Number of newly created rows in the data source array.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'afterCreateRow',\n/**\r\n * Fired after all selected cells are deselected.\r\n *\r\n * @event Hooks#afterDeselect\r\n */\n'afterDeselect',\n/**\r\n * Fired after destroying the Handsontable instance.\r\n *\r\n * @event Hooks#afterDestroy\r\n */\n'afterDestroy',\n/**\r\n * Hook fired after `keydown` event is handled.\r\n *\r\n * @event Hooks#afterDocumentKeyDown\r\n * @param {Event} event A native `keydown` event object.\r\n */\n'afterDocumentKeyDown',\n/**\r\n * Fired inside the Walkontable's selection `draw` method. Can be used to add additional class names to cells, depending on the current selection.\r\n *\r\n * @event Hooks#afterDrawSelection\r\n * @param {number} currentRow Row index of the currently processed cell.\r\n * @param {number} currentColumn Column index of the currently cell.\r\n * @param {number[]} cornersOfSelection Array of the current selection in a form of `[startRow, startColumn, endRow, endColumn]`.\r\n * @param {number|undefined} layerLevel Number indicating which layer of selection is currently processed.\r\n * @since 0.38.1\r\n * @returns {string|undefined} Can return a `String`, which will act as an additional `className` to be added to the currently processed cell.\r\n */\n'afterDrawSelection',\n/**\r\n * Fired inside the Walkontable's `refreshSelections` method. Can be used to remove additional class names from all cells in the table.\r\n *\r\n * @event Hooks#beforeRemoveCellClassNames\r\n * @since 0.38.1\r\n * @returns {string[]|undefined} Can return an `Array` of `String`s. Each of these strings will act like class names to be removed from all the cells in the table.\r\n */\n'beforeRemoveCellClassNames',\n/**\r\n * Fired after getting the cell settings.\r\n *\r\n * @event Hooks#afterGetCellMeta\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {object} cellProperties Object containing the cell properties.\r\n */\n'afterGetCellMeta',\n/**\r\n * Fired after retrieving information about a column header and appending it to the table header.\r\n *\r\n * @event Hooks#afterGetColHeader\r\n * @param {number} column Visual column index.\r\n * @param {HTMLTableCellElement} TH Header's TH element.\r\n * @param {number} [headerLevel=0] (Since 12.2.0) Header level index. Accepts positive (0 to n)\r\n *                                 and negative (-1 to -n) values. For positive values, 0 points to the\r\n *                                 topmost header. For negative values, -1 points to the bottom-most\r\n *                                 header (the header closest to the cells).\r\n */\n'afterGetColHeader',\n/**\r\n * Fired after retrieving information about a row header and appending it to the table header.\r\n *\r\n * @event Hooks#afterGetRowHeader\r\n * @param {number} row Visual row index.\r\n * @param {HTMLTableCellElement} TH Header's TH element.\r\n */\n'afterGetRowHeader',\n/**\r\n * Fired after the Handsontable instance is initiated.\r\n *\r\n * @event Hooks#afterInit\r\n */\n'afterInit',\n/**\r\n * Fired after Handsontable's [`data`](@/api/options.md#data)\r\n * gets modified by the [`loadData()`](@/api/core.md#loaddata) method\r\n * or the [`updateSettings()`](@/api/core.md#updatesettings) method.\r\n *\r\n * Read more:\r\n * - [Binding to data](@/guides/getting-started/binding-to-data/binding-to-data.md)\r\n * - [Saving data](@/guides/getting-started/saving-data/saving-data.md)\r\n *\r\n * @event Hooks#afterLoadData\r\n * @param {Array} sourceData An [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays), or an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects), that contains Handsontable's data\r\n * @param {boolean} initialLoad A flag that indicates whether the data was loaded at Handsontable's initialization (`true`) or later (`false`)\r\n * @param {string} source The source of the call\r\n */\n'afterLoadData',\n/**\r\n * Fired after the [`updateData()`](@/api/core.md#updatedata) method\r\n * modifies Handsontable's [`data`](@/api/options.md#data).\r\n *\r\n * Read more:\r\n * - [Binding to data](@/guides/getting-started/binding-to-data/binding-to-data.md)\r\n * - [Saving data](@/guides/getting-started/saving-data/saving-data.md)\r\n *\r\n * @event Hooks#afterUpdateData\r\n * @since 11.1.0\r\n * @param {Array} sourceData An [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays), or an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects), that contains Handsontable's data\r\n * @param {boolean} initialLoad A flag that indicates whether the data was loaded at Handsontable's initialization (`true`) or later (`false`)\r\n * @param {string} source The source of the call\r\n */\n'afterUpdateData',\n/**\r\n * Fired after a scroll event, which is identified as a momentum scroll (e.g. on an iPad).\r\n *\r\n * @event Hooks#afterMomentumScroll\r\n */\n'afterMomentumScroll',\n/**\r\n * Fired after a `mousedown` event is triggered on the cell corner (the drag handle).\r\n *\r\n * @event Hooks#afterOnCellCornerMouseDown\r\n * @param {Event} event `mousedown` event object.\r\n */\n'afterOnCellCornerMouseDown',\n/**\r\n * Fired after a `dblclick` event is triggered on the cell corner (the drag handle).\r\n *\r\n * @event Hooks#afterOnCellCornerDblClick\r\n * @param {Event} event `dblclick` event object.\r\n */\n'afterOnCellCornerDblClick',\n/**\r\n * Fired after clicking on a cell or row/column header. In case the row/column header was clicked, the coordinate\r\n * indexes are negative.\r\n *\r\n * For example clicking on the row header of cell (0, 0) results with `afterOnCellMouseDown` called\r\n * with coordinates `{row: 0, col: -1}`.\r\n *\r\n * @event Hooks#afterOnCellMouseDown\r\n * @param {Event} event `mousedown` event object.\r\n * @param {CellCoords} coords Coordinates object containing the visual row and visual column indexes of the clicked cell.\r\n * @param {HTMLTableCellElement} TD Cell's TD (or TH) element.\r\n */\n'afterOnCellMouseDown',\n/**\r\n * Fired after clicking on a cell or row/column header. In case the row/column header was clicked, the coordinate\r\n * indexes are negative.\r\n *\r\n * For example clicking on the row header of cell (0, 0) results with `afterOnCellMouseUp` called\r\n * with coordinates `{row: 0, col: -1}`.\r\n *\r\n * @event Hooks#afterOnCellMouseUp\r\n * @param {Event} event `mouseup` event object.\r\n * @param {CellCoords} coords Coordinates object containing the visual row and visual column indexes of the clicked cell.\r\n * @param {HTMLTableCellElement} TD Cell's TD (or TH) element.\r\n */\n'afterOnCellMouseUp',\n/**\r\n * Fired after clicking right mouse button on a cell or row/column header.\r\n *\r\n * For example clicking on the row header of cell (0, 0) results with `afterOnCellContextMenu` called\r\n * with coordinates `{row: 0, col: -1}`.\r\n *\r\n * @event Hooks#afterOnCellContextMenu\r\n * @since 4.1.0\r\n * @param {Event} event `contextmenu` event object.\r\n * @param {CellCoords} coords Coordinates object containing the visual row and visual column indexes of the clicked cell.\r\n * @param {HTMLTableCellElement} TD Cell's TD (or TH) element.\r\n */\n'afterOnCellContextMenu',\n/**\r\n * Fired after hovering a cell or row/column header with the mouse cursor. In case the row/column header was\r\n * hovered, the index is negative.\r\n *\r\n * For example, hovering over the row header of cell (0, 0) results with `afterOnCellMouseOver` called\r\n * with coords `{row: 0, col: -1}`.\r\n *\r\n * @event Hooks#afterOnCellMouseOver\r\n * @param {Event} event `mouseover` event object.\r\n * @param {CellCoords} coords Hovered cell's visual coordinate object.\r\n * @param {HTMLTableCellElement} TD Cell's TD (or TH) element.\r\n */\n'afterOnCellMouseOver',\n/**\r\n * Fired after leaving a cell or row/column header with the mouse cursor.\r\n *\r\n * @event Hooks#afterOnCellMouseOut\r\n * @param {Event} event `mouseout` event object.\r\n * @param {CellCoords} coords Leaved cell's visual coordinate object.\r\n * @param {HTMLTableCellElement} TD Cell's TD (or TH) element.\r\n */\n'afterOnCellMouseOut',\n/**\r\n * Fired after one or more columns are removed.\r\n *\r\n * @event Hooks#afterRemoveCol\r\n * @param {number} index Visual index of starter column.\r\n * @param {number} amount An amount of removed columns.\r\n * @param {number[]} physicalColumns An array of physical columns removed from the data source.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'afterRemoveCol',\n/**\r\n * Fired after one or more rows are removed.\r\n *\r\n * @event Hooks#afterRemoveRow\r\n * @param {number} index Visual index of starter row.\r\n * @param {number} amount An amount of removed rows.\r\n * @param {number[]} physicalRows An array of physical rows removed from the data source.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'afterRemoveRow',\n/**\r\n * Fired before starting rendering the cell.\r\n *\r\n * @event Hooks#beforeRenderer\r\n * @param {HTMLTableCellElement} TD Currently rendered cell's TD element.\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {string|number} prop Column property name or a column index, if datasource is an array of arrays.\r\n * @param {*} value Value of the rendered cell.\r\n * @param {object} cellProperties Object containing the cell's properties.\r\n */\n'beforeRenderer',\n/**\r\n * Fired after finishing rendering the cell (after the renderer finishes).\r\n *\r\n * @event Hooks#afterRenderer\r\n * @param {HTMLTableCellElement} TD Currently rendered cell's TD element.\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {string|number} prop Column property name or a column index, if datasource is an array of arrays.\r\n * @param {*} value Value of the rendered cell.\r\n * @param {object} cellProperties Object containing the cell's properties.\r\n */\n'afterRenderer',\n/**\r\n * Fired after the order of rows has changed.\r\n * This hook is fired by changing row indexes of any type supported by the {@link IndexMapper}.\r\n *\r\n * @event Hooks#afterRowSequenceChange\r\n * @param {'init'|'remove'|'insert'|'move'|'update'} [source] A string that indicates what caused the change to the order of rows.\r\n */\n'afterRowSequenceChange',\n/**\r\n * Fired before the vertical viewport scroll. Triggered by the [`scrollViewportTo()`](@/api/core.md#scrollviewportto)\r\n * method or table internals.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeViewportScrollVertically\r\n * @param {number} visualRow Visual row index.\r\n * @returns {number | boolean} Returns modified row index (or the same as passed in the method argument) to which\r\n * the viewport will be scrolled. If the returned value is `false`, the scrolling will be canceled.\r\n */\n'beforeViewportScrollVertically',\n/**\r\n * Fired before the horizontal viewport scroll. Triggered by the [`scrollViewportTo()`](@/api/core.md#scrollviewportto)\r\n * method or table internals.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeViewportScrollHorizontally\r\n * @param {number} visualColumn Visual column index.\r\n * @returns {number | boolean} Returns modified column index (or the same as passed in the method argument) to which\r\n * the viewport will be scrolled. If the returned value is `false`, the scrolling will be canceled.\r\n */\n'beforeViewportScrollHorizontally',\n/**\r\n * Fired before the vertical or horizontal viewport scroll. Triggered by the [`scrollViewportTo()`](@/api/core.md#scrollviewportto)\r\n * method or table internals.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeViewportScroll\r\n */\n'beforeViewportScroll',\n/**\r\n * Fired after the horizontal scroll event.\r\n *\r\n * @event Hooks#afterScrollHorizontally\r\n */\n'afterScrollHorizontally',\n/**\r\n * Fired after the vertical scroll event.\r\n *\r\n * @event Hooks#afterScrollVertically\r\n */\n'afterScrollVertically',\n/**\r\n * Fired after the vertical or horizontal scroll event.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#afterScroll\r\n */\n'afterScroll',\n/**\r\n * Fired after one or more cells are selected (e.g. during mouse move).\r\n *\r\n * @event Hooks#afterSelection\r\n * @param {number} row Selection start visual row index.\r\n * @param {number} column Selection start visual column index.\r\n * @param {number} row2 Selection end visual row index.\r\n * @param {number} column2 Selection end visual column index.\r\n * @param {object} preventScrolling A reference to the observable object with the `value` property.\r\n *                                  Property `preventScrolling.value` expects a boolean value that\r\n *                                  Handsontable uses to control scroll behavior after selection.\r\n * @param {number} selectionLayerLevel The number which indicates what selection layer is currently modified.\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * new Handsontable(element, {\r\n *   afterSelection: (row, column, row2, column2, preventScrolling, selectionLayerLevel) => {\r\n *     // If set to `false` (default): when cell selection is outside the viewport,\r\n *     // Handsontable scrolls the viewport to cell selection's end corner.\r\n *     // If set to `true`: when cell selection is outside the viewport,\r\n *     // Handsontable doesn't scroll to cell selection's end corner.\r\n *     preventScrolling.value = true;\r\n *   }\r\n * })\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * <HotTable\r\n *   afterSelection={(row, column, row2, column2, preventScrolling, selectionLayerLevel) => {\r\n *     // If set to `false` (default): when cell selection is outside the viewport,\r\n *     // Handsontable scrolls the viewport to cell selection's end corner.\r\n *     // If set to `true`: when cell selection is outside the viewport,\r\n *     // Handsontable doesn't scroll to cell selection's end corner.\r\n *     preventScrolling.value = true;\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'afterSelection',\n/**\r\n * Fired after one or more cells are selected.\r\n *\r\n * The `prop` and `prop2` arguments represent the source object property name instead of the column number.\r\n *\r\n * @event Hooks#afterSelectionByProp\r\n * @param {number} row Selection start visual row index.\r\n * @param {string} prop Selection start data source object property name.\r\n * @param {number} row2 Selection end visual row index.\r\n * @param {string} prop2 Selection end data source object property name.\r\n * @param {object} preventScrolling A reference to the observable object with the `value` property.\r\n *                                  Property `preventScrolling.value` expects a boolean value that\r\n *                                  Handsontable uses to control scroll behavior after selection.\r\n * @param {number} selectionLayerLevel The number which indicates what selection layer is currently modified.\r\n * @example\r\n * ```js\r\n * ::: only-for javascript\r\n * new Handsontable(element, {\r\n *   afterSelectionByProp: (row, column, row2, column2, preventScrolling, selectionLayerLevel) => {\r\n *     // setting if prevent scrolling after selection\r\n *     preventScrolling.value = true;\r\n *   }\r\n * })\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * <HotTable\r\n *   afterSelectionByProp={(row, column, row2, column2, preventScrolling, selectionLayerLevel) => {\r\n *     // setting if prevent scrolling after selection\r\n *     preventScrolling.value = true;\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'afterSelectionByProp',\n/**\r\n * Fired after one or more cells are selected (e.g. on mouse up).\r\n *\r\n * @event Hooks#afterSelectionEnd\r\n * @param {number} row Selection start visual row index.\r\n * @param {number} column Selection start visual column index.\r\n * @param {number} row2 Selection end visual row index.\r\n * @param {number} column2 Selection end visual column index.\r\n * @param {number} selectionLayerLevel The number which indicates what selection layer is currently modified.\r\n */\n'afterSelectionEnd',\n/**\r\n * Fired after one or more cells are selected (e.g. on mouse up).\r\n *\r\n * The `prop` and `prop2` arguments represent the source object property name instead of the column number.\r\n *\r\n * @event Hooks#afterSelectionEndByProp\r\n * @param {number} row Selection start visual row index.\r\n * @param {string} prop Selection start data source object property index.\r\n * @param {number} row2 Selection end visual row index.\r\n * @param {string} prop2 Selection end data source object property index.\r\n * @param {number} selectionLayerLevel The number which indicates what selection layer is currently modified.\r\n */\n'afterSelectionEndByProp',\n/**\r\n * Fired after the focus position within a selected range is changed.\r\n *\r\n * @since 14.3.0\r\n * @event Hooks#afterSelectionFocusSet\r\n * @param {number} row The focus visual row index position.\r\n * @param {number} column The focus visual column index position.\r\n * @param {object} preventScrolling A reference to the observable object with the `value` property.\r\n *                                  Property `preventScrolling.value` expects a boolean value that\r\n *                                  Handsontable uses to control scroll behavior after selection.\r\n * @example\r\n * ```js\r\n * ::: only-for javascript\r\n * new Handsontable(element, {\r\n *   afterSelectionFocusSet: (row, column, preventScrolling) => {\r\n *     // If set to `false` (default): when focused cell selection is outside the viewport,\r\n *     // Handsontable scrolls the viewport to that cell.\r\n *     // If set to `true`: when focused cell selection is outside the viewport,\r\n *     // Handsontable doesn't scroll the viewport.\r\n *     preventScrolling.value = true;\r\n *   }\r\n * })\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * <HotTable\r\n *   afterSelectionFocusSet={(row, column, preventScrolling) => {\r\n *     // If set to `false` (default): when focused cell selection is outside the viewport,\r\n *     // Handsontable scrolls the viewport to that cell.\r\n *     // If set to `true`: when focused cell selection is outside the viewport,\r\n *     // Handsontable doesn't scroll the viewport.\r\n *     preventScrolling.value = true;\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'afterSelectionFocusSet',\n/**\r\n * Fired before one or more columns are selected (e.g. During mouse header click or {@link Core#selectColumns} API call).\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeSelectColumns\r\n * @param {CellCoords} from Selection start coords object.\r\n * @param {CellCoords} to Selection end coords object.\r\n * @param {CellCoords} highlight Selection cell focus coords object.\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * new Handsontable(element, {\r\n *   beforeSelectColumns: (from, to, highlight) => {\r\n *     // Extend the column selection by one column left and one column right.\r\n *     from.col = Math.max(from.col - 1, 0);\r\n *     to.col = Math.min(to.col + 1, this.countCols() - 1);\r\n *   }\r\n * })\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * <HotTable\r\n *   beforeSelectColumns={(from, to, highlight) => {\r\n *     // Extend the column selection by one column left and one column right.\r\n *     from.col = Math.max(from.col - 1, 0);\r\n *     to.col = Math.min(to.col + 1, this.countCols() - 1);\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'beforeSelectColumns',\n/**\r\n * Fired after one or more columns are selected (e.g. during mouse header click or {@link Core#selectColumns} API call).\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#afterSelectColumns\r\n * @param {CellCoords} from Selection start coords object.\r\n * @param {CellCoords} to Selection end coords object.\r\n * @param {CellCoords} highlight Selection cell focus coords object.\r\n */\n'afterSelectColumns',\n/**\r\n * Fired before one or more rows are selected (e.g. during mouse header click or {@link Core#selectRows} API call).\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeSelectRows\r\n * @param {CellCoords} from Selection start coords object.\r\n * @param {CellCoords} to Selection end coords object.\r\n * @param {CellCoords} highlight Selection cell focus coords object.\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * new Handsontable(element, {\r\n *   beforeSelectRows: (from, to, highlight) => {\r\n *     // Extend the row selection by one row up and one row bottom more.\r\n *     from.row = Math.max(from.row - 1, 0);\r\n *     to.row = Math.min(to.row + 1, this.countRows() - 1);\r\n *   }\r\n * })\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * <HotTable\r\n *   beforeSelectRows={(from, to, highlight) => {\r\n *     // Extend the row selection by one row up and one row bottom more.\r\n *     from.row = Math.max(from.row - 1, 0);\r\n *     to.row = Math.min(to.row + 1, this.countRows() - 1);\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'beforeSelectRows',\n/**\r\n * Fired after one or more rows are selected (e.g. during mouse header click or {@link Core#selectRows} API call).\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#afterSelectRows\r\n * @param {CellCoords} from Selection start coords object.\r\n * @param {CellCoords} to Selection end coords object.\r\n * @param {CellCoords} highlight Selection cell focus coords object.\r\n */\n'afterSelectRows',\n/**\r\n * Fired after cell meta is changed.\r\n *\r\n * @event Hooks#afterSetCellMeta\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {string} key The updated meta key.\r\n * @param {*} value The updated meta value.\r\n */\n'afterSetCellMeta',\n/**\r\n * Fired after cell meta is removed.\r\n *\r\n * @event Hooks#afterRemoveCellMeta\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {string} key The removed meta key.\r\n * @param {*} value Value which was under removed key of cell meta.\r\n */\n'afterRemoveCellMeta',\n/**\r\n * Fired after cell data was changed.\r\n *\r\n * @event Hooks#afterSetDataAtCell\r\n * @param {Array} changes An array of changes in format `[[row, column, oldValue, value], ...]`.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'afterSetDataAtCell',\n/**\r\n * Fired after cell data was changed.\r\n * Called only when [`setDataAtRowProp`](@/api/core.md#setdataatrowprop) was executed.\r\n *\r\n * @event Hooks#afterSetDataAtRowProp\r\n * @param {Array} changes An array of changes in format `[[row, prop, oldValue, value], ...]`.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'afterSetDataAtRowProp',\n/**\r\n * Fired after cell source data was changed.\r\n *\r\n * @event Hooks#afterSetSourceDataAtCell\r\n * @since 8.0.0\r\n * @param {Array} changes An array of changes in format `[[row, column, oldValue, value], ...]`.\r\n * @param {string} [source] String that identifies source of hook call.\r\n */\n'afterSetSourceDataAtCell',\n/**\r\n * Fired after calling the [`updateSettings`](@/api/core.md#updatesettings) method.\r\n *\r\n * @event Hooks#afterUpdateSettings\r\n * @param {object} newSettings New settings object.\r\n */\n'afterUpdateSettings',\n/**\r\n * @description\r\n * A plugin hook executed after validator function, only if validator function is defined.\r\n * Validation result is the first parameter. This can be used to determinate if validation passed successfully or not.\r\n *\r\n * __Returning false from the callback will mark the cell as invalid__.\r\n *\r\n * @event Hooks#afterValidate\r\n * @param {boolean} isValid `true` if valid, `false` if not.\r\n * @param {*} value The value in question.\r\n * @param {number} row Visual row index.\r\n * @param {string|number} prop Property name / visual column index.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @returns {undefined | boolean} If `false` the cell will be marked as invalid, `true` otherwise.\r\n */\n'afterValidate',\n/**\r\n * Fired before successful change of language (when proper language code was set).\r\n *\r\n * @event Hooks#beforeLanguageChange\r\n * @since 0.35.0\r\n * @param {string} languageCode New language code.\r\n */\n'beforeLanguageChange',\n/**\r\n * Fired after successful change of language (when proper language code was set).\r\n *\r\n * @event Hooks#afterLanguageChange\r\n * @since 0.35.0\r\n * @param {string} languageCode New language code.\r\n */\n'afterLanguageChange',\n/**\r\n * Fired by {@link Autofill} plugin before populating the data in the autofill feature. This hook is fired when\r\n * {@link Options#fillHandle} option is enabled.\r\n *\r\n * @event Hooks#beforeAutofill\r\n * @param {Array[]} selectionData Data the autofill operation will start from.\r\n * @param {CellRange} sourceRange The range values will be filled from.\r\n * @param {CellRange} targetRange The range new values will be filled into.\r\n * @param {string} direction Declares the direction of the autofill. Possible values: `up`, `down`, `left`, `right`.\r\n *\r\n * @returns {boolean|Array[]} If false, the operation is cancelled. If array of arrays, the returned data\r\n *                              will be passed into [`populateFromArray`](@/api/core.md#populatefromarray) instead of the default autofill\r\n *                              algorithm's result.\r\n */\n'beforeAutofill',\n/**\r\n * Fired by {@link Autofill} plugin after populating the data in the autofill feature. This hook is fired when\r\n * {@link Options#fillHandle} option is enabled.\r\n *\r\n * @event Hooks#afterAutofill\r\n * @since 8.0.0\r\n * @param {Array[]} fillData The data that was used to fill the `targetRange`. If `beforeAutofill` was used\r\n *                            and returned `[[]]`, this will be the same object that was returned from `beforeAutofill`.\r\n * @param {CellRange} sourceRange The range values will be filled from.\r\n * @param {CellRange} targetRange The range new values will be filled into.\r\n * @param {string} direction Declares the direction of the autofill. Possible values: `up`, `down`, `left`, `right`.\r\n */\n'afterAutofill',\n/**\r\n * Fired before aligning the cell contents.\r\n *\r\n * @event Hooks#beforeCellAlignment\r\n * @param {object} stateBefore An object with class names defining the cell alignment.\r\n * @param {CellRange[]} range An array of `CellRange` coordinates where the alignment will be applied.\r\n * @param {string} type Type of the alignment - either `horizontal` or `vertical`.\r\n * @param {string} alignmentClass String defining the alignment class added to the cell.\r\n * Possible values: `htLeft` , `htCenter`, `htRight`, `htJustify`, `htTop`, `htMiddle`, `htBottom`.\r\n */\n'beforeCellAlignment',\n/**\r\n * Fired before one or more cells are changed.\r\n *\r\n * Use this hook to silently alter the user's changes before Handsontable re-renders.\r\n *\r\n * To ignore the user's changes, use a nullified array or return `false`.\r\n *\r\n * @event Hooks#beforeChange\r\n * @param {Array[]} changes 2D array containing information about each of the edited cells `[[row, prop, oldVal, newVal], ...]`. `row` is a visual row index.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @returns {undefined | boolean} If `false` all changes were cancelled, `true` otherwise.\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * // to alter a single change, overwrite the value with `changes[i][3]`\r\n * new Handsontable(element, {\r\n *   beforeChange: (changes, source) => {\r\n *     // [[row, prop, oldVal, newVal], ...]\r\n *     changes[0][3] = 10;\r\n *   }\r\n * });\r\n *\r\n * // to ignore a single change, set `changes[i]` to `null`\r\n * // or remove `changes[i]` from the array, by using `changes.splice(i, 1)`\r\n * new Handsontable(element, {\r\n *   beforeChange: (changes, source) => {\r\n *     // [[row, prop, oldVal, newVal], ...]\r\n *     changes[0] = null;\r\n *   }\r\n * });\r\n *\r\n * // to ignore all changes, return `false`\r\n * // or set the array's length to 0, by using `changes.length = 0`\r\n * new Handsontable(element, {\r\n *   beforeChange: (changes, source) => {\r\n *     // [[row, prop, oldVal, newVal], ...]\r\n *     return false;\r\n *   }\r\n * });\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * // to alter a single change, overwrite the desired value with `changes[i][3]`\r\n * <HotTable\r\n *   beforeChange={(changes, source) => {\r\n *     // [[row, prop, oldVal, newVal], ...]\r\n *     changes[0][3] = 10;\r\n *   }}\r\n * />\r\n *\r\n * // to ignore a single change, set `changes[i]` to `null`\r\n * // or remove `changes[i]` from the array, by using changes.splice(i, 1).\r\n * <HotTable\r\n *   beforeChange={(changes, source) => {\r\n *     // [[row, prop, oldVal, newVal], ...]\r\n *     changes[0] = null;\r\n *   }}\r\n * />\r\n *\r\n * // to ignore all changes, return `false`\r\n * // or set the array's length to 0 (`changes.length = 0`)\r\n * <HotTable\r\n *   beforeChange={(changes, source) => {\r\n *     // [[row, prop, oldVal, newVal], ...]\r\n *     return false;\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'beforeChange',\n/**\r\n * Fired right before rendering the changes.\r\n *\r\n * @event Hooks#beforeChangeRender\r\n * @param {Array[]} changes Array in form of `[row, prop, oldValue, newValue]`.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'beforeChangeRender',\n/**\r\n * Fired before drawing the borders.\r\n *\r\n * @event Hooks#beforeDrawBorders\r\n * @param {Array} corners Array specifying the current selection borders.\r\n * @param {string} borderClassName Specifies the border class name.\r\n */\n'beforeDrawBorders',\n/**\r\n * Fired before getting cell settings.\r\n *\r\n * @event Hooks#beforeGetCellMeta\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {object} cellProperties Object containing the cell's properties.\r\n */\n'beforeGetCellMeta',\n/**\r\n * Fired before cell meta is removed.\r\n *\r\n * @event Hooks#beforeRemoveCellMeta\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {string} key The removed meta key.\r\n * @param {*} value Value which is under removed key of cell meta.\r\n * @returns {*|boolean} If false is returned the action is canceled.\r\n */\n'beforeRemoveCellMeta',\n/**\r\n * Fired before the Handsontable instance is initiated.\r\n *\r\n * @event Hooks#beforeInit\r\n */\n'beforeInit',\n/**\r\n * Fired before the Walkontable instance is initiated.\r\n *\r\n * @event Hooks#beforeInitWalkontable\r\n * @param {object} walkontableConfig Walkontable configuration object.\r\n */\n'beforeInitWalkontable',\n/**\r\n * Fired before Handsontable's [`data`](@/api/options.md#data)\r\n * gets modified by the [`loadData()`](@/api/core.md#loaddata) method\r\n * or the [`updateSettings()`](@/api/core.md#updatesettings) method.\r\n *\r\n * Read more:\r\n * - [Binding to data](@/guides/getting-started/binding-to-data/binding-to-data.md)\r\n * - [Saving data](@/guides/getting-started/saving-data/saving-data.md)\r\n *\r\n * @event Hooks#beforeLoadData\r\n * @since 8.0.0\r\n * @param {Array} sourceData An [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays), or an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects), that contains Handsontable's data\r\n * @param {boolean} initialLoad A flag that indicates whether the data was loaded at Handsontable's initialization (`true`) or later (`false`)\r\n * @param {string} source The source of the call\r\n * @returns {Array} The returned array will be used as Handsontable's new dataset.\r\n */\n'beforeLoadData',\n/**\r\n * Fired before the [`updateData()`](@/api/core.md#updatedata) method\r\n * modifies Handsontable's [`data`](@/api/options.md#data).\r\n *\r\n * Read more:\r\n * - [Binding to data](@/guides/getting-started/binding-to-data/binding-to-data.md)\r\n * - [Saving data](@/guides/getting-started/saving-data/saving-data.md)\r\n *\r\n * @event Hooks#beforeUpdateData\r\n * @since 11.1.0\r\n * @param {Array} sourceData An [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays), or an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects), that contains Handsontable's data\r\n * @param {boolean} initialLoad A flag that indicates whether the data was loaded at Handsontable's initialization (`true`) or later (`false`)\r\n * @param {string} source The source of the call\r\n * @returns {Array} The returned array will be used as Handsontable's new dataset.\r\n */\n'beforeUpdateData',\n/**\r\n * Hook fired before `keydown` event is handled. It can be used to stop default key bindings.\r\n *\r\n * __Note__: To prevent default behavior you need to call `false` in your `beforeKeyDown` handler.\r\n *\r\n * @event Hooks#beforeKeyDown\r\n * @param {Event} event Original DOM event.\r\n */\n'beforeKeyDown',\n/**\r\n * Fired after the user clicked a cell, but before all the calculations related with it.\r\n *\r\n * @event Hooks#beforeOnCellMouseDown\r\n * @param {Event} event The `mousedown` event object.\r\n * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\r\n * @param {HTMLTableCellElement} TD TD element.\r\n * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\r\n *                            a boolean value that allows or disallows changing the selection for that particular area.\r\n */\n'beforeOnCellMouseDown',\n/**\r\n * Fired after the user clicked a cell.\r\n *\r\n * @event Hooks#beforeOnCellMouseUp\r\n * @param {Event} event The `mouseup` event object.\r\n * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\r\n * @param {HTMLTableCellElement} TD TD element.\r\n */\n'beforeOnCellMouseUp',\n/**\r\n * Fired after the user clicked a cell, but before all the calculations related with it.\r\n *\r\n * @event Hooks#beforeOnCellContextMenu\r\n * @since 4.1.0\r\n * @param {Event} event The `contextmenu` event object.\r\n * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\r\n * @param {HTMLTableCellElement} TD TD element.\r\n */\n'beforeOnCellContextMenu',\n/**\r\n * Fired after the user moved cursor over a cell, but before all the calculations related with it.\r\n *\r\n * @event Hooks#beforeOnCellMouseOver\r\n * @param {Event} event The `mouseover` event object.\r\n * @param {CellCoords} coords CellCoords object containing the visual coordinates of the clicked cell.\r\n * @param {HTMLTableCellElement} TD TD element.\r\n * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\r\n *                            a boolean value that allows or disallows changing the selection for that particular area.\r\n */\n'beforeOnCellMouseOver',\n/**\r\n * Fired after the user moved cursor out from a cell, but before all the calculations related with it.\r\n *\r\n * @event Hooks#beforeOnCellMouseOut\r\n * @param {Event} event The `mouseout` event object.\r\n * @param {CellCoords} coords CellCoords object containing the visual coordinates of the leaved cell.\r\n * @param {HTMLTableCellElement} TD TD element.\r\n */\n'beforeOnCellMouseOut',\n/**\r\n * Fired before one or more columns are about to be removed.\r\n *\r\n * @event Hooks#beforeRemoveCol\r\n * @param {number} index Visual index of starter column.\r\n * @param {number} amount Amount of columns to be removed.\r\n * @param {number[]} physicalColumns An array of physical columns removed from the data source.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @returns {*|boolean} If false is returned the action is canceled.\r\n */\n'beforeRemoveCol',\n/**\r\n * Fired when one or more rows are about to be removed.\r\n *\r\n * @event Hooks#beforeRemoveRow\r\n * @param {number} index Visual index of starter row.\r\n * @param {number} amount Amount of rows to be removed.\r\n * @param {number[]} physicalRows An array of physical rows removed from the data source.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @returns {*|boolean} If false is returned the action is canceled.\r\n */\n'beforeRemoveRow',\n/**\r\n * Fired before Handsontable's view-rendering engine is rendered.\r\n *\r\n * __Note:__ In Handsontable 9.x and earlier, the `beforeViewRender` hook was named `beforeRender`.\r\n *\r\n * @event Hooks#beforeViewRender\r\n * @since 10.0.0\r\n * @param {boolean} isForced If set to `true`, the rendering gets triggered by a change of settings, a change of\r\n *                           data, or a logic that needs a full Handsontable render cycle.\r\n *                           If set to `false`, the rendering gets triggered by scrolling or moving the selection.\r\n * @param {object} skipRender Object with `skipRender` property, if it is set to `true ` the next rendering cycle will be skipped.\r\n */\n'beforeViewRender',\n/**\r\n * Fired after Handsontable's view-rendering engine is rendered,\r\n * but before redrawing the selection borders and before scroll syncing.\r\n *\r\n * __Note:__ In Handsontable 9.x and earlier, the `afterViewRender` hook was named `afterRender`.\r\n *\r\n * @event Hooks#afterViewRender\r\n * @since 10.0.0\r\n * @param {boolean} isForced If set to `true`, the rendering gets triggered by a change of settings, a change of\r\n *                           data, or a logic that needs a full Handsontable render cycle.\r\n *                           If set to `false`, the rendering gets triggered by scrolling or moving the selection.\r\n */\n'afterViewRender',\n/**\r\n * Fired before Handsontable's view-rendering engine updates the view.\r\n *\r\n * The `beforeRender` event is fired right after the Handsontable\r\n * business logic is executed and right before the rendering engine starts calling\r\n * the Core logic, renderers, cell meta objects etc. to update the view.\r\n *\r\n * @event Hooks#beforeRender\r\n * @param {boolean} isForced If set to `true`, the rendering gets triggered by a change of settings, a change of\r\n *                           data, or a logic that needs a full Handsontable render cycle.\r\n *                           If set to `false`, the rendering gets triggered by scrolling or moving the selection.\r\n */\n'beforeRender',\n/**\r\n * Fired after Handsontable's view-rendering engine updates the view.\r\n *\r\n * @event Hooks#afterRender\r\n * @param {boolean} isForced If set to `true`, the rendering gets triggered by a change of settings, a change of\r\n *                           data, or a logic that needs a full Handsontable render cycle.\r\n *                           If set to `false`, the rendering gets triggered by scrolling or moving the selection.\r\n */\n'afterRender',\n/**\r\n * When the focus position is moved to the next or previous row caused by the {@link Options#autoWrapRow} option\r\n * the hook is triggered.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeRowWrap\r\n * @param {boolean} isWrapEnabled Tells whether the row wrapping is going to happen.\r\n * There may be situations where the option does not work even though it is enabled.\r\n * This is due to the priority of other options that may block the feature.\r\n * For example, when the {@link Options#minSpareCols} is defined, the {@link Options#autoWrapRow} option is not checked.\r\n * Thus, row wrapping is off.\r\n * @param {CellCoords} newCoords The new focus position. It is an object with keys `row` and `col`, where a value of `-1` indicates a header.\r\n * @param {boolean} isFlipped `true` if the row index was flipped, `false` otherwise.\r\n * Flipped index means that the user reached the last row and the focus is moved to the first row or vice versa.\r\n */\n'beforeRowWrap',\n/**\r\n * When the focus position is moved to the next or previous column caused by the {@link Options#autoWrapCol} option\r\n * the hook is triggered.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeColumnWrap\r\n * @param {boolean} isWrapEnabled Tells whether the column wrapping is going to happen.\r\n * There may be situations where the option does not work even though it is enabled.\r\n * This is due to the priority of other options that may block the feature.\r\n * For example, when the {@link Options#minSpareRows} is defined, the {@link Options#autoWrapCol} option is not checked.\r\n * Thus, column wrapping is off.\r\n * @param {CellCoords} newCoords The new focus position. It is an object with keys `row` and `col`, where a value of `-1` indicates a header.\r\n * @param {boolean} isFlipped `true` if the column index was flipped, `false` otherwise.\r\n * Flipped index means that the user reached the last column and the focus is moved to the first column or vice versa.\r\n */\n'beforeColumnWrap',\n/**\r\n * Fired before cell meta is changed.\r\n *\r\n * @event Hooks#beforeSetCellMeta\r\n * @since 8.0.0\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {string} key The updated meta key.\r\n * @param {*} value The updated meta value.\r\n * @returns {boolean|undefined} If false is returned the action is canceled.\r\n */\n'beforeSetCellMeta',\n/**\r\n * Fired before setting focus selection.\r\n *\r\n * @since 14.3.0\r\n * @event Hooks#beforeSelectionFocusSet\r\n * @param {CellCoords} coords CellCoords instance.\r\n */\n'beforeSelectionFocusSet',\n/**\r\n * Fired before setting range is started but not finished yet.\r\n *\r\n * @event Hooks#beforeSetRangeStartOnly\r\n * @param {CellCoords} coords `CellCoords` instance.\r\n */\n'beforeSetRangeStartOnly',\n/**\r\n * Fired before setting range is started.\r\n *\r\n * @event Hooks#beforeSetRangeStart\r\n * @param {CellCoords} coords `CellCoords` instance.\r\n */\n'beforeSetRangeStart',\n/**\r\n * Fired before setting range is ended.\r\n *\r\n * @event Hooks#beforeSetRangeEnd\r\n * @param {CellCoords} coords `CellCoords` instance.\r\n */\n'beforeSetRangeEnd',\n/**\r\n * Fired before applying selection coordinates to the renderable coordinates for Walkontable (rendering engine).\r\n * It occurs even when cell coordinates remain unchanged and activates during cell selection and drag selection.\r\n * The behavior of Shift+Tab differs from Arrow Left when there's no further movement possible.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#beforeSelectionHighlightSet\r\n */\n'beforeSelectionHighlightSet',\n/**\r\n * Fired before the logic of handling a touch scroll, when user started scrolling on a touch-enabled device.\r\n *\r\n * @event Hooks#beforeTouchScroll\r\n */\n'beforeTouchScroll',\n/**\r\n * Fired before cell validation, only if validator function is defined. This can be used to manipulate the value\r\n * of changed cell before it is applied to the validator function.\r\n *\r\n * __Note:__ this will not affect values of changes. This will change value *ONLY* for validation.\r\n *\r\n * @event Hooks#beforeValidate\r\n * @param {*} value Value of the cell.\r\n * @param {number} row Visual row index.\r\n * @param {string|number} prop Property name / column index.\r\n * @param {string} [source] String that identifies source of hook call\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n */\n'beforeValidate',\n/**\r\n * Fired before cell value is rendered into the DOM (through renderer function). This can be used to manipulate the\r\n * value which is passed to the renderer without modifying the renderer itself.\r\n *\r\n * @event Hooks#beforeValueRender\r\n * @param {*} value Cell value to render.\r\n * @param {object} cellProperties An object containing the cell properties.\r\n */\n'beforeValueRender',\n/**\r\n * Fired after Handsontable instance is constructed (using `new` operator).\r\n *\r\n * @event Hooks#construct\r\n */\n'construct',\n/**\r\n * Fired after Handsontable instance is initiated but before table is rendered.\r\n *\r\n * @event Hooks#init\r\n */\n'init',\n/**\r\n * Fired when a column header index is about to be modified by a callback function.\r\n *\r\n * @event Hooks#modifyColHeader\r\n * @param {number} column Visual column header index.\r\n */\n'modifyColHeader',\n/**\r\n * Fired when a column width is about to be modified by a callback function.\r\n *\r\n * @event Hooks#modifyColWidth\r\n * @param {number} width Current column width.\r\n * @param {number} column Visual column index.\r\n */\n'modifyColWidth',\n/**\r\n * Fired when rendering the list of values in the multiple-selection component of the Filters dropdown.\r\n * The hook allows modifying the displayed values in that component.\r\n *\r\n * @since 14.2.0\r\n * @event Hooks#modifyFiltersMultiSelectValue\r\n * @param {object} item The item in the list of values.\r\n * @param {object} meta The cell properties object.\r\n */\n'modifyFiltersMultiSelectValue',\n/**\r\n * Fired when focusing a cell or a header element. Allows replacing the element to be focused by returning a\r\n * different HTML element.\r\n *\r\n * @since 14.0.0\r\n * @event Hooks#modifyFocusedElement\r\n * @param {number} row Row index.\r\n * @param {number} column Column index.\r\n * @param {HTMLElement|undefined} focusedElement The element to be focused. `null` for focusedElement is intended when focused cell is hidden.\r\n */\n'modifyFocusedElement',\n/**\r\n * Fired when a row header index is about to be modified by a callback function.\r\n *\r\n * @event Hooks#modifyRowHeader\r\n * @param {number} row Visual row header index.\r\n */\n'modifyRowHeader',\n/**\r\n * Fired when a row height is about to be modified by a callback function.\r\n *\r\n * @event Hooks#modifyRowHeight\r\n * @param {number} height Row height.\r\n * @param {number} row Visual row index.\r\n */\n'modifyRowHeight',\n/**\r\n * Fired when a row height is about to be modified by a callback function. The hook allows to change the row height\r\n * for the specified overlay type.\r\n *\r\n * @since 14.5.0\r\n * @event Hooks#modifyRowHeightByOverlayName\r\n * @param {number} height Row height.\r\n * @param {number} row Visual row index.\r\n * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'|'master'} overlayName Overlay name.\r\n */\n'modifyRowHeightByOverlayName',\n/**\r\n * Fired when a data was retrieved or modified.\r\n *\r\n * @event Hooks#modifyData\r\n * @param {number} row Physical row index.\r\n * @param {number} column Visual column index.\r\n * @param {object} valueHolder Object which contains original value which can be modified by overwriting `.value` property.\r\n * @param {string} ioMode String which indicates for what operation hook is fired (`get` or `set`).\r\n */\n'modifyData',\n/**\r\n * Fired when a data was retrieved or modified from the source data set.\r\n *\r\n * @event Hooks#modifySourceData\r\n * @since 8.0.0\r\n * @param {number} row Physical row index.\r\n * @param {number} column Physical column index or property name.\r\n * @param {object} valueHolder Object which contains original value which can be modified by overwriting `.value` property.\r\n * @param {string} ioMode String which indicates for what operation hook is fired (`get` or `set`).\r\n */\n'modifySourceData',\n/**\r\n * Fired when a data was retrieved or modified.\r\n *\r\n * @event Hooks#modifyRowData\r\n * @param {number} row Physical row index.\r\n */\n'modifyRowData',\n/**\r\n * Used to modify the cell coordinates when using the [`getCell`](@/api/core.md#getcell) method, opening editor, getting value from the editor\r\n * and saving values from the closed editor.\r\n *\r\n * @event Hooks#modifyGetCellCoords\r\n * @since 0.36.0\r\n * @param {number} row Visual row index.\r\n * @param {number} column Visual column index.\r\n * @param {boolean} topmost If set to `true`, it returns the TD element from the topmost overlay. For example,\r\n *                          if the wanted cell is in the range of fixed rows, it will return a TD element\r\n *                          from the `top` overlay.\r\n * @returns {undefined|number[]}\r\n */\n'modifyGetCellCoords',\n/**\r\n * Used to modify the cell coordinates when the table is activated (going into the listen mode).\r\n *\r\n * @event Hooks#modifyFocusOnTabNavigation\r\n * @since 14.0.0\r\n * @param {'from_above' | 'from_below'} tabActivationDir The browsers Tab navigation direction. Depending on\r\n * whether the user activated the table from the element above or below, another cell can be selected.\r\n * @param {CellCoords} visualCoords The coords that will be used to select a cell.\r\n */\n'modifyFocusOnTabNavigation',\n/**\r\n * Allows modify the visual row index that is used to retrieve the row header element (TH) before it's\r\n * highlighted (proper CSS class names are added). Modifying the visual row index allows building a custom\r\n * implementation of the nested headers feature or other features that require highlighting other DOM\r\n * elements than that the rendering engine, by default, would have highlighted.\r\n *\r\n * @event Hooks#beforeHighlightingRowHeader\r\n * @since 8.4.0\r\n * @param {number} row Visual row index.\r\n * @param {number} headerLevel Column header level (0 = most distant to the table).\r\n * @param {object} highlightMeta An object that contains additional information about processed selection.\r\n * @returns {number|undefined}\r\n */\n'beforeHighlightingRowHeader',\n/**\r\n * Allows modify the visual column index that is used to retrieve the column header element (TH) before it's\r\n * highlighted (proper CSS class names are added). Modifying the visual column index allows building a custom\r\n * implementation of the nested headers feature or other features that require highlighting other DOM\r\n * elements than that the rendering engine, by default, would have highlighted.\r\n *\r\n * @event Hooks#beforeHighlightingColumnHeader\r\n * @since 8.4.0\r\n * @param {number} column Visual column index.\r\n * @param {number} headerLevel Row header level (0 = most distant to the table).\r\n * @param {object} highlightMeta An object that contains additional information about processed selection.\r\n * @returns {number|undefined}\r\n */\n'beforeHighlightingColumnHeader',\n/**\r\n * Fired by {@link PersistentState} plugin, after loading value, saved under given key, from browser local storage.\r\n *\r\n * The `persistentStateLoad` hook is fired even when the {@link Options#persistentState} option is disabled.\r\n *\r\n * @event Hooks#persistentStateLoad\r\n * @param {string} key Key.\r\n * @param {object} valuePlaceholder Object containing the loaded value under `valuePlaceholder.value` (if no value have been saved, `value` key will be undefined).\r\n */\n'persistentStateLoad',\n/**\r\n * Fired by {@link PersistentState} plugin after resetting data from local storage. If no key is given, all values associated with table will be cleared.\r\n * This hook is fired when {@link Options#persistentState} option is enabled.\r\n *\r\n * @event Hooks#persistentStateReset\r\n * @param {string} [key] Key.\r\n */\n'persistentStateReset',\n/**\r\n * Fired by {@link PersistentState} plugin, after saving value under given key in browser local storage.\r\n *\r\n * The `persistentStateSave` hook is fired even when the {@link Options#persistentState} option is disabled.\r\n *\r\n * @event Hooks#persistentStateSave\r\n * @param {string} key Key.\r\n * @param {Mixed} value Value to save.\r\n */\n'persistentStateSave',\n/**\r\n * Fired by {@link ColumnSorting} and {@link MultiColumnSorting} plugins before sorting the column. If you return `false` value inside callback for hook, then sorting\r\n * will be not applied by the Handsontable (useful for server-side sorting).\r\n *\r\n * This hook is fired when {@link Options#columnSorting} or {@link Options#multiColumnSorting} option is enabled.\r\n *\r\n * @event Hooks#beforeColumnSort\r\n * @param {Array} currentSortConfig Current sort configuration (for all sorted columns).\r\n * @param {Array} destinationSortConfigs Destination sort configuration (for all sorted columns).\r\n * @returns {boolean | undefined} If `false` the column will not be sorted, `true` otherwise.\r\n */\n'beforeColumnSort',\n/**\r\n * Fired by {@link ColumnSorting} and {@link MultiColumnSorting} plugins after sorting the column. This hook is fired when {@link Options#columnSorting}\r\n * or {@link Options#multiColumnSorting} option is enabled.\r\n *\r\n * @event Hooks#afterColumnSort\r\n * @param {Array} currentSortConfig Current sort configuration (for all sorted columns).\r\n * @param {Array} destinationSortConfigs Destination sort configuration (for all sorted columns).\r\n */\n'afterColumnSort',\n/**\r\n * Fired by {@link Autofill} plugin after setting range of autofill. This hook is fired when {@link Options#fillHandle}\r\n * option is enabled.\r\n *\r\n * @event Hooks#modifyAutofillRange\r\n * @param {Array} startArea Array of visual coordinates of the starting point for the drag-down operation (`[startRow, startColumn, endRow, endColumn]`).\r\n * @param {Array} entireArea Array of visual coordinates of the entire area of the drag-down operation (`[startRow, startColumn, endRow, endColumn]`).\r\n */\n'modifyAutofillRange',\n/**\r\n * Fired to allow modifying the copyable range with a callback function.\r\n *\r\n * @event Hooks#modifyCopyableRange\r\n * @param {Array[]} copyableRanges Array of objects defining copyable cells.\r\n */\n'modifyCopyableRange',\n/**\r\n * Fired by {@link CopyPaste} plugin before copying the values to the clipboard and before clearing values of\r\n * the selected cells. This hook is fired when {@link Options#copyPaste} option is enabled.\r\n *\r\n * @event Hooks#beforeCut\r\n * @param {Array[]} data An array of arrays which contains data to cut.\r\n * @param {object[]} coords An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\r\n *                       which will be cut out.\r\n * @returns {*} If returns `false` then operation of the cutting out is canceled.\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * // To disregard a single row, remove it from the array using data.splice(i, 1).\r\n * new Handsontable(element, {\r\n *   beforeCut: function(data, coords) {\r\n *     // data -> [[1, 2, 3], [4, 5, 6]]\r\n *     data.splice(0, 1);\r\n *     // data -> [[4, 5, 6]]\r\n *     // coords -> [{startRow: 0, startCol: 0, endRow: 1, endCol: 2}]\r\n *   }\r\n * });\r\n * // To cancel a cutting action, just return `false`.\r\n * new Handsontable(element, {\r\n *   beforeCut: function(data, coords) {\r\n *     return false;\r\n *   }\r\n * });\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * // To disregard a single row, remove it from the array using data.splice(i, 1).\r\n * <HotTable\r\n *   beforeCut={(data, coords) => {\r\n *     // data -> [[1, 2, 3], [4, 5, 6]]\r\n *     data.splice(0, 1);\r\n *     // data -> [[4, 5, 6]]\r\n *     // coords -> [{startRow: 0, startCol: 0, endRow: 1, endCol: 2}]\r\n *   }}\r\n * />\r\n * // To cancel a cutting action, just return `false`.\r\n * <HotTable\r\n *   beforeCut={(data, coords) => {\r\n *     return false;\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'beforeCut',\n/**\r\n * Fired by {@link CopyPaste} plugin after data was cut out from the table. This hook is fired when\r\n * {@link Options#copyPaste} option is enabled.\r\n *\r\n * @event Hooks#afterCut\r\n * @param {Array[]} data An array of arrays with the cut data.\r\n * @param {object[]} coords An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\r\n *                       which was cut out.\r\n */\n'afterCut',\n/**\r\n * Fired before values are copied to the clipboard.\r\n *\r\n * @event Hooks#beforeCopy\r\n * @param {Array[]} data An array of arrays which contains data to copied.\r\n * @param {object[]} coords An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\r\n *                         which will copied.\r\n * @param {{ columnHeadersCount: number }} copiedHeadersCount (Since 12.3.0) The number of copied column headers.\r\n * @returns {*} If returns `false` then copying is canceled.\r\n *\r\n * @example\r\n * ::: only-for javascript\r\n * ```js\r\n * // To disregard a single row, remove it from array using data.splice(i, 1).\r\n * ...\r\n * new Handsontable(document.getElementById('example'), {\r\n *   beforeCopy: (data, coords) => {\r\n *     // data -> [[1, 2, 3], [4, 5, 6]]\r\n *     data.splice(0, 1);\r\n *     // data -> [[4, 5, 6]]\r\n *     // coords -> [{startRow: 0, startCol: 0, endRow: 1, endCol: 2}]\r\n *   }\r\n * });\r\n * ...\r\n *\r\n * // To cancel copying, return false from the callback.\r\n * ...\r\n * new Handsontable(document.getElementById('example'), {\r\n *   beforeCopy: (data, coords) => {\r\n *     return false;\r\n *   }\r\n * });\r\n * ...\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * // To disregard a single row, remove it from array using data.splice(i, 1).\r\n * ...\r\n * <HotTable\r\n *   beforeCopy={(data, coords) => {\r\n *     // data -> [[1, 2, 3], [4, 5, 6]]\r\n *     data.splice(0, 1);\r\n *     // data -> [[4, 5, 6]]\r\n *     // coords -> [{startRow: 0, startCol: 0, endRow: 1, endCol: 2}]\r\n *   }}\r\n * />\r\n * ...\r\n *\r\n * // To cancel copying, return false from the callback.\r\n * ...\r\n * <HotTable\r\n *   beforeCopy={(data, coords) => {\r\n *     return false;\r\n *   }}\r\n * />\r\n * ...\r\n * ```\r\n * :::\r\n */\n'beforeCopy',\n/**\r\n * Fired by {@link CopyPaste} plugin after data are pasted into table. This hook is fired when {@link Options#copyPaste}\r\n * option is enabled.\r\n *\r\n * @event Hooks#afterCopy\r\n * @param {Array[]} data An array of arrays which contains the copied data.\r\n * @param {object[]} coords An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\r\n *                         which was copied.\r\n * @param {{ columnHeadersCount: number }} copiedHeadersCount (Since 12.3.0) The number of copied column headers.\r\n */\n'afterCopy',\n/**\r\n * Fired by {@link CopyPaste} plugin before values are pasted into table. This hook is fired when\r\n * {@link Options#copyPaste} option is enabled.\r\n *\r\n * @event Hooks#beforePaste\r\n * @param {Array[]} data An array of arrays which contains data to paste.\r\n * @param {object[]} coords An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\r\n *                       that correspond to the previously selected area.\r\n * @returns {*} If returns `false` then pasting is canceled.\r\n * @example\r\n * ```js\r\n * ::: only-for javascript\r\n * // To disregard a single row, remove it from array using data.splice(i, 1).\r\n * new Handsontable(example, {\r\n *   beforePaste: (data, coords) => {\r\n *     // data -> [[1, 2, 3], [4, 5, 6]]\r\n *     data.splice(0, 1);\r\n *     // data -> [[4, 5, 6]]\r\n *     // coords -> [{startRow: 0, startCol: 0, endRow: 1, endCol: 2}]\r\n *   }\r\n * });\r\n * // To cancel pasting, return false from the callback.\r\n * new Handsontable(example, {\r\n *   beforePaste: (data, coords) => {\r\n *     return false;\r\n *   }\r\n * });\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * // To disregard a single row, remove it from array using data.splice(i, 1).\r\n * <HotTable\r\n *   beforePaste={(data, coords) => {\r\n *     // data -> [[1, 2, 3], [4, 5, 6]]\r\n *     data.splice(0, 1);\r\n *     // data -> [[4, 5, 6]]\r\n *     // coords -> [{startRow: 0, startCol: 0, endRow: 1, endCol: 2}]\r\n *   }}\r\n * />\r\n * // To cancel pasting, return false from the callback.\r\n * <HotTable\r\n *   beforePaste={(data, coords) => {\r\n *     return false;\r\n *   }}\r\n * />\r\n * ```\r\n * :::\r\n */\n'beforePaste',\n/**\r\n * Fired by {@link CopyPaste} plugin after values are pasted into table. This hook is fired when\r\n * {@link Options#copyPaste} option is enabled.\r\n *\r\n * @event Hooks#afterPaste\r\n * @param {Array[]} data An array of arrays with the pasted data.\r\n * @param {object[]} coords An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\r\n *                       that correspond to the previously selected area.\r\n */\n'afterPaste',\n/**\r\n * Fired by the {@link ManualColumnFreeze} plugin, before freezing a column.\r\n *\r\n * @event Hooks#beforeColumnFreeze\r\n * @since 12.1.0\r\n * @param {number} column The visual index of the column that is going to freeze.\r\n * @param {boolean} freezePerformed If `true`: the column is going to freeze. If `false`: the column is not going to freeze (which might happen if the column is already frozen).\r\n * @returns {boolean|undefined} If `false`: the column is not going to freeze, and the `afterColumnFreeze` hook won't fire.\r\n */\n'beforeColumnFreeze',\n/**\r\n * Fired by the {@link ManualColumnFreeze} plugin, right after freezing a column.\r\n *\r\n * @event Hooks#afterColumnFreeze\r\n * @since 12.1.0\r\n * @param {number} column The visual index of the frozen column.\r\n * @param {boolean} freezePerformed If `true`: the column got successfully frozen. If `false`: the column didn't get frozen.\r\n */\n'afterColumnFreeze',\n/**\r\n * Fired by {@link ManualColumnMove} plugin before change order of the visual indexes. This hook is fired when\r\n * {@link Options#manualColumnMove} option is enabled.\r\n *\r\n * @event Hooks#beforeColumnMove\r\n * @param {Array} movedColumns Array of visual column indexes to be moved.\r\n * @param {number} finalIndex Visual column index, being a start index for the moved columns.\r\n *                            Points to where the elements will be placed after the moving action.\r\n *                            To check visualization of final index please take a look at\r\n *                            [documentation](@/guides/columns/column-moving/column-moving.md).\r\n * @param {number|undefined} dropIndex Visual column index, being a drop index for the moved columns.\r\n *                                     Points to where we are going to drop the moved elements. To check\r\n *                                     visualization of drop index please take a look at\r\n *                                     [documentation](@/guides/columns/column-moving/column-moving.md).\r\n *                                     It's `undefined` when `dragColumns` function wasn't called.\r\n * @param {boolean} movePossible Indicates if it's possible to move rows to the desired position.\r\n * @returns {undefined | boolean} If `false` the column will not be moved, `true` otherwise.\r\n */\n'beforeColumnMove',\n/**\r\n * Fired by {@link ManualColumnMove} plugin after changing order of the visual indexes.\r\n * This hook is fired when {@link Options#manualColumnMove} option is enabled.\r\n *\r\n * @event Hooks#afterColumnMove\r\n * @param {Array} movedColumns Array of visual column indexes to be moved.\r\n * @param {number} finalIndex Visual column index, being a start index for the moved columns.\r\n *                            Points to where the elements will be placed after the moving action.\r\n *                            To check visualization of final index please take a look at\r\n *                            [documentation](@/guides/columns/column-moving/column-moving.md).\r\n * @param {number|undefined} dropIndex Visual column index, being a drop index for the moved columns.\r\n *                                     Points to where we are going to drop the moved elements.\r\n *                                     To check visualization of drop index please take a look at\r\n *                                     [documentation](@/guides/columns/column-moving/column-moving.md).\r\n *                                     It's `undefined` when `dragColumns` function wasn't called.\r\n * @param {boolean} movePossible Indicates if it was possible to move columns to the desired position.\r\n * @param {boolean} orderChanged Indicates if order of columns was changed by move.\r\n */\n'afterColumnMove',\n/**\r\n * Fired by the {@link ManualColumnFreeze} plugin, before unfreezing a column.\r\n *\r\n * @event Hooks#beforeColumnUnfreeze\r\n * @since 12.1.0\r\n * @param {number} column The visual index of the column that is going to unfreeze.\r\n * @param {boolean} unfreezePerformed If `true`: the column is going to unfreeze. If `false`: the column is not going to unfreeze (which might happen if the column is already unfrozen).\r\n * @returns {boolean|undefined} If `false`: the column is not going to unfreeze, and the `afterColumnUnfreeze` hook won't fire.\r\n */\n'beforeColumnUnfreeze',\n/**\r\n * Fired by the {@link ManualColumnFreeze} plugin, right after unfreezing a column.\r\n *\r\n * @event Hooks#afterColumnUnfreeze\r\n * @since 12.1.0\r\n * @param {number} column The visual index of the unfrozen column.\r\n * @param {boolean} unfreezePerformed If `true`: the column got successfully unfrozen. If `false`: the column didn't get unfrozen.\r\n */\n'afterColumnUnfreeze',\n/**\r\n * Fired by {@link ManualRowMove} plugin before changing the order of the visual indexes. This hook is fired when\r\n * {@link Options#manualRowMove} option is enabled.\r\n *\r\n * @event Hooks#beforeRowMove\r\n * @param {Array} movedRows Array of visual row indexes to be moved.\r\n * @param {number} finalIndex Visual row index, being a start index for the moved rows.\r\n *                            Points to where the elements will be placed after the moving action.\r\n *                            To check visualization of final index please take a look at\r\n *                            [documentation](@/guides/rows/row-moving/row-moving.md).\r\n * @param {number|undefined} dropIndex Visual row index, being a drop index for the moved rows.\r\n *                                     Points to where we are going to drop the moved elements.\r\n *                                     To check visualization of drop index please take a look at\r\n *                                     [documentation](@/guides/rows/row-moving/row-moving.md).\r\n *                                     It's `undefined` when `dragRows` function wasn't called.\r\n * @param {boolean} movePossible Indicates if it's possible to move rows to the desired position.\r\n * @returns {*|boolean} If false is returned the action is canceled.\r\n */\n'beforeRowMove',\n/**\r\n * Fired by {@link ManualRowMove} plugin after changing the order of the visual indexes.\r\n * This hook is fired when {@link Options#manualRowMove} option is enabled.\r\n *\r\n * @event Hooks#afterRowMove\r\n * @param {Array} movedRows Array of visual row indexes to be moved.\r\n * @param {number} finalIndex Visual row index, being a start index for the moved rows.\r\n *                            Points to where the elements will be placed after the moving action.\r\n *                            To check visualization of final index please take a look at\r\n *                            [documentation](@/guides/rows/row-moving/row-moving.md).\r\n * @param {number|undefined} dropIndex Visual row index, being a drop index for the moved rows.\r\n *                                     Points to where we are going to drop the moved elements.\r\n *                                     To check visualization of drop index please take a look at\r\n *                                     [documentation](@/guides/rows/row-moving/row-moving.md).\r\n *                                     It's `undefined` when `dragRows` function wasn't called.\r\n * @param {boolean} movePossible Indicates if it was possible to move rows to the desired position.\r\n * @param {boolean} orderChanged Indicates if order of rows was changed by move.\r\n */\n'afterRowMove',\n/**\r\n * Fired by {@link ManualColumnResize} plugin before rendering the table with modified column sizes. This hook is\r\n * fired when {@link Options#manualColumnResize} option is enabled.\r\n *\r\n * @event Hooks#beforeColumnResize\r\n * @param {number} newSize Calculated new column width.\r\n * @param {number} column Visual index of the resized column.\r\n * @param {boolean} isDoubleClick Flag that determines whether there was a double-click.\r\n * @returns {number} Returns a new column size or `undefined`, if column size should be calculated automatically.\r\n */\n'beforeColumnResize',\n/**\r\n * Fired by {@link ManualColumnResize} plugin after rendering the table with modified column sizes. This hook is\r\n * fired when {@link Options#manualColumnResize} option is enabled.\r\n *\r\n * @event Hooks#afterColumnResize\r\n * @param {number} newSize Calculated new column width.\r\n * @param {number} column Visual index of the resized column.\r\n * @param {boolean} isDoubleClick Flag that determines whether there was a double-click.\r\n */\n'afterColumnResize',\n/**\r\n * Fired by {@link ManualRowResize} plugin before rendering the table with modified row sizes. This hook is\r\n * fired when {@link Options#manualRowResize} option is enabled.\r\n *\r\n * @event Hooks#beforeRowResize\r\n * @param {number} newSize Calculated new row height.\r\n * @param {number} row Visual index of the resized row.\r\n * @param {boolean} isDoubleClick Flag that determines whether there was a double-click.\r\n * @returns {number|undefined} Returns the new row size or `undefined` if row size should be calculated automatically.\r\n */\n'beforeRowResize',\n/**\r\n * Fired by {@link ManualRowResize} plugin after rendering the table with modified row sizes. This hook is\r\n * fired when {@link Options#manualRowResize} option is enabled.\r\n *\r\n * @event Hooks#afterRowResize\r\n * @param {number} newSize Calculated new row height.\r\n * @param {number} row Visual index of the resized row.\r\n * @param {boolean} isDoubleClick Flag that determines whether there was a double-click.\r\n */\n'afterRowResize',\n/**\r\n * Fired after getting the column header renderers.\r\n *\r\n * @event Hooks#afterGetColumnHeaderRenderers\r\n * @param {Function[]} renderers An array of the column header renderers.\r\n */\n'afterGetColumnHeaderRenderers',\n/**\r\n * Fired after getting the row header renderers.\r\n *\r\n * @event Hooks#afterGetRowHeaderRenderers\r\n * @param {Function[]} renderers An array of the row header renderers.\r\n */\n'afterGetRowHeaderRenderers',\n/**\r\n * Fired before applying stretched column width to column.\r\n *\r\n * @event Hooks#beforeStretchingColumnWidth\r\n * @param {number} stretchedWidth Calculated width.\r\n * @param {number} column Visual column index.\r\n * @returns {number|undefined} Returns new width which will be applied to the column element.\r\n */\n'beforeStretchingColumnWidth',\n/**\r\n * Fired by the [`Filters`](@/api/filters.md) plugin,\r\n * before a [column filter](@/guides/columns/column-filter/column-filter.md) gets applied.\r\n *\r\n * [`beforeFilter`](#beforefilter) takes one argument (`conditionsStack`), which is an array of objects.\r\n * Each object represents one of your [column filters](@/api/filters.md#addcondition),\r\n * and consists of the following properties:\r\n *\r\n * | Property     | Possible values                                                         | Description                                                                                                              |\r\n * | ------------ | ----------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ |\r\n * | `column`     | Number                                                                  | A visual index of the column to which the filter will be applied.                                                        |\r\n * | `conditions` | Array of objects                                                        | Each object represents one condition. For details, see [`addCondition()`](@/api/filters.md#addcondition).                |\r\n * | `operation`  | `'conjunction'` \\| `'disjunction'` \\| `'disjunctionWithExtraCondition'` | An operation to perform on your set of `conditions`. For details, see [`addCondition()`](@/api/filters.md#addcondition). |\r\n *\r\n * An example of the format of the `conditionsStack` argument:\r\n *\r\n * ```js\r\n * [\r\n *   {\r\n *     column: 2,\r\n *     conditions: [\r\n *       {name: 'begins_with', args: [['S']]}\r\n *     ],\r\n *     operation: 'conjunction'\r\n *   },\r\n *   {\r\n *     column: 4,\r\n *     conditions: [\r\n *       {name: 'not_empty', args: []}\r\n *     ],\r\n *     operation: 'conjunction'\r\n *   },\r\n * ]\r\n * ```\r\n *\r\n * To perform server-side filtering (i.e., to not apply filtering to Handsontable's UI),\r\n * set [`beforeFilter`](#beforefilter) to return `false`:\r\n *\r\n * ```js\r\n * new Handsontable(document.getElementById('example'), {\r\n *   beforeFilter: (conditionsStack) => {\r\n *     return false;\r\n *   }\r\n * });\r\n *```\r\n *\r\n * Read more:\r\n * - [Guides: Column filter](@/guides/columns/column-filter/column-filter.md)\r\n * - [Hooks: `afterFilter`](#afterfilter)\r\n * - [Options: `filters`](@/api/options.md#filters)\r\n * - [Plugins: `Filters`](@/api/filters.md)\r\n * – [Plugin methods: `addCondition()`](@/api/filters.md#addcondition)\r\n *\r\n * @event Hooks#beforeFilter\r\n * @param {object[]} conditionsStack An array of objects with your [column filters](@/api/filters.md#addcondition).\r\n * @returns {boolean} To perform server-side filtering (i.e., to not apply filtering to Handsontable's UI), return `false`.\r\n */\n'beforeFilter',\n/**\r\n * Fired by the [`Filters`](@/api/filters.md) plugin,\r\n * after a [column filter](@/guides/columns/column-filter/column-filter.md) gets applied.\r\n *\r\n * [`afterFilter`](#afterfilter) takes one argument (`conditionsStack`), which is an array of objects.\r\n * Each object represents one of your [column filters](@/api/filters.md#addcondition),\r\n * and consists of the following properties:\r\n *\r\n * | Property     | Possible values                                                         | Description                                                                                                              |\r\n * | ------------ | ----------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ |\r\n * | `column`     | Number                                                                  | A visual index of the column to which the filter was applied.                                                            |\r\n * | `conditions` | Array of objects                                                        | Each object represents one condition. For details, see [`addCondition()`](@/api/filters.md#addcondition).                |\r\n * | `operation`  | `'conjunction'` \\| `'disjunction'` \\| `'disjunctionWithExtraCondition'` | An operation to perform on your set of `conditions`. For details, see [`addCondition()`](@/api/filters.md#addcondition). |\r\n *\r\n * An example of the format of the `conditionsStack` argument:\r\n *\r\n * ```js\r\n * [\r\n *   {\r\n *     column: 2,\r\n *     conditions: [\r\n *       {name: 'begins_with', args: [['S']]}\r\n *     ],\r\n *     operation: 'conjunction'\r\n *   },\r\n *   {\r\n *     column: 4,\r\n *     conditions: [\r\n *       {name: 'not_empty', args: []}\r\n *     ],\r\n *     operation: 'conjunction'\r\n *   },\r\n * ]\r\n * ```\r\n *\r\n * Read more:\r\n * - [Guides: Column filter](@/guides/columns/column-filter/column-filter.md)\r\n * - [Hooks: `beforeFilter`](#beforefilter)\r\n * - [Options: `filters`](@/api/options.md#filters)\r\n * - [Plugins: `Filters`](@/api/filters.md)\r\n * – [Plugin methods: `addCondition()`](@/api/filters.md#addcondition)\r\n *\r\n * @event Hooks#afterFilter\r\n * @param {object[]} conditionsStack An array of objects with your [column filters](@/api/filters.md#addcondition).\r\n */\n'afterFilter',\n/**\r\n * Fired by the {@link Formulas} plugin, when any cell value changes.\r\n *\r\n * Returns an array of objects that contains:\r\n * - The addresses (`sheet`, `row`, `col`) and new values (`newValue`) of the changed cells.\r\n * - The addresses and new values of any cells that had to be recalculated (because their formulas depend on the cells that changed).\r\n *\r\n * This hook gets also fired on Handsontable's initialization, returning the addresses and values of all cells.\r\n *\r\n * Read more:\r\n * - [Guides: Formula calculation](@/guides/formulas/formula-calculation/formula-calculation.md)\r\n * - [HyperFormula documentation: `valuesUpdated`](https://hyperformula.handsontable.com/api/interfaces/listeners.html#valuesupdated)\r\n *\r\n * @since 9.0.0\r\n * @event Hooks#afterFormulasValuesUpdate\r\n * @param {Array} changes The addresses and new values of all the changed and recalculated cells.\r\n */\n'afterFormulasValuesUpdate',\n/**\r\n * Fired when a named expression is added to the Formulas' engine instance.\r\n *\r\n * @since 9.0.0\r\n * @event Hooks#afterNamedExpressionAdded\r\n * @param {string} namedExpressionName The name of the added expression.\r\n * @param {Array} changes The values and location of applied changes.\r\n */\n'afterNamedExpressionAdded',\n/**\r\n * Fired when a named expression is removed from the Formulas' engine instance.\r\n *\r\n * @since 9.0.0\r\n * @event Hooks#afterNamedExpressionRemoved\r\n * @param {string} namedExpressionName The name of the removed expression.\r\n * @param {Array} changes The values and location of applied changes.\r\n */\n'afterNamedExpressionRemoved',\n/**\r\n * Fired when a new sheet is added to the Formulas' engine instance.\r\n *\r\n * @since 9.0.0\r\n * @event Hooks#afterSheetAdded\r\n * @param {string} addedSheetDisplayName The name of the added sheet.\r\n */\n'afterSheetAdded',\n/**\r\n * Fired when a sheet in the Formulas' engine instance is renamed.\r\n *\r\n * @since 9.0.0\r\n * @event Hooks#afterSheetRenamed\r\n * @param {string} oldDisplayName The old name of the sheet.\r\n * @param {string} newDisplayName The new name of the sheet.\r\n */\n'afterSheetRenamed',\n/**\r\n * Fired when a sheet is removed from the Formulas' engine instance.\r\n *\r\n * @since 9.0.0\r\n * @event Hooks#afterSheetRemoved\r\n * @param {string} removedSheetDisplayName The removed sheet name.\r\n * @param {Array} changes The values and location of applied changes.\r\n */\n'afterSheetRemoved',\n/**\r\n * Fired while retrieving the column header height.\r\n *\r\n * @event Hooks#modifyColumnHeaderHeight\r\n */\n'modifyColumnHeaderHeight',\n/**\r\n * Fired while retrieving a column header's value.\r\n *\r\n * @since 12.3.0\r\n * @event Hooks#modifyColumnHeaderValue\r\n * @param {string} value A column header value.\r\n * @param {number} visualColumnIndex A visual column index.\r\n * @param {number} [headerLevel=0] Header level index. Accepts positive (`0` to `n`)\r\n *                                 and negative (`-1` to `-n`) values. For positive values, `0` points to the\r\n *                                 topmost header. For negative values, `-1` points to the bottom-most\r\n *                                 header (the header closest to the cells).\r\n * @returns {string} The column header value to be updated.\r\n */\n'modifyColumnHeaderValue',\n/**\r\n * Fired by {@link UndoRedo} plugin before the undo action. Contains information about the action that is being undone.\r\n * This hook is fired when {@link Options#undo} option is enabled.\r\n *\r\n * @event Hooks#beforeUndo\r\n * @param {object} action The action object. Contains information about the action being undone. The `actionType`\r\n *                        property of the object specifies the type of the action in a String format. (e.g. `'remove_row'`).\r\n * @returns {*|boolean} If false is returned the action is canceled.\r\n */\n'beforeUndo',\n/**\r\n * Fired by {@link UndoRedo} plugin before changing undo stack.\r\n *\r\n * @event Hooks#beforeUndoStackChange\r\n * @since 8.4.0\r\n * @param {Array} doneActions Stack of actions which may be undone.\r\n * @param {string} [source] String that identifies source of action\r\n *                          ([list of all available sources](@/guides/getting-started/events-and-hooks/events-and-hooks.md#definition-for-source-argument)).\r\n * @returns {*|boolean} If false is returned the action of changing undo stack is canceled.\r\n */\n'beforeUndoStackChange',\n/**\r\n * Fired by {@link UndoRedo} plugin after the undo action. Contains information about the action that is being undone.\r\n * This hook is fired when {@link Options#undo} option is enabled.\r\n *\r\n * @event Hooks#afterUndo\r\n * @param {object} action The action object. Contains information about the action being undone. The `actionType`\r\n *                        property of the object specifies the type of the action in a String format. (e.g. `'remove_row'`).\r\n */\n'afterUndo',\n/**\r\n * Fired by {@link UndoRedo} plugin after changing undo stack.\r\n *\r\n * @event Hooks#afterUndoStackChange\r\n * @since 8.4.0\r\n * @param {Array} doneActionsBefore Stack of actions which could be undone before performing new action.\r\n * @param {Array} doneActionsAfter Stack of actions which can be undone after performing new action.\r\n */\n'afterUndoStackChange',\n/**\r\n * Fired by {@link UndoRedo} plugin before the redo action. Contains information about the action that is being redone.\r\n * This hook is fired when {@link Options#undo} option is enabled.\r\n *\r\n * @event Hooks#beforeRedo\r\n * @param {object} action The action object. Contains information about the action being redone. The `actionType`\r\n *                        property of the object specifies the type of the action in a String format (e.g. `'remove_row'`).\r\n * @returns {*|boolean} If false is returned the action is canceled.\r\n */\n'beforeRedo',\n/**\r\n * Fired by {@link UndoRedo} plugin before changing redo stack.\r\n *\r\n * @event Hooks#beforeRedoStackChange\r\n * @since 8.4.0\r\n * @param {Array} undoneActions Stack of actions which may be redone.\r\n */\n'beforeRedoStackChange',\n/**\r\n * Fired by {@link UndoRedo} plugin after the redo action. Contains information about the action that is being redone.\r\n * This hook is fired when {@link Options#undo} option is enabled.\r\n *\r\n * @event Hooks#afterRedo\r\n * @param {object} action The action object. Contains information about the action being redone. The `actionType`\r\n *                        property of the object specifies the type of the action in a String format (e.g. `'remove_row'`).\r\n */\n'afterRedo',\n/**\r\n * Fired by {@link UndoRedo} plugin after changing redo stack.\r\n *\r\n * @event Hooks#afterRedoStackChange\r\n * @since 8.4.0\r\n * @param {Array} undoneActionsBefore Stack of actions which could be redone before performing new action.\r\n * @param {Array} undoneActionsAfter Stack of actions which can be redone after performing new action.\r\n */\n'afterRedoStackChange',\n/**\r\n * Fired while retrieving the row header width.\r\n *\r\n * @event Hooks#modifyRowHeaderWidth\r\n * @param {number} rowHeaderWidth Row header width.\r\n */\n'modifyRowHeaderWidth',\n/**\r\n * Fired when the focus of the selection is being modified (e.g. Moving the focus with the enter/tab keys).\r\n *\r\n * @since 14.3.0\r\n * @event Hooks#modifyTransformFocus\r\n * @param {CellCoords} delta Cell coords object declaring the delta of the new selection relative to the previous one.\r\n */\n'modifyTransformFocus',\n/**\r\n * Fired when the start of the selection is being modified (e.g. Moving the selection with the arrow keys).\r\n *\r\n * @event Hooks#modifyTransformStart\r\n * @param {CellCoords} delta Cell coords object declaring the delta of the new selection relative to the previous one.\r\n */\n'modifyTransformStart',\n/**\r\n * Fired when the end of the selection is being modified (e.g. Moving the selection with the arrow keys).\r\n *\r\n * @event Hooks#modifyTransformEnd\r\n * @param {CellCoords} delta Cell coords object declaring the delta of the new selection relative to the previous one.\r\n */\n'modifyTransformEnd',\n/**\r\n * Fired after the focus of the selection is being modified (e.g. Moving the focus with the enter/tab keys).\r\n *\r\n * @since 14.3.0\r\n * @event Hooks#afterModifyTransformFocus\r\n * @param {CellCoords} coords Coords of the freshly focused cell.\r\n * @param {number} rowTransformDir `-1` if trying to focus a cell with a negative row index. `0` otherwise.\r\n * @param {number} colTransformDir `-1` if trying to focus a cell with a negative column index. `0` otherwise.\r\n */\n'afterModifyTransformFocus',\n/**\r\n * Fired after the start of the selection is being modified (e.g. Moving the selection with the arrow keys).\r\n *\r\n * @event Hooks#afterModifyTransformStart\r\n * @param {CellCoords} coords Coords of the freshly selected cell.\r\n * @param {number} rowTransformDir `-1` if trying to select a cell with a negative row index. `0` otherwise.\r\n * @param {number} colTransformDir `-1` if trying to select a cell with a negative column index. `0` otherwise.\r\n */\n'afterModifyTransformStart',\n/**\r\n * Fired after the end of the selection is being modified (e.g. Moving the selection with the arrow keys).\r\n *\r\n * @event Hooks#afterModifyTransformEnd\r\n * @param {CellCoords} coords Visual coords of the freshly selected cell.\r\n * @param {number} rowTransformDir `-1` if trying to select a cell with a negative row index. `0` otherwise.\r\n * @param {number} colTransformDir `-1` if trying to select a cell with a negative column index. `0` otherwise.\r\n */\n'afterModifyTransformEnd',\n/**\r\n * Fired inside the `viewportRowCalculatorOverride` method. Allows modifying the row calculator parameters.\r\n *\r\n * @event Hooks#afterViewportRowCalculatorOverride\r\n * @param {object} calc The row calculator.\r\n */\n'afterViewportRowCalculatorOverride',\n/**\r\n * Fired inside the `viewportColumnCalculatorOverride` method. Allows modifying the row calculator parameters.\r\n *\r\n * @event Hooks#afterViewportColumnCalculatorOverride\r\n * @param {object} calc The row calculator.\r\n */\n'afterViewportColumnCalculatorOverride',\n/**\r\n * Fired after initializing all the plugins.\r\n * This hook should be added before Handsontable is initialized.\r\n *\r\n * @event Hooks#afterPluginsInitialized\r\n *\r\n * @example\r\n * ```js\r\n * Handsontable.hooks.add('afterPluginsInitialized', myCallback);\r\n * ```\r\n */\n'afterPluginsInitialized',\n/**\r\n * Fired by {@link HiddenRows} plugin before marking the rows as hidden. Fired only if the {@link Options#hiddenRows} option is enabled.\r\n * Returning `false` in the callback will prevent the hiding action from completing.\r\n *\r\n * @event Hooks#beforeHideRows\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical row indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical row indexes.\r\n * @param {boolean} actionPossible `true`, if provided row indexes are valid, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the hiding action will not be completed.\r\n */\n'beforeHideRows',\n/**\r\n * Fired by {@link HiddenRows} plugin after marking the rows as hidden. Fired only if the {@link Options#hiddenRows} option is enabled.\r\n *\r\n * @event Hooks#afterHideRows\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical row indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical row indexes.\r\n * @param {boolean} actionPossible `true`, if provided row indexes are valid, `false` otherwise.\r\n * @param {boolean} stateChanged `true`, if the action affected any non-hidden rows, `false` otherwise.\r\n */\n'afterHideRows',\n/**\r\n * Fired by {@link HiddenRows} plugin before marking the rows as not hidden. Fired only if the {@link Options#hiddenRows} option is enabled.\r\n * Returning `false` in the callback will prevent the row revealing action from completing.\r\n *\r\n * @event Hooks#beforeUnhideRows\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical row indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical row indexes.\r\n * @param {boolean} actionPossible `true`, if provided row indexes are valid, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the revealing action will not be completed.\r\n */\n'beforeUnhideRows',\n/**\r\n * Fired by {@link HiddenRows} plugin after marking the rows as not hidden. Fired only if the {@link Options#hiddenRows} option is enabled.\r\n *\r\n * @event Hooks#afterUnhideRows\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical row indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical row indexes.\r\n * @param {boolean} actionPossible `true`, if provided row indexes are valid, `false` otherwise.\r\n * @param {boolean} stateChanged `true`, if the action affected any hidden rows, `false` otherwise.\r\n */\n'afterUnhideRows',\n/**\r\n * Fired by {@link HiddenColumns} plugin before marking the columns as hidden. Fired only if the {@link Options#hiddenColumns} option is enabled.\r\n * Returning `false` in the callback will prevent the hiding action from completing.\r\n *\r\n * @event Hooks#beforeHideColumns\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical column indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical column indexes.\r\n * @param {boolean} actionPossible `true`, if the provided column indexes are valid, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the hiding action will not be completed.\r\n */\n'beforeHideColumns',\n/**\r\n * Fired by {@link HiddenColumns} plugin after marking the columns as hidden. Fired only if the {@link Options#hiddenColumns} option is enabled.\r\n *\r\n * @event Hooks#afterHideColumns\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical column indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical column indexes.\r\n * @param {boolean} actionPossible `true`, if the provided column indexes are valid, `false` otherwise.\r\n * @param {boolean} stateChanged `true`, if the action affected any non-hidden columns, `false` otherwise.\r\n */\n'afterHideColumns',\n/**\r\n * Fired by {@link HiddenColumns} plugin before marking the columns as not hidden. Fired only if the {@link Options#hiddenColumns} option is enabled.\r\n * Returning `false` in the callback will prevent the column revealing action from completing.\r\n *\r\n * @event Hooks#beforeUnhideColumns\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical column indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical column indexes.\r\n * @param {boolean} actionPossible `true`, if the provided column indexes are valid, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the hiding action will not be completed.\r\n */\n'beforeUnhideColumns',\n/**\r\n * Fired by {@link HiddenColumns} plugin after marking the columns as not hidden. Fired only if the {@link Options#hiddenColumns} option is enabled.\r\n *\r\n * @event Hooks#afterUnhideColumns\r\n * @param {Array} currentHideConfig Current hide configuration - a list of hidden physical column indexes.\r\n * @param {Array} destinationHideConfig Destination hide configuration - a list of hidden physical column indexes.\r\n * @param {boolean} actionPossible `true`, if the provided column indexes are valid, `false` otherwise.\r\n * @param {boolean} stateChanged `true`, if the action affected any hidden columns, `false` otherwise.\r\n */\n'afterUnhideColumns',\n/**\r\n * Fired by {@link TrimRows} plugin before trimming rows. This hook is fired when {@link Options#trimRows} option is enabled.\r\n *\r\n * @event Hooks#beforeTrimRow\r\n * @param {Array} currentTrimConfig Current trim configuration - a list of trimmed physical row indexes.\r\n * @param {Array} destinationTrimConfig Destination trim configuration - a list of trimmed physical row indexes.\r\n * @param {boolean} actionPossible `true`, if all of the row indexes are withing the bounds of the table, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the trimming action will not be completed.\r\n */\n'beforeTrimRow',\n/**\r\n * Fired by {@link TrimRows} plugin after trimming rows. This hook is fired when {@link Options#trimRows} option is enabled.\r\n *\r\n * @event Hooks#afterTrimRow\r\n * @param {Array} currentTrimConfig Current trim configuration - a list of trimmed physical row indexes.\r\n * @param {Array} destinationTrimConfig Destination trim configuration - a list of trimmed physical row indexes.\r\n * @param {boolean} actionPossible `true`, if all of the row indexes are withing the bounds of the table, `false` otherwise.\r\n * @param {boolean} stateChanged `true`, if the action affected any non-trimmed rows, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the trimming action will not be completed.\r\n */\n'afterTrimRow',\n/**\r\n * Fired by {@link TrimRows} plugin before untrimming rows. This hook is fired when {@link Options#trimRows} option is enabled.\r\n *\r\n * @event Hooks#beforeUntrimRow\r\n * @param {Array} currentTrimConfig Current trim configuration - a list of trimmed physical row indexes.\r\n * @param {Array} destinationTrimConfig Destination trim configuration - a list of trimmed physical row indexes.\r\n * @param {boolean} actionPossible `true`, if all of the row indexes are withing the bounds of the table, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the untrimming action will not be completed.\r\n */\n'beforeUntrimRow',\n/**\r\n * Fired by {@link TrimRows} plugin after untrimming rows. This hook is fired when {@link Options#trimRows} option is enabled.\r\n *\r\n * @event Hooks#afterUntrimRow\r\n * @param {Array} currentTrimConfig Current trim configuration - a list of trimmed physical row indexes.\r\n * @param {Array} destinationTrimConfig Destination trim configuration - a list of trimmed physical row indexes.\r\n * @param {boolean} actionPossible `true`, if all of the row indexes are withing the bounds of the table, `false` otherwise.\r\n * @param {boolean} stateChanged `true`, if the action affected any trimmed rows, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the untrimming action will not be completed.\r\n */\n'afterUntrimRow',\n/**\r\n * Fired by {@link DropdownMenu} plugin before opening the dropdown menu. This hook is fired when {@link Options#dropdownMenu}\r\n * option is enabled.\r\n *\r\n * @event Hooks#beforeDropdownMenuShow\r\n * @param {DropdownMenu} dropdownMenu The `DropdownMenu` instance.\r\n */\n'beforeDropdownMenuShow',\n/**\r\n * Fired by {@link DropdownMenu} plugin after opening the Dropdown Menu. This hook is fired when {@link Options#dropdownMenu}\r\n * option is enabled.\r\n *\r\n * @event Hooks#afterDropdownMenuShow\r\n * @param {DropdownMenu} dropdownMenu The `DropdownMenu` instance.\r\n */\n'afterDropdownMenuShow',\n/**\r\n * Fired by {@link DropdownMenu} plugin after hiding the Dropdown Menu. This hook is fired when {@link Options#dropdownMenu}\r\n * option is enabled.\r\n *\r\n * @event Hooks#afterDropdownMenuHide\r\n * @param {DropdownMenu} instance The `DropdownMenu` instance.\r\n */\n'afterDropdownMenuHide',\n/**\r\n * Fired by {@link NestedRows} plugin before adding a children to the `NestedRows` structure. This hook is fired when\r\n * {@link Options#nestedRows} option is enabled.\r\n *\r\n * @event Hooks#beforeAddChild\r\n * @param {object} parent The parent object.\r\n * @param {object|undefined} element The element added as a child. If `undefined`, a blank child was added.\r\n * @param {number|undefined} index The index within the parent where the new child was added. If `undefined`, the element was added as the last child.\r\n */\n'beforeAddChild',\n/**\r\n * Fired by {@link NestedRows} plugin after adding a children to the `NestedRows` structure. This hook is fired when\r\n * {@link Options#nestedRows} option is enabled.\r\n *\r\n * @event Hooks#afterAddChild\r\n * @param {object} parent The parent object.\r\n * @param {object|undefined} element The element added as a child. If `undefined`, a blank child was added.\r\n * @param {number|undefined} index The index within the parent where the new child was added. If `undefined`, the element was added as the last child.\r\n */\n'afterAddChild',\n/**\r\n * Fired by {@link NestedRows} plugin before detaching a child from its parent. This hook is fired when\r\n * {@link Options#nestedRows} option is enabled.\r\n *\r\n * @event Hooks#beforeDetachChild\r\n * @param {object} parent An object representing the parent from which the element is to be detached.\r\n * @param {object} element The detached element.\r\n */\n'beforeDetachChild',\n/**\r\n * Fired by {@link NestedRows} plugin after detaching a child from its parent. This hook is fired when\r\n * {@link Options#nestedRows} option is enabled.\r\n *\r\n * @event Hooks#afterDetachChild\r\n * @param {object} parent An object representing the parent from which the element was detached.\r\n * @param {object} element The detached element.\r\n * @param {number} finalElementPosition The final row index of the detached element.\r\n */\n'afterDetachChild',\n/**\r\n * Fired before the editor is opened and rendered.\r\n *\r\n * @since 14.2.0\r\n * @event Hooks#beforeBeginEditing\r\n * @param {number} row Visual row index of the edited cell.\r\n * @param {number} column Visual column index of the edited cell.\r\n * @param {*} initialValue The initial editor value.\r\n * @param {MouseEvent | KeyboardEvent} event The event which was responsible for opening the editor.\r\n * @param {boolean} fullEditMode `true` if the editor is opened in full edit mode, `false` otherwise.\r\n * Editor opened in full edit mode does not close after pressing Arrow keys.\r\n * @returns {boolean | undefined} If the callback returns `false,` the editor won't be opened after\r\n * the mouse double click or after pressing the Enter key. Returning `undefined` (or other value\r\n * than boolean) will result in default behavior, which disallows opening an editor for non-contiguous\r\n * selection (while pressing Ctrl/Cmd) and for multiple selected cells (while pressing SHIFT).\r\n * Returning `true` removes those restrictions.\r\n */\n'beforeBeginEditing',\n/**\r\n * Fired after the editor is opened and rendered.\r\n *\r\n * @event Hooks#afterBeginEditing\r\n * @param {number} row Visual row index of the edited cell.\r\n * @param {number} column Visual column index of the edited cell.\r\n */\n'afterBeginEditing',\n/**\r\n * Fired by {@link MergeCells} plugin before cell merging. This hook is fired when {@link Options#mergeCells}\r\n * option is enabled.\r\n *\r\n * @event Hooks#beforeMergeCells\r\n * @param {CellRange} cellRange Selection cell range.\r\n * @param {boolean} [auto=false] `true` if called automatically by the plugin.\r\n */\n'beforeMergeCells',\n/**\r\n * Fired by {@link MergeCells} plugin after cell merging. This hook is fired when {@link Options#mergeCells}\r\n * option is enabled.\r\n *\r\n * @event Hooks#afterMergeCells\r\n * @param {CellRange} cellRange Selection cell range.\r\n * @param {object} mergeParent The parent collection of the provided cell range.\r\n * @param {boolean} [auto=false] `true` if called automatically by the plugin.\r\n */\n'afterMergeCells',\n/**\r\n * Fired by {@link MergeCells} plugin before unmerging the cells. This hook is fired when {@link Options#mergeCells}\r\n * option is enabled.\r\n *\r\n * @event Hooks#beforeUnmergeCells\r\n * @param {CellRange} cellRange Selection cell range.\r\n * @param {boolean} [auto=false] `true` if called automatically by the plugin.\r\n */\n'beforeUnmergeCells',\n/**\r\n * Fired by {@link MergeCells} plugin after unmerging the cells. This hook is fired when {@link Options#mergeCells}\r\n * option is enabled.\r\n *\r\n * @event Hooks#afterUnmergeCells\r\n * @param {CellRange} cellRange Selection cell range.\r\n * @param {boolean} [auto=false] `true` if called automatically by the plugin.\r\n */\n'afterUnmergeCells',\n/**\r\n * Fired after the table was switched into listening mode. This allows Handsontable to capture keyboard events and\r\n * respond in the right way.\r\n *\r\n * @event Hooks#afterListen\r\n */\n'afterListen',\n/**\r\n * Fired after the table was switched off from the listening mode. This makes the Handsontable inert for any\r\n * keyboard events.\r\n *\r\n * @event Hooks#afterUnlisten\r\n */\n'afterUnlisten',\n/**\r\n * Fired after the window was resized or the size of the Handsontable root element was changed.\r\n *\r\n * @event Hooks#afterRefreshDimensions\r\n * @param {{ width: number, height: number }} previousDimensions Previous dimensions of the container.\r\n * @param {{ width: number, height: number }} currentDimensions Current dimensions of the container.\r\n * @param {boolean} stateChanged `true`, if the container was re-render, `false` otherwise.\r\n */\n'afterRefreshDimensions',\n/**\r\n * Cancellable hook, called after resizing a window or after detecting size change of the\r\n * Handsontable root element, but before redrawing a table.\r\n *\r\n * @event Hooks#beforeRefreshDimensions\r\n * @param {{ width: number, height: number }} previousDimensions Previous dimensions of the container.\r\n * @param {{ width: number, height: number }} currentDimensions Current dimensions of the container.\r\n * @param {boolean} actionPossible `true`, if current and previous dimensions are different, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the refresh action will not be completed.\r\n */\n'beforeRefreshDimensions',\n/**\r\n * Fired by {@link CollapsibleColumns} plugin before columns collapse. This hook is fired when {@link Options#collapsibleColumns} option is enabled.\r\n *\r\n * @event Hooks#beforeColumnCollapse\r\n * @since 8.0.0\r\n * @param {Array} currentCollapsedColumns Current collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {Array} destinationCollapsedColumns Destination collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {boolean} collapsePossible `true`, if all of the column indexes are withing the bounds of the collapsed sections, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the collapsing action will not be completed.\r\n */\n'beforeColumnCollapse',\n/**\r\n * Fired by {@link CollapsibleColumns} plugin before columns collapse. This hook is fired when {@link Options#collapsibleColumns} option is enabled.\r\n *\r\n * @event Hooks#afterColumnCollapse\r\n * @since 8.0.0\r\n * @param {Array} currentCollapsedColumns Current collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {Array} destinationCollapsedColumns Destination collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {boolean} collapsePossible `true`, if all of the column indexes are withing the bounds of the collapsed sections, `false` otherwise.\r\n * @param {boolean} successfullyCollapsed `true`, if the action affected any non-collapsible column, `false` otherwise.\r\n */\n'afterColumnCollapse',\n/**\r\n * Fired by {@link CollapsibleColumns} plugin before columns expand. This hook is fired when {@link Options#collapsibleColumns} option is enabled.\r\n *\r\n * @event Hooks#beforeColumnExpand\r\n * @since 8.0.0\r\n * @param {Array} currentCollapsedColumns Current collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {Array} destinationCollapsedColumns Destination collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {boolean} expandPossible `true`, if all of the column indexes are withing the bounds of the collapsed sections, `false` otherwise.\r\n * @returns {undefined|boolean} If the callback returns `false`, the expanding action will not be completed.\r\n */\n'beforeColumnExpand',\n/**\r\n * Fired by {@link CollapsibleColumns} plugin before columns expand. This hook is fired when {@link Options#collapsibleColumns} option is enabled.\r\n *\r\n * @event Hooks#afterColumnExpand\r\n * @since 8.0.0\r\n * @param {Array} currentCollapsedColumns Current collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {Array} destinationCollapsedColumns Destination collapsible configuration - a list of collapsible physical column indexes.\r\n * @param {boolean} expandPossible `true`, if all of the column indexes are withing the bounds of the collapsed sections, `false` otherwise.\r\n * @param {boolean} successfullyExpanded `true`, if the action affected any non-collapsible column, `false` otherwise.\r\n */\n'afterColumnExpand',\n/**\r\n * Fired by {@link AutoColumnSize} plugin within SampleGenerator utility.\r\n *\r\n * @event Hooks#modifyAutoColumnSizeSeed\r\n * @since 8.4.0\r\n * @param {string|undefined} seed Seed ID, unique name to categorize samples.\r\n * @param {object} cellProperties Object containing the cell properties.\r\n * @param {*} cellValue Value of the cell.\r\n */\n'modifyAutoColumnSizeSeed'];\n\n/**\r\n * Template warning message for removed hooks.\r\n *\r\n * @type {string}\r\n */\nconst REMOVED_MESSAGE = toSingleLine`The plugin hook \"[hookName]\" was removed in Handsontable [removedInVersion].\\x20\n  Please consult release notes https://github.com/handsontable/handsontable/releases/tag/[removedInVersion] to\\x20\n  learn about the migration path.`;\n\n/**\r\n * The list of the hooks which are removed from the API. The warning message is printed out in\r\n * the developer console when the hook is used.\r\n *\r\n * The Map key is represented by hook name and its value points to the Handsontable version\r\n * in which it was removed.\r\n *\r\n * @type {Map<string, string>}\r\n */\nconst REMOVED_HOOKS = new Map([['modifyRow', '8.0.0'], ['modifyCol', '8.0.0'], ['unmodifyRow', '8.0.0'], ['unmodifyCol', '8.0.0'], ['skipLengthCache', '8.0.0'], ['hiddenColumn', '8.0.0'], ['hiddenRow', '8.0.0']]);\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * The list of the hooks which are deprecated. The warning message is printed out in\r\n * the developer console when the hook is used.\r\n *\r\n * The Map key is represented by hook name and its value keeps message which whould be\r\n * printed out when the hook is used.\r\n *\r\n * Usage:\r\n * ```js\r\n * ...\r\n * New Map([\r\n *   ['beforeColumnExpand', 'The plugin hook \"beforeColumnExpand\" is deprecated. Use \"beforeColumnExpand2\" instead.'],\r\n * ])\r\n * ...\r\n * ```\r\n *\r\n *\r\n * @type {Map<string, string>}\r\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nconst DEPRECATED_HOOKS = new Map([[]]);\nconst callbackOrder = new WeakMap();\nclass Hooks {\n  static getSingleton() {\n    return getGlobalSingleton();\n  }\n\n  /**\r\n   * @type {object}\r\n   */\n\n  /**\r\n   *\r\n   */\n  constructor() {\n    _defineProperty(this, \"globalBucket\", void 0);\n    this.globalBucket = this.createEmptyBucket();\n  }\n\n  /**\r\n   * Returns a new object with empty handlers related to every registered hook name.\r\n   *\r\n   * @returns {object} The empty bucket object.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.createEmptyBucket();\r\n   * // Results:\r\n   * {\r\n   * ...\r\n   * afterCreateCol: [],\r\n   * afterCreateRow: [],\r\n   * beforeInit: [],\r\n   * ...\r\n   * }\r\n   * ```\r\n   */\n  createEmptyBucket() {\n    const bucket = Object.create(null);\n\n    // eslint-disable-next-line no-return-assign\n    arrayEach(REGISTERED_HOOKS, hook => {\n      bucket[hook] = [];\n      this.initOrderMap(bucket, hook);\n    });\n    return bucket;\n  }\n\n  /**\r\n   * Get hook bucket based on the context of the object or if argument is `undefined`, get the global hook bucket.\r\n   *\r\n   * @param {object} [context=null] A Handsontable instance.\r\n   * @returns {object} Returns a global or Handsontable instance bucket.\r\n   */\n  getBucket() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (context) {\n      if (!context.pluginHookBucket) {\n        context.pluginHookBucket = this.createEmptyBucket();\n      }\n      return context.pluginHookBucket;\n    }\n    return this.globalBucket;\n  }\n\n  /**\r\n   * Adds a listener (globally or locally) to a specified hook name.\r\n   * If the `context` parameter is provided, the hook will be added only to the instance it references.\r\n   * Otherwise, the callback will be used everytime the hook fires on any Handsontable instance.\r\n   * You can provide an array of callback functions as the `callback` argument, this way they will all be fired\r\n   * once the hook is triggered.\r\n   *\r\n   * @see Core#addHook\r\n   * @param {string} key Hook name.\r\n   * @param {Function|Array} callback Callback function or an array of functions.\r\n   * @param {object} [context=null] The context for the hook callback to be added - a Handsontable instance or leave empty.\r\n   * @param {number} [orderIndex] Order index of the callback.\r\n   *                              If > 0, the callback will be added after the others, for example, with an index of 1, the callback will be added before the ones with an index of 2, 3, etc., but after the ones with an index of 0 and lower.\r\n   *                              If < 0, the callback will be added before the others, for example, with an index of -1, the callback will be added after the ones with an index of -2, -3, etc., but before the ones with an index of 0 and higher.\r\n   *                              If 0 or no order index is provided, the callback will be added between the \"negative\" and \"positive\" indexes.\r\n   * @returns {Hooks} Instance of Hooks.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // single callback, added locally\r\n   * Handsontable.hooks.add('beforeInit', myCallback, hotInstance);\r\n   *\r\n   * // single callback, added globally\r\n   * Handsontable.hooks.add('beforeInit', myCallback);\r\n   *\r\n   * // multiple callbacks, added locally\r\n   * Handsontable.hooks.add('beforeInit', [myCallback, anotherCallback], hotInstance);\r\n   *\r\n   * // multiple callbacks, added globally\r\n   * Handsontable.hooks.add('beforeInit', [myCallback, anotherCallback]);\r\n   * ```\r\n   */\n  add(key, callback) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let orderIndex = arguments.length > 3 ? arguments[3] : undefined;\n    if (Array.isArray(callback)) {\n      arrayEach(callback, c => this.add(key, c, context));\n    } else {\n      if (REMOVED_HOOKS.has(key)) {\n        warn(substitute(REMOVED_MESSAGE, {\n          hookName: key,\n          removedInVersion: REMOVED_HOOKS.get(key)\n        }));\n      }\n      if (DEPRECATED_HOOKS.has(key)) {\n        warn(DEPRECATED_HOOKS.get(key));\n      }\n      const bucket = this.getBucket(context);\n      if (typeof bucket[key] === 'undefined') {\n        this.register(key);\n        bucket[key] = [];\n        this.initOrderMap(bucket, key);\n      }\n      callback.skip = false;\n      if (bucket[key].indexOf(callback) === -1) {\n        // only add a hook if it has not already been added (adding the same hook twice is now silently ignored)\n        let foundInitialHook = false;\n        if (callback.initialHook) {\n          arrayEach(bucket[key], (cb, i) => {\n            if (cb.initialHook) {\n              bucket[key][i] = callback;\n              foundInitialHook = true;\n              return false;\n            }\n          });\n        }\n        if (!foundInitialHook) {\n          bucket[key].push(callback);\n        }\n      }\n      this.setCallbackOrderIndex(bucket, key, callback, orderIndex);\n      this.orderBucketByOrderIndex(bucket, key);\n    }\n    return this;\n  }\n\n  /**\r\n   * Adds a listener to a specified hook. After the hook runs this listener will be automatically removed from the bucket.\r\n   *\r\n   * @see Core#addHookOnce\r\n   * @param {string} key Hook/Event name.\r\n   * @param {Function|Array} callback Callback function.\r\n   * @param {object} [context=null] A Handsontable instance.\r\n   * @param {number} [orderIndex] Order index of the callback.\r\n   *                              If > 0, the callback will be added after the others, for example, with an index of 1, the callback will be added before the ones with an index of 2, 3, etc., but after the ones with an index of 0 and lower.\r\n   *                              If < 0, the callback will be added before the others, for example, with an index of -1, the callback will be added after the ones with an index of -2, -3, etc., but before the ones with an index of 0 and higher.\r\n   *                              If 0 or no order index is provided, the callback will be added between the \"negative\" and \"positive\" indexes.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.once('beforeInit', myCallback, hotInstance);\r\n   * ```\r\n   */\n  once(key, callback) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let orderIndex = arguments.length > 3 ? arguments[3] : undefined;\n    if (Array.isArray(callback)) {\n      arrayEach(callback, c => this.once(key, c, context));\n    } else {\n      callback.runOnce = true;\n      this.add(key, callback, context, orderIndex);\n    }\n  }\n\n  /**\r\n   * Removes a listener from a hook with a given name. If the `context` argument is provided, it removes a listener from a local hook assigned to the given Handsontable instance.\r\n   *\r\n   * @see Core#removeHook\r\n   * @param {string} key Hook/Event name.\r\n   * @param {Function} callback Callback function (needs the be the function that was previously added to the hook).\r\n   * @param {object} [context=null] Handsontable instance.\r\n   * @returns {boolean} Returns `true` if hook was removed, `false` otherwise.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.remove('beforeInit', myCallback);\r\n   * ```\r\n   */\n  remove(key, callback) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const bucket = this.getBucket(context);\n    if (typeof bucket[key] !== 'undefined') {\n      if (bucket[key].indexOf(callback) >= 0) {\n        callback.skip = true;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\r\n   * Checks whether there are any registered listeners for the provided hook name.\r\n   * If the `context` parameter is provided, it only checks for listeners assigned to the given Handsontable instance.\r\n   *\r\n   * @param {string} key Hook name.\r\n   * @param {object} [context=null] A Handsontable instance.\r\n   * @returns {boolean} `true` for success, `false` otherwise.\r\n   */\n  has(key) {\n    let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const bucket = this.getBucket(context);\n    return !!(bucket[key] !== undefined && bucket[key].length);\n  }\n\n  /**\r\n   * Runs all local and global callbacks assigned to the hook identified by the `key` parameter.\r\n   * It returns either a return value from the last called callback or the first parameter (`p1`) passed to the `run` function.\r\n   *\r\n   * @see Core#runHooks\r\n   * @param {object} context Handsontable instance.\r\n   * @param {string} key Hook/Event name.\r\n   * @param {*} [p1] Parameter to be passed as an argument to the callback function.\r\n   * @param {*} [p2] Parameter to be passed as an argument to the callback function.\r\n   * @param {*} [p3] Parameter to be passed as an argument to the callback function.\r\n   * @param {*} [p4] Parameter to be passed as an argument to the callback function.\r\n   * @param {*} [p5] Parameter to be passed as an argument to the callback function.\r\n   * @param {*} [p6] Parameter to be passed as an argument to the callback function.\r\n   * @returns {*} Either a return value from the last called callback or `p1`.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.run(hot, 'beforeInit');\r\n   * ```\r\n   */\n  run(context, key, p1, p2, p3, p4, p5, p6) {\n    {\n      const globalHandlers = this.globalBucket[key];\n      const length = globalHandlers ? globalHandlers.length : 0;\n      let index = 0;\n      if (length) {\n        // Do not optimise this loop with arrayEach or arrow function! If you do You'll decrease perf because of GC.\n        while (index < length) {\n          if (!globalHandlers[index] || globalHandlers[index].skip) {\n            index += 1;\n            /* eslint-disable no-continue */\n            continue;\n          }\n          const res = fastCall(globalHandlers[index], context, p1, p2, p3, p4, p5, p6);\n          if (res !== undefined) {\n            // eslint-disable-next-line no-param-reassign\n            p1 = res;\n          }\n          if (globalHandlers[index] && globalHandlers[index].runOnce) {\n            this.remove(key, globalHandlers[index]);\n          }\n          index += 1;\n        }\n      }\n    }\n    {\n      const localHandlers = this.getBucket(context)[key];\n      const length = localHandlers ? localHandlers.length : 0;\n      let index = 0;\n      if (length) {\n        // Do not optimise this loop with arrayEach or arrow function! If you do You'll decrease perf because of GC.\n        while (index < length) {\n          if (!localHandlers[index] || localHandlers[index].skip) {\n            index += 1;\n            /* eslint-disable no-continue */\n            continue;\n          }\n          const res = fastCall(localHandlers[index], context, p1, p2, p3, p4, p5, p6);\n          if (res !== undefined) {\n            // eslint-disable-next-line no-param-reassign\n            p1 = res;\n          }\n          if (localHandlers[index] && localHandlers[index].runOnce) {\n            this.remove(key, localHandlers[index], context);\n          }\n          index += 1;\n        }\n      }\n    }\n    return p1;\n  }\n\n  /**\r\n   * Destroy all listeners connected to the context. If no context is provided, the global listeners will be destroyed.\r\n   *\r\n   * @param {object} [context=null] A Handsontable instance.\r\n   * @example\r\n   * ```js\r\n   * // destroy the global listeners\r\n   * Handsontable.hooks.destroy();\r\n   *\r\n   * // destroy the local listeners\r\n   * Handsontable.hooks.destroy(hotInstance);\r\n   * ```\r\n   */\n  destroy() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    // eslint-disable-next-line no-return-assign\n    objectEach(this.getBucket(context), (value, key, bucket) => bucket[key].length = 0);\n  }\n\n  /**\r\n   * Registers a hook name (adds it to the list of the known hook names). Used by plugins.\r\n   * It is not necessary to call register, but if you use it, your plugin hook will be used returned by\r\n   * the `getRegistered` method. (which itself is used in the [demo](@/guides/getting-started/events-and-hooks/events-and-hooks.md)).\r\n   *\r\n   * @param {string} key The hook name.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.register('myHook');\r\n   * ```\r\n   */\n  register(key) {\n    if (!this.isRegistered(key)) {\n      REGISTERED_HOOKS.push(key);\n    }\n  }\n\n  /**\r\n   * Deregisters a hook name (removes it from the list of known hook names).\r\n   *\r\n   * @param {string} key The hook name.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.deregister('myHook');\r\n   * ```\r\n   */\n  deregister(key) {\n    if (this.isRegistered(key)) {\n      REGISTERED_HOOKS.splice(REGISTERED_HOOKS.indexOf(key), 1);\n    }\n  }\n\n  /**\r\n   * Returns a boolean value depending on if a hook by such name has been removed or deprecated.\r\n   *\r\n   * @param {string} hookName The hook name to check.\r\n   * @returns {boolean} Returns `true` if the provided hook name was marked as deprecated or\r\n   * removed from API, `false` otherwise.\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.isDeprecated('skipLengthCache');\r\n   *\r\n   * // Results:\r\n   * true\r\n   * ```\r\n   */\n  isDeprecated(hookName) {\n    return DEPRECATED_HOOKS.has(hookName) || REMOVED_HOOKS.has(hookName);\n  }\n\n  /**\r\n   * Returns a boolean depending on if a hook by such name has been registered.\r\n   *\r\n   * @param {string} hookName The hook name to check.\r\n   * @returns {boolean} `true` for success, `false` otherwise.\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.isRegistered('beforeInit');\r\n   *\r\n   * // Results:\r\n   * true\r\n   * ```\r\n   */\n  isRegistered(hookName) {\n    return REGISTERED_HOOKS.indexOf(hookName) >= 0;\n  }\n\n  /**\r\n   * Returns an array of registered hooks.\r\n   *\r\n   * @returns {Array} An array of registered hooks.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * Handsontable.hooks.getRegistered();\r\n   *\r\n   * // Results:\r\n   * [\r\n   * ...\r\n   *   'beforeInit',\r\n   *   'beforeRender',\r\n   *   'beforeSetRangeEnd',\r\n   *   'beforeDrawBorders',\r\n   *   'beforeChange',\r\n   * ...\r\n   * ]\r\n   * ```\r\n   */\n  getRegistered() {\n    return REGISTERED_HOOKS;\n  }\n\n  /**\r\n   * Sets the order index of the callback in the bucket object.\r\n   *\r\n   * @private\r\n   * @param {object} bucket The bucket object.\r\n   * @param {string} key Hook name.\r\n   * @param {Function} callback Callback function.\r\n   * @param {number|undefined} orderIndex Order index of the callback.\r\n   */\n  setCallbackOrderIndex(bucket, key, callback, orderIndex) {\n    const normalizedOrderIndex = Number.isInteger(orderIndex) ? orderIndex : 0;\n    const orderMap = this.getCallbackOrderMap(bucket, key);\n    orderMap.set(normalizedOrderIndex, [...(orderMap.get(normalizedOrderIndex) || []), callback]);\n  }\n\n  /**\r\n   * Reorders the callbacks in the bucket object by their order index.\r\n   *\r\n   * @private\r\n   * @param {objcet} bucket The bucket object.\r\n   * @param {string} key Hook name.\r\n   */\n  orderBucketByOrderIndex(bucket, key) {\n    const orderMap = this.getCallbackOrderMap(bucket, key);\n    if (orderMap === undefined || orderMap.size === 0 || orderMap.size === 1 && orderMap.has(0)) {\n      return;\n    }\n    bucket[key] = [...orderMap].sort((a, b) => a[0] - b[0]).flatMap(_ref => {\n      let [, callbacks] = _ref;\n      return callbacks;\n    });\n  }\n\n  /**\r\n   * Extends the bucket object with the order property.\r\n   *\r\n   * @private\r\n   * @param {object} bucket The bucket object.\r\n   * @param {string} hook The hook name.\r\n   */\n  initOrderMap(bucket, hook) {\n    if (!callbackOrder.has(bucket)) {\n      callbackOrder.set(bucket, []);\n    }\n    callbackOrder.get(bucket)[hook] = new Map();\n  }\n\n  /**\r\n   * Returns the order map for the provided hook.\r\n   *\r\n   * @private\r\n   * @param {object} bucket The bucket object.\r\n   * @param {string} hook The hook name.\r\n   * @returns {Map<number, Array<Function>>} Returns the order map for the provided hook.\r\n   */\n  getCallbackOrderMap(bucket, hook) {\n    return callbackOrder.get(bucket)[hook];\n  }\n}\nconst globalSingleton = new Hooks();\n\n/**\r\n * @returns {Hooks}\r\n */\nfunction getGlobalSingleton() {\n  return globalSingleton;\n}\nexport default Hooks;", "export const collection = new Map();\n\n/**\r\n * @param {string} namespace The namespace for the storage.\r\n * @returns {object}\r\n */\nexport default function staticRegister() {\n  let namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'common';\n  if (!collection.has(namespace)) {\n    collection.set(namespace, new Map());\n  }\n  const subCollection = collection.get(namespace);\n\n  /**\r\n   * Register an item to the collection. If the item under the same was exist earlier then this item will be replaced with new one.\r\n   *\r\n   * @param {string} name Identification of the item.\r\n   * @param {*} item Item to save in the collection.\r\n   */\n  function register(name, item) {\n    subCollection.set(name, item);\n  }\n\n  /**\r\n   * Retrieve the item from the collection.\r\n   *\r\n   * @param {string} name Identification of the item.\r\n   * @returns {*} Returns item which was saved in the collection.\r\n   */\n  function getItem(name) {\n    return subCollection.get(name);\n  }\n\n  /**\r\n   * Check if item under specified name is exists.\r\n   *\r\n   * @param {string} name Identification of the item.\r\n   * @returns {boolean} Returns `true` or `false` depends on if element exists in the collection.\r\n   */\n  function hasItem(name) {\n    return subCollection.has(name);\n  }\n\n  /**\r\n   * Retrieve list of names registered from the collection.\r\n   *\r\n   * @returns {Array} Returns an array of strings with all names under which objects are stored.\r\n   */\n  function getNames() {\n    return [...subCollection.keys()];\n  }\n\n  /**\r\n   * Retrieve all registered values from the collection.\r\n   *\r\n   * @returns {Array} Returns an array with all values stored in the collection.\r\n   */\n  function getValues() {\n    return [...subCollection.values()];\n  }\n  return {\n    register,\n    getItem,\n    hasItem,\n    getNames,\n    getValues\n  };\n}", "import \"core-js/modules/es.error.cause.js\";\n/**\r\n * Utility to register editors and common namespace for keeping reference to all editor classes.\r\n */\nimport Hooks from \"../pluginHooks.mjs\";\nimport staticRegister from \"../utils/staticRegister.mjs\";\nconst registeredEditorClasses = new WeakMap();\nconst {\n  register,\n  getItem,\n  hasItem,\n  getNames,\n  getValues\n} = staticRegister('editors');\n\n/**\r\n * @param {BaseEditor} editorClass The editor constructor.\r\n */\nexport function RegisteredEditor(editorClass) {\n  const instances = {};\n  const Clazz = editorClass;\n  this.getConstructor = function () {\n    return editorClass;\n  };\n  this.getInstance = function (hotInstance) {\n    if (!(hotInstance.guid in instances)) {\n      instances[hotInstance.guid] = new Clazz(hotInstance);\n    }\n    return instances[hotInstance.guid];\n  };\n  Hooks.getSingleton().add('afterDestroy', function () {\n    instances[this.guid] = null;\n  });\n}\n\n/**\r\n * Returns instance (singleton) of editor class.\r\n *\r\n * @param {string} name Name of an editor under which it has been stored.\r\n * @param {object} hotInstance Instance of Handsontable.\r\n * @returns {Function} Returns instance of editor.\r\n */\nexport function _getEditorInstance(name, hotInstance) {\n  let editor;\n  if (typeof name === 'function') {\n    if (!registeredEditorClasses.get(name)) {\n      _register(null, name);\n    }\n    editor = registeredEditorClasses.get(name);\n  } else if (typeof name === 'string') {\n    editor = getItem(name);\n  } else {\n    throw Error('Only strings and functions can be passed as \"editor\" parameter');\n  }\n  if (!editor) {\n    throw Error(`No editor registered under name \"${name}\"`);\n  }\n  return editor.getInstance(hotInstance);\n}\n\n/**\r\n * Retrieve editor class.\r\n *\r\n * @param {string} name Editor identification.\r\n * @returns {Function} Returns editor class.\r\n */\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n  if (!hasItem(name)) {\n    throw Error(`No registered editor found under \"${name}\" name`);\n  }\n  return getItem(name).getConstructor();\n}\n\n/**\r\n * Register editor class under specified name.\r\n *\r\n * @param {string} name Editor identification.\r\n * @param {Function} editorClass Editor class.\r\n */\nfunction _register(name, editorClass) {\n  if (name && typeof name !== 'string') {\n    editorClass = name;\n    name = editorClass.EDITOR_TYPE;\n  }\n  const editorWrapper = new RegisteredEditor(editorClass);\n  if (typeof name === 'string') {\n    register(name, editorWrapper);\n  }\n  registeredEditorClasses.set(editorClass, editorWrapper);\n}\nexport { _register as registerEditor, _getItem as getEditor, _getEditorInstance as getEditorInstance, hasItem as hasEditor, getNames as getRegisteredEditorNames, getValues as getRegisteredEditors };", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { stopImmediatePropagation as _stopImmediatePropagation } from \"./helpers/dom/event.mjs\";\n/**\r\n * Counter which tracks unregistered listeners (useful for detecting memory leaks).\r\n *\r\n * @type {number}\r\n */\nlet listenersCounter = 0;\n\n/**\r\n * Event DOM manager for internal use in Handsontable.\r\n *\r\n * @class EventManager\r\n */\nclass EventManager {\n  /**\r\n   * @param {object} [context=null] An object to which event listeners will be stored.\r\n   * @private\r\n   */\n  constructor() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    /**\r\n     * @type {object}\r\n     */\n    _defineProperty(this, \"context\", void 0);\n    this.context = context || this;\n\n    // TODO it modify external object. Rethink that.\n    if (!this.context.eventListeners) {\n      this.context.eventListeners = []; // TODO perf It would be more performant if every instance of EventManager tracked its own listeners only\n    }\n  }\n\n  /**\r\n   * Register specified listener (`eventName`) to the element.\r\n   *\r\n   * @param {Element} element Target element.\r\n   * @param {string} eventName Event name.\r\n   * @param {Function} callback Function which will be called after event occur.\r\n   * @param {AddEventListenerOptions|boolean} [options] Listener options if object or useCapture if boolean.\r\n   * @returns {Function} Returns function which you can easily call to remove that event.\r\n   */\n  addEventListener(element, eventName, callback) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    /**\r\n     * @private\r\n     * @param {Event} event The event object.\r\n     */\n    function callbackProxy(event) {\n      callback.call(this, extendEvent(event));\n    }\n    this.context.eventListeners.push({\n      element,\n      event: eventName,\n      callback,\n      callbackProxy,\n      options,\n      eventManager: this\n    });\n    element.addEventListener(eventName, callbackProxy, options);\n    listenersCounter += 1;\n    return () => {\n      this.removeEventListener(element, eventName, callback);\n    };\n  }\n\n  /**\r\n   * Remove the event listener previously registered.\r\n   *\r\n   * @param {Element} element Target element.\r\n   * @param {string} eventName Event name.\r\n   * @param {Function} callback Function to remove from the event target. It must be the same as during registration listener.\r\n   * @param {boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager.\r\n   */\n  removeEventListener(element, eventName, callback) {\n    let onlyOwnEvents = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let len = this.context.eventListeners.length;\n    let tmpEvent;\n    while (len) {\n      len -= 1;\n      tmpEvent = this.context.eventListeners[len];\n      if (tmpEvent.event === eventName && tmpEvent.element === element) {\n        if (callback && callback !== tmpEvent.callback) {\n          /* eslint-disable no-continue */\n          continue;\n        }\n        // TODO rethink that, main bulk is that it needs multi instances to handle same context, but with a different scopes.\n        // TODO I suppose much more efficient way will be comparing string with scope id, or any similar approach.\n        if (onlyOwnEvents && tmpEvent.eventManager !== this) {\n          continue;\n        }\n        this.context.eventListeners.splice(len, 1);\n        tmpEvent.element.removeEventListener(tmpEvent.event, tmpEvent.callbackProxy, tmpEvent.options);\n        listenersCounter -= 1;\n      }\n    }\n  }\n\n  /**\r\n   * Clear all previously registered events.\r\n   *\r\n   * @private\r\n   * @since 0.15.0-beta3\r\n   * @param {boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager.\r\n   */\n  clearEvents() {\n    let onlyOwnEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!this.context) {\n      return;\n    }\n    let len = this.context.eventListeners.length;\n    while (len) {\n      len -= 1;\n      const event = this.context.eventListeners[len];\n      if (onlyOwnEvents && event.eventManager !== this) {\n        continue;\n      }\n      this.context.eventListeners.splice(len, 1);\n      event.element.removeEventListener(event.event, event.callbackProxy, event.options);\n      listenersCounter -= 1;\n    }\n  }\n\n  /**\r\n   * Clear all previously registered events.\r\n   */\n  clear() {\n    this.clearEvents();\n  }\n\n  /**\r\n   * Destroy instance of EventManager, clearing all events of the context.\r\n   */\n  destroy() {\n    this.clearEvents();\n    this.context = null;\n  }\n\n  /**\r\n   * Destroy instance of EventManager, clearing only the own events.\r\n   */\n  destroyWithOwnEventsOnly() {\n    this.clearEvents(true);\n    this.context = null;\n  }\n\n  /**\r\n   * Trigger event at the specified target element.\r\n   *\r\n   * @param {Element} element Target element.\r\n   * @param {string} eventName Event name.\r\n   */\n  fireEvent(element, eventName) {\n    let rootDocument = element.document;\n    let rootWindow = element;\n    if (!rootDocument) {\n      rootDocument = element.ownerDocument ? element.ownerDocument : element;\n      rootWindow = rootDocument.defaultView;\n    }\n    const options = {\n      bubbles: true,\n      cancelable: eventName !== 'mousemove',\n      view: rootWindow,\n      detail: 0,\n      screenX: 0,\n      screenY: 0,\n      clientX: 1,\n      clientY: 1,\n      ctrlKey: false,\n      altKey: false,\n      shiftKey: false,\n      metaKey: false,\n      button: 0,\n      relatedTarget: undefined\n    };\n    let event;\n    if (rootDocument.createEvent) {\n      event = rootDocument.createEvent('MouseEvents');\n      event.initMouseEvent(eventName, options.bubbles, options.cancelable, options.view, options.detail, options.screenX, options.screenY, options.clientX, options.clientY, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, options.relatedTarget || rootDocument.body.parentNode);\n    } else {\n      event = rootDocument.createEventObject();\n    }\n    if (element.dispatchEvent) {\n      element.dispatchEvent(event);\n    } else {\n      element.fireEvent(`on${eventName}`, event);\n    }\n  }\n}\n\n/**\r\n * @private\r\n * @param {Event} event The event object.\r\n * @returns {Event}\r\n */\nfunction extendEvent(event) {\n  const nativeStopImmediatePropagation = event.stopImmediatePropagation;\n  event.stopImmediatePropagation = function () {\n    nativeStopImmediatePropagation.apply(this);\n    _stopImmediatePropagation(this);\n  };\n  return event;\n}\nexport default EventManager;\n\n/**\r\n * @private\r\n * @returns {number}\r\n */\nexport function getListenersCounter() {\n  return listenersCounter;\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { isFunctionKey, isCtrlMetaKey } from \"./helpers/unicode.mjs\";\nimport { isImmediatePropagationStopped } from \"./helpers/dom/event.mjs\";\nimport { getEditorInstance } from \"./editors/registry.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nvar _EditorManager_brand = /*#__PURE__*/new WeakSet();\nclass EditorManager {\n  /**\r\n   * @param {Core} hotInstance The Handsontable instance.\r\n   * @param {TableMeta} tableMeta The table meta instance.\r\n   * @param {Selection} selection The selection instance.\r\n   */\n  constructor(hotInstance, tableMeta, _selection) {\n    /**\r\n     * OnAfterDocumentKeyDown callback.\r\n     *\r\n     * @param {KeyboardEvent} event The keyboard event object.\r\n     */\n    _classPrivateMethodInitSpec(this, _EditorManager_brand);\n    /**\r\n     * Instance of {@link Handsontable}.\r\n     *\r\n     * @private\r\n     * @type {Handsontable}\r\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\r\n     * Reference to an instance's private GridSettings object.\r\n     *\r\n     * @private\r\n     * @type {GridSettings}\r\n     */\n    _defineProperty(this, \"tableMeta\", void 0);\n    /**\r\n     * Instance of {@link Selection}.\r\n     *\r\n     * @private\r\n     * @type {Selection}\r\n     */\n    _defineProperty(this, \"selection\", void 0);\n    /**\r\n     * Instance of {@link EventManager}.\r\n     *\r\n     * @private\r\n     * @type {EventManager}\r\n     */\n    _defineProperty(this, \"eventManager\", void 0);\n    /**\r\n     * Determines if EditorManager is destroyed.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"destroyed\", false);\n    /**\r\n     * A reference to an instance of the activeEditor.\r\n     *\r\n     * @private\r\n     * @type {BaseEditor}\r\n     */\n    _defineProperty(this, \"activeEditor\", void 0);\n    /**\r\n     * Keeps a reference to the cell's properties object.\r\n     *\r\n     * @type {object}\r\n     */\n    _defineProperty(this, \"cellProperties\", void 0);\n    this.hot = hotInstance;\n    this.tableMeta = tableMeta;\n    this.selection = _selection;\n    this.eventManager = new EventManager(hotInstance);\n    this.hot.addHook('afterDocumentKeyDown', event => _assertClassBrand(_EditorManager_brand, this, _onAfterDocumentKeyDown).call(this, event));\n\n    // Open editor when text composition is started (IME editor)\n    this.eventManager.addEventListener(this.hot.rootDocument.documentElement, 'compositionstart', event => {\n      if (!this.destroyed && this.hot.isListening()) {\n        this.openEditor('', event);\n      }\n    });\n    this.hot.view._wt.update('onCellDblClick', (event, coords, elem) => _assertClassBrand(_EditorManager_brand, this, _onCellDblClick).call(this, event, coords, elem));\n  }\n\n  /**\r\n   * Get active editor.\r\n   *\r\n   * @returns {BaseEditor}\r\n   */\n  getActiveEditor() {\n    return this.activeEditor;\n  }\n\n  /**\r\n   * Prepare text input to be displayed at given grid cell.\r\n   */\n  prepareEditor() {\n    var _this$hot$getSelected;\n    if (this.activeEditor && this.activeEditor.isWaiting()) {\n      this.closeEditor(false, false, dataSaved => {\n        if (dataSaved) {\n          this.prepareEditor();\n        }\n      });\n      return;\n    }\n    const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n    if (!highlight || highlight.isHeader()) {\n      return;\n    }\n    const {\n      row,\n      col\n    } = highlight;\n    const modifiedCellCoords = this.hot.runHooks('modifyGetCellCoords', row, col);\n    let visualRowToCheck = row;\n    let visualColumnToCheck = col;\n    if (Array.isArray(modifiedCellCoords)) {\n      [visualRowToCheck, visualColumnToCheck] = modifiedCellCoords;\n    }\n\n    // Getting values using the modified coordinates.\n    this.cellProperties = this.hot.getCellMeta(visualRowToCheck, visualColumnToCheck);\n    if (!this.isCellEditable()) {\n      this.clearActiveEditor();\n      return;\n    }\n    const td = this.hot.getCell(row, col, true);\n\n    // Skip the preparation when the cell is not rendered in the DOM. The cell is scrolled out of\n    // the table's viewport.\n    if (td) {\n      const editorClass = this.hot.getCellEditor(this.cellProperties);\n      const prop = this.hot.colToProp(visualColumnToCheck);\n      const originalValue = this.hot.getSourceDataAtCell(this.hot.toPhysicalRow(visualRowToCheck), visualColumnToCheck);\n      this.activeEditor = getEditorInstance(editorClass, this.hot);\n      // Using not modified coordinates, as we need to get the table element using selection coordinates.\n      // There is an extra translation in the editor for saving value.\n      this.activeEditor.prepare(row, col, prop, td, originalValue, this.cellProperties);\n    }\n  }\n\n  /**\r\n   * Check is editor is opened/showed.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isEditorOpened() {\n    return this.activeEditor && this.activeEditor.isOpened();\n  }\n\n  /**\r\n   * Open editor with initial value.\r\n   *\r\n   * @param {null|string} newInitialValue New value from which editor will start if handled property it's not the `null`.\r\n   * @param {Event} event The event object.\r\n   * @param {boolean} [enableFullEditMode=false] When true, an editor works in full editing mode. Mode disallows closing an editor\r\n   *                                             when arrow keys are pressed.\r\n   */\n  openEditor(newInitialValue, event) {\n    let enableFullEditMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!this.isCellEditable()) {\n      this.clearActiveEditor();\n      return;\n    }\n    const selection = this.hot.getSelectedRangeLast();\n    let allowOpening = this.hot.runHooks('beforeBeginEditing', selection.highlight.row, selection.highlight.col, newInitialValue, event, enableFullEditMode);\n\n    // If the above hook does not return boolean apply default behavior which disallows opening\n    // an editor after double mouse click for non-contiguous selection (while pressing Ctrl/Cmd) and\n    // for multiple selected cells (while pressing SHIFT).\n    if (event instanceof MouseEvent && typeof allowOpening !== 'boolean') {\n      allowOpening = this.hot.selection.getLayerLevel() === 0 && selection.isSingle();\n    }\n    if (allowOpening === false) {\n      this.clearActiveEditor();\n      return;\n    }\n    if (!this.activeEditor) {\n      this.hot.scrollToFocusedCell();\n      this.prepareEditor();\n    }\n    if (this.activeEditor) {\n      if (enableFullEditMode) {\n        this.activeEditor.enableFullEditMode();\n      }\n      this.activeEditor.beginEditing(newInitialValue, event);\n    }\n  }\n\n  /**\r\n   * Close editor, finish editing cell.\r\n   *\r\n   * @param {boolean} restoreOriginalValue If `true`, then closes editor without saving value from the editor into a cell.\r\n   * @param {boolean} isCtrlPressed If `true`, then editor will save value to each cell in the last selected range.\r\n   * @param {Function} callback The callback function, fired after editor closing.\r\n   */\n  closeEditor(restoreOriginalValue, isCtrlPressed, callback) {\n    if (this.activeEditor) {\n      this.activeEditor.finishEditing(restoreOriginalValue, isCtrlPressed, callback);\n    } else if (callback) {\n      callback(false);\n    }\n  }\n\n  /**\r\n   * Close editor and save changes.\r\n   *\r\n   * @param {boolean} isCtrlPressed If `true`, then editor will save value to each cell in the last selected range.\r\n   */\n  closeEditorAndSaveChanges(isCtrlPressed) {\n    this.closeEditor(false, isCtrlPressed);\n  }\n\n  /**\r\n   * Close editor and restore original value.\r\n   *\r\n   * @param {boolean} isCtrlPressed Indication of whether the CTRL button is pressed.\r\n   */\n  closeEditorAndRestoreOriginalValue(isCtrlPressed) {\n    this.closeEditor(true, isCtrlPressed);\n  }\n\n  /**\r\n   * Clears reference to an instance of the active editor.\r\n   *\r\n   * @private\r\n   */\n  clearActiveEditor() {\n    this.activeEditor = undefined;\n  }\n\n  /**\r\n   * Checks if the currently selected cell (pointed by selection highlight coords) is editable.\r\n   * Editable cell is when:\r\n   *   - the cell has defined an editor type;\r\n   *   - the cell is not marked as read-only;\r\n   *   - the cell is not hidden.\r\n   *\r\n   * @private\r\n   * @returns {boolean}\r\n   */\n  isCellEditable() {\n    const selection = this.hot.getSelectedRangeLast();\n    if (!selection) {\n      return false;\n    }\n    const editorClass = this.hot.getCellEditor(this.cellProperties);\n    const {\n      row,\n      col\n    } = selection.highlight;\n    const {\n      rowIndexMapper,\n      columnIndexMapper\n    } = this.hot;\n    const isCellHidden = rowIndexMapper.isHidden(this.hot.toPhysicalRow(row)) || columnIndexMapper.isHidden(this.hot.toPhysicalColumn(col));\n    if (this.cellProperties.readOnly || !editorClass || isCellHidden) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\r\n   * Controls selection's behavior after clicking `Enter`.\r\n   *\r\n   * @private\r\n   * @param {KeyboardEvent} event The keyboard event object.\r\n   */\n  moveSelectionAfterEnter(event) {\n    const enterMoves = {\n      ...(typeof this.tableMeta.enterMoves === 'function' ? this.tableMeta.enterMoves(event) : this.tableMeta.enterMoves)\n    };\n    if (event.shiftKey) {\n      enterMoves.row = -enterMoves.row;\n      enterMoves.col = -enterMoves.col;\n    }\n    if (this.hot.selection.isMultiple()) {\n      this.selection.transformFocus(enterMoves.row, enterMoves.col);\n    } else {\n      this.selection.transformStart(enterMoves.row, enterMoves.col, true);\n    }\n  }\n  /**\r\n   * Destroy the instance.\r\n   */\n  destroy() {\n    this.destroyed = true;\n    this.eventManager.destroy();\n  }\n}\nfunction _onAfterDocumentKeyDown(event) {\n  const selection = this.hot.getSelectedRangeLast();\n  if (!this.hot.isListening() || !selection || selection.highlight.isHeader() || isImmediatePropagationStopped(event)) {\n    return;\n  }\n  const {\n    keyCode\n  } = event;\n\n  // catch CTRL but not right ALT (which in some systems triggers ALT+CTRL)\n  const isCtrlPressed = (event.ctrlKey || event.metaKey) && !event.altKey;\n  if (!this.activeEditor || this.activeEditor && !this.activeEditor.isWaiting()) {\n    if (!isFunctionKey(keyCode) && !isCtrlMetaKey(keyCode) && !isCtrlPressed && !this.isEditorOpened()) {\n      this.openEditor('', event);\n    }\n  }\n}\n/**\r\n * OnCellDblClick callback.\r\n *\r\n * @param {MouseEvent} event The mouse event object.\r\n * @param {object} coords The cell coordinates.\r\n */\nfunction _onCellDblClick(event, coords) {\n  if (coords.isCell()) {\n    this.openEditor(null, event, true);\n  }\n}\nconst instances = new WeakMap();\n\n/**\r\n * @param {Core} hotInstance The Handsontable instance.\r\n * @param {TableMeta} tableMeta The table meta class instance.\r\n * @param {Selection} selection The selection instance.\r\n * @returns {EditorManager}\r\n */\nEditorManager.getInstance = function (hotInstance, tableMeta, selection) {\n  let editorManager = instances.get(hotInstance);\n  if (!editorManager) {\n    editorManager = new EditorManager(hotInstance, tableMeta, selection);\n    instances.set(hotInstance, editorManager);\n  }\n  return editorManager;\n};\nexport default EditorManager;", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { warn } from \"./helpers/console.mjs\";\nimport { isOutsideInput } from \"./helpers/dom/element.mjs\";\nimport { debounce } from \"./helpers/function.mjs\";\n/**\r\n * Possible focus modes.\r\n * - CELL - The browser's focus stays on the lastly selected cell element.\r\n * - MIXED - The browser's focus switches from the lastly selected cell element to the currently active editor's\r\n * `TEXTAREA` element after a delay defined in the manager.\r\n *\r\n * @type {{CELL: string, MIXED: string}}\r\n */\nconst FOCUS_MODES = Object.freeze({\n  CELL: 'cell',\n  MIXED: 'mixed'\n});\n\n/**\r\n * Manages the browser's focus in the table.\r\n */\nvar _hot = /*#__PURE__*/new WeakMap();\nvar _focusMode = /*#__PURE__*/new WeakMap();\nvar _refocusDelay = /*#__PURE__*/new WeakMap();\nvar _refocusElementGetter = /*#__PURE__*/new WeakMap();\nvar _debouncedSelect = /*#__PURE__*/new WeakMap();\nvar _FocusManager_brand = /*#__PURE__*/new WeakSet();\nexport class FocusManager {\n  constructor(hotInstance) {\n    var _this = this;\n    /**\r\n     * Get and return the currently selected and highlighted cell/header element.\r\n     *\r\n     * @param {Function} callback Callback function to be called after the cell element is retrieved.\r\n     */\n    _classPrivateMethodInitSpec(this, _FocusManager_brand);\n    /**\r\n     * The Handsontable instance.\r\n     */\n    _classPrivateFieldInitSpec(this, _hot, void 0);\n    /**\r\n     * The currently enabled focus mode.\r\n     * Can be either:\r\n     *\r\n     * - 'cell' - The browser's focus stays on the lastly selected cell element.\r\n     * - 'mixed' - The browser's focus switches from the lastly selected cell element to the currently active editor's\r\n     * `TEXTAREA` element after a delay defined in the manager.\r\n     *\r\n     * @type {'cell' | 'mixed'}\r\n     */\n    _classPrivateFieldInitSpec(this, _focusMode, void 0);\n    /**\r\n     * The delay after which the focus switches from the lastly selected cell to the active editor's `TEXTAREA`\r\n     * element if the focus mode is set to 'mixed'.\r\n     *\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _refocusDelay, 1);\n    /**\r\n     * Getter function for the element to be used when refocusing the browser after a delay. If `null`, the active\r\n     * editor's `TEXTAREA` element will be used.\r\n     *\r\n     * @type {null|Function}\r\n     */\n    _classPrivateFieldInitSpec(this, _refocusElementGetter, null);\n    /**\r\n     * Map of the debounced `select` functions.\r\n     *\r\n     * @type {Map<number, Function>}\r\n     */\n    _classPrivateFieldInitSpec(this, _debouncedSelect, new Map());\n    const hotSettings = hotInstance.getSettings();\n    _classPrivateFieldSet(_hot, this, hotInstance);\n    _classPrivateFieldSet(_focusMode, this, hotSettings.imeFastEdit ? FOCUS_MODES.MIXED : FOCUS_MODES.CELL);\n    _classPrivateFieldGet(_hot, this).addHook('afterUpdateSettings', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _assertClassBrand(_FocusManager_brand, _this, _onUpdateSettings).call(_this, ...args);\n    });\n    _classPrivateFieldGet(_hot, this).addHook('afterSelection', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _assertClassBrand(_FocusManager_brand, _this, _focusCell).call(_this, ...args);\n    });\n    _classPrivateFieldGet(_hot, this).addHook('afterSelectionFocusSet', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _assertClassBrand(_FocusManager_brand, _this, _focusCell).call(_this, ...args);\n    });\n    _classPrivateFieldGet(_hot, this).addHook('afterSelectionEnd', function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _assertClassBrand(_FocusManager_brand, _this, _focusEditorElement).call(_this, ...args);\n    });\n  }\n\n  /**\r\n   * Get the current focus mode.\r\n   *\r\n   * @returns {'cell' | 'mixed'}\r\n   */\n  getFocusMode() {\n    return _classPrivateFieldGet(_focusMode, this);\n  }\n\n  /**\r\n   * Set the focus mode.\r\n   *\r\n   * @param {'cell' | 'mixed'} focusMode The new focus mode.\r\n   */\n  setFocusMode(focusMode) {\n    if (Object.values(FOCUS_MODES).includes(focusMode)) {\n      _classPrivateFieldSet(_focusMode, this, focusMode);\n    } else {\n      warn(`\"${focusMode}\" is not a valid focus mode.`);\n    }\n  }\n\n  /**\r\n   * Get the delay after which the focus will change from the cell elements to the active editor's `TEXTAREA`\r\n   * element if the focus mode is set to 'mixed'.\r\n   *\r\n   * @returns {number} Delay in milliseconds.\r\n   */\n  getRefocusDelay() {\n    return _classPrivateFieldGet(_refocusDelay, this);\n  }\n\n  /**\r\n   * Set the delay after which the focus will change from the cell elements to the active editor's `TEXTAREA`\r\n   * element if the focus mode is set to 'mixed'.\r\n   *\r\n   * @param {number} delay Delay in milliseconds.\r\n   */\n  setRefocusDelay(delay) {\n    _classPrivateFieldSet(_refocusDelay, this, delay);\n  }\n\n  /**\r\n   * Set the function to be used as the \"refocus element\" getter. It should return a focusable HTML element.\r\n   *\r\n   * @param {Function} getRefocusElementFunction The refocus element getter.\r\n   */\n  setRefocusElementGetter(getRefocusElementFunction) {\n    _classPrivateFieldSet(_refocusElementGetter, this, getRefocusElementFunction);\n  }\n\n  /**\r\n   * Get the element to be used when refocusing the browser after a delay in case of the focus mode being 'mixed'.\r\n   *\r\n   * @returns {HTMLTextAreaElement|HTMLElement|undefined}\r\n   */\n  getRefocusElement() {\n    if (typeof _classPrivateFieldGet(_refocusElementGetter, this) === 'function') {\n      return _classPrivateFieldGet(_refocusElementGetter, this).call(this);\n    } else {\n      var _classPrivateFieldGet2;\n      return (_classPrivateFieldGet2 = _classPrivateFieldGet(_hot, this).getActiveEditor()) === null || _classPrivateFieldGet2 === void 0 ? void 0 : _classPrivateFieldGet2.TEXTAREA;\n    }\n  }\n\n  /**\r\n   * Set the browser's focus to the highlighted cell of the last selection.\r\n   *\r\n   * @param {HTMLTableCellElement} [selectedCell] The highlighted cell/header element.\r\n   */\n  focusOnHighlightedCell(selectedCell) {\n    const focusElement = element => {\n      var _classPrivateFieldGet3, _classPrivateFieldGet4;\n      const currentHighlightCoords = (_classPrivateFieldGet3 = _classPrivateFieldGet(_hot, this).getSelectedRangeLast()) === null || _classPrivateFieldGet3 === void 0 ? void 0 : _classPrivateFieldGet3.highlight;\n      if (!currentHighlightCoords) {\n        return;\n      }\n      let elementToBeFocused = _classPrivateFieldGet(_hot, this).runHooks('modifyFocusedElement', currentHighlightCoords.row, currentHighlightCoords.col, element);\n      if (!(elementToBeFocused instanceof HTMLElement)) {\n        elementToBeFocused = element;\n      }\n      if (elementToBeFocused && !((_classPrivateFieldGet4 = _classPrivateFieldGet(_hot, this).getActiveEditor()) !== null && _classPrivateFieldGet4 !== void 0 && _classPrivateFieldGet4.isOpened())) {\n        elementToBeFocused.focus({\n          preventScroll: true\n        });\n      }\n    };\n    if (selectedCell) {\n      focusElement(selectedCell);\n    } else {\n      _assertClassBrand(_FocusManager_brand, this, _getSelectedCell).call(this, element => focusElement(element));\n    }\n  }\n\n  /**\r\n   * Set the focus to the active editor's `TEXTAREA` element after the provided delay. If no delay is provided, it\r\n   * will be taken from the manager's configuration.\r\n   *\r\n   * @param {number} [delay] Delay in milliseconds.\r\n   */\n  refocusToEditorTextarea() {\n    var _classPrivateFieldGet5;\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _classPrivateFieldGet(_refocusDelay, this);\n    const refocusElement = this.getRefocusElement();\n\n    // Re-focus on the editor's `TEXTAREA` element (or a predefined element) if the `imeFastEdit` option is enabled.\n    if (_classPrivateFieldGet(_hot, this).getSettings().imeFastEdit && !((_classPrivateFieldGet5 = _classPrivateFieldGet(_hot, this).getActiveEditor()) !== null && _classPrivateFieldGet5 !== void 0 && _classPrivateFieldGet5.isOpened()) && !!refocusElement) {\n      if (!_classPrivateFieldGet(_debouncedSelect, this).has(delay)) {\n        _classPrivateFieldGet(_debouncedSelect, this).set(delay, debounce(() => {\n          refocusElement.select();\n        }, delay));\n      }\n      _classPrivateFieldGet(_debouncedSelect, this).get(delay)();\n    }\n  }\n}\nfunction _getSelectedCell(callback) {\n  var _classPrivateFieldGet6;\n  const highlight = (_classPrivateFieldGet6 = _classPrivateFieldGet(_hot, this).getSelectedRangeLast()) === null || _classPrivateFieldGet6 === void 0 ? void 0 : _classPrivateFieldGet6.highlight;\n  if (!highlight || !_classPrivateFieldGet(_hot, this).selection.isCellVisible(highlight)) {\n    callback(null);\n    return;\n  }\n  const cell = _classPrivateFieldGet(_hot, this).getCell(highlight.row, highlight.col, true);\n  if (cell === null) {\n    _classPrivateFieldGet(_hot, this).addHookOnce('afterScroll', () => {\n      callback(_classPrivateFieldGet(_hot, this).getCell(highlight.row, highlight.col, true));\n    });\n  } else {\n    callback(cell);\n  }\n}\n/**\r\n * Manage the browser's focus after each cell selection change.\r\n */\nfunction _focusCell() {\n  _assertClassBrand(_FocusManager_brand, this, _getSelectedCell).call(this, selectedCell => {\n    const {\n      activeElement\n    } = _classPrivateFieldGet(_hot, this).rootDocument;\n\n    // Blurring the `activeElement` removes the unwanted border around the focusable element (#6877)\n    // and resets the `document.activeElement` property. The blurring should happen only when the\n    // previously selected input element has not belonged to the Handsontable editor. If blurring is\n    // triggered for all elements, there is a problem with the disappearing IME editor (#9672).\n    if (activeElement && isOutsideInput(activeElement)) {\n      activeElement.blur();\n    }\n    this.focusOnHighlightedCell(selectedCell);\n  });\n}\n/**\r\n * Manage the browser's focus after cell selection end.\r\n */\nfunction _focusEditorElement() {\n  _assertClassBrand(_FocusManager_brand, this, _getSelectedCell).call(this, selectedCell => {\n    if (this.getFocusMode() === FOCUS_MODES.MIXED && selectedCell.nodeName === 'TD') {\n      this.refocusToEditorTextarea();\n    }\n  });\n}\n/**\r\n * Update the manager configuration after calling `updateSettings`.\r\n *\r\n * @param {object} newSettings The new settings passed to the `updateSettings` method.\r\n */\nfunction _onUpdateSettings(newSettings) {\n  if (typeof newSettings.imeFastEdit === 'boolean') {\n    this.setFocusMode(newSettings.imeFastEdit ? FOCUS_MODES.MIXED : FOCUS_MODES.CELL);\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport { isEmpty } from \"./../helpers/mixed.mjs\";\nconst ESCAPED_HTML_CHARS = {\n  '&nbsp;': '\\x20',\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>'\n};\nconst regEscapedChars = new RegExp(Object.keys(ESCAPED_HTML_CHARS).map(key => `(${key})`).join('|'), 'gi');\n\n/**\r\n * Verifies if node is an HTMLTable element.\r\n *\r\n * @param {Node} element Node to verify if it's an HTMLTable.\r\n * @returns {boolean}\r\n */\nfunction isHTMLTable(element) {\n  return (element && element.nodeName || '') === 'TABLE';\n}\n\n/**\r\n * Converts Handsontable into HTMLTableElement.\r\n *\r\n * @param {Core} instance The Handsontable instance.\r\n * @returns {string} OuterHTML of the HTMLTableElement.\r\n */\nexport function instanceToHTML(instance) {\n  const hasColumnHeaders = instance.hasColHeaders();\n  const hasRowHeaders = instance.hasRowHeaders();\n  const coords = [hasColumnHeaders ? -1 : 0, hasRowHeaders ? -1 : 0, instance.countRows() - 1, instance.countCols() - 1];\n  const data = instance.getData(...coords);\n  const countRows = data.length;\n  const countCols = countRows > 0 ? data[0].length : 0;\n  const TABLE = ['<table>', '</table>'];\n  const THEAD = hasColumnHeaders ? ['<thead>', '</thead>'] : [];\n  const TBODY = ['<tbody>', '</tbody>'];\n  const rowModifier = hasRowHeaders ? 1 : 0;\n  const columnModifier = hasColumnHeaders ? 1 : 0;\n  for (let row = 0; row < countRows; row += 1) {\n    const isColumnHeadersRow = hasColumnHeaders && row === 0;\n    const CELLS = [];\n    for (let column = 0; column < countCols; column += 1) {\n      const isRowHeadersColumn = !isColumnHeadersRow && hasRowHeaders && column === 0;\n      let cell = '';\n      if (isColumnHeadersRow) {\n        cell = `<th>${instance.getColHeader(column - rowModifier)}</th>`;\n      } else if (isRowHeadersColumn) {\n        cell = `<th>${instance.getRowHeader(row - columnModifier)}</th>`;\n      } else {\n        const cellData = data[row][column];\n        const {\n          hidden,\n          rowspan,\n          colspan\n        } = instance.getCellMeta(row - columnModifier, column - rowModifier);\n        if (!hidden) {\n          const attrs = [];\n          if (rowspan) {\n            attrs.push(`rowspan=\"${rowspan}\"`);\n          }\n          if (colspan) {\n            attrs.push(`colspan=\"${colspan}\"`);\n          }\n          if (isEmpty(cellData)) {\n            cell = `<td ${attrs.join(' ')}></td>`;\n          } else {\n            const value = cellData.toString().replace('<', '&lt;').replace('>', '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n            cell = `<td ${attrs.join(' ')}>${value}</td>`;\n          }\n        }\n      }\n      CELLS.push(cell);\n    }\n    const TR = ['<tr>', ...CELLS, '</tr>'].join('');\n    if (isColumnHeadersRow) {\n      THEAD.splice(1, 0, TR);\n    } else {\n      TBODY.splice(-1, 0, TR);\n    }\n  }\n  TABLE.splice(1, 0, THEAD.join(''), TBODY.join(''));\n  return TABLE.join('');\n}\n\n/**\r\n * Converts 2D array into HTMLTableElement.\r\n *\r\n * @param {Array} input Input array which will be converted to HTMLTable.\r\n * @returns {string} OuterHTML of the HTMLTableElement.\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function _dataToHTML(input) {\n  const inputLen = input.length;\n  const result = ['<table>'];\n  for (let row = 0; row < inputLen; row += 1) {\n    const rowData = input[row];\n    const columnsLen = rowData.length;\n    const columnsResult = [];\n    if (row === 0) {\n      result.push('<tbody>');\n    }\n    for (let column = 0; column < columnsLen; column += 1) {\n      const cellData = rowData[column];\n      const parsedCellData = isEmpty(cellData) ? '' : cellData.toString().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20{2,}/gi, substring => {\n        // The way how Excel serializes data with at least two spaces.\n        return `<span style=\"mso-spacerun: yes\">${'&nbsp;'.repeat(substring.length - 1)} </span>`;\n      }).replace(/\\t/gi, '&#9;');\n      columnsResult.push(`<td>${parsedCellData}</td>`);\n    }\n    result.push('<tr>', ...columnsResult, '</tr>');\n    if (row + 1 === inputLen) {\n      result.push('</tbody>');\n    }\n  }\n  result.push('</table>');\n  return result.join('');\n}\n\n/**\r\n * Converts HTMLTable or string into Handsontable configuration object.\r\n *\r\n * @param {Element|string} element Node element which should contain `<table>...</table>`.\r\n * @param {Document} [rootDocument] The document window owner.\r\n * @returns {object} Return configuration object. Contains keys as DefaultSettings.\r\n */\n// eslint-disable-next-line no-restricted-globals\nexport function htmlToGridSettings(element) {\n  let rootDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  const settingsObj = {};\n  const fragment = rootDocument.createDocumentFragment();\n  const tempElem = rootDocument.createElement('div');\n  fragment.appendChild(tempElem);\n  let checkElement = element;\n  if (typeof checkElement === 'string') {\n    const escapedAdjacentHTML = checkElement.replace(/<td\\b[^>]*?>([\\s\\S]*?)<\\/\\s*td>/g, cellFragment => {\n      const openingTag = cellFragment.match(/<td\\b[^>]*?>/g)[0];\n      const paragraphRegexp = /<p.*?>/g;\n      const cellValue = cellFragment.substring(openingTag.length, cellFragment.lastIndexOf('<')).trim() // Removing whitespaces from the start and the end of HTML fragment\n      .replaceAll(/\\n\\s+/g, ' ') // HTML tags may be split using multiple new lines and whitespaces\n      .replaceAll(paragraphRegexp, '\\n') // Only paragraphs should split text using new line characters\n      .replace('\\n', '') // First paragraph shouldn't start with new line characters\n      .replaceAll(/<\\/(.*)>\\s+$/mg, '</$1>') // HTML tags may end with whitespace.\n      .replace(/(<(?!br)([^>]+)>)/gi, '') // Removing HTML tags\n      .replaceAll(/^&nbsp;$/mg, ''); // Removing single &nbsp; characters separating new lines\n      const closingTag = '</td>';\n      return `${openingTag}${cellValue}${closingTag}`;\n    });\n    tempElem.insertAdjacentHTML('afterbegin', `${escapedAdjacentHTML}`);\n    checkElement = tempElem.querySelector('table');\n  }\n  if (!checkElement || !isHTMLTable(checkElement)) {\n    return;\n  }\n  const generator = tempElem.querySelector('meta[name$=\"enerator\"]');\n  const hasRowHeaders = checkElement.querySelector('tbody th') !== null;\n  const trElement = checkElement.querySelector('tr');\n  const countCols = !trElement ? 0 : Array.from(trElement.cells).reduce((cols, cell) => cols + cell.colSpan, 0) - (hasRowHeaders ? 1 : 0);\n  const fixedRowsBottom = checkElement.tFoot && Array.from(checkElement.tFoot.rows) || [];\n  const fixedRowsTop = [];\n  let hasColHeaders = false;\n  let thRowsLen = 0;\n  let countRows = 0;\n  if (checkElement.tHead) {\n    const thRows = Array.from(checkElement.tHead.rows).filter(tr => {\n      const isDataRow = tr.querySelector('td') !== null;\n      if (isDataRow) {\n        fixedRowsTop.push(tr);\n      }\n      return !isDataRow;\n    });\n    thRowsLen = thRows.length;\n    hasColHeaders = thRowsLen > 0;\n    if (thRowsLen > 1) {\n      settingsObj.nestedHeaders = Array.from(thRows).reduce((rows, row) => {\n        const headersRow = Array.from(row.cells).reduce((headers, header, currentIndex) => {\n          if (hasRowHeaders && currentIndex === 0) {\n            return headers;\n          }\n          const {\n            colSpan: colspan,\n            innerHTML\n          } = header;\n          const nextHeader = colspan > 1 ? {\n            label: innerHTML,\n            colspan\n          } : innerHTML;\n          headers.push(nextHeader);\n          return headers;\n        }, []);\n        rows.push(headersRow);\n        return rows;\n      }, []);\n    } else if (hasColHeaders) {\n      settingsObj.colHeaders = Array.from(thRows[0].children).reduce((headers, header, index) => {\n        if (hasRowHeaders && index === 0) {\n          return headers;\n        }\n        headers.push(header.innerHTML);\n        return headers;\n      }, []);\n    }\n  }\n  if (fixedRowsTop.length) {\n    settingsObj.fixedRowsTop = fixedRowsTop.length;\n  }\n  if (fixedRowsBottom.length) {\n    settingsObj.fixedRowsBottom = fixedRowsBottom.length;\n  }\n  const dataRows = [...fixedRowsTop, ...Array.from(checkElement.tBodies).reduce((sections, section) => {\n    sections.push(...Array.from(section.rows));\n    return sections;\n  }, []), ...fixedRowsBottom];\n  countRows = dataRows.length;\n  const dataArr = new Array(countRows);\n  for (let r = 0; r < countRows; r++) {\n    dataArr[r] = new Array(countCols);\n  }\n  const mergeCells = [];\n  const rowHeaders = [];\n  for (let row = 0; row < countRows; row++) {\n    const tr = dataRows[row];\n    const cells = Array.from(tr.cells);\n    const cellsLen = cells.length;\n    for (let cellId = 0; cellId < cellsLen; cellId++) {\n      const cell = cells[cellId];\n      const {\n        nodeName,\n        innerHTML,\n        rowSpan: rowspan,\n        colSpan: colspan\n      } = cell;\n      const col = dataArr[row].findIndex(value => value === undefined);\n      if (nodeName === 'TD') {\n        if (rowspan > 1 || colspan > 1) {\n          for (let rstart = row; rstart < row + rowspan; rstart++) {\n            if (rstart < countRows) {\n              for (let cstart = col; cstart < col + colspan; cstart++) {\n                dataArr[rstart][cstart] = null;\n              }\n            }\n          }\n          const styleAttr = cell.getAttribute('style');\n          const ignoreMerge = styleAttr && styleAttr.includes('mso-ignore:colspan');\n          if (!ignoreMerge) {\n            mergeCells.push({\n              col,\n              row,\n              rowspan,\n              colspan\n            });\n          }\n        }\n        let cellValue = '';\n        if (generator && /excel/gi.test(generator.content)) {\n          cellValue = innerHTML.replace(/[\\r\\n][\\x20]{0,2}/g, '\\x20').replace(/<br(\\s*|\\/)>[\\r\\n]?[\\x20]{0,3}/gim, '\\r\\n');\n        } else {\n          cellValue = innerHTML.replace(/<br(\\s*|\\/)>[\\r\\n]?/gim, '\\r\\n');\n        }\n        dataArr[row][col] = cellValue.replace(regEscapedChars, match => ESCAPED_HTML_CHARS[match]);\n      } else {\n        rowHeaders.push(innerHTML);\n      }\n    }\n  }\n  if (mergeCells.length) {\n    settingsObj.mergeCells = mergeCells;\n  }\n  if (rowHeaders.length) {\n    settingsObj.rowHeaders = rowHeaders;\n  }\n  if (dataArr.length) {\n    settingsObj.data = dataArr;\n  }\n  return settingsObj;\n}", "'use strict';\n\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({\n  target: 'String',\n  proto: true\n}, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, position, replacement;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw new $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) return call(replacer, searchValue, O, replaceValue);\n      if (IS_PURE && IS_REG_EXP) return replace(toString(O), searchValue, replaceValue);\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = indexOf(string, searchString);\n    while (position !== -1) {\n      replacement = functionalReplace ? toString(replaceValue(searchString, position, string)) : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = position + advanceBy > string.length ? -1 : indexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});", "import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * Checks if the passed value is numeric one. For example these values (passed as string or number)\r\n * are considered as numeric values:\r\n *  - 0.001\r\n *  - .001\r\n *  - 10000\r\n *  - 1e+26\r\n *  - 22e-26\r\n *  - .45e+26\r\n *  - 0xabcdef (hex)\r\n *  - 0x1 (hex)\r\n *\r\n * these values are not considered as numeric:\r\n *  - - 1000\r\n *  - 100 000\r\n *\r\n * @param {*} value The value to check.\r\n * @param {string[]} additionalDelimiters An additional delimiters to be used while checking the numeric value.\r\n * @returns {boolean}\r\n */\nexport function isNumeric(value) {\n  let additionalDelimiters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const type = typeof value;\n  if (type === 'number') {\n    return !isNaN(value) && isFinite(value);\n  } else if (type === 'string') {\n    if (value.length === 0) {\n      return false;\n    } else if (value.length === 1) {\n      return /\\d/.test(value);\n    }\n    const delimiter = Array.from(new Set(['.', ...additionalDelimiters])).map(d => `\\\\${d}`).join('|');\n    return new RegExp(`^[+-]?(((${delimiter})?\\\\d+((${delimiter})\\\\d+)?(e[+-]?\\\\d+)?)|(0x[a-f\\\\d]+))$`, 'i').test(value.trim());\n  } else if (type === 'object') {\n    return !!value && typeof value.valueOf() === 'number' && !(value instanceof Date);\n  }\n  return false;\n}\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\n/**\r\n * Checks if the passed value is numeric-like value. The helper returns `true` for the same\r\n * values as for the `isNumeric` function plus `true` for numbers delimited by comma.\r\n *\r\n * @param {*} value The value to check.\r\n * @returns {boolean}\r\n */\nexport function isNumericLike(value) {\n  return isNumeric(value, [',']);\n}\n\n/**\r\n * A specialized version of `.forEach` defined by ranges.\r\n *\r\n * @param {number} rangeFrom The number from start iterate.\r\n * @param {number|Function} rangeTo The number where finish iterate or function as a iteratee.\r\n * @param {Function} [iteratee] The function invoked per iteration.\r\n */\nexport function rangeEach(rangeFrom, rangeTo, iteratee) {\n  let index = -1;\n  if (typeof rangeTo === 'function') {\n    iteratee = rangeTo;\n    rangeTo = rangeFrom;\n  } else {\n    index = rangeFrom - 1;\n  }\n\n  /* eslint-disable-next-line no-plusplus */\n  while (++index <= rangeTo) {\n    if (iteratee(index) === false) {\n      break;\n    }\n  }\n}\n\n/**\r\n * A specialized version of `.forEach` defined by ranges iterable in reverse order.\r\n *\r\n * @param {number} rangeFrom The number from start iterate.\r\n * @param {number|Function} rangeTo The number where finish iterate or function as a iteratee.\r\n * @param {Function} [iteratee] The function invoked per iteration.\r\n */\nexport function rangeEachReverse(rangeFrom, rangeTo, iteratee) {\n  let index = rangeFrom + 1;\n  if (typeof rangeTo === 'function') {\n    iteratee = rangeTo;\n    rangeTo = 0;\n  }\n  /* eslint-disable-next-line no-plusplus */\n  while (--index >= rangeTo) {\n    if (iteratee(index) === false) {\n      break;\n    }\n  }\n}\n\n/**\r\n * Calculate value from percent.\r\n *\r\n * @param {number} value Base value from percent will be calculated.\r\n * @param {string|number} percent Can be number or string (eq. `'33%'`).\r\n * @returns {number}\r\n */\nexport function valueAccordingPercent(value, percent) {\n  percent = parseInt(percent.toString().replace('%', ''), 10);\n  percent = isNaN(percent) ? 0 : percent;\n  return parseInt(value * percent / 100, 10);\n}\n\n/**\r\n * Clamps the value between min and max.\r\n *\r\n * @param {number} value The base number value.\r\n * @param {number} minValue The max number value.\r\n * @param {number} maxValue The min number value.\r\n * @returns {number}\r\n */\nexport function clamp(value, minValue, maxValue) {\n  if (Math.min(value, minValue) === value) {\n    return minValue;\n  } else if (Math.max(value, maxValue) === value) {\n    return maxValue;\n  }\n  return value;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { isNumeric } from \"../../helpers/number.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nconst ORDER_MAP = new Map([[ASC, [-1, 1]], [DESC, [1, -1]]]);\nconst DEFAULT_ERROR_PRIORITY_EXISTS = priority => `The priority '${priority}' is already declared in a map.`;\nconst DEFAULT_ERROR_PRIORITY_NAN = priority => `The priority '${priority}' is not a number.`;\n\n/**\r\n * @typedef {object} PriorityMap\r\n * @property {Function} addItem Adds items to the priority map.\r\n * @property {Function} getItems Gets items from the passed map in a ASC or DESC order of priorities.\r\n */\n/**\r\n * Creates a new priority map.\r\n *\r\n * @param {object} config The config for priority map.\r\n * @param {Function} config.errorPriorityExists The function to generate a custom error message if priority is already taken.\r\n * @param {Function} config.errorPriorityNaN The function to generate a custom error message if priority is not a number.\r\n * @returns {PriorityMap}\r\n */\nexport function createPriorityMap() {\n  let {\n    errorPriorityExists,\n    errorPriorityNaN\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const priorityMap = new Map();\n  errorPriorityExists = isFunction(errorPriorityExists) ? errorPriorityExists : DEFAULT_ERROR_PRIORITY_EXISTS;\n  errorPriorityNaN = isFunction(errorPriorityNaN) ? errorPriorityNaN : DEFAULT_ERROR_PRIORITY_NAN;\n\n  /**\r\n   * Adds items to priority map. Throws an error if `priority` is not a number or if is already added.\r\n   *\r\n   * @param {number} priority The priority for adding item.\r\n   * @param {*} item The adding item.\r\n   */\n  function addItem(priority, item) {\n    if (!isNumeric(priority)) {\n      throw new Error(errorPriorityNaN(priority));\n    }\n    if (priorityMap.has(priority)) {\n      throw new Error(errorPriorityExists(priority));\n    }\n    priorityMap.set(priority, item);\n  }\n\n  /**\r\n   * Gets items from the passed map in a ASC or DESC order of priorities.\r\n   *\r\n   * @param {string} [order] The order for getting items. ASC is an default.\r\n   * @returns {*}\r\n   */\n  function getItems() {\n    let order = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ASC;\n    const [left, right] = ORDER_MAP.get(order) || ORDER_MAP.get(ASC);\n    return [...priorityMap]\n    // we want to be sure we sort over a priority key\n    // if we are sure we can remove custom compare function\n    // then we should replace next line with a default `.sort()`\n    .sort((a, b) => a[0] < b[0] ? left : right).map(item => item[1]);\n  }\n  return {\n    addItem,\n    getItems\n  };\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nconst DEFAULT_ERROR_ID_EXISTS = id => `The id '${id}' is already declared in a map.`;\n\n/**\r\n * @typedef {object} UniqueMap\r\n * @property {Function} addItem Adds a new item to the unique map.\r\n * @property {Function} clear Clears the map.\r\n * @property {Function} getId Returns ID for the passed item.\r\n * @property {Function} getItem Gets item from the passed ID.\r\n * @property {Function} getItems Gets all items from the map.\r\n * @property {Function} hasItem Verifies if the passed ID exists in a map.\r\n * @property {Function} removeItem Removes item from the passed id if exists.\r\n */\n/**\r\n * Creates a new unique map.\r\n *\r\n * @param {object} config The config for priority queue.\r\n * @param {Function} config.errorIdExists The function to generate custom message if ID is already taken.\r\n * @returns {UniqueMap}\r\n */\nexport function createUniqueMap() {\n  let {\n    errorIdExists\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const uniqueMap = new Map();\n  errorIdExists = isFunction(errorIdExists) ? errorIdExists : DEFAULT_ERROR_ID_EXISTS;\n\n  /**\r\n   * Adds a new item to the unique map. Throws error if `id` is already added.\r\n   *\r\n   * @param {*} id The ID of the adding item.\r\n   * @param {*} item The adding item.\r\n   */\n  function addItem(id, item) {\n    if (hasItem(id)) {\n      throw new Error(errorIdExists(id));\n    }\n    uniqueMap.set(id, item);\n  }\n\n  /**\r\n   * Removes item from the passed id if exists.\r\n   *\r\n   * @param {*} id The ID to remove.\r\n   * @returns {boolean}\r\n   */\n  function removeItem(id) {\n    return uniqueMap.delete(id);\n  }\n\n  /**\r\n   * Clears the map.\r\n   */\n  function clear() {\n    uniqueMap.clear();\n  }\n\n  /**\r\n   * Returns ID for the passed item.\r\n   *\r\n   * @param {*} item The item of the getting ID.\r\n   * @returns {*}\r\n   */\n  function getId(item) {\n    const [itemId] = getItems().find(_ref => {\n      let [id, element] = _ref;\n      if (item === element) {\n        return id;\n      }\n      return false;\n    }) || [null];\n    return itemId;\n  }\n\n  /**\r\n   * Returns item from the passed ID.\r\n   *\r\n   * @param {*} id The ID of the getting item.\r\n   * @returns {*}\r\n   */\n  function getItem(id) {\n    return uniqueMap.get(id);\n  }\n\n  /**\r\n   * Gets all items from the map.\r\n   *\r\n   * @returns {Array}\r\n   */\n  function getItems() {\n    return [...uniqueMap];\n  }\n\n  /**\r\n   * Verifies if the passed ID exists in a map.\r\n   *\r\n   * @param {*} id The ID to check if registered.\r\n   * @returns {boolean}\r\n   */\n  function hasItem(id) {\n    return uniqueMap.has(id);\n  }\n  return {\n    addItem,\n    clear,\n    getId,\n    getItem,\n    getItems,\n    hasItem,\n    removeItem\n  };\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nconst DEFAULT_ERROR_ITEM_EXISTS = item => `'${item}' value is already declared in a unique set.`;\n\n/**\r\n * @typedef {object} UniqueSet\r\n * @property {Function} addItem Adds items to the priority set.\r\n * @property {Function} getItems Gets items from the set in order of addition.\r\n */\n/**\r\n * Creates a new unique set.\r\n *\r\n * @param {object} config The config for priority set.\r\n * @param {Function} config.errorItemExists The function to generate custom error message if item is already in the set.\r\n * @returns {UniqueSet}\r\n */\nexport function createUniqueSet() {\n  let {\n    errorItemExists\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const uniqueSet = new Set();\n  errorItemExists = isFunction(errorItemExists) ? errorItemExists : DEFAULT_ERROR_ITEM_EXISTS;\n\n  /**\r\n   * Adds items to the unique set. Throws an error if `item` is already added.\r\n   *\r\n   * @param {*} item The adding item.\r\n   */\n  function addItem(item) {\n    if (uniqueSet.has(item)) {\n      throw new Error(errorItemExists(item));\n    }\n    uniqueSet.add(item);\n  }\n\n  /**\r\n   * Gets items from the set in order of addition.\r\n   *\r\n   * @returns {*}\r\n   */\n  function getItems() {\n    return [...uniqueSet];\n  }\n\n  /**\r\n   * Clears the unique set.\r\n   */\n  function clear() {\n    uniqueSet.clear();\n  }\n  return {\n    addItem,\n    clear,\n    getItems\n  };\n}", "import \"core-js/modules/es.error.cause.js\";\n/**\r\n * Utility to register plugins and common namespace for keeping the reference to all plugins classes.\r\n */\nimport { toUpperCaseFirst } from \"../helpers/string.mjs\";\nimport { createPriorityMap } from \"../utils/dataStructures/priorityMap.mjs\";\nimport { createUniqueMap } from \"../utils/dataStructures/uniqueMap.mjs\";\nimport { createUniqueSet } from \"../utils/dataStructures/uniqueSet.mjs\";\nconst ERROR_PLUGIN_REGISTERED = pluginName => `There is already registered \"${pluginName}\" plugin.`;\nconst ERROR_PRIORITY_REGISTERED = priority => `There is already registered plugin on priority \"${priority}\".`;\nconst ERROR_PRIORITY_NAN = priority => `The priority \"${priority}\" is not a number.`;\n\n/**\r\n * Stores plugins' names' queue with their priorities.\r\n */\nconst priorityPluginsQueue = createPriorityMap({\n  errorPriorityExists: ERROR_PRIORITY_REGISTERED,\n  errorPriorityNaN: ERROR_PRIORITY_NAN\n});\n/**\r\n * Stores plugins names' queue by registration order.\r\n */\nconst uniquePluginsQueue = createUniqueSet({\n  errorItemExists: ERROR_PLUGIN_REGISTERED\n});\n/**\r\n * Stores plugins references between their name and class.\r\n */\nconst uniquePluginsList = createUniqueMap({\n  errorIdExists: ERROR_PLUGIN_REGISTERED\n});\n\n/**\r\n * Gets registered plugins' names in the following order:\r\n * 1) Plugins registered with a defined priority attribute, in the ascending order of priority.\r\n * 2) Plugins registered without a defined priority attribute, in the registration order.\r\n *\r\n * @returns {string[]}\r\n */\nexport function getPluginsNames() {\n  return [...priorityPluginsQueue.getItems(), ...uniquePluginsQueue.getItems()];\n}\n\n/**\r\n * Gets registered plugin's class based on the given name.\r\n *\r\n * @param {string} pluginName Plugin's name.\r\n * @returns {BasePlugin}\r\n */\nexport function getPlugin(pluginName) {\n  const unifiedPluginName = toUpperCaseFirst(pluginName);\n  return uniquePluginsList.getItem(unifiedPluginName);\n}\n\n/**\r\n * Checks if the plugin under the name is already registered.\r\n *\r\n * @param {string} pluginName Plugin's name.\r\n * @returns {boolean}\r\n */\nexport function hasPlugin(pluginName) {\n  /* eslint-disable no-unneeded-ternary */\n  return getPlugin(pluginName) ? true : false;\n}\n\n/**\r\n * Registers plugin under the given name only once.\r\n *\r\n * @param {string|Function} pluginName The plugin name or plugin class.\r\n * @param {Function} [pluginClass] The plugin class.\r\n * @param {number} [priority] The plugin priority.\r\n */\nexport function registerPlugin(pluginName, pluginClass, priority) {\n  [pluginName, pluginClass, priority] = unifyPluginArguments(pluginName, pluginClass, priority);\n  if (getPlugin(pluginName) === undefined) {\n    _registerPlugin(pluginName, pluginClass, priority);\n  }\n}\n\n/**\r\n * Registers plugin under the given name.\r\n *\r\n * @param {string|Function} pluginName The plugin name or plugin class.\r\n * @param {Function} [pluginClass] The plugin class.\r\n * @param {number} [priority] The plugin priority.\r\n */\nfunction _registerPlugin(pluginName, pluginClass, priority) {\n  const unifiedPluginName = toUpperCaseFirst(pluginName);\n  if (uniquePluginsList.hasItem(unifiedPluginName)) {\n    throw new Error(ERROR_PLUGIN_REGISTERED(unifiedPluginName));\n  }\n  if (priority === undefined) {\n    uniquePluginsQueue.addItem(unifiedPluginName);\n  } else {\n    priorityPluginsQueue.addItem(priority, unifiedPluginName);\n  }\n  uniquePluginsList.addItem(unifiedPluginName, pluginClass);\n}\n\n/**\r\n * Unifies arguments to register the plugin.\r\n *\r\n * @param {string|Function} pluginName The plugin name or plugin class.\r\n * @param {Function} [pluginClass] The plugin class.\r\n * @param {number} [priority] The plugin priority.\r\n * @returns {Array}\r\n */\nfunction unifyPluginArguments(pluginName, pluginClass, priority) {\n  if (typeof pluginName === 'function') {\n    pluginClass = pluginName;\n    pluginName = pluginClass.PLUGIN_KEY;\n    priority = pluginClass.PLUGIN_PRIORITY;\n  }\n  return [pluginName, pluginClass, priority];\n}", "import \"core-js/modules/es.error.cause.js\";\nimport staticRegister from \"../utils/staticRegister.mjs\";\nconst {\n  register,\n  getItem,\n  hasItem,\n  getNames,\n  getValues\n} = staticRegister('renderers');\n\n/**\r\n * Retrieve renderer function.\r\n *\r\n * @param {string} name Renderer identification.\r\n * @returns {Function} Returns renderer function.\r\n */\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n  if (!hasItem(name)) {\n    throw Error(`No registered renderer found under \"${name}\" name`);\n  }\n  return getItem(name);\n}\n\n/**\r\n * Register renderer under its alias.\r\n *\r\n * @param {string|Function} name Renderer's alias or renderer function with its descriptor.\r\n * @param {Function} [renderer] Renderer function.\r\n */\nfunction _register(name, renderer) {\n  if (typeof name !== 'string') {\n    renderer = name;\n    name = renderer.RENDERER_TYPE;\n  }\n  register(name, renderer);\n}\nexport { _register as registerRenderer, _getItem as getRenderer, hasItem as hasRenderer, getNames as getRegisteredRendererNames, getValues as getRegisteredRenderers };", "import \"core-js/modules/es.error.cause.js\";\nimport staticRegister from \"../utils/staticRegister.mjs\";\nconst {\n  register,\n  getItem,\n  hasItem,\n  getNames,\n  getValues\n} = staticRegister('validators');\n\n/**\r\n * Retrieve validator function.\r\n *\r\n * @param {string} name Validator identification.\r\n * @returns {Function} Returns validator function.\r\n */\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n  if (!hasItem(name)) {\n    throw Error(`No registered validator found under \"${name}\" name`);\n  }\n  return getItem(name);\n}\n\n/**\r\n * Register validator under its alias.\r\n *\r\n * @param {string|Function} name Validator's alias or validator function with its descriptor.\r\n * @param {Function} [validator] Validator function.\r\n */\nfunction _register(name, validator) {\n  if (typeof name !== 'string') {\n    validator = name;\n    name = validator.VALIDATOR_TYPE;\n  }\n  register(name, validator);\n}\nexport { _register as registerValidator, _getItem as getValidator, hasItem as hasValidator, getNames as getRegisteredValidatorNames, getValues as getRegisteredValidators };", "'use strict';\n\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.at` method\n// https://tc39.es/ecma262/#sec-array.prototype.at\n$({\n  target: 'Array',\n  proto: true\n}, {\n  at: function at(index) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var relativeIndex = toIntegerOrInfinity(index);\n    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n    return k < 0 || k >= len ? undefined : O[k];\n  }\n});\naddToUnscopables('at');", "'use strict';\n\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar charAt = uncurryThis(''.charAt);\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-string-prototype-at -- safe\n  return '𠮷'.at(-2) !== '\\uD842';\n});\n\n// `String.prototype.at` method\n// https://tc39.es/ecma262/#sec-string.prototype.at\n$({\n  target: 'String',\n  proto: true,\n  forced: FORCED\n}, {\n  at: function at(index) {\n    var S = toString(requireObjectCoercible(this));\n    var len = S.length;\n    var relativeIndex = toIntegerOrInfinity(index);\n    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n    return k < 0 || k >= len ? undefined : charAt(S, k);\n  }\n});", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @class FullyVisibleColumnsCalculationType\r\n */\nexport class FullyVisibleColumnsCalculationType {\n  constructor() {\n    /**\r\n     * Total number of fully visible columns in the viewport.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"count\", 0);\n    /**\r\n     * The column index of the first fully visible column in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startColumn\", null);\n    /**\r\n     * The column index of the last fully visible column in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"endColumn\", null);\n    /**\r\n     * Position of the first fully visible column (in px).\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startPosition\", null);\n    /**\r\n     * Determines if the viewport is visible in the trimming container.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isVisibleInTrimmingContainer\", false);\n  }\n  /**\r\n   * Initializes the calculation.\r\n   */\n  initialize() {}\n\n  /**\r\n   * Processes the column.\r\n   *\r\n   * @param {number} column The column index.\r\n   * @param {ViewportColumnsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  process(column, viewportCalculator) {\n    const {\n      totalCalculatedWidth,\n      zeroBasedScrollOffset,\n      viewportWidth,\n      columnWidth\n    } = viewportCalculator;\n    const compensatedViewportWidth = zeroBasedScrollOffset > 0 ? viewportWidth + 1 : viewportWidth;\n    if (totalCalculatedWidth >= zeroBasedScrollOffset && totalCalculatedWidth + columnWidth <= zeroBasedScrollOffset + compensatedViewportWidth) {\n      if (this.startColumn === null || this.startColumn === undefined) {\n        this.startColumn = column;\n      }\n      this.endColumn = column;\n    }\n  }\n\n  /**\r\n   * Finalizes the calculation.\r\n   *\r\n   * @param {ViewportColumnsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  finalize(viewportCalculator) {\n    var _startPositions$this$;\n    const {\n      scrollOffset,\n      viewportWidth,\n      inlineStartOffset,\n      zeroBasedScrollOffset,\n      totalColumns,\n      needReverse,\n      startPositions,\n      columnWidth\n    } = viewportCalculator;\n\n    // If the estimation has reached the last column and there is still some space available in the viewport,\n    // we need to render in reverse in order to fill the whole viewport with columns\n    if (this.endColumn === totalColumns - 1 && needReverse) {\n      this.startColumn = this.endColumn;\n      while (this.startColumn > 0) {\n        const calculatedViewportHeight = startPositions[this.endColumn] + columnWidth - startPositions[this.startColumn - 1];\n        if (calculatedViewportHeight <= viewportWidth) {\n          this.startColumn -= 1;\n        }\n        if (calculatedViewportHeight >= viewportWidth) {\n          break;\n        }\n      }\n    }\n    this.startPosition = (_startPositions$this$ = startPositions[this.startColumn]) !== null && _startPositions$this$ !== void 0 ? _startPositions$this$ : null;\n    const compensatedViewportWidth = zeroBasedScrollOffset > 0 ? viewportWidth + 1 : viewportWidth;\n    const mostRightScrollOffset = scrollOffset + viewportWidth - compensatedViewportWidth;\n    const inlineStartColumnOffset = this.startColumn === null ? 0 : viewportCalculator.getColumnWidth(this.startColumn);\n    if (\n    // the table is to the left of the viewport\n    mostRightScrollOffset < -1 * inlineStartOffset || scrollOffset > startPositions.at(-1) ||\n    // the table is to the right of the viewport\n    -1 * scrollOffset - viewportWidth > -1 * inlineStartColumnOffset) {\n      this.isVisibleInTrimmingContainer = false;\n    } else {\n      this.isVisibleInTrimmingContainer = true;\n    }\n    if (totalColumns < this.endColumn) {\n      this.endColumn = totalColumns - 1;\n    }\n    if (this.startColumn !== null) {\n      this.count = this.endColumn - this.startColumn + 1;\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @class FullyVisibleRowsCalculationType\r\n */\nexport class FullyVisibleRowsCalculationType {\n  constructor() {\n    /**\r\n     * Total number of fully visible rows in the viewport.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"count\", 0);\n    /**\r\n     * The row index of the first fully visible row in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startRow\", null);\n    /**\r\n     * The row index of the last fully visible row in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"endRow\", null);\n    /**\r\n     * Position of the first fully visible row (in px).\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startPosition\", null);\n    /**\r\n     * Determines if the viewport is visible in the trimming container.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isVisibleInTrimmingContainer\", false);\n  }\n  /**\r\n   * Initializes the calculation.\r\n   */\n  initialize() {}\n\n  /**\r\n   * Processes the row.\r\n   *\r\n   * @param {number} row The row index.\r\n   * @param {ViewportRowsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  process(row, viewportCalculator) {\n    const {\n      totalCalculatedHeight,\n      zeroBasedScrollOffset,\n      innerViewportHeight,\n      rowHeight\n    } = viewportCalculator;\n    if (totalCalculatedHeight >= zeroBasedScrollOffset && totalCalculatedHeight + rowHeight <= innerViewportHeight) {\n      if (this.startRow === null) {\n        this.startRow = row;\n      }\n      this.endRow = row;\n    }\n  }\n\n  /**\r\n   * Finalizes the calculation.\r\n   *\r\n   * @param {ViewportRowsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  finalize(viewportCalculator) {\n    var _startPositions$this$;\n    const {\n      scrollOffset,\n      viewportHeight,\n      horizontalScrollbarHeight,\n      totalRows,\n      needReverse,\n      startPositions,\n      rowHeight\n    } = viewportCalculator;\n\n    // If the estimation has reached the last row and there is still some space available in the viewport,\n    // we need to render in reverse in order to fill the whole viewport with rows\n    if (this.endRow === totalRows - 1 && needReverse) {\n      this.startRow = this.endRow;\n      while (this.startRow > 0) {\n        const calculatedViewportHeight = startPositions[this.endRow] + rowHeight - startPositions[this.startRow - 1];\n        if (calculatedViewportHeight <= viewportHeight - horizontalScrollbarHeight) {\n          this.startRow -= 1;\n        }\n        if (calculatedViewportHeight >= viewportHeight - horizontalScrollbarHeight) {\n          break;\n        }\n      }\n    }\n    this.startPosition = (_startPositions$this$ = startPositions[this.startRow]) !== null && _startPositions$this$ !== void 0 ? _startPositions$this$ : null;\n    const mostBottomScrollOffset = scrollOffset + viewportHeight - horizontalScrollbarHeight;\n    const topRowOffset = this.startRow === null ? 0 : viewportCalculator.getRowHeight(this.startRow);\n    if (mostBottomScrollOffset < topRowOffset || scrollOffset > startPositions.at(-1)) {\n      this.isVisibleInTrimmingContainer = false;\n    } else {\n      this.isVisibleInTrimmingContainer = true;\n    }\n    if (totalRows < this.endRow) {\n      this.endRow = totalRows - 1;\n    }\n    if (this.startRow !== null) {\n      this.count = this.endRow - this.startRow + 1;\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @class PartiallyVisibleColumnsCalculationType\r\n */\nexport class PartiallyVisibleColumnsCalculationType {\n  constructor() {\n    /**\r\n     * Total number of partially visible columns in the viewport.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"count\", 0);\n    /**\r\n     * The column index of the first partially visible column in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startColumn\", null);\n    /**\r\n     * The column index of the last partially visible column in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"endColumn\", null);\n    /**\r\n     * Position of the first partially visible column (in px).\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startPosition\", null);\n    /**\r\n     * Determines if the viewport is visible in the trimming container.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isVisibleInTrimmingContainer\", false);\n  }\n  /**\r\n   * Initializes the calculation.\r\n   */\n  initialize() {}\n\n  /**\r\n   * Processes the column.\r\n   *\r\n   * @param {number} column The column index.\r\n   * @param {ViewportColumnsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  process(column, viewportCalculator) {\n    const {\n      totalCalculatedWidth,\n      zeroBasedScrollOffset,\n      viewportWidth\n    } = viewportCalculator;\n    if (totalCalculatedWidth <= zeroBasedScrollOffset) {\n      this.startColumn = column;\n    }\n    const compensatedViewportWidth = zeroBasedScrollOffset > 0 ? viewportWidth + 1 : viewportWidth;\n    if (totalCalculatedWidth >= zeroBasedScrollOffset && totalCalculatedWidth <= zeroBasedScrollOffset + compensatedViewportWidth) {\n      if (this.startColumn === null || this.startColumn === undefined) {\n        this.startColumn = column;\n      }\n    }\n    this.endColumn = column;\n  }\n\n  /**\r\n   * Finalizes the calculation.\r\n   *\r\n   * @param {ViewportColumnsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  finalize(viewportCalculator) {\n    var _startPositions$this$;\n    const {\n      scrollOffset,\n      viewportWidth,\n      inlineStartOffset,\n      zeroBasedScrollOffset,\n      totalColumns,\n      needReverse,\n      startPositions,\n      columnWidth\n    } = viewportCalculator;\n\n    // If the estimation has reached the last column and there is still some space available in the viewport,\n    // we need to render in reverse in order to fill the whole viewport with columns\n    if (this.endColumn === totalColumns - 1 && needReverse) {\n      this.startColumn = this.endColumn;\n      while (this.startColumn > 0) {\n        const calculatedViewportWidth = startPositions[this.endColumn] + columnWidth - startPositions[this.startColumn - 1];\n        this.startColumn -= 1;\n        if (calculatedViewportWidth > viewportWidth) {\n          break;\n        }\n      }\n    }\n    this.startPosition = (_startPositions$this$ = startPositions[this.startColumn]) !== null && _startPositions$this$ !== void 0 ? _startPositions$this$ : null;\n    const compensatedViewportWidth = zeroBasedScrollOffset > 0 ? viewportWidth + 1 : viewportWidth;\n    const mostRightScrollOffset = scrollOffset + viewportWidth - compensatedViewportWidth;\n    if (\n    // the table is to the left of the viewport\n    mostRightScrollOffset < -1 * inlineStartOffset || scrollOffset > startPositions.at(-1) + columnWidth ||\n    // the table is to the right of the viewport\n    -1 * scrollOffset - viewportWidth > 0) {\n      this.isVisibleInTrimmingContainer = false;\n    } else {\n      this.isVisibleInTrimmingContainer = true;\n    }\n    if (totalColumns < this.endColumn) {\n      this.endColumn = totalColumns - 1;\n    }\n    if (this.startColumn !== null) {\n      this.count = this.endColumn - this.startColumn + 1;\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @class PartiallyVisibleRowsCalculationType\r\n */\nexport class PartiallyVisibleRowsCalculationType {\n  constructor() {\n    /**\r\n     * Total number of partially visible rows in the viewport.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"count\", 0);\n    /**\r\n     * The row index of the first partially visible row in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startRow\", null);\n    /**\r\n     * The row index of the last partially visible row in the viewport.\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"endRow\", null);\n    /**\r\n     * Position of the first partially visible row (in px).\r\n     *\r\n     * @type {number|null}\r\n     */\n    _defineProperty(this, \"startPosition\", null);\n    /**\r\n     * Determines if the viewport is visible in the trimming container.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isVisibleInTrimmingContainer\", false);\n  }\n  /**\r\n   * Initializes the calculation.\r\n   */\n  initialize() {}\n\n  /**\r\n   * Processes the row.\r\n   *\r\n   * @param {number} row The row index.\r\n   * @param {ViewportRowsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  process(row, viewportCalculator) {\n    const {\n      totalCalculatedHeight,\n      zeroBasedScrollOffset,\n      innerViewportHeight\n    } = viewportCalculator;\n    if (totalCalculatedHeight <= zeroBasedScrollOffset) {\n      this.startRow = row;\n    }\n    if (totalCalculatedHeight >= zeroBasedScrollOffset && totalCalculatedHeight <= innerViewportHeight) {\n      if (this.startRow === null) {\n        this.startRow = row;\n      }\n    }\n    this.endRow = row;\n  }\n\n  /**\r\n   * Finalizes the calculation.\r\n   *\r\n   * @param {ViewportRowsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  finalize(viewportCalculator) {\n    var _startPositions$this$;\n    const {\n      scrollOffset,\n      viewportHeight,\n      horizontalScrollbarHeight,\n      totalRows,\n      needReverse,\n      startPositions,\n      rowHeight\n    } = viewportCalculator;\n\n    // If the estimation has reached the last row and there is still some space available in the viewport,\n    // we need to render in reverse in order to fill the whole viewport with rows\n    if (this.endRow === totalRows - 1 && needReverse) {\n      this.startRow = this.endRow;\n      while (this.startRow > 0) {\n        const calculatedViewportHeight = startPositions[this.endRow] + rowHeight - startPositions[this.startRow - 1];\n        this.startRow -= 1;\n        if (calculatedViewportHeight >= viewportHeight - horizontalScrollbarHeight) {\n          break;\n        }\n      }\n    }\n    this.startPosition = (_startPositions$this$ = startPositions[this.startRow]) !== null && _startPositions$this$ !== void 0 ? _startPositions$this$ : null;\n    const mostBottomScrollOffset = scrollOffset + viewportHeight - horizontalScrollbarHeight;\n    if (mostBottomScrollOffset < 0 || scrollOffset > startPositions.at(-1) + rowHeight) {\n      this.isVisibleInTrimmingContainer = false;\n    } else {\n      this.isVisibleInTrimmingContainer = true;\n    }\n    if (totalRows < this.endRow) {\n      this.endRow = totalRows - 1;\n    }\n    if (this.startRow !== null) {\n      this.count = this.endRow - this.startRow + 1;\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @typedef {object} RenderedAllColumnsCalculatorOptions\r\n * @property {number} totalColumns Total number of columns.\r\n */\n/**\r\n * Holds all calculations needed to perform the rendering of all columns.\r\n *\r\n * @class RenderedAllColumnsCalculationType\r\n */\nexport class RenderedAllColumnsCalculationType {\n  constructor() {\n    /**\r\n     * Number of rendered/visible columns.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"count\", 0);\n    /**\r\n     * Index of the first rendered/visible column.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"startColumn\", 0);\n    /**\r\n     * Index of the last rendered/visible column.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"endColumn\", 0);\n    /**\r\n     * Position of the first rendered/visible column (in px).\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"startPosition\", 0);\n    /**\r\n     * Determines if the viewport is visible in the trimming container.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isVisibleInTrimmingContainer\", true);\n  }\n  /**\r\n   * Initializes the calculation.\r\n   *\r\n   * @param {ViewportColumnsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  initialize(_ref) {\n    let {\n      totalColumns\n    } = _ref;\n    this.count = totalColumns;\n    this.endColumn = this.count - 1;\n  }\n\n  /**\r\n   * Processes the column.\r\n   */\n  process() {}\n\n  /**\r\n   * Finalizes the calculation.\r\n   */\n  finalize() {}\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @typedef {object} RenderedAllRowsCalculatorOptions\r\n * @property {number} totalRows Total number of rows.\r\n */\n/**\r\n * Holds all calculations needed to perform the rendering of all rows.\r\n *\r\n * @class RenderedAllRowsCalculationType\r\n */\nexport class RenderedAllRowsCalculationType {\n  constructor() {\n    /**\r\n     * Number of rendered/visible rows.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"count\", 0);\n    /**\r\n     * Index of the first rendered/visible row.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"startRow\", 0);\n    /**\r\n     * Index of the last rendered/visible row.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"endRow\", 0);\n    /**\r\n     * Position of the first rendered/visible row (in px).\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"startPosition\", 0);\n    /**\r\n     * Determines if the viewport is visible in the trimming container.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isVisibleInTrimmingContainer\", true);\n  }\n  /**\r\n   * Initializes the calculation.\r\n   *\r\n   * @param {ViewportRowsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  initialize(_ref) {\n    let {\n      totalRows\n    } = _ref;\n    this.count = totalRows;\n    this.endRow = this.count - 1;\n  }\n\n  /**\r\n   * Processes the row.\r\n   */\n  process() {}\n\n  /**\r\n   * Finalizes the calculation.\r\n   */\n  finalize() {}\n}", "import { PartiallyVisibleColumnsCalculationType } from \"./partiallyVisibleColumns.mjs\";\n/**\r\n * @class RenderedColumnsCalculationType\r\n */\nexport class RenderedColumnsCalculationType extends PartiallyVisibleColumnsCalculationType {\n  /**\r\n   * Finalizes the calculation.\r\n   *\r\n   * @param {ViewportColumnsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  finalize(viewportCalculator) {\n    var _startPositions$this$;\n    super.finalize(viewportCalculator);\n    const {\n      overrideFn,\n      totalColumns,\n      startPositions\n    } = viewportCalculator;\n    if (this.startColumn !== null && typeof overrideFn === 'function') {\n      overrideFn(this);\n    }\n    if (this.startColumn < 0) {\n      this.startColumn = 0;\n    }\n    this.startPosition = (_startPositions$this$ = startPositions[this.startColumn]) !== null && _startPositions$this$ !== void 0 ? _startPositions$this$ : null;\n    if (totalColumns < this.endColumn) {\n      this.endColumn = totalColumns - 1;\n    }\n    if (this.startColumn !== null) {\n      this.count = this.endColumn - this.startColumn + 1;\n    }\n  }\n}", "import { PartiallyVisibleRowsCalculationType } from \"./partiallyVisibleRows.mjs\";\n/**\r\n * @class RenderedRowsCalculationType\r\n */\nexport class RenderedRowsCalculationType extends PartiallyVisibleRowsCalculationType {\n  /**\r\n   * Finalizes the calculation.\r\n   *\r\n   * @param {ViewportRowsCalculator} viewportCalculator The viewport calculator object.\r\n   */\n  finalize(viewportCalculator) {\n    var _startPositions$this$;\n    super.finalize(viewportCalculator);\n    const {\n      overrideFn,\n      totalRows,\n      startPositions\n    } = viewportCalculator;\n    if (this.startRow !== null && typeof overrideFn === 'function') {\n      overrideFn(this);\n    }\n    if (this.startRow < 0) {\n      this.startRow = 0;\n    }\n    this.startPosition = (_startPositions$this$ = startPositions[this.startRow]) !== null && _startPositions$this$ !== void 0 ? _startPositions$this$ : null;\n    if (totalRows < this.endRow) {\n      this.endRow = totalRows - 1;\n    }\n    if (this.startRow !== null) {\n      this.count = this.endRow - this.startRow + 1;\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @typedef {object} ColumnsCalculationType\r\n * @property {number | null} startColumn The column index of the first column in the viewport.\r\n * @property {number | null} endColumn The column index of the last column in the viewport.\r\n * @property {number} count Total number of columns.\r\n * @property {number | null} startPosition Position of the first fully column (in px).\r\n * @property {boolean} isVisibleInTrimmingContainer Determines if the viewport is visible in the trimming container.\r\n */\n/**\r\n * @typedef {object} RowsCalculationType\r\n * @property {number | null} startRow The row index of the first row in the viewport.\r\n * @property {number | null} endRow The row index of the last row in the viewport.\r\n * @property {number} count Total number of rows.\r\n * @property {number | null} startPosition Position of the first fully row (in px).\r\n * @property {boolean} isVisibleInTrimmingContainer Determines if the viewport is visible in the trimming container.\r\n */\n/**\r\n * @class ViewportBaseCalculator\r\n */\nexport class ViewportBaseCalculator {\n  constructor(calculationTypes) {\n    /**\r\n     * The calculation types to be performed.\r\n     *\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"calculationTypes\", []);\n    /**\r\n     * The calculation results.\r\n     *\r\n     * @type {Map<string, ColumnsCalculationType | RowsCalculationType>}\r\n     */\n    _defineProperty(this, \"calculationResults\", new Map());\n    this.calculationTypes = calculationTypes;\n  }\n\n  /**\r\n   * Initializes all calculators (triggers all calculators before calculating the rows/columns sizes).\r\n   *\r\n   * @param {*} context The context object (rows or columns viewport calculator).\r\n   */\n  _initialize(context) {\n    this.calculationTypes.forEach(_ref => {\n      let [id, calculator] = _ref;\n      this.calculationResults.set(id, calculator);\n      calculator.initialize(context);\n    });\n  }\n\n  /**\r\n   * Processes the row/column at the given index.\r\n   *\r\n   * @param {number} index The index of the row/column.\r\n   * @param {*} context The context object (rows or columns viewport calculator).\r\n   */\n  _process(index, context) {\n    this.calculationTypes.forEach(_ref2 => {\n      let [, calculator] = _ref2;\n      return calculator.process(index, context);\n    });\n  }\n\n  /**\r\n   * Finalizes all calculators (triggers all calculators after calculating the rows/columns sizes).\r\n   *\r\n   * @param {*} context The context object (rows or columns viewport calculator).\r\n   */\n  _finalize(context) {\n    this.calculationTypes.forEach(_ref3 => {\n      let [, calculator] = _ref3;\n      return calculator.finalize(context);\n    });\n  }\n\n  /**\r\n   * Gets the results for the given calculator.\r\n   *\r\n   * @param {string} calculatorId The id of the calculator.\r\n   * @returns {ColumnsCalculationType | RowsCalculationType}\r\n   */\n  getResultsFor(calculatorId) {\n    return this.calculationResults.get(calculatorId);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { ViewportBaseCalculator } from \"./viewportBase.mjs\";\nexport const DEFAULT_WIDTH = 50;\n\n/**\r\n * @typedef {object} ViewportColumnsCalculatorOptions\r\n * @property {Map<string, ViewportBaseCalculator>} calculationTypes The calculation types to be performed.\r\n * @property {number} viewportWidth Width of the viewport.\r\n * @property {number} scrollOffset Current horizontal scroll position of the viewport.\r\n * @property {number} totalColumns Total number of columns.\r\n * @property {Function} columnWidthFn Function that returns the width of the column at a given index (in px).\r\n * @property {Function} overrideFn Function that allows to adjust the `startRow` and `endRow` parameters.\r\n * @property {string} inlineStartOffset Inline-start offset of the parent container.\r\n */\n/**\r\n * Calculates indexes of columns to render OR columns that are visible OR partially visible in the viewport.\r\n *\r\n * @class ViewportColumnsCalculator\r\n */\nexport class ViewportColumnsCalculator extends ViewportBaseCalculator {\n  /**\r\n   * @param {ViewportColumnsCalculatorOptions} options Object with all options specified for column viewport calculation.\r\n   */\n  constructor(_ref) {\n    let {\n      calculationTypes,\n      viewportWidth,\n      scrollOffset,\n      totalColumns,\n      columnWidthFn,\n      overrideFn,\n      inlineStartOffset\n    } = _ref;\n    super(calculationTypes);\n    _defineProperty(this, \"viewportWidth\", 0);\n    _defineProperty(this, \"scrollOffset\", 0);\n    _defineProperty(this, \"zeroBasedScrollOffset\", 0);\n    _defineProperty(this, \"totalColumns\", 0);\n    _defineProperty(this, \"columnWidthFn\", null);\n    _defineProperty(this, \"columnWidth\", 0);\n    _defineProperty(this, \"overrideFn\", null);\n    _defineProperty(this, \"inlineStartOffset\", 0);\n    _defineProperty(this, \"totalCalculatedWidth\", 0);\n    _defineProperty(this, \"startPositions\", []);\n    _defineProperty(this, \"needReverse\", true);\n    this.viewportWidth = viewportWidth;\n    this.scrollOffset = scrollOffset;\n    this.zeroBasedScrollOffset = Math.max(scrollOffset, 0);\n    this.totalColumns = totalColumns;\n    this.columnWidthFn = columnWidthFn;\n    this.overrideFn = overrideFn;\n    this.inlineStartOffset = inlineStartOffset;\n    this.calculate();\n  }\n\n  /**\r\n   * Calculates viewport.\r\n   */\n  calculate() {\n    this._initialize(this);\n    for (let column = 0; column < this.totalColumns; column++) {\n      this.columnWidth = this.getColumnWidth(column);\n      this._process(column, this);\n      this.startPositions.push(this.totalCalculatedWidth);\n      this.totalCalculatedWidth += this.columnWidth;\n      if (this.totalCalculatedWidth >= this.zeroBasedScrollOffset + this.viewportWidth) {\n        this.needReverse = false;\n        break;\n      }\n    }\n    this._finalize(this);\n  }\n\n  /**\r\n   * Gets the column width at the specified column index.\r\n   *\r\n   * @param {number} column Column index.\r\n   * @returns {number}\r\n   */\n  getColumnWidth(column) {\n    const width = this.columnWidthFn(column);\n    if (isNaN(width)) {\n      return DEFAULT_WIDTH;\n    }\n    return width;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { ViewportBaseCalculator } from \"./viewportBase.mjs\";\nexport const DEFAULT_HEIGHT = 23;\n\n/**\r\n * @typedef {object} ViewportRowsCalculatorOptions\r\n * @property {Map<string, ViewportBaseCalculator>} calculationTypes The calculation types to be performed.\r\n * @property {number} viewportHeight Height of the viewport.\r\n * @property {number} scrollOffset Current vertical scroll position of the viewport.\r\n * @property {number} totalRows Total number of rows.\r\n * @property {Function} rowHeightFn Function that returns the height of the row at a given index (in px).\r\n * @property {Function} overrideFn Function that allows to adjust the `startRow` and `endRow` parameters.\r\n * @property {number} horizontalScrollbarHeight The scrollbar height.\r\n */\n/**\r\n * Calculates indexes of rows to render OR rows that are visible OR partially visible in the viewport.\r\n *\r\n * @class ViewportRowsCalculator\r\n */\nexport class ViewportRowsCalculator extends ViewportBaseCalculator {\n  /**\r\n   * @param {ViewportRowsCalculatorOptions} options Object with all options specified for row viewport calculation.\r\n   */\n  constructor(_ref) {\n    let {\n      calculationTypes,\n      viewportHeight,\n      scrollOffset,\n      totalRows,\n      rowHeightFn,\n      overrideFn,\n      horizontalScrollbarHeight\n    } = _ref;\n    super(calculationTypes);\n    _defineProperty(this, \"viewportHeight\", 0);\n    _defineProperty(this, \"scrollOffset\", 0);\n    _defineProperty(this, \"zeroBasedScrollOffset\", 0);\n    _defineProperty(this, \"totalRows\", 0);\n    _defineProperty(this, \"rowHeightFn\", null);\n    _defineProperty(this, \"rowHeight\", 0);\n    _defineProperty(this, \"overrideFn\", null);\n    _defineProperty(this, \"horizontalScrollbarHeight\", 0);\n    _defineProperty(this, \"innerViewportHeight\", 0);\n    _defineProperty(this, \"totalCalculatedHeight\", 0);\n    _defineProperty(this, \"startPositions\", []);\n    _defineProperty(this, \"needReverse\", true);\n    this.viewportHeight = viewportHeight;\n    this.scrollOffset = scrollOffset;\n    this.zeroBasedScrollOffset = Math.max(scrollOffset, 0);\n    this.totalRows = totalRows;\n    this.rowHeightFn = rowHeightFn;\n    this.overrideFn = overrideFn;\n    this.horizontalScrollbarHeight = horizontalScrollbarHeight !== null && horizontalScrollbarHeight !== void 0 ? horizontalScrollbarHeight : 0;\n    this.innerViewportHeight = this.zeroBasedScrollOffset + this.viewportHeight - this.horizontalScrollbarHeight;\n    this.calculate();\n  }\n\n  /**\r\n   * Calculates viewport.\r\n   */\n  calculate() {\n    this._initialize(this);\n    for (let row = 0; row < this.totalRows; row++) {\n      this.rowHeight = this.getRowHeight(row);\n      this._process(row, this);\n      this.startPositions.push(this.totalCalculatedHeight);\n      this.totalCalculatedHeight += this.rowHeight;\n      if (this.totalCalculatedHeight >= this.innerViewportHeight) {\n        this.needReverse = false;\n        break;\n      }\n    }\n    this._finalize(this);\n  }\n\n  /**\r\n   * Gets the row height at the specified row index.\r\n   *\r\n   * @param {number} row Row index.\r\n   * @returns {number}\r\n   */\n  getRowHeight(row) {\n    const rowHeight = this.rowHeightFn(row);\n    if (isNaN(rowHeight)) {\n      return DEFAULT_HEIGHT;\n    }\n    return rowHeight;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nvar _isRtl = /*#__PURE__*/new WeakMap();\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * @description\r\n *\r\n * The `CellCoords` class holds the coordinates (`row`, `col`) of a single cell.\r\n *\r\n * It also contains methods for validating the coordinates\r\n * and retrieving them as an object.\r\n *\r\n * To import the `CellCoords` class:\r\n *\r\n * ```js\r\n * import Handsontable, { CellCoords } from '/handsontable';\r\n *\r\n * // or, using modules\r\n * import Handsontable, { CellCoords } from '/handsontable/base';\r\n * ```\r\n */\nclass CellCoords {\n  constructor(row, column) {\n    let isRtl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    /**\r\n     * A visual row index.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"row\", null);\n    /**\r\n     * A visual column index.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"col\", null);\n    /**\r\n     * A flag which determines if the coordinates run in RTL mode.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _isRtl, false);\n    _classPrivateFieldSet(_isRtl, this, isRtl);\n    if (typeof row !== 'undefined' && typeof column !== 'undefined') {\n      this.row = row;\n      this.col = column;\n    }\n  }\n\n  /**\r\n   * Checks if the coordinates in your `CellCoords` instance are valid\r\n   * in the context of given table parameters.\r\n   *\r\n   * The `row` index:\r\n   * - Must be an integer.\r\n   * - Must be higher than the number of column headers in the table.\r\n   * - Must be lower than the total number of rows in the table.\r\n   *\r\n   * The `col` index:\r\n   * - Must be an integer.\r\n   * - Must be higher than the number of row headers in the table.\r\n   * - Must be lower than the total number of columns in the table.\r\n   *\r\n   * @param {object} [tableParams] An object with a defined table size.\r\n   * @param {number} [tableParams.countRows=0] The total number of rows.\r\n   * @param {number} [tableParams.countCols=0] The total number of columns.\r\n   * @param {number} [tableParams.countRowHeaders=0] A number of row headers.\r\n   * @param {number} [tableParams.countColHeaders=0] A number of column headers.\r\n   * @returns {boolean} `true`: The coordinates are valid.\r\n   */\n  isValid(tableParams) {\n    const {\n      countRows,\n      countCols,\n      countRowHeaders,\n      countColHeaders\n    } = {\n      countRows: 0,\n      countCols: 0,\n      countRowHeaders: 0,\n      countColHeaders: 0,\n      ...tableParams\n    };\n    if (!Number.isInteger(this.row) || !Number.isInteger(this.col)) {\n      return false;\n    }\n    if (this.row < -countColHeaders || this.col < -countRowHeaders) {\n      return false;\n    }\n    if (this.row >= countRows || this.col >= countCols) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\r\n   * Checks if another set of coordinates (`coords`)\r\n   * is equal to the coordinates in your `CellCoords` instance.\r\n   *\r\n   * @param {CellCoords} coords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isEqual(coords) {\n    if (coords === this) {\n      return true;\n    }\n    return this.row === coords.row && this.col === coords.col;\n  }\n\n  /**\r\n   * Checks if the coordinates point to the headers range. If one of the axis (row or col) point to\r\n   * the header (negative value) then method returns `true`.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isHeader() {\n    return !this.isCell();\n  }\n\n  /**\r\n   * Checks if the coordinates point to the cells range. If all axis (row and col) point to\r\n   * the cell (positive value) then method returns `true`.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isCell() {\n    return this.row >= 0 && this.col >= 0;\n  }\n\n  /**\r\n   * Checks if the coordinates runs in RTL mode.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isRtl() {\n    return _classPrivateFieldGet(_isRtl, this);\n  }\n\n  /**\r\n   * Checks if another set of coordinates (`testedCoords`)\r\n   * is south-east of the coordinates in your `CellCoords` instance.\r\n   *\r\n   * @param {CellCoords} testedCoords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isSouthEastOf(testedCoords) {\n    return this.row >= testedCoords.row && (_classPrivateFieldGet(_isRtl, this) ? this.col <= testedCoords.col : this.col >= testedCoords.col);\n  }\n\n  /**\r\n   * Checks if another set of coordinates (`testedCoords`)\r\n   * is north-west of the coordinates in your `CellCoords` instance.\r\n   *\r\n   * @param {CellCoords} testedCoords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isNorthWestOf(testedCoords) {\n    return this.row <= testedCoords.row && (_classPrivateFieldGet(_isRtl, this) ? this.col >= testedCoords.col : this.col <= testedCoords.col);\n  }\n\n  /**\r\n   * Checks if another set of coordinates (`testedCoords`)\r\n   * is south-west of the coordinates in your `CellCoords` instance.\r\n   *\r\n   * @param {CellCoords} testedCoords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isSouthWestOf(testedCoords) {\n    return this.row >= testedCoords.row && (_classPrivateFieldGet(_isRtl, this) ? this.col >= testedCoords.col : this.col <= testedCoords.col);\n  }\n\n  /**\r\n   * Checks if another set of coordinates (`testedCoords`)\r\n   * is north-east of the coordinates in your `CellCoords` instance.\r\n   *\r\n   * @param {CellCoords} testedCoords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isNorthEastOf(testedCoords) {\n    return this.row <= testedCoords.row && (_classPrivateFieldGet(_isRtl, this) ? this.col <= testedCoords.col : this.col >= testedCoords.col);\n  }\n\n  /**\r\n   * Normalizes the coordinates in your `CellCoords` instance to the nearest valid position.\r\n   *\r\n   * Coordinates that point to headers (negative values) are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  normalize() {\n    this.row = this.row === null ? this.row : Math.max(this.row, 0);\n    this.col = this.col === null ? this.col : Math.max(this.col, 0);\n    return this;\n  }\n\n  /**\r\n   * Assigns the coordinates from another `CellCoords` instance (or compatible literal object)\r\n   * to your `CellCoords` instance.\r\n   *\r\n   * @param {CellCoords | { row: number | undefined, col: number | undefined }} coords The CellCoords\r\n   * instance or compatible literal object.\r\n   * @returns {CellCoords}\r\n   */\n  assign(coords) {\n    if (Number.isInteger(coords === null || coords === void 0 ? void 0 : coords.row)) {\n      this.row = coords.row;\n    }\n    if (Number.isInteger(coords === null || coords === void 0 ? void 0 : coords.col)) {\n      this.col = coords.col;\n    }\n    if (coords instanceof CellCoords) {\n      _classPrivateFieldSet(_isRtl, this, coords.isRtl());\n    }\n    return this;\n  }\n\n  /**\r\n   * Clones your `CellCoords` instance.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  clone() {\n    return new CellCoords(this.row, this.col, _classPrivateFieldGet(_isRtl, this));\n  }\n\n  /**\r\n   * Converts your `CellCoords` instance into an object literal with `row` and `col` properties.\r\n   *\r\n   * @returns {{row: number, col: number}} An object literal with `row` and `col` properties.\r\n   */\n  toObject() {\n    return {\n      row: this.row,\n      col: this.col\n    };\n  }\n}\nexport default CellCoords;", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport CellCoords from \"./../cell/coords.mjs\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * @description\r\n *\r\n * The `CellRange` class holds a set of cell coordinates ([`CellCoords`](@/api/cellCoords.md) instances)\r\n * that form a [selection range](@/guides/cell-features/selection/selection.md#select-ranges).\r\n *\r\n * A single `CellRange` instance represents a single unit of selection\r\n * that contains either a single cell or multiple adjacent cells.\r\n *\r\n * To import the `CellRange` class:\r\n *\r\n * ```js\r\n * import Handsontable, { CellRange } from '/handsontable';\r\n *\r\n * // or, using modules\r\n * import Handsontable, { CellRange } from '/handsontable/base';\r\n * ```\r\n */\nvar _isRtl = /*#__PURE__*/new WeakMap();\nclass CellRange {\n  constructor(highlight) {\n    let from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : highlight;\n    let to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : highlight;\n    let isRtl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    /**\r\n     * Used to draw bold border around a cell where selection was started and to edit the cell\r\n     * when you press Enter. The highlight cannot point to headers (negative values) so its\r\n     * coordinates object is normalized while assigning.\r\n     *\r\n     * @private\r\n     * @type {CellCoords}\r\n     */\n    _defineProperty(this, \"highlight\", null);\n    /**\r\n     * Usually the same as highlight, but in Excel there is distinction - one can change\r\n     * highlight within a selection.\r\n     *\r\n     * @private\r\n     * @type {CellCoords}\r\n     */\n    _defineProperty(this, \"from\", null);\n    /**\r\n     * End selection.\r\n     *\r\n     * @private\r\n     * @type {CellCoords}\r\n     */\n    _defineProperty(this, \"to\", null);\n    /**\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _isRtl, false);\n    this.highlight = highlight.clone();\n    this.from = from.clone();\n    this.to = to.clone();\n    _classPrivateFieldSet(_isRtl, this, isRtl);\n  }\n\n  /**\r\n   * Highlights cell selection at the `coords` coordinates.\r\n   *\r\n   * @param {CellCoords} coords Coordinates to use.\r\n   * @returns {CellRange}\r\n   */\n  setHighlight(coords) {\n    this.highlight = coords.clone();\n    return this;\n  }\n\n  /**\r\n   * Sets the `coords` coordinates as the start of your range.\r\n   *\r\n   * @param {CellCoords} coords Coordinates to use.\r\n   * @returns {CellRange}\r\n   */\n  setFrom(coords) {\n    this.from = coords.clone();\n    return this;\n  }\n\n  /**\r\n   * Sets the `coords` coordinates as the end of your range.\r\n   *\r\n   * @param {CellCoords} coords Coordinates to use.\r\n   * @returns {CellRange}\r\n   */\n  setTo(coords) {\n    this.to = coords.clone();\n    return this;\n  }\n\n  /**\r\n   * Checks if the coordinates in your `CellRange` instance are valid\r\n   * in the context of given table parameters.\r\n   *\r\n   * See the [`isValid()`](@/api/cellCoords.md#isvalid) method of the [`CellCoords`](@/api/cellCoords.md) class.\r\n   *\r\n   * @param {object} tableParams An object with a defined table size.\r\n   * @param {number} tableParams.countRows The total number of rows.\r\n   * @param {number} tableParams.countCols The total number of columns.\r\n   * @param {number} tableParams.countRowHeaders A number of row headers.\r\n   * @param {number} tableParams.countColHeaders A number of column headers.\r\n   * @returns {boolean}\r\n   */\n  isValid(tableParams) {\n    return this.from.isValid(tableParams) && this.to.isValid(tableParams);\n  }\n\n  /**\r\n   * Checks if your range is just a single cell or header.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isSingle() {\n    return this.isSingleCell() || this.isSingleHeader();\n  }\n\n  /**\r\n   * Checks if your range is just a single cell.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isSingleCell() {\n    return this.from.row >= 0 && this.from.row === this.to.row && this.from.col >= 0 && this.from.col === this.to.col;\n  }\n\n  /**\r\n   * Checks if your range is just a single header.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isSingleHeader() {\n    return (this.from.row < 0 || this.from.col < 0) && this.from.row === this.to.row && this.from.col === this.to.col;\n  }\n\n  /**\r\n   * Checks if your range covers only headers range (negative coordinates, without any cells).\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isHeader() {\n    if (this.from.isHeader() && this.to.isHeader()) {\n      return true;\n    }\n    return this.from.col < 0 && this.to.col < 0 || this.from.row < 0 && this.to.row < 0;\n  }\n\n  /**\r\n   * Checks if your range overlaps headers range (negative coordinates).\r\n   *\r\n   * @returns {boolean}\r\n   */\n  containsHeaders() {\n    return this.from.isHeader() || this.to.isHeader();\n  }\n\n  /**\r\n   * Returns the height of your range (as a number of rows, including row headers).\r\n   *\r\n   * @returns {number}\r\n   */\n  getOuterHeight() {\n    return Math.max(this.from.row, this.to.row) - Math.min(this.from.row, this.to.row) + 1;\n  }\n\n  /**\r\n   * Returns the width of your range (as a number of columns, including column headers).\r\n   *\r\n   * @returns {number}\r\n   */\n  getOuterWidth() {\n    return Math.max(this.from.col, this.to.col) - Math.min(this.from.col, this.to.col) + 1;\n  }\n\n  /**\r\n   * Returns the height of your range (as a number of rows, excluding row headers).\r\n   *\r\n   * @returns {number}\r\n   */\n  getHeight() {\n    // if the selection contains only row headers, return 0\n    if (this.from.row < 0 && this.to.row < 0) {\n      return 0;\n    }\n    const fromRow = Math.max(this.from.row, 0);\n    const toRow = Math.max(this.to.row, 0);\n    return Math.max(fromRow, toRow) - Math.min(fromRow, toRow) + 1;\n  }\n\n  /**\r\n   * Returns the width of your range (as a number of columns, excluding column headers).\r\n   *\r\n   * @returns {number}\r\n   */\n  getWidth() {\n    // if the selection contains only column headers, return 0\n    if (this.from.col < 0 && this.to.col < 0) {\n      return 0;\n    }\n    const fromCol = Math.max(this.from.col, 0);\n    const toCol = Math.max(this.to.col, 0);\n    return Math.max(fromCol, toCol) - Math.min(fromCol, toCol) + 1;\n  }\n\n  /**\r\n   * Returns the number of cells within your range (excluding column and row headers).\r\n   *\r\n   * @returns {number}\r\n   */\n  getCellsCount() {\n    return this.getWidth() * this.getHeight();\n  }\n\n  /**\r\n   * Checks if another set of coordinates (`cellCoords`)\r\n   * is within the `from` and `to` coordinates of your range.\r\n   *\r\n   * @param {CellCoords} cellCoords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  includes(cellCoords) {\n    const {\n      row,\n      col\n    } = cellCoords;\n    const topStart = this.getOuterTopStartCorner();\n    const bottomEnd = this.getOuterBottomEndCorner();\n    return topStart.row <= row && bottomEnd.row >= row && topStart.col <= col && bottomEnd.col >= col;\n  }\n\n  /**\r\n   * Checks if another range (`cellRange`) is within your range.\r\n   *\r\n   * @param {CellRange} cellRange A range to check.\r\n   * @returns {boolean}\r\n   */\n  includesRange(cellRange) {\n    return this.includes(cellRange.getOuterTopStartCorner()) && this.includes(cellRange.getOuterBottomEndCorner());\n  }\n\n  /**\r\n   * Checks if another range (`cellRange`) is equal to your range.\r\n   *\r\n   * @param {CellRange} cellRange A range to check.\r\n   * @returns {boolean}\r\n   */\n  isEqual(cellRange) {\n    return Math.min(this.from.row, this.to.row) === Math.min(cellRange.from.row, cellRange.to.row) && Math.max(this.from.row, this.to.row) === Math.max(cellRange.from.row, cellRange.to.row) && Math.min(this.from.col, this.to.col) === Math.min(cellRange.from.col, cellRange.to.col) && Math.max(this.from.col, this.to.col) === Math.max(cellRange.from.col, cellRange.to.col);\n  }\n\n  /**\r\n   * Checks if another range (`cellRange`) overlaps your range.\r\n   *\r\n   * Range A overlaps range B if the intersection of A and B (or B and A) is not empty.\r\n   *\r\n   * @param {CellRange} cellRange A range to check.\r\n   * @returns {boolean}\r\n   */\n  overlaps(cellRange) {\n    return cellRange.isSouthEastOf(this.getOuterTopLeftCorner()) && cellRange.isNorthWestOf(this.getOuterBottomRightCorner());\n  }\n\n  /**\r\n   * Checks if coordinates point is south-east of your range.\r\n   *\r\n   * @param {CellCoords} cellCoords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isSouthEastOf(cellCoords) {\n    return this.getOuterTopLeftCorner().isSouthEastOf(cellCoords) || this.getOuterBottomRightCorner().isSouthEastOf(cellCoords);\n  }\n\n  /**\r\n   * Checks if coordinates point is north-west of your range.\r\n   *\r\n   * @param {CellRange} cellCoords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isNorthWestOf(cellCoords) {\n    return this.getOuterTopLeftCorner().isNorthWestOf(cellCoords) || this.getOuterBottomRightCorner().isNorthWestOf(cellCoords);\n  }\n\n  /**\r\n   * Checks if another range (`cellRange`) overlaps your range horizontally.\r\n   *\r\n   * For example: returns `true` if the last column of your range is `5`\r\n   * and the first column of the `cellRange` range is `3`.\r\n   *\r\n   * @param {CellRange} cellRange A range to check.\r\n   * @returns {boolean}\r\n   */\n  isOverlappingHorizontally(cellRange) {\n    return this.getOuterTopEndCorner().col >= cellRange.getOuterTopStartCorner().col && this.getOuterTopEndCorner().col <= cellRange.getOuterTopEndCorner().col || this.getOuterTopStartCorner().col <= cellRange.getOuterTopEndCorner().col && this.getOuterTopStartCorner().col >= cellRange.getOuterTopStartCorner().col;\n  }\n\n  /**\r\n   * Checks if another range (`cellRange`) overlaps your range vertically.\r\n   *\r\n   * For example: returns `true` if the last row of your range is `5`\r\n   * and the first row of the `cellRange` range is `3`.\r\n   *\r\n   * @param {CellRange} cellRange A range to check.\r\n   * @returns {boolean}\r\n   */\n  isOverlappingVertically(cellRange) {\n    return this.getOuterBottomStartCorner().row >= cellRange.getOuterTopRightCorner().row && this.getOuterBottomStartCorner().row <= cellRange.getOuterBottomStartCorner().row || this.getOuterTopEndCorner().row <= cellRange.getOuterBottomStartCorner().row && this.getOuterTopEndCorner().row >= cellRange.getOuterTopRightCorner().row;\n  }\n\n  /**\r\n   * Adds a cell to your range, at `cellCoords` coordinates.\r\n   *\r\n   * The `cellCoords` coordinates must exceed a corner of your range.\r\n   *\r\n   * @param {CellCoords} cellCoords A new cell's coordinates.\r\n   * @returns {boolean}\r\n   */\n  expand(cellCoords) {\n    const topStart = this.getOuterTopStartCorner();\n    const bottomEnd = this.getOuterBottomEndCorner();\n    if (cellCoords.row < topStart.row || cellCoords.col < topStart.col || cellCoords.row > bottomEnd.row || cellCoords.col > bottomEnd.col) {\n      this.from = this._createCellCoords(Math.min(topStart.row, cellCoords.row), Math.min(topStart.col, cellCoords.col));\n      this.to = this._createCellCoords(Math.max(bottomEnd.row, cellCoords.row), Math.max(bottomEnd.col, cellCoords.col));\n      return true;\n    }\n    return false;\n  }\n\n  /**\r\n   * Expand your range with another range (`expandingRange`).\r\n   *\r\n   * @param {CellRange} expandingRange A new range.\r\n   * @param {boolean} [changeDirection=true] If `true`, the direction of your range is changed to the direction\r\n   * of the `expandingRange` range.\r\n   * @returns {boolean}\r\n   */\n  expandByRange(expandingRange) {\n    let changeDirection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (this.includesRange(expandingRange) || !this.overlaps(expandingRange)) {\n      return false;\n    }\n    const topStart = this.getOuterTopStartCorner();\n    const bottomEnd = this.getOuterBottomEndCorner();\n    const initialDirection = this.getDirection();\n    const expandingTopStart = expandingRange.getOuterTopStartCorner();\n    const expandingBottomEnd = expandingRange.getOuterBottomEndCorner();\n    const resultTopRow = Math.min(topStart.row, expandingTopStart.row);\n    const resultTopCol = Math.min(topStart.col, expandingTopStart.col);\n    const resultBottomRow = Math.max(bottomEnd.row, expandingBottomEnd.row);\n    const resultBottomCol = Math.max(bottomEnd.col, expandingBottomEnd.col);\n    const finalFrom = this._createCellCoords(resultTopRow, resultTopCol);\n    const finalTo = this._createCellCoords(resultBottomRow, resultBottomCol);\n    this.from = finalFrom;\n    this.to = finalTo;\n    this.setDirection(initialDirection);\n    if (changeDirection) {\n      if (this.highlight.row === this.getOuterBottomRightCorner().row && this.getVerticalDirection() === 'N-S') {\n        this.flipDirectionVertically();\n      }\n      if (this.highlight.col === this.getOuterTopRightCorner().col && this.getHorizontalDirection() === 'W-E') {\n        this.flipDirectionHorizontally();\n      }\n    }\n    return true;\n  }\n\n  /**\r\n   * Gets the direction of the selection.\r\n   *\r\n   * @returns {string} Returns one of the values: `'NW-SE'`, `'NE-SW'`, `'SE-NW'`, `'SW-NE'`.\r\n   */\n  getDirection() {\n    if (this.from.isNorthWestOf(this.to)) {\n      // NorthWest - SouthEast\n      return 'NW-SE';\n    } else if (this.from.isNorthEastOf(this.to)) {\n      // NorthEast - SouthWest\n      return 'NE-SW';\n    } else if (this.from.isSouthEastOf(this.to)) {\n      // SouthEast - NorthWest\n      return 'SE-NW';\n    } else if (this.from.isSouthWestOf(this.to)) {\n      // SouthWest - NorthEast\n      return 'SW-NE';\n    }\n  }\n\n  /**\r\n   * Sets the direction of the selection.\r\n   *\r\n   * @param {string} direction One of the values: `'NW-SE'`, `'NE-SW'`, `'SE-NW'`, `'SW-NE'`.\r\n   */\n  setDirection(direction) {\n    switch (direction) {\n      case 'NW-SE':\n        [this.from, this.to] = [this.getOuterTopLeftCorner(), this.getOuterBottomRightCorner()];\n        break;\n      case 'NE-SW':\n        [this.from, this.to] = [this.getOuterTopRightCorner(), this.getOuterBottomLeftCorner()];\n        break;\n      case 'SE-NW':\n        [this.from, this.to] = [this.getOuterBottomRightCorner(), this.getOuterTopLeftCorner()];\n        break;\n      case 'SW-NE':\n        [this.from, this.to] = [this.getOuterBottomLeftCorner(), this.getOuterTopRightCorner()];\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\r\n   * Gets the vertical direction of the selection.\r\n   *\r\n   * @returns {string} Returns one of the values: `N-S` (north->south), `S-N` (south->north).\r\n   */\n  getVerticalDirection() {\n    return ['NE-SW', 'NW-SE'].indexOf(this.getDirection()) > -1 ? 'N-S' : 'S-N';\n  }\n\n  /**\r\n   * Gets the horizontal direction of the selection.\r\n   *\r\n   * @returns {string} Returns one of the values: `W-E` (west->east), `E-W` (east->west).\r\n   */\n  getHorizontalDirection() {\n    return ['NW-SE', 'SW-NE'].indexOf(this.getDirection()) > -1 ? 'W-E' : 'E-W';\n  }\n\n  /**\r\n   * Flips the direction of your range vertically (e.g., `NW-SE` changes to `SW-NE`).\r\n   */\n  flipDirectionVertically() {\n    const direction = this.getDirection();\n    switch (direction) {\n      case 'NW-SE':\n        this.setDirection('SW-NE');\n        break;\n      case 'NE-SW':\n        this.setDirection('SE-NW');\n        break;\n      case 'SE-NW':\n        this.setDirection('NE-SW');\n        break;\n      case 'SW-NE':\n        this.setDirection('NW-SE');\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\r\n   * Flips the direction of your range horizontally (e.g., `NW-SE` changes to `NE-SW`).\r\n   */\n  flipDirectionHorizontally() {\n    const direction = this.getDirection();\n    switch (direction) {\n      case 'NW-SE':\n        this.setDirection('NE-SW');\n        break;\n      case 'NE-SW':\n        this.setDirection('NW-SE');\n        break;\n      case 'SE-NW':\n        this.setDirection('SW-NE');\n        break;\n      case 'SW-NE':\n        this.setDirection('SE-NW');\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\r\n   * Gets the top-left (in LTR) or top-right (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getTopStartCorner() {\n    return this._createCellCoords(Math.min(this.from.row, this.to.row), Math.min(this.from.col, this.to.col)).normalize();\n  }\n\n  /**\r\n   * Gets the top-left corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getTopLeftCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getTopEndCorner() : this.getTopStartCorner();\n  }\n\n  /**\r\n   * Gets the bottom right (in LTR) or bottom left (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getBottomEndCorner() {\n    return this._createCellCoords(Math.max(this.from.row, this.to.row), Math.max(this.from.col, this.to.col)).normalize();\n  }\n\n  /**\r\n   * Gets the bottom right corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getBottomRightCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getBottomStartCorner() : this.getBottomEndCorner();\n  }\n\n  /**\r\n   * Gets the top right (in LTR) or top left (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getTopEndCorner() {\n    return this._createCellCoords(Math.min(this.from.row, this.to.row), Math.max(this.from.col, this.to.col)).normalize();\n  }\n\n  /**\r\n   * Gets the top right corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getTopRightCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getTopStartCorner() : this.getTopEndCorner();\n  }\n\n  /**\r\n   * Gets the bottom left (in LTR) or bottom right (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getBottomStartCorner() {\n    return this._createCellCoords(Math.max(this.from.row, this.to.row), Math.min(this.from.col, this.to.col)).normalize();\n  }\n\n  /**\r\n   * Gets the bottom left corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the corner coordinates are normalized to `0`.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getBottomLeftCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getBottomEndCorner() : this.getBottomStartCorner();\n  }\n\n  /**\r\n   * Gets the top left (in LTR) or top right (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and start coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterTopStartCorner() {\n    return this._createCellCoords(Math.min(this.from.row, this.to.row), Math.min(this.from.col, this.to.col));\n  }\n\n  /**\r\n   * Gets the top left corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and left coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterTopLeftCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getOuterTopEndCorner() : this.getOuterTopStartCorner();\n  }\n\n  /**\r\n   * Gets the bottom right (in LTR) or bottom left (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and start coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterBottomEndCorner() {\n    return this._createCellCoords(Math.max(this.from.row, this.to.row), Math.max(this.from.col, this.to.col));\n  }\n\n  /**\r\n   * Gets the bottom right corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and left coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterBottomRightCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getOuterBottomStartCorner() : this.getOuterBottomEndCorner();\n  }\n\n  /**\r\n   * Gets the top right (in LTR) or top left (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and start coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterTopEndCorner() {\n    return this._createCellCoords(Math.min(this.from.row, this.to.row), Math.max(this.from.col, this.to.col));\n  }\n\n  /**\r\n   * Gets the top right corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and left coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterTopRightCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getOuterTopStartCorner() : this.getOuterTopEndCorner();\n  }\n\n  /**\r\n   * Gets the bottom left (in LTR) or bottom right (in RTL) corner coordinates of your range.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and start coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterBottomStartCorner() {\n    return this._createCellCoords(Math.max(this.from.row, this.to.row), Math.min(this.from.col, this.to.col));\n  }\n\n  /**\r\n   * Gets the bottom left corner coordinates of your range,\r\n   * both in the LTR and RTL layout direction.\r\n   *\r\n   * If the corner contains header coordinates (negative values),\r\n   * the top and left coordinates are pointed to that header.\r\n   *\r\n   * @returns {CellCoords}\r\n   */\n  getOuterBottomLeftCorner() {\n    return _classPrivateFieldGet(_isRtl, this) ? this.getOuterBottomEndCorner() : this.getOuterBottomStartCorner();\n  }\n\n  /**\r\n   * Checks if a set of coordinates (`coords`) matches one of the 4 corners of your range.\r\n   *\r\n   * @param {CellCoords} coords Coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isCorner(coords) {\n    return coords.isEqual(this.getOuterTopLeftCorner()) || coords.isEqual(this.getOuterTopRightCorner()) || coords.isEqual(this.getOuterBottomLeftCorner()) || coords.isEqual(this.getOuterBottomRightCorner());\n  }\n\n  /**\r\n   * Gets the coordinates of a range corner opposite to the provided `coords`.\r\n   *\r\n   * For example: if the `coords` coordinates match the bottom-right corner of your range,\r\n   * the coordinates of the top-left corner of your range are returned.\r\n   *\r\n   * @param {CellCoords} coords Coordinates to check.\r\n   * @returns {CellCoords}\r\n   */\n  getOppositeCorner(coords) {\n    if (!(coords instanceof CellCoords)) {\n      return false;\n    }\n    if (coords.isEqual(this.getOuterBottomEndCorner())) {\n      return this.getOuterTopStartCorner();\n    } else if (coords.isEqual(this.getOuterTopStartCorner())) {\n      return this.getOuterBottomEndCorner();\n    } else if (coords.isEqual(this.getOuterTopEndCorner())) {\n      return this.getOuterBottomStartCorner();\n    } else if (coords.isEqual(this.getOuterBottomStartCorner())) {\n      return this.getOuterTopEndCorner();\n    }\n  }\n\n  /**\r\n   * Indicates which borders (top, right, bottom, left) are shared between\r\n   * your `CellRange`instance and another `range` that's within your range.\r\n   *\r\n   * @param {CellRange} range A range to compare with.\r\n   * @returns {Array<'top' | 'right' | 'bottom' | 'left'>}\r\n   */\n  getBordersSharedWith(range) {\n    if (!this.includesRange(range)) {\n      return [];\n    }\n    const thisBorders = {\n      top: Math.min(this.from.row, this.to.row),\n      bottom: Math.max(this.from.row, this.to.row),\n      left: Math.min(this.from.col, this.to.col),\n      right: Math.max(this.from.col, this.to.col)\n    };\n    const rangeBorders = {\n      top: Math.min(range.from.row, range.to.row),\n      bottom: Math.max(range.from.row, range.to.row),\n      left: Math.min(range.from.col, range.to.col),\n      right: Math.max(range.from.col, range.to.col)\n    };\n    const result = [];\n    if (thisBorders.top === rangeBorders.top) {\n      result.push('top');\n    }\n    if (thisBorders.right === rangeBorders.right) {\n      result.push(_classPrivateFieldGet(_isRtl, this) ? 'left' : 'right');\n    }\n    if (thisBorders.bottom === rangeBorders.bottom) {\n      result.push('bottom');\n    }\n    if (thisBorders.left === rangeBorders.left) {\n      result.push(_classPrivateFieldGet(_isRtl, this) ? 'right' : 'left');\n    }\n    return result;\n  }\n\n  /**\r\n   * Gets the coordinates of the inner cells of your range.\r\n   *\r\n   * @returns {CellCoords[]}\r\n   */\n  getInner() {\n    const topStart = this.getOuterTopStartCorner();\n    const bottomEnd = this.getOuterBottomEndCorner();\n    const out = [];\n    for (let r = topStart.row; r <= bottomEnd.row; r++) {\n      for (let c = topStart.col; c <= bottomEnd.col; c++) {\n        if (!(this.from.row === r && this.from.col === c) && !(this.to.row === r && this.to.col === c)) {\n          out.push(this._createCellCoords(r, c));\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\r\n   * Gets the coordinates of all cells of your range.\r\n   *\r\n   * @returns {CellCoords[]}\r\n   */\n  getAll() {\n    const topStart = this.getOuterTopStartCorner();\n    const bottomEnd = this.getOuterBottomEndCorner();\n    const out = [];\n    for (let r = topStart.row; r <= bottomEnd.row; r++) {\n      for (let c = topStart.col; c <= bottomEnd.col; c++) {\n        if (topStart.row === r && topStart.col === c) {\n          out.push(topStart);\n        } else if (bottomEnd.row === r && bottomEnd.col === c) {\n          out.push(bottomEnd);\n        } else {\n          out.push(this._createCellCoords(r, c));\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\r\n   * Runs a callback function on all cells within your range.\r\n   *\r\n   * You can break the iteration by returning `false` in the callback function.\r\n   *\r\n   * @param {function(number, number): boolean} callback A callback function.\r\n   */\n  forAll(callback) {\n    const topStart = this.getOuterTopStartCorner();\n    const bottomEnd = this.getOuterBottomEndCorner();\n    for (let r = topStart.row; r <= bottomEnd.row; r++) {\n      for (let c = topStart.col; c <= bottomEnd.col; c++) {\n        const breakIteration = callback(r, c);\n        if (breakIteration === false) {\n          return;\n        }\n      }\n    }\n  }\n\n  /**\r\n   * Clones your `CellRange` instance.\r\n   *\r\n   * @returns {CellRange}\r\n   */\n  clone() {\n    return new CellRange(this.highlight, this.from, this.to, _classPrivateFieldGet(_isRtl, this));\n  }\n\n  /**\r\n   * Converts your `CellRange` instance into an object literal with the following properties:\r\n   *\r\n   * - `from`\r\n   *    - `row`\r\n   *    - `col`\r\n   * - `to`\r\n   *    - `row`\r\n   *    - `col`\r\n   *\r\n   * @returns {{from: {row: number, col: number}, to: {row: number, col: number}}} An object literal with `from` and `to` properties.\r\n   */\n  toObject() {\n    return {\n      from: this.from.toObject(),\n      to: this.to.toObject()\n    };\n  }\n\n  /**\r\n   * Creates and returns a new instance of the `CellCoords` class.\r\n   *\r\n   * The new `CellCoords` instance automatically inherits the LTR/RTL flag\r\n   * from your `CellRange` instance.\r\n   *\r\n   * @private\r\n   * @param {number} row A row index.\r\n   * @param {number} column A column index.\r\n   * @returns {CellCoords}\r\n   */\n  _createCellCoords(row, column) {\n    return new CellCoords(row, column, _classPrivateFieldGet(_isRtl, this));\n  }\n}\nexport default CellRange;", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { closestDown, hasClass, isChildOf, getParent } from \"../../../helpers/dom/element.mjs\";\nimport { partial } from \"../../../helpers/function.mjs\";\nimport { isTouchSupported } from \"../../../helpers/feature.mjs\";\nimport { isMobileBrowser, isChromeWebKit, isFirefoxWebKit, isIOS } from \"../../../helpers/browser.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\n/**\r\n * @class Event\r\n */\nvar _wtSettings = /*#__PURE__*/new WeakMap();\nvar _domBindings = /*#__PURE__*/new WeakMap();\nvar _wtTable = /*#__PURE__*/new WeakMap();\nvar _selectionManager = /*#__PURE__*/new WeakMap();\nvar _parent = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _facadeGetter = /*#__PURE__*/new WeakMap();\nvar _selectedCellBeforeTouchEnd = /*#__PURE__*/new WeakMap();\nvar _dblClickTimeout = /*#__PURE__*/new WeakMap();\nvar _dblClickOrigin = /*#__PURE__*/new WeakMap();\nclass Event {\n  /**\r\n   * @param {FacadeGetter} facadeGetter Gets an instance facade.\r\n   * @param {DomBindings} domBindings Bindings into dom.\r\n   * @param {Settings} wtSettings The walkontable settings.\r\n   * @param {EventManager} eventManager The walkontable event manager.\r\n   * @param {Table} wtTable The table.\r\n   * @param {SelectionManager} selectionManager Selections.\r\n   * @param {Event} [parent=null] The main Event instance.\r\n   */\n  constructor(facadeGetter, domBindings, wtSettings, eventManager, wtTable, selectionManager) {\n    let parent = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    _classPrivateFieldInitSpec(this, _wtSettings, void 0);\n    _classPrivateFieldInitSpec(this, _domBindings, void 0);\n    _classPrivateFieldInitSpec(this, _wtTable, void 0);\n    _classPrivateFieldInitSpec(this, _selectionManager, void 0);\n    _classPrivateFieldInitSpec(this, _parent, void 0);\n    /**\r\n     * Instance of {@link EventManager}.\r\n     *\r\n     * @type {EventManager}\r\n     */\n    _classPrivateFieldInitSpec(this, _eventManager, void 0);\n    /**\r\n     * Should be use only for passing face called external origin methods, like registered event listeners.\r\n     * It provides backward compatibility by getting instance facade.\r\n     *\r\n     * @todo Consider about removing this from Event class, because it make relationship into facade (implicit circular\r\n     *   dependency).\r\n     * @todo Con. Maybe passing listener caller as an ioc from faced resolves this issue. To rethink later.\r\n     *\r\n     * @type {FacadeGetter}\r\n     */\n    _classPrivateFieldInitSpec(this, _facadeGetter, void 0);\n    /**\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _selectedCellBeforeTouchEnd, void 0);\n    /**\r\n     * @type {number[]}\r\n     */\n    _classPrivateFieldInitSpec(this, _dblClickTimeout, [null, null]);\n    /**\r\n     * @type {number[]}\r\n     */\n    _classPrivateFieldInitSpec(this, _dblClickOrigin, [null, null]);\n    _classPrivateFieldSet(_wtSettings, this, wtSettings);\n    _classPrivateFieldSet(_domBindings, this, domBindings);\n    _classPrivateFieldSet(_wtTable, this, wtTable);\n    _classPrivateFieldSet(_selectionManager, this, selectionManager);\n    _classPrivateFieldSet(_parent, this, parent);\n    _classPrivateFieldSet(_eventManager, this, eventManager);\n    _classPrivateFieldSet(_facadeGetter, this, facadeGetter);\n    this.registerEvents();\n  }\n\n  /**\r\n   * Adds listeners for mouse and touch events.\r\n   *\r\n   * @private\r\n   */\n  registerEvents() {\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'contextmenu', event => this.onContextMenu(event));\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).TABLE, 'mouseover', event => this.onMouseOver(event));\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).TABLE, 'mouseout', event => this.onMouseOut(event));\n    const initTouchEvents = () => {\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'touchstart', event => this.onTouchStart(event));\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'touchend', event => this.onTouchEnd(event));\n      if (!this.momentumScrolling) {\n        this.momentumScrolling = {};\n      }\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'scroll', () => {\n        clearTimeout(this.momentumScrolling._timeout);\n        if (!this.momentumScrolling.ongoing) {\n          _classPrivateFieldGet(_wtSettings, this).getSetting('onBeforeTouchScroll');\n        }\n        this.momentumScrolling.ongoing = true;\n        this.momentumScrolling._timeout = setTimeout(() => {\n          if (!this.touchApplied) {\n            this.momentumScrolling.ongoing = false;\n            _classPrivateFieldGet(_wtSettings, this).getSetting('onAfterMomentumScroll');\n          }\n        }, 200);\n      });\n    };\n    const initMouseEvents = () => {\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'mouseup', event => this.onMouseUp(event));\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'mousedown', event => this.onMouseDown(event));\n    };\n    if (isMobileBrowser()) {\n      initTouchEvents();\n    } else {\n      // PC like devices which support both methods (touchscreen and ability to plug-in mouse).\n      if (isTouchSupported()) {\n        initTouchEvents();\n      }\n      initMouseEvents();\n    }\n  }\n\n  /**\r\n   * Checks if an element is already selected.\r\n   *\r\n   * @private\r\n   * @param {Element} touchTarget An element to check.\r\n   * @returns {boolean}\r\n   */\n  selectedCellWasTouched(touchTarget) {\n    const cellUnderFinger = this.parentCell(touchTarget);\n    const coordsOfCellUnderFinger = cellUnderFinger.coords;\n    if (_classPrivateFieldGet(_selectedCellBeforeTouchEnd, this) && coordsOfCellUnderFinger) {\n      const [rowTouched, rowSelected] = [coordsOfCellUnderFinger.row, _classPrivateFieldGet(_selectedCellBeforeTouchEnd, this).from.row];\n      const [colTouched, colSelected] = [coordsOfCellUnderFinger.col, _classPrivateFieldGet(_selectedCellBeforeTouchEnd, this).from.col];\n      return rowTouched === rowSelected && colTouched === colSelected;\n    }\n    return false;\n  }\n\n  /**\r\n   * Gets closest TD or TH element.\r\n   *\r\n   * @private\r\n   * @param {Element} elem An element from the traversing starts.\r\n   * @returns {object} Contains coordinates and reference to TD or TH if it exists. Otherwise it's empty object.\r\n   */\n  parentCell(elem) {\n    const cell = {};\n    const TABLE = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const TD = closestDown(elem, ['TD', 'TH'], TABLE);\n    if (TD) {\n      cell.coords = _classPrivateFieldGet(_wtTable, this).getCoords(TD);\n      cell.TD = TD;\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'current')) {\n      cell.coords = _classPrivateFieldGet(_selectionManager, this).getFocusSelection().cellRange.highlight;\n      cell.TD = _classPrivateFieldGet(_wtTable, this).getCell(cell.coords);\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'area')) {\n      if (_classPrivateFieldGet(_selectionManager, this).getAreaSelection().cellRange) {\n        cell.coords = _classPrivateFieldGet(_selectionManager, this).getAreaSelection().cellRange.to;\n        cell.TD = _classPrivateFieldGet(_wtTable, this).getCell(cell.coords);\n      }\n    }\n    return cell;\n  }\n\n  /**\r\n   * OnMouseDown callback.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} event The mouse event object.\r\n   */\n  onMouseDown(event) {\n    const activeElement = _classPrivateFieldGet(_domBindings, this).rootDocument.activeElement;\n    const getParentNode = partial(getParent, event.target);\n    const realTarget = event.target;\n\n    // ignore non-TD focusable elements from mouse down processing\n    // (https://github.com/handsontable/handsontable/issues/3555)\n    if (!['TD', 'TH'].includes(activeElement.nodeName) && (realTarget === activeElement || getParentNode(0) === activeElement || getParentNode(1) === activeElement)) {\n      return;\n    }\n    const cell = this.parentCell(realTarget);\n    if (hasClass(realTarget, 'corner')) {\n      _classPrivateFieldGet(_wtSettings, this).getSetting('onCellCornerMouseDown', event, realTarget);\n    } else if (cell.TD && _classPrivateFieldGet(_wtSettings, this).has('onCellMouseDown')) {\n      this.callListener('onCellMouseDown', event, cell.coords, cell.TD);\n    }\n\n    // doubleclick reacts only for left mouse button or from touch events\n    if ((event.button === 0 || this.touchApplied) && cell.TD) {\n      _classPrivateFieldGet(_dblClickOrigin, this)[0] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[0]);\n      _classPrivateFieldGet(_dblClickTimeout, this)[0] = setTimeout(() => {\n        _classPrivateFieldGet(_dblClickOrigin, this)[0] = null;\n      }, 1000);\n    }\n  }\n\n  /**\r\n   * OnContextMenu callback.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} event The mouse event object.\r\n   */\n  onContextMenu(event) {\n    if (_classPrivateFieldGet(_wtSettings, this).has('onCellContextMenu')) {\n      const cell = this.parentCell(event.target);\n      if (cell.TD) {\n        this.callListener('onCellContextMenu', event, cell.coords, cell.TD);\n      }\n    }\n  }\n\n  /**\r\n   * OnMouseOver callback.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} event The mouse event object.\r\n   */\n  onMouseOver(event) {\n    if (!_classPrivateFieldGet(_wtSettings, this).has('onCellMouseOver')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const td = closestDown(event.target, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(_parent, this) || this;\n    if (td && td !== parent.lastMouseOver && isChildOf(td, table)) {\n      parent.lastMouseOver = td;\n      this.callListener('onCellMouseOver', event, _classPrivateFieldGet(_wtTable, this).getCoords(td), td);\n    }\n  }\n\n  /**\r\n   * OnMouseOut callback.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} event The mouse event object.\r\n   */\n  onMouseOut(event) {\n    if (!_classPrivateFieldGet(_wtSettings, this).has('onCellMouseOut')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const lastTD = closestDown(event.target, ['TD', 'TH'], table);\n    const nextTD = closestDown(event.relatedTarget, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(_parent, this) || this;\n    if (lastTD && lastTD !== nextTD && isChildOf(lastTD, table)) {\n      this.callListener('onCellMouseOut', event, _classPrivateFieldGet(_wtTable, this).getCoords(lastTD), lastTD);\n      if (nextTD === null) {\n        parent.lastMouseOver = null;\n      }\n    }\n  }\n\n  /**\r\n   * OnMouseUp callback.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} event The mouse event object.\r\n   */\n  onMouseUp(event) {\n    const cell = this.parentCell(event.target);\n    if (cell.TD && _classPrivateFieldGet(_wtSettings, this).has('onCellMouseUp')) {\n      this.callListener('onCellMouseUp', event, cell.coords, cell.TD);\n    }\n\n    // if not left mouse button, and the origin event is not comes from touch\n    if (event.button !== 0 && !this.touchApplied) {\n      return;\n    }\n    if (cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[0] && cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[1]) {\n      if (hasClass(event.target, 'corner')) {\n        this.callListener('onCellCornerDblClick', event, cell.coords, cell.TD);\n      } else {\n        this.callListener('onCellDblClick', event, cell.coords, cell.TD);\n      }\n      _classPrivateFieldGet(_dblClickOrigin, this)[0] = null;\n      _classPrivateFieldGet(_dblClickOrigin, this)[1] = null;\n    } else if (cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[0]) {\n      _classPrivateFieldGet(_dblClickOrigin, this)[1] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[1]);\n      _classPrivateFieldGet(_dblClickTimeout, this)[1] = setTimeout(() => {\n        _classPrivateFieldGet(_dblClickOrigin, this)[1] = null;\n      }, 500);\n    }\n  }\n\n  /**\r\n   * OnTouchStart callback. Simulates mousedown event.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} event The mouse event object.\r\n   */\n  onTouchStart(event) {\n    _classPrivateFieldSet(_selectedCellBeforeTouchEnd, this, _classPrivateFieldGet(_selectionManager, this).getFocusSelection().cellRange);\n    this.touchApplied = true;\n    this.onMouseDown(event);\n  }\n\n  /**\r\n   * OnTouchEnd callback. Simulates mouseup event.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} event The mouse event object.\r\n   */\n  onTouchEnd(event) {\n    var _this$parentCell;\n    const target = event.target;\n    const parentCellCoords = (_this$parentCell = this.parentCell(target)) === null || _this$parentCell === void 0 ? void 0 : _this$parentCell.coords;\n    const isCellsRange = isDefined(parentCellCoords) && parentCellCoords.row >= 0 && parentCellCoords.col >= 0;\n    const isEventCancelable = event.cancelable && isCellsRange && _classPrivateFieldGet(_wtSettings, this).getSetting('isDataViewInstance');\n\n    // To prevent accidental redirects or other actions that the interactive elements (e.q \"A\" link) do\n    // while the cell is highlighted, all touch events that are triggered on different cells are\n    // \"preventDefault\"'ed. The user can interact with the element (e.q. click on the link that opens\n    // a new page) only when the same cell was previously selected (see related PR #7980).\n    if (isEventCancelable) {\n      const interactiveElements = ['A', 'BUTTON', 'INPUT'];\n\n      // For browsers that use the WebKit as an engine (excluding Safari), there is a bug. The prevent\n      // default has to be called all the time. Otherwise, the second tap won't be triggered (probably\n      // caused by the native ~300ms delay - https://webkit.org/blog/5610/more-responsive-tapping-on-ios/).\n      // To make the interactive elements work, the event target element has to be check. If the element\n      // matches the allow-list, the event is not prevented.\n      if (isIOS() && (isChromeWebKit() || isFirefoxWebKit()) && this.selectedCellWasTouched(target) && !interactiveElements.includes(target.tagName)) {\n        event.preventDefault();\n      } else if (!this.selectedCellWasTouched(target)) {\n        // For other browsers, prevent default is fired only for the first tap and only when the previous\n        // highlighted cell was different.\n        event.preventDefault();\n      }\n    }\n    this.onMouseUp(event);\n    this.touchApplied = false;\n  }\n\n  /**\r\n   * Call listener with backward compatibility.\r\n   *\r\n   * @private\r\n   * @param {string} name Name of listener.\r\n   * @param {MouseEvent} event The event object.\r\n   * @param {CellCoords} coords Coordinates.\r\n   * @param {HTMLElement} target Event target.\r\n   */\n  callListener(name, event, coords, target) {\n    const listener = _classPrivateFieldGet(_wtSettings, this).getSettingPure(name);\n    if (listener) {\n      listener(event, coords, target, _classPrivateFieldGet(_facadeGetter, this).call(this));\n    }\n  }\n\n  /**\r\n   * Clears double-click timeouts and destroys the internal eventManager instance.\r\n   */\n  destroy() {\n    clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[0]);\n    clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[1]);\n    _classPrivateFieldGet(_eventManager, this).destroy();\n  }\n}\nexport default Event;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @class ColumnFilter\r\n */\nclass ColumnFilter {\n  /**\r\n   * @param {number} offset The scroll horizontal offset.\r\n   * @param {number} total The total width of the table.\r\n   * @param {number} countTH The number of rendered row headers.\r\n   */\n  constructor(offset, total, countTH) {\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"offset\", void 0);\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"total\", void 0);\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"countTH\", void 0);\n    this.offset = offset;\n    this.total = total;\n    this.countTH = countTH;\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  offsetted(index) {\n    return index + this.offset;\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  unOffsetted(index) {\n    return index - this.offset;\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  renderedToSource(index) {\n    return this.offsetted(index);\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  sourceToRendered(index) {\n    return this.unOffsetted(index);\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  offsettedTH(index) {\n    return index - this.countTH;\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  unOffsettedTH(index) {\n    return index + this.countTH;\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  visibleRowHeadedColumnToSourceColumn(index) {\n    return this.renderedToSource(this.offsettedTH(index));\n  }\n\n  /**\r\n   * @param {number} index The visual column index.\r\n   * @returns {number}\r\n   */\n  sourceColumnToVisibleRowHeadedColumn(index) {\n    return this.unOffsettedTH(this.sourceToRendered(index));\n  }\n}\nexport default ColumnFilter;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * @class RowFilter\r\n */\nclass RowFilter {\n  /**\r\n   * @param {number} offset The scroll vertical offset.\r\n   * @param {number} total The total height of the table.\r\n   * @param {number} countTH The number of rendered column headers.\r\n   */\n  constructor(offset, total, countTH) {\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"offset\", void 0);\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"total\", void 0);\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"countTH\", void 0);\n    this.offset = offset;\n    this.total = total;\n    this.countTH = countTH;\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  offsetted(index) {\n    return index + this.offset;\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  unOffsetted(index) {\n    return index - this.offset;\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  renderedToSource(index) {\n    return this.offsetted(index);\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  sourceToRendered(index) {\n    return this.unOffsetted(index);\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  offsettedTH(index) {\n    return index - this.countTH;\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  unOffsettedTH(index) {\n    return index + this.countTH;\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  visibleColHeadedRowToSourceRow(index) {\n    return this.renderedToSource(this.offsettedTH(index));\n  }\n\n  /**\r\n   * @param {number} index The visual row index.\r\n   * @returns {number}\r\n   */\n  sourceRowToVisibleColHeadedRow(index) {\n    return this.unOffsettedTH(this.sourceToRendered(index));\n  }\n}\nexport default RowFilter;", "/**\r\n * Describes that ViewSizeSet instance doesn't share sizes with another\r\n * instance (root node can contain only one type of children nodes).\r\n *\r\n * @type {number}\r\n */\nexport const WORKING_SPACE_ALL = 0;\n/**\r\n * Describes that ViewSizeSet instance share sizes with another instance and\r\n * set working space for this instance to 'top' (root node can contain multiple\r\n * types of children and this instance will be occupied top space of the root node).\r\n *\r\n * @type {number}\r\n */\nexport const WORKING_SPACE_TOP = 1;\n/**\r\n * Describes that ViewSizeSet instance share sizes with another instance and\r\n * set working space for this instance to 'bottom' (root node can contain multiple\r\n * types of children and this instance will be occupied bottom space of the root node).\r\n *\r\n * @type {number}\r\n */\nexport const WORKING_SPACE_BOTTOM = 2;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * Holder for current and next size (count of rendered and to render DOM elements) and offset.\r\n *\r\n * @class {ViewSize}\r\n */\nexport default class ViewSize {\n  constructor() {\n    /**\r\n     * Current size of the rendered DOM elements.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"currentSize\", 0);\n    /**\r\n     * Next size of the rendered DOM elements which should be fulfilled.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"nextSize\", 0);\n    /**\r\n     * Current offset.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"currentOffset\", 0);\n    /**\r\n     * Next offset.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"nextOffset\", 0);\n  }\n  /**\r\n   * Sets new size of the rendered DOM elements.\r\n   *\r\n   * @param {number} size The size.\r\n   */\n  setSize(size) {\n    this.currentSize = this.nextSize;\n    this.nextSize = size;\n  }\n\n  /**\r\n   * Sets new offset.\r\n   *\r\n   * @param {number} offset The offset.\r\n   */\n  setOffset(offset) {\n    this.currentOffset = this.nextOffset;\n    this.nextOffset = offset;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport ViewSize from \"./viewSize.mjs\";\nimport { WORKING_SPACE_ALL, WORKING_SPACE_TOP, WORKING_SPACE_BOTTOM } from \"./constants.mjs\";\n/**\r\n * The class is a source of the truth of information about the current and\r\n * next size of the rendered DOM elements and current and next offset of\r\n * the view. That information allows us to calculate diff between current\r\n * DOM order and this which should be rendered without touching the DOM API at all.\r\n *\r\n * Mostly the ViewSizeSet is created for each individual renderer. But in\r\n * the table, there is one case where this size information should be shared\r\n * between two different instances (different table renderers). This is a TR\r\n * element which can contain TH elements - managed by own renderer and\r\n * TD elements - managed by another renderer. To generate correct DOM order\r\n * for them it is required to connect these two instances by reference\r\n * through `sharedSize`.\r\n *\r\n * @class {ViewSizeSet}\r\n */\nexport default class ViewSizeSet {\n  constructor() {\n    /**\r\n     * Holder for current and next view size and offset.\r\n     *\r\n     * @type {ViewSize}\r\n     */\n    _defineProperty(this, \"size\", new ViewSize());\n    /**\r\n     * Defines if this instance shares its size with another instance. If it's in the shared\r\n     * mode it defines what space it occupies ('top' or 'bottom').\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"workingSpace\", WORKING_SPACE_ALL);\n    /**\r\n     * Shared Size instance.\r\n     *\r\n     * @type {ViewSize}\r\n     */\n    _defineProperty(this, \"sharedSize\", null);\n  }\n  /**\r\n   * Sets the size for rendered elements. It can be a size for rows, cells or size for row\r\n   * headers etc.\r\n   *\r\n   * @param {number} size The size.\r\n   */\n  setSize(size) {\n    this.size.setSize(size);\n  }\n\n  /**\r\n   * Sets the offset for rendered elements. The offset describes the shift between 0 and\r\n   * the first rendered element according to the scroll position.\r\n   *\r\n   * @param {number} offset The offset.\r\n   */\n  setOffset(offset) {\n    this.size.setOffset(offset);\n  }\n\n  /**\r\n   * Returns ViewSize instance.\r\n   *\r\n   * @returns {ViewSize}\r\n   */\n  getViewSize() {\n    return this.size;\n  }\n\n  /**\r\n   * Checks if this ViewSizeSet is sharing the size with another instance.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isShared() {\n    return this.sharedSize instanceof ViewSize;\n  }\n\n  /**\r\n   * Checks what working space describes this size instance.\r\n   *\r\n   * @param {number} workingSpace The number which describes the type of the working space (see constants.js).\r\n   * @returns {boolean}\r\n   */\n  isPlaceOn(workingSpace) {\n    return this.workingSpace === workingSpace;\n  }\n\n  /**\r\n   * Appends the ViewSizeSet instance to this instance that turns it into a shared mode.\r\n   *\r\n   * @param {ViewSizeSet} viewSize The instance of the ViewSizeSet class.\r\n   */\n  append(viewSize) {\n    this.workingSpace = WORKING_SPACE_TOP;\n    viewSize.workingSpace = WORKING_SPACE_BOTTOM;\n    this.sharedSize = viewSize.getViewSize();\n  }\n\n  /**\r\n   * Prepends the ViewSize instance to this instance that turns it into a shared mode.\r\n   *\r\n   * @param {ViewSizeSet} viewSize The instance of the ViewSizeSet class.\r\n   */\n  prepend(viewSize) {\n    this.workingSpace = WORKING_SPACE_BOTTOM;\n    viewSize.workingSpace = WORKING_SPACE_TOP;\n    this.sharedSize = viewSize.getViewSize();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { WORKING_SPACE_TOP, WORKING_SPACE_BOTTOM } from \"./constants.mjs\";\nimport ViewSizeSet from \"./viewSizeSet.mjs\";\n/**\r\n * Executive model for each table renderer. It's responsible for injecting DOM nodes in a\r\n * specified order and adjusting the number of elements in the root node.\r\n *\r\n * Only this class have rights to juggling DOM elements within the root node (see render method).\r\n *\r\n * @class {OrderView}\r\n */\nexport default class OrderView {\n  constructor(rootNode, nodesPool, childNodeType) {\n    /**\r\n     * The root node to manage with.\r\n     *\r\n     * @type {HTMLElement}\r\n     */\n    _defineProperty(this, \"rootNode\", void 0);\n    /**\r\n     * Factory for newly created DOM elements.\r\n     *\r\n     * @type {Function}\r\n     */\n    _defineProperty(this, \"nodesPool\", void 0);\n    /**\r\n     * Holder for sizing and positioning of the view.\r\n     *\r\n     * @type {ViewSizeSet}\r\n     */\n    _defineProperty(this, \"sizeSet\", new ViewSizeSet());\n    /**\r\n     * Node type which the order view will manage while rendering the DOM elements.\r\n     *\r\n     * @type {string}\r\n     */\n    _defineProperty(this, \"childNodeType\", void 0);\n    /**\r\n     * The visual index of currently processed row.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"visualIndex\", 0);\n    /**\r\n     * The list of DOM elements which are rendered for this render cycle.\r\n     *\r\n     * @type {HTMLElement[]}\r\n     */\n    _defineProperty(this, \"collectedNodes\", []);\n    this.rootNode = rootNode;\n    this.nodesPool = nodesPool;\n    this.childNodeType = childNodeType.toUpperCase();\n  }\n\n  /**\r\n   * Sets the size for rendered elements. It can be a size for rows, cells or size for row\r\n   * headers etc. It depends for what table renderer this instance was created.\r\n   *\r\n   * @param {number} size The size.\r\n   * @returns {OrderView}\r\n   */\n  setSize(size) {\n    this.sizeSet.setSize(size);\n    return this;\n  }\n\n  /**\r\n   * Sets the offset for rendered elements. The offset describes the shift between 0 and\r\n   * the first rendered element according to the scroll position.\r\n   *\r\n   * @param {number} offset The offset.\r\n   * @returns {OrderView}\r\n   */\n  setOffset(offset) {\n    this.sizeSet.setOffset(offset);\n    return this;\n  }\n\n  /**\r\n   * Checks if this instance of the view shares the root node with another instance. This happens only once when\r\n   * a row (TR) as a root node is managed by two OrderView instances. If this happens another DOM injection\r\n   * algorithm is performed to achieve consistent order.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isSharedViewSet() {\n    return this.sizeSet.isShared();\n  }\n\n  /**\r\n   * Returns rendered DOM element based on visual index.\r\n   *\r\n   * @param {number} visualIndex The visual index.\r\n   * @returns {HTMLElement}\r\n   */\n  getNode(visualIndex) {\n    return visualIndex < this.collectedNodes.length ? this.collectedNodes[visualIndex] : null;\n  }\n\n  /**\r\n   * Returns currently processed DOM element.\r\n   *\r\n   * @returns {HTMLElement}\r\n   */\n  getCurrentNode() {\n    const length = this.collectedNodes.length;\n    return length > 0 ? this.collectedNodes[length - 1] : null;\n  }\n\n  /**\r\n   * Returns rendered child count for this instance.\r\n   *\r\n   * @returns {number}\r\n   */\n  getRenderedChildCount() {\n    const {\n      rootNode,\n      sizeSet\n    } = this;\n    let childElementCount = 0;\n    if (this.isSharedViewSet()) {\n      let element = rootNode.firstElementChild;\n      while (element) {\n        if (element.tagName === this.childNodeType) {\n          childElementCount += 1;\n        } else if (sizeSet.isPlaceOn(WORKING_SPACE_TOP)) {\n          break;\n        }\n        element = element.nextElementSibling;\n      }\n    } else {\n      childElementCount = rootNode.childElementCount;\n    }\n    return childElementCount;\n  }\n\n  /**\r\n   * Setups and prepares all necessary properties and start the rendering process.\r\n   * This method has to be called only once (at the start) for the render cycle.\r\n   */\n  start() {\n    this.collectedNodes.length = 0;\n    this.visualIndex = 0;\n    const {\n      rootNode,\n      sizeSet\n    } = this;\n    const isShared = this.isSharedViewSet();\n    const {\n      nextSize\n    } = sizeSet.getViewSize();\n    let childElementCount = this.getRenderedChildCount();\n    while (childElementCount < nextSize) {\n      const newNode = this.nodesPool();\n      if (!isShared || isShared && sizeSet.isPlaceOn(WORKING_SPACE_BOTTOM)) {\n        rootNode.appendChild(newNode);\n      } else {\n        rootNode.insertBefore(newNode, rootNode.firstChild);\n      }\n      childElementCount += 1;\n    }\n    const isSharedPlacedOnTop = isShared && sizeSet.isPlaceOn(WORKING_SPACE_TOP);\n    while (childElementCount > nextSize) {\n      rootNode.removeChild(isSharedPlacedOnTop ? rootNode.firstChild : rootNode.lastChild);\n      childElementCount -= 1;\n    }\n  }\n\n  /**\r\n   * Renders the DOM element based on visual index (which is calculated internally).\r\n   * This method has to be called as many times as the size count is met (to cover all previously rendered DOM elements).\r\n   */\n  render() {\n    const {\n      rootNode,\n      sizeSet\n    } = this;\n    let visualIndex = this.visualIndex;\n    if (this.isSharedViewSet() && sizeSet.isPlaceOn(WORKING_SPACE_BOTTOM)) {\n      visualIndex += sizeSet.sharedSize.nextSize;\n    }\n    let node = rootNode.childNodes[visualIndex];\n    if (node.tagName !== this.childNodeType) {\n      const newNode = this.nodesPool();\n      rootNode.replaceChild(newNode, node);\n      node = newNode;\n    }\n    this.collectedNodes.push(node);\n    this.visualIndex += 1;\n  }\n\n  /**\r\n   * Ends the render process.\r\n   * This method has to be called only once (at the end) for the render cycle.\r\n   */\n  end() {}\n}", "import OrderView from \"./view.mjs\";\n/**\r\n * Executive model for TR root nodes.\r\n *\r\n * @class {SharedOrderView}\r\n */\nexport default class SharedOrderView extends OrderView {\n  /**\r\n   * The method results in merging external order view into the current order. This happens only for order views which\r\n   * operate on the same root node.\r\n   *\r\n   * In the table, there is only one scenario when this happens. TR root element\r\n   * has a common root node with cells order view and row headers order view. Both classes have to share\r\n   * information about their order sizes to make proper diff calculations.\r\n   *\r\n   * @param {OrderView} orderView The order view to merging with. The view will be added at the beginning of the list.\r\n   * @returns {SharedOrderView}\r\n   */\n  prependView(orderView) {\n    this.sizeSet.prepend(orderView.sizeSet);\n    orderView.sizeSet.append(this.sizeSet);\n    return this;\n  }\n\n  /**\r\n   * The method results in merging external order view into the current order. This happens only for order views which\r\n   * operate on the same root node.\r\n   *\r\n   * In the table, there is only one scenario when this happens. TR root element\r\n   * has a common root node with cells order view and row headers order view. Both classes have to share\r\n   * information about their order sizes to make proper diff calculations.\r\n   *\r\n   * @param {OrderView} orderView The order view to merging with. The view will be added at the end of the list.\r\n   * @returns {SharedOrderView}\r\n   */\n  appendView(orderView) {\n    this.sizeSet.append(orderView.sizeSet);\n    orderView.sizeSet.prepend(this.sizeSet);\n    return this;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * Factory for newly created DOM elements.\r\n *\r\n * @class {NodesPool}\r\n */\nexport default class NodesPool {\n  constructor(nodeType) {\n    /**\r\n     * Node type to generate (ew 'th', 'td').\r\n     *\r\n     * @type {string}\r\n     */\n    _defineProperty(this, \"nodeType\", void 0);\n    this.nodeType = nodeType.toUpperCase();\n  }\n\n  /**\r\n   * Set document owner for this instance.\r\n   *\r\n   * @param {HTMLDocument} rootDocument The document window owner.\r\n   */\n  setRootDocument(rootDocument) {\n    this.rootDocument = rootDocument;\n  }\n\n  /**\r\n   * Obtains an element. The returned elements in the feature can be cached.\r\n   *\r\n   * @returns {HTMLElement}\r\n   */\n  obtain() {\n    return this.rootDocument.createElement(this.nodeType);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport NodesPool from \"./../utils/nodesPool.mjs\";\n/**\r\n * Base renderer class, abstract logic for specialized renderers.\r\n *\r\n * @class BaseRenderer\r\n */\nexport default class BaseRenderer {\n  constructor(nodeType, rootNode) {\n    /**\r\n     * Factory for newly created DOM elements.\r\n     *\r\n     * NodePool should be used for each renderer. For the first stage of the refactoring\r\n     * process, only some of the renderers are implemented a new approach.\r\n     *\r\n     * @type {NodesPool|null}\r\n     */\n    _defineProperty(this, \"nodesPool\", null);\n    /**\r\n     * Node type which the renderer will manage while building the table (eg. 'TD', 'TR', 'TH').\r\n     *\r\n     * @type {string}\r\n     */\n    _defineProperty(this, \"nodeType\", void 0);\n    /**\r\n     * The root node to which newly created elements will be inserted.\r\n     *\r\n     * @type {HTMLElement}\r\n     */\n    _defineProperty(this, \"rootNode\", void 0);\n    /**\r\n     * The instance of the Table class, a wrapper for all renderers and holder for properties describe table state.\r\n     *\r\n     * @type {TableRenderer}\r\n     */\n    _defineProperty(this, \"table\", null);\n    /**\r\n     * Counter of nodes already added.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"renderedNodes\", 0);\n    this.nodesPool = typeof nodeType === 'string' ? new NodesPool(nodeType) : null;\n    this.nodeType = nodeType;\n    this.rootNode = rootNode;\n  }\n\n  /**\r\n   * Sets the table renderer instance to the current renderer.\r\n   *\r\n   * @param {TableRenderer} table The TableRenderer instance.\r\n   */\n  setTable(table) {\n    if (this.nodesPool) {\n      this.nodesPool.setRootDocument(table.rootDocument);\n    }\n    this.table = table;\n  }\n\n  /**\r\n   * Adjusts the number of rendered nodes.\r\n   */\n  adjust() {}\n\n  /**\r\n   * Renders the contents to the elements.\r\n   */\n  render() {}\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { SharedOrderView } from \"./../utils/orderView/index.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { setAttribute, removeAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { A11Y_COLINDEX, A11Y_ROWHEADER, A11Y_SCOPE_ROW, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\r\n * Row headers renderer responsible for managing (inserting, tracking, rendering) TR elements belongs to TR.\r\n *\r\n *   <tr> (root node)\r\n *     ├ <th>   --- RowHeadersRenderer\r\n *     ├ <td>   \\\r\n *     ├ <td>    \\\r\n *     ├ <td>     - CellsRenderer\r\n *     ├ <td>    /\r\n *     └ <td>   /.\r\n *\r\n * @class {CellsRenderer}\r\n */\nexport default class RowHeadersRenderer extends BaseRenderer {\n  constructor() {\n    super('TH');\n    /**\r\n     * Cache for OrderView classes connected to specified node.\r\n     *\r\n     * @type {WeakMap}\r\n     */\n    _defineProperty(this, \"orderViews\", new WeakMap());\n    /**\r\n     * Row index which specifies the row position of the processed row header.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"sourceRowIndex\", 0);\n  }\n\n  /**\r\n   * Obtains the instance of the SharedOrderView class which is responsible for rendering the nodes to the root node.\r\n   *\r\n   * @param {HTMLTableRowElement} rootNode The TR element, which is root element for row headers (TH).\r\n   * @returns {SharedOrderView}\r\n   */\n  obtainOrderView(rootNode) {\n    let orderView;\n    if (this.orderViews.has(rootNode)) {\n      orderView = this.orderViews.get(rootNode);\n    } else {\n      orderView = new SharedOrderView(rootNode, sourceColumnIndex => this.nodesPool.obtain(this.sourceRowIndex, sourceColumnIndex), this.nodeType);\n      this.orderViews.set(rootNode, orderView);\n    }\n    return orderView;\n  }\n\n  /**\r\n   * Renders the cells.\r\n   */\n  render() {\n    const {\n      rowsToRender,\n      rowHeaderFunctions,\n      rowHeadersCount,\n      rows,\n      cells\n    } = this.table;\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      const TR = rows.getRenderedNode(visibleRowIndex);\n      this.sourceRowIndex = sourceRowIndex;\n      const orderView = this.obtainOrderView(TR);\n      const cellsView = cells.obtainOrderView(TR);\n      orderView.appendView(cellsView).setSize(rowHeadersCount).setOffset(this.table.renderedColumnToSource(0)).start();\n      for (let visibleColumnIndex = 0; visibleColumnIndex < rowHeadersCount; visibleColumnIndex++) {\n        orderView.render();\n        const TH = orderView.getCurrentNode();\n        TH.className = '';\n        TH.removeAttribute('style');\n\n        // Remove all accessibility-related attributes for the header to start fresh.\n        removeAttribute(TH, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        if (this.table.isAriaEnabled()) {\n          setAttribute(TH, [A11Y_ROWHEADER(), A11Y_SCOPE_ROW(), A11Y_COLINDEX(visibleColumnIndex + 1), A11Y_TABINDEX(-1)]);\n        }\n        rowHeaderFunctions[visibleColumnIndex](sourceRowIndex, TH, visibleColumnIndex);\n      }\n      orderView.end();\n    }\n  }\n}", "import { empty, setAttribute, removeAttribute } from \"./../../../../helpers/dom/element.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { A11Y_COLINDEX, A11Y_COLUMNHEADER, A11Y_ROW, A11Y_ROWGROUP, A11Y_ROWINDEX, A11Y_SCOPE_COL, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\r\n * Column headers renderer responsible for managing (inserting, tracking, rendering) TR and TH elements.\r\n *\r\n *   <thead> (root node)\r\n *     ├ <tr>   \\\r\n *     ├ <tr>    \\\r\n *     ├ <tr>     - ColumnHeadersRenderer\r\n *     ├ <tr>    /\r\n *     └ <tr>   /.\r\n *\r\n * @class {ColumnHeadersRenderer}\r\n */\nexport default class ColumnHeadersRenderer extends BaseRenderer {\n  constructor(rootNode) {\n    super(null, rootNode); // NodePool is not implemented for this renderer yet\n  }\n\n  /**\r\n   * Adjusts the number of the rendered elements.\r\n   */\n  adjust() {\n    const {\n      columnHeadersCount,\n      rowHeadersCount\n    } = this.table;\n    let TR = this.rootNode.firstChild;\n    if (columnHeadersCount) {\n      const {\n        columnsToRender\n      } = this.table;\n      const allColumnsToRender = columnsToRender + rowHeadersCount;\n      for (let i = 0, len = columnHeadersCount; i < len; i++) {\n        TR = this.rootNode.childNodes[i];\n        if (!TR) {\n          TR = this.table.rootDocument.createElement('tr');\n          this.rootNode.appendChild(TR);\n        }\n        this.renderedNodes = TR.childNodes.length;\n        while (this.renderedNodes < allColumnsToRender) {\n          TR.appendChild(this.table.rootDocument.createElement('th'));\n          this.renderedNodes += 1;\n        }\n        while (this.renderedNodes > allColumnsToRender) {\n          TR.removeChild(TR.lastChild);\n          this.renderedNodes -= 1;\n        }\n      }\n      const theadChildrenLength = this.rootNode.childNodes.length;\n      if (theadChildrenLength > columnHeadersCount) {\n        for (let i = columnHeadersCount; i < theadChildrenLength; i++) {\n          this.rootNode.removeChild(this.rootNode.lastChild);\n        }\n      }\n    } else if (TR) {\n      empty(TR);\n    }\n  }\n\n  /**\r\n   * Renders the TH elements.\r\n   */\n  render() {\n    const {\n      columnHeadersCount\n    } = this.table;\n    if (this.table.isAriaEnabled()) {\n      setAttribute(this.rootNode, [A11Y_ROWGROUP()]);\n    }\n    for (let rowHeaderIndex = 0; rowHeaderIndex < columnHeadersCount; rowHeaderIndex += 1) {\n      const {\n        columnHeaderFunctions,\n        columnsToRender,\n        rowHeadersCount\n      } = this.table;\n      const TR = this.rootNode.childNodes[rowHeaderIndex];\n      if (this.table.isAriaEnabled()) {\n        setAttribute(TR, [A11Y_ROW(), A11Y_ROWINDEX(rowHeaderIndex + 1)]);\n      }\n      for (let renderedColumnIndex = -1 * rowHeadersCount; renderedColumnIndex < columnsToRender; renderedColumnIndex += 1) {\n        // eslint-disable-line max-len\n        const sourceColumnIndex = this.table.renderedColumnToSource(renderedColumnIndex);\n        const TH = TR.childNodes[renderedColumnIndex + rowHeadersCount];\n        TH.className = '';\n        TH.removeAttribute('style');\n\n        // Remove all accessibility-related attributes for the header to start fresh.\n        removeAttribute(TH, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        if (this.table.isAriaEnabled()) {\n          setAttribute(TH, [A11Y_COLINDEX(renderedColumnIndex + 1 + this.table.rowHeadersCount), A11Y_TABINDEX(-1), A11Y_COLUMNHEADER(), ...(renderedColumnIndex >= 0 ? [A11Y_SCOPE_COL()] : [\n          // Adding `role=row` to the corner headers to prevent\n          // https://github.com/handsontable/dev-handsontable/issues/1574\n          A11Y_ROW()])]);\n        }\n        columnHeaderFunctions[rowHeaderIndex](sourceColumnIndex, TH, rowHeaderIndex);\n      }\n    }\n  }\n}", "import BaseRenderer from \"./_base.mjs\";\nimport { warn } from \"./../../../../helpers/console.mjs\";\nimport { toSingleLine } from \"./../../../../helpers/templateLiteralTag.mjs\";\nimport { addClass } from \"./../../../../helpers/dom/element.mjs\";\nlet performanceWarningAppeared = false;\n\n/**\r\n * Colgroup renderer responsible for managing (inserting, tracking, rendering) COL elements.\r\n *\r\n *   <colgroup> (root node)\r\n *     ├ <col>   \\\r\n *     ├ <col>    \\\r\n *     ├ <col>     - ColGroupRenderer\r\n *     ├ <col>    /\r\n *     └ <col>   /.\r\n *\r\n * @class {ColGroupRenderer}\r\n */\nexport default class ColGroupRenderer extends BaseRenderer {\n  constructor(rootNode) {\n    super(null, rootNode); // NodePool is not implemented for this renderer yet\n  }\n\n  /**\r\n   * Adjusts the number of the rendered elements.\r\n   */\n  adjust() {\n    const {\n      columnsToRender,\n      rowHeadersCount\n    } = this.table;\n    const allColumnsToRender = columnsToRender + rowHeadersCount;\n    while (this.renderedNodes < allColumnsToRender) {\n      this.rootNode.appendChild(this.table.rootDocument.createElement('col'));\n      this.renderedNodes += 1;\n    }\n    while (this.renderedNodes > allColumnsToRender) {\n      this.rootNode.removeChild(this.rootNode.lastChild);\n      this.renderedNodes -= 1;\n    }\n  }\n\n  /**\r\n   * Renders the col group elements.\r\n   */\n  render() {\n    this.adjust();\n    const {\n      columnsToRender,\n      rowHeadersCount\n    } = this.table;\n    if (!performanceWarningAppeared && columnsToRender > 1000) {\n      performanceWarningAppeared = true;\n      warn(toSingleLine`Performance tip: Handsontable rendered more than 1000 visible columns.\\x20\n        Consider limiting the number of rendered columns by specifying the table width and/or\\x20\n        turning off the \"renderAllColumns\" option.`);\n    }\n\n    // Render column nodes for row headers\n    for (let visibleColumnIndex = 0; visibleColumnIndex < rowHeadersCount; visibleColumnIndex++) {\n      const sourceColumnIndex = this.table.renderedColumnToSource(visibleColumnIndex);\n      const width = this.table.columnUtils.getHeaderWidth(sourceColumnIndex);\n      this.rootNode.childNodes[visibleColumnIndex].style.width = `${width}px`;\n    }\n\n    // Render column nodes for cells\n    for (let visibleColumnIndex = 0; visibleColumnIndex < columnsToRender; visibleColumnIndex++) {\n      const sourceColumnIndex = this.table.renderedColumnToSource(visibleColumnIndex);\n      const width = this.table.columnUtils.getStretchedColumnWidth(sourceColumnIndex);\n      this.rootNode.childNodes[visibleColumnIndex + rowHeadersCount].style.width = `${width}px`;\n    }\n    const firstChild = this.rootNode.firstChild;\n    if (firstChild) {\n      addClass(firstChild, 'rowHeader');\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport BaseRenderer from \"./_base.mjs\";\nimport { warn } from \"./../../../../helpers/console.mjs\";\nimport { toSingleLine } from \"./../../../../helpers/templateLiteralTag.mjs\";\nimport { OrderView } from \"./../utils/orderView/index.mjs\";\nimport { setAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { A11Y_ROW, A11Y_ROWGROUP, A11Y_ROWINDEX } from \"../../../../helpers/a11y.mjs\";\nlet performanceWarningAppeared = false;\n\n/**\r\n * Rows renderer responsible for managing (inserting, tracking, rendering) TR elements belongs to TBODY.\r\n *\r\n *   <tbody> (root node)\r\n *     ├ <tr>   \\\r\n *     ├ <tr>    \\\r\n *     ├ <tr>     - RowsRenderer\r\n *     ├ <tr>    /\r\n *     └ <tr>   /.\r\n *\r\n * @class {RowsRenderer}\r\n */\nexport default class RowsRenderer extends BaseRenderer {\n  constructor(rootNode) {\n    super('TR', rootNode);\n    /**\r\n     * Cache for OrderView classes connected to specified node.\r\n     *\r\n     * @type {WeakMap}\r\n     */\n    _defineProperty(this, \"orderView\", void 0);\n    this.orderView = new OrderView(rootNode, sourceRowIndex => this.nodesPool.obtain(sourceRowIndex), this.nodeType);\n  }\n\n  /**\r\n   * Returns currently rendered node.\r\n   *\r\n   * @param {string} visualIndex Visual index of the rendered node (it always goeas from 0 to N).\r\n   * @returns {HTMLTableRowElement}\r\n   */\n  getRenderedNode(visualIndex) {\n    return this.orderView.getNode(visualIndex);\n  }\n\n  /**\r\n   * Renders the cells.\r\n   */\n  render() {\n    const {\n      rowsToRender\n    } = this.table;\n    if (!performanceWarningAppeared && rowsToRender > 1000) {\n      performanceWarningAppeared = true;\n      warn(toSingleLine`Performance tip: Handsontable rendered more than 1000 visible rows.\\x20\n        Consider limiting the number of rendered rows by specifying the table height and/or\\x20\n        turning off the \"renderAllRows\" option.`);\n    }\n    if (this.table.isAriaEnabled()) {\n      setAttribute(this.rootNode, [A11Y_ROWGROUP()]);\n    }\n    this.orderView.setSize(rowsToRender).setOffset(this.table.renderedRowToSource(0)).start();\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      this.orderView.render();\n      const TR = this.orderView.getCurrentNode();\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      if (this.table.isAriaEnabled()) {\n        var _this$table$rowUtils$, _this$table$rowUtils;\n        setAttribute(TR, [A11Y_ROW(),\n        // `aria-rowindex` is incremented by both tbody and thead rows.\n        A11Y_ROWINDEX(sourceRowIndex + ((_this$table$rowUtils$ = (_this$table$rowUtils = this.table.rowUtils) === null || _this$table$rowUtils === void 0 || (_this$table$rowUtils = _this$table$rowUtils.dataAccessObject) === null || _this$table$rowUtils === void 0 ? void 0 : _this$table$rowUtils.columnHeaders.length) !== null && _this$table$rowUtils$ !== void 0 ? _this$table$rowUtils$ : 0) + 1)]);\n      }\n    }\n    this.orderView.end();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { hasClass, removeAttribute, setAttribute } from \"./../../../../helpers/dom/element.mjs\";\nimport { SharedOrderView } from \"./../utils/orderView/index.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { A11Y_COLINDEX, A11Y_GRIDCELL, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\r\n * Cell renderer responsible for managing (inserting, tracking, rendering) TD elements.\r\n *\r\n *   <tr> (root node)\r\n *     ├ <th>   --- RowHeadersRenderer\r\n *     ├ <td>   \\\r\n *     ├ <td>    \\\r\n *     ├ <td>     - CellsRenderer\r\n *     ├ <td>    /\r\n *     └ <td>   /.\r\n *\r\n * @class {CellsRenderer}\r\n */\nexport default class CellsRenderer extends BaseRenderer {\n  constructor() {\n    super('TD');\n    /**\r\n     * Cache for OrderView classes connected to specified node.\r\n     *\r\n     * @type {WeakMap}\r\n     */\n    _defineProperty(this, \"orderViews\", new WeakMap());\n    /**\r\n     * Row index which specifies the row position of the processed cell.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"sourceRowIndex\", 0);\n  }\n\n  /**\r\n   * Obtains the instance of the SharedOrderView class which is responsible for rendering the nodes to the root node.\r\n   *\r\n   * @param {HTMLTableRowElement} rootNode The TR element, which is root element for cells (TD).\r\n   * @returns {SharedOrderView}\r\n   */\n  obtainOrderView(rootNode) {\n    let orderView;\n    if (this.orderViews.has(rootNode)) {\n      orderView = this.orderViews.get(rootNode);\n    } else {\n      orderView = new SharedOrderView(rootNode, sourceColumnIndex => this.nodesPool.obtain(this.sourceRowIndex, sourceColumnIndex), this.nodeType);\n      this.orderViews.set(rootNode, orderView);\n    }\n    return orderView;\n  }\n\n  /**\r\n   * Renders the cells.\r\n   */\n  render() {\n    const {\n      rowsToRender,\n      columnsToRender,\n      rows,\n      rowHeaders\n    } = this.table;\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      const TR = rows.getRenderedNode(visibleRowIndex);\n      this.sourceRowIndex = sourceRowIndex;\n      const orderView = this.obtainOrderView(TR);\n      const rowHeadersView = rowHeaders.obtainOrderView(TR);\n\n      // @TODO(perf-tip): For cells other than \"visual 0\" generating diff leads/commands can be skipped. New order view\n      // should share state between next orderViews.\n      orderView.prependView(rowHeadersView).setSize(columnsToRender).setOffset(this.table.renderedColumnToSource(0)).start();\n      for (let visibleColumnIndex = 0; visibleColumnIndex < columnsToRender; visibleColumnIndex++) {\n        orderView.render();\n        const TD = orderView.getCurrentNode();\n        const sourceColumnIndex = this.table.renderedColumnToSource(visibleColumnIndex);\n        if (!hasClass(TD, 'hide')) {\n          // Workaround for hidden columns plugin\n          TD.className = '';\n        }\n        TD.removeAttribute('style');\n        TD.removeAttribute('dir');\n\n        // Remove all accessibility-related attributes for the cell to start fresh.\n        removeAttribute(TD, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        this.table.cellRenderer(sourceRowIndex, sourceColumnIndex, TD);\n        if (this.table.isAriaEnabled()) {\n          var _this$table$rowUtils$, _this$table$rowUtils;\n          setAttribute(TD, [...(TD.hasAttribute('role') ? [] : [A11Y_GRIDCELL()]), A11Y_TABINDEX(-1),\n          // `aria-colindex` is incremented by both tbody and thead rows.\n          A11Y_COLINDEX(sourceColumnIndex + ((_this$table$rowUtils$ = (_this$table$rowUtils = this.table.rowUtils) === null || _this$table$rowUtils === void 0 || (_this$table$rowUtils = _this$table$rowUtils.dataAccessObject) === null || _this$table$rowUtils === void 0 ? void 0 : _this$table$rowUtils.rowHeaders.length) !== null && _this$table$rowUtils$ !== void 0 ? _this$table$rowUtils$ : 0) + 1)]);\n        }\n      }\n      orderView.end();\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * TableRenderer class collects all renderers and properties necessary for table creation. It's\r\n * responsible for adjusting and rendering each renderer.\r\n *\r\n * Below is a diagram of the renderers together with an indication of what they are responisble for.\r\n *   <table>\r\n *     <colgroup>  \\ (root node)\r\n *       <col>      \\\r\n *       <col>       \\___ ColGroupRenderer\r\n *       <col>       /\r\n *       <col>      /\r\n *     </colgroup> /\r\n *     <thead>     \\ (root node)\r\n *       <tr>       \\\r\n *         <th>      \\\r\n *         <th>       \\____ ColumnHeadersRenderer\r\n *         <th>       /\r\n *         <th>      /\r\n *       </tr>      /\r\n *     </thead>    /\r\n *     <tbody>   ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\\ (root node)\r\n *       <tr>   (root node)          \\\r\n *         <th>  --- RowHeadersRenderer\r\n *         <td>  \\                     \\\r\n *         <td>   -- CellsRenderer      \\\r\n *         <td>  /                       \\\r\n *       </tr>                            \\\r\n *       <tr>   (root node)                \\\r\n *         <th>  --- RowHeadersRenderer     \\\r\n *         <td>  \\                           \\___ RowsRenderer\r\n *         <td>   -- CellsRenderer           /\r\n *         <td>  /                          /\r\n *       </tr>                             /\r\n *       <tr>   (root node)               /\r\n *         <th>  --- RowHeadersRenderer  /\r\n *         <td>  \\                      /\r\n *         <td>   -- CellsRenderer     /\r\n *         <td>  /                    /\r\n *       </tr>                       /\r\n *     </tbody>  ___________________/\r\n *   </table>.\r\n *\r\n * @class {RowsRenderer}\r\n */\nexport default class TableRenderer {\n  constructor(rootNode) {\n    let {\n      cellRenderer\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    /**\r\n     * Table element which will be used to render the children element.\r\n     *\r\n     * @type {HTMLTableElement}\r\n     */\n    _defineProperty(this, \"rootNode\", void 0);\n    /**\r\n     * Document owner of the root node.\r\n     *\r\n     * @type {HTMLDocument}\r\n     */\n    _defineProperty(this, \"rootDocument\", void 0);\n    /**\r\n     * Renderer class responsible for rendering row headers.\r\n     *\r\n     * @type {RowsRenderer}\r\n     */\n    _defineProperty(this, \"rowHeaders\", null);\n    /**\r\n     * Renderer class responsible for rendering column headers.\r\n     *\r\n     * @type {ColumnHeadersRenderer}\r\n     */\n    _defineProperty(this, \"columnHeaders\", null);\n    /**\r\n     * Renderer class responsible for rendering col in colgroup.\r\n     *\r\n     * @type {ColGroupRenderer}\r\n     */\n    _defineProperty(this, \"colGroup\", null);\n    /**\r\n     * Renderer class responsible for rendering rows in tbody.\r\n     *\r\n     * @type {RowsRenderer}\r\n     */\n    _defineProperty(this, \"rows\", null);\n    /**\r\n     * Renderer class responsible for rendering cells.\r\n     *\r\n     * @type {CellsRenderer}\r\n     */\n    _defineProperty(this, \"cells\", null);\n    /**\r\n     * Row filter which contains all necessary information about row index transformation.\r\n     *\r\n     * @type {RowFilter}\r\n     */\n    _defineProperty(this, \"rowFilter\", null);\n    /**\r\n     * Column filter which contains all necessary information about column index transformation.\r\n     *\r\n     * @type {ColumnFilter}\r\n     */\n    _defineProperty(this, \"columnFilter\", null);\n    /**\r\n     * Row utils class which contains all necessary information about sizes of the rows.\r\n     *\r\n     * @type {RowUtils}\r\n     */\n    _defineProperty(this, \"rowUtils\", null);\n    /**\r\n     * Column utils class which contains all necessary information about sizes of the columns.\r\n     *\r\n     * @type {ColumnUtils}\r\n     */\n    _defineProperty(this, \"columnUtils\", null);\n    /**\r\n     * Indicates how much rows should be rendered to fill whole table viewport.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"rowsToRender\", 0);\n    /**\r\n     * Indicates how much columns should be rendered to fill whole table viewport.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"columnsToRender\", 0);\n    /**\r\n     * An array of functions to be used as a content factory to row headers.\r\n     *\r\n     * @type {Function[]}\r\n     */\n    _defineProperty(this, \"rowHeaderFunctions\", []);\n    /**\r\n     * Count of the function used to render row headers.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"rowHeadersCount\", 0);\n    /**\r\n     * An array of functions to be used as a content factory to column headers.\r\n     *\r\n     * @type {Function[]}\r\n     */\n    _defineProperty(this, \"columnHeaderFunctions\", []);\n    /**\r\n     * Count of the function used to render column headers.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"columnHeadersCount\", 0);\n    /**\r\n     * Cell renderer used to render cells content.\r\n     *\r\n     * @type {Function}\r\n     */\n    _defineProperty(this, \"cellRenderer\", void 0);\n    /**\r\n     * Holds the name of the currently active overlay.\r\n     *\r\n     * @type {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'|'master'}\r\n     */\n    _defineProperty(this, \"activeOverlayName\", void 0);\n    this.rootNode = rootNode;\n    this.rootDocument = this.rootNode.ownerDocument;\n    this.cellRenderer = cellRenderer;\n  }\n\n  /**\r\n   * Sets the overlay that is currently rendered. If `null` is provided, the master overlay is set.\r\n   *\r\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'|'master'} overlayName The overlay name.\r\n   */\n  setActiveOverlayName(overlayName) {\n    this.activeOverlayName = overlayName;\n  }\n\n  /**\r\n   * Set row and column util classes.\r\n   *\r\n   * @param {RowUtils} rowUtils RowUtils instance which provides useful methods related to row sizes.\r\n   * @param {ColumnUtils} columnUtils ColumnUtils instance which provides useful methods related to row sizes.\r\n   */\n  setAxisUtils(rowUtils, columnUtils) {\n    this.rowUtils = rowUtils;\n    this.columnUtils = columnUtils;\n  }\n\n  /**\r\n   * Sets viewport size of the table.\r\n   *\r\n   * @param {number} rowsCount An amount of rows to render.\r\n   * @param {number} columnsCount An amount of columns to render.\r\n   */\n  setViewportSize(rowsCount, columnsCount) {\n    this.rowsToRender = rowsCount;\n    this.columnsToRender = columnsCount;\n  }\n\n  /**\r\n   * Sets row and column filter instances.\r\n   *\r\n   * @param {RowFilter} rowFilter Row filter instance which contains all necessary information about row index transformation.\r\n   * @param {ColumnFilter} columnFilter Column filter instance which contains all necessary information about row\r\n   * index transformation.\r\n   */\n  setFilters(rowFilter, columnFilter) {\n    this.rowFilter = rowFilter;\n    this.columnFilter = columnFilter;\n  }\n\n  /**\r\n   * Sets row and column header functions.\r\n   *\r\n   * @param {Function[]} rowHeaders Row header functions. Factories for creating content for row headers.\r\n   * @param {Function[]} columnHeaders Column header functions. Factories for creating content for column headers.\r\n   */\n  setHeaderContentRenderers(rowHeaders, columnHeaders) {\n    this.rowHeaderFunctions = rowHeaders;\n    this.rowHeadersCount = rowHeaders.length;\n    this.columnHeaderFunctions = columnHeaders;\n    this.columnHeadersCount = columnHeaders.length;\n  }\n\n  /**\r\n   * Sets table renderers.\r\n   *\r\n   * @param {renderers} renderers The renderer units.\r\n   * @param {RowHeadersRenderer} renderers.rowHeaders Row headers renderer.\r\n   * @param {ColumnHeadersRenderer} renderers.columnHeaders Column headers renderer.\r\n   * @param {ColGroupRenderer} renderers.colGroup Col group renderer.\r\n   * @param {RowsRenderer} renderers.rows Rows renderer.\r\n   * @param {CellsRenderer} renderers.cells Cells renderer.\r\n   */\n  setRenderers() {\n    let {\n      rowHeaders,\n      columnHeaders,\n      colGroup,\n      rows,\n      cells\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    rowHeaders.setTable(this);\n    columnHeaders.setTable(this);\n    colGroup.setTable(this);\n    rows.setTable(this);\n    cells.setTable(this);\n    this.rowHeaders = rowHeaders;\n    this.columnHeaders = columnHeaders;\n    this.colGroup = colGroup;\n    this.rows = rows;\n    this.cells = cells;\n  }\n\n  /**\r\n   * Transforms visual/rendered row index to source index.\r\n   *\r\n   * @param {number} rowIndex Rendered index.\r\n   * @returns {number}\r\n   */\n  renderedRowToSource(rowIndex) {\n    return this.rowFilter.renderedToSource(rowIndex);\n  }\n\n  /**\r\n   * Transforms visual/rendered column index to source index.\r\n   *\r\n   * @param {number} columnIndex Rendered index.\r\n   * @returns {number}\r\n   */\n  renderedColumnToSource(columnIndex) {\n    return this.columnFilter.renderedToSource(columnIndex);\n  }\n\n  /**\r\n   * Returns `true` if the accessibility-related ARIA tags should be added to the table, `false` otherwise.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isAriaEnabled() {\n    return this.rowUtils.wtSettings.getSetting('ariaTags');\n  }\n\n  /**\r\n   * Renders the table.\r\n   */\n  render() {\n    this.colGroup.adjust();\n    this.columnHeaders.adjust();\n    this.rows.adjust();\n    this.rowHeaders.adjust();\n    this.columnHeaders.render();\n    this.rows.render();\n    this.rowHeaders.render();\n    this.cells.render();\n\n    // After the cells are rendered calculate columns width (or columns stretch width) to prepare proper values\n    // for colGroup renderer (which renders COL elements).\n    this.columnUtils.calculateWidths();\n    this.colGroup.render();\n    const {\n      rowsToRender,\n      rows\n    } = this;\n\n    // Fix for multi-line content and for supporting `rowHeights` option.\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      const TR = rows.getRenderedNode(visibleRowIndex);\n      if (TR.firstChild) {\n        const sourceRowIndex = this.renderedRowToSource(visibleRowIndex);\n        const rowHeight = this.rowUtils.getHeightByOverlayName(sourceRowIndex, this.activeOverlayName);\n        if (rowHeight) {\n          // Decrease height. 1 pixel will be \"replaced\" by 1px border top\n          TR.firstChild.style.height = `${rowHeight - 1}px`;\n        } else {\n          TR.firstChild.style.height = '';\n        }\n      }\n    }\n  }\n}", "import RowHeadersRenderer from \"./rowHeaders.mjs\";\nimport ColumnHeadersRenderer from \"./columnHeaders.mjs\";\nimport ColGroupRenderer from \"./colGroup.mjs\";\nimport RowsRenderer from \"./rows.mjs\";\nimport CellsRenderer from \"./cells.mjs\";\nimport TableRenderer from \"./table.mjs\";\n/**\r\n * Content renderer.\r\n *\r\n * @class Renderer\r\n */\nclass Renderer {\n  constructor() {\n    let {\n      TABLE,\n      THEAD,\n      COLGROUP,\n      TBODY,\n      rowUtils,\n      columnUtils,\n      cellRenderer\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    /**\r\n     * General renderer class used to render Walkontable content on screen.\r\n     *\r\n     * @type {TableRenderer}\r\n     */\n    this.renderer = new TableRenderer(TABLE, {\n      cellRenderer\n    });\n    this.renderer.setRenderers({\n      rowHeaders: new RowHeadersRenderer(),\n      columnHeaders: new ColumnHeadersRenderer(THEAD),\n      colGroup: new ColGroupRenderer(COLGROUP),\n      rows: new RowsRenderer(TBODY),\n      cells: new CellsRenderer()\n    });\n    this.renderer.setAxisUtils(rowUtils, columnUtils);\n  }\n\n  /**\r\n   * Sets the overlay that is currently rendered. If `null` is provided, the master overlay is set.\r\n   *\r\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'|'master'} overlayName The overlay name.\r\n   * @returns {Renderer}\r\n   */\n  setActiveOverlayName(overlayName) {\n    this.renderer.setActiveOverlayName(overlayName);\n    return this;\n  }\n\n  /**\r\n   * Sets filter calculators for newly calculated row and column position. The filters are used to transform visual\r\n   * indexes (0 to N) to source indexes provided by Handsontable.\r\n   *\r\n   * @param {RowFilter} rowFilter The row filter instance.\r\n   * @param {ColumnFilter} columnFilter The column filter instance.\r\n   * @returns {Renderer}\r\n   */\n  setFilters(rowFilter, columnFilter) {\n    this.renderer.setFilters(rowFilter, columnFilter);\n    return this;\n  }\n\n  /**\r\n   * Sets the viewport size of the rendered table.\r\n   *\r\n   * @param {number} rowsCount An amount of rows to render.\r\n   * @param {number} columnsCount An amount of columns to render.\r\n   * @returns {Renderer}\r\n   */\n  setViewportSize(rowsCount, columnsCount) {\n    this.renderer.setViewportSize(rowsCount, columnsCount);\n    return this;\n  }\n\n  /**\r\n   * Sets row and column header functions.\r\n   *\r\n   * @param {Function[]} rowHeaders Row header functions. Factories for creating content for row headers.\r\n   * @param {Function[]} columnHeaders Column header functions. Factories for creating content for column headers.\r\n   * @returns {Renderer}\r\n   */\n  setHeaderContentRenderers(rowHeaders, columnHeaders) {\n    this.renderer.setHeaderContentRenderers(rowHeaders, columnHeaders);\n    return this;\n  }\n\n  /**\r\n   * Adjusts the table (preparing for render).\r\n   */\n  adjust() {\n    this.renderer.adjust();\n  }\n\n  /**\r\n   * Renders the table.\r\n   */\n  render() {\n    this.renderer.render();\n  }\n}\nexport { RowHeadersRenderer, ColumnHeadersRenderer, ColGroupRenderer, RowsRenderer, CellsRenderer, TableRenderer, Renderer };", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { DEFAULT_COLUMN_WIDTH } from \"../calculator/index.mjs\";\n/**\r\n * @typedef {object} ColumnStretchingOptions\r\n * @property {number} totalColumns Total number of columns.\r\n * @property {Function} columnWidthFn Function that returns the width of the column at a given index (in px).\r\n * @property {'all' | 'last' | 'none'} stretchMode Stretch mode 'all', 'last' or 'none'.\r\n * @property {Function} stretchingColumnWidthFn Function that returns the new width of the stretched column.\r\n */\n/**\r\n * @class ColumnStretching\r\n */\nvar _totalTargetWidth = /*#__PURE__*/new WeakMap();\nvar _totalColumns = /*#__PURE__*/new WeakMap();\nvar _stretchingColumnWidthFn = /*#__PURE__*/new WeakMap();\nvar _columnWidthFn = /*#__PURE__*/new WeakMap();\nvar _stretchMode = /*#__PURE__*/new WeakMap();\nexport class ColumnStretching {\n  /**\r\n   * @param {ColumnStretchingOptions} options Object with all options specified for column viewport calculation.\r\n   */\n  constructor(_ref) {\n    let {\n      totalColumns,\n      stretchMode,\n      stretchingColumnWidthFn,\n      columnWidthFn\n    } = _ref;\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"stretchAllRatio\", 0);\n    /**\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"stretchLastWidth\", 0);\n    /**\r\n     * @type {number[]}\r\n     */\n    _defineProperty(this, \"stretchAllColumnsWidth\", []);\n    /**\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _totalTargetWidth, 0);\n    /**\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"needVerifyLastColumnWidth\", true);\n    /**\r\n     * The total number of columns.\r\n     *\r\n     * @type {function(): number}\r\n     */\n    _classPrivateFieldInitSpec(this, _totalColumns, () => 0);\n    /**\r\n     * Function that returns the width of the stretched column at a given index (in px).\r\n     *\r\n     * @type {function(): number}\r\n     */\n    _classPrivateFieldInitSpec(this, _stretchingColumnWidthFn, width => width);\n    /**\r\n     * Function that returns the width of the column at a given index (in px).\r\n     *\r\n     * @type {function(): number}\r\n     */\n    _classPrivateFieldInitSpec(this, _columnWidthFn, width => width);\n    /**\r\n     * Stretch mode.\r\n     *\r\n     * @type {function(): 'all' | 'last' | 'none'}\r\n     */\n    _classPrivateFieldInitSpec(this, _stretchMode, () => 'none');\n    _classPrivateFieldSet(_totalColumns, this, totalColumns);\n    _classPrivateFieldSet(_stretchMode, this, stretchMode);\n    _classPrivateFieldSet(_stretchingColumnWidthFn, this, stretchingColumnWidthFn !== null && stretchingColumnWidthFn !== void 0 ? stretchingColumnWidthFn : _classPrivateFieldGet(_stretchingColumnWidthFn, this));\n    _classPrivateFieldSet(_columnWidthFn, this, columnWidthFn !== null && columnWidthFn !== void 0 ? columnWidthFn : _classPrivateFieldGet(_columnWidthFn, this));\n  }\n\n  /**\r\n   * Recalculate columns stretching.\r\n   *\r\n   * @param {number} totalWidth The total width of the table.\r\n   */\n  refreshStretching(totalWidth) {\n    if (_classPrivateFieldGet(_stretchMode, this).call(this) === 'none') {\n      return;\n    }\n    this.stretchAllRatio = 0;\n    this.stretchAllColumnsWidth = [];\n    this.needVerifyLastColumnWidth = true;\n    this.stretchLastWidth = 0;\n    _classPrivateFieldSet(_totalTargetWidth, this, totalWidth);\n    let sumAll = 0;\n    for (let i = 0; i < _classPrivateFieldGet(_totalColumns, this).call(this); i++) {\n      const columnWidth = this._getColumnWidth(i);\n      const permanentColumnWidth = _classPrivateFieldGet(_stretchingColumnWidthFn, this).call(this, undefined, i);\n      if (typeof permanentColumnWidth === 'number') {\n        totalWidth -= permanentColumnWidth;\n      } else {\n        sumAll += columnWidth;\n      }\n    }\n    const remainingSize = totalWidth - sumAll;\n    if (_classPrivateFieldGet(_stretchMode, this).call(this) === 'all' && remainingSize > 0) {\n      this.stretchAllRatio = totalWidth / sumAll;\n      this.stretchAllColumnsWidth = [];\n      this.needVerifyLastColumnWidth = true;\n    } else if (_classPrivateFieldGet(_stretchMode, this).call(this) === 'last' && totalWidth !== Infinity) {\n      const columnWidth = this._getColumnWidth(_classPrivateFieldGet(_totalColumns, this).call(this) - 1);\n      const lastColumnWidth = remainingSize + columnWidth;\n      this.stretchLastWidth = lastColumnWidth >= 0 ? lastColumnWidth : columnWidth;\n    }\n  }\n\n  /**\r\n   * Get stretched column width based on stretchH (all or last) setting passed in handsontable instance.\r\n   *\r\n   * @param {number} column The visual column index.\r\n   * @param {number} baseWidth The default column width.\r\n   * @returns {number|null}\r\n   */\n  getStretchedColumnWidth(column, baseWidth) {\n    let result = null;\n    if (_classPrivateFieldGet(_stretchMode, this).call(this) === 'all' && this.stretchAllRatio !== 0) {\n      result = this._getStretchedAllColumnWidth(column, baseWidth);\n    } else if (_classPrivateFieldGet(_stretchMode, this).call(this) === 'last' && this.stretchLastWidth !== 0) {\n      result = this._getStretchedLastColumnWidth(column);\n    }\n    return result;\n  }\n\n  /**\r\n   * @param {number} column The visual column index.\r\n   * @param {number} baseWidth The default column width.\r\n   * @returns {number}\r\n   * @private\r\n   */\n  _getStretchedAllColumnWidth(column, baseWidth) {\n    let sumRatioWidth = 0;\n    if (!this.stretchAllColumnsWidth[column]) {\n      const stretchedWidth = Math.round(baseWidth * this.stretchAllRatio);\n      const newStretchedWidth = _classPrivateFieldGet(_stretchingColumnWidthFn, this).call(this, stretchedWidth, column);\n      if (newStretchedWidth === undefined) {\n        this.stretchAllColumnsWidth[column] = stretchedWidth;\n      } else {\n        this.stretchAllColumnsWidth[column] = isNaN(newStretchedWidth) ? this._getColumnWidth(column) : newStretchedWidth;\n      }\n    }\n    if (this.stretchAllColumnsWidth.length === _classPrivateFieldGet(_totalColumns, this).call(this) && this.needVerifyLastColumnWidth) {\n      this.needVerifyLastColumnWidth = false;\n      for (let i = 0; i < this.stretchAllColumnsWidth.length; i++) {\n        sumRatioWidth += this.stretchAllColumnsWidth[i];\n      }\n      if (sumRatioWidth !== _classPrivateFieldGet(_totalTargetWidth, this)) {\n        this.stretchAllColumnsWidth[this.stretchAllColumnsWidth.length - 1] += _classPrivateFieldGet(_totalTargetWidth, this) - sumRatioWidth;\n      }\n    }\n    return this.stretchAllColumnsWidth[column];\n  }\n\n  /**\r\n   * @param {number} column The visual column index.\r\n   * @returns {number|null}\r\n   * @private\r\n   */\n  _getStretchedLastColumnWidth(column) {\n    if (column === _classPrivateFieldGet(_totalColumns, this).call(this) - 1) {\n      return this.stretchLastWidth;\n    }\n    return null;\n  }\n\n  /**\r\n   * @param {number} column The visual column index.\r\n   * @returns {number}\r\n   * @private\r\n   */\n  _getColumnWidth(column) {\n    let width = _classPrivateFieldGet(_columnWidthFn, this).call(this, column);\n    if (isNaN(width)) {\n      width = DEFAULT_COLUMN_WIDTH;\n    }\n    return width;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { getScrollbarWidth } from \"./../../../../helpers/dom/element.mjs\";\nimport { ColumnStretching } from \"./columnStretching.mjs\";\n/**\r\n * Column utils class contains all necessary information about sizes of the columns.\r\n *\r\n * @class {ColumnUtils}\r\n */\nexport default class ColumnUtils {\n  /**\r\n   * @param {TableDao} dataAccessObject The table Data Access Object.\r\n   * @param {Settings} wtSettings The walkontable settings.\r\n   */\n  constructor(dataAccessObject, wtSettings) {\n    /**\r\n     * @type {TableDao}\r\n     */\n    _defineProperty(this, \"dataAccessObject\", void 0);\n    /**\r\n     * @type {Settings}\r\n     */\n    _defineProperty(this, \"wtSettings\", void 0);\n    /**\r\n     * @type {Map<number, number>}\r\n     */\n    _defineProperty(this, \"headerWidths\", new Map());\n    /**\r\n     * @type {ColumnStretching}\r\n     */\n    _defineProperty(this, \"stretching\", void 0);\n    this.dataAccessObject = dataAccessObject;\n    this.wtSettings = wtSettings;\n    this.stretching = new ColumnStretching({\n      totalColumns: () => this.wtSettings.getSetting('totalColumns'),\n      stretchMode: () => this.wtSettings.getSetting('stretchH'),\n      stretchingColumnWidthFn: (stretchedWidth, column) => this.wtSettings.getSetting('onBeforeStretchingColumnWidth', stretchedWidth, column),\n      columnWidthFn: sourceCol => this.dataAccessObject.wtTable.getColumnWidth(sourceCol)\n    });\n  }\n\n  /**\r\n   * Returns column width based on passed source index.\r\n   *\r\n   * @param {number} sourceIndex Column source index.\r\n   * @returns {number}\r\n   */\n  getWidth(sourceIndex) {\n    const width = this.wtSettings.getSetting('columnWidth', sourceIndex) || this.wtSettings.getSetting('defaultColumnWidth');\n    return width;\n  }\n\n  /**\r\n   * Returns stretched column width based on passed source index.\r\n   *\r\n   * @param {number} sourceIndex Column source index.\r\n   * @returns {number}\r\n   */\n  getStretchedColumnWidth(sourceIndex) {\n    let width = this.getWidth(sourceIndex);\n    const stretchedWidth = this.stretching.getStretchedColumnWidth(sourceIndex, width);\n    if (stretchedWidth) {\n      width = stretchedWidth;\n    }\n    return width;\n  }\n\n  /**\r\n   * Returns column header height based on passed header level.\r\n   *\r\n   * @param {number} level Column header level.\r\n   * @returns {number}\r\n   */\n  getHeaderHeight(level) {\n    let height = this.wtSettings.getSetting('defaultRowHeight');\n    const oversizedHeight = this.dataAccessObject.wtViewport.oversizedColumnHeaders[level];\n    if (oversizedHeight !== undefined) {\n      height = height ? Math.max(height, oversizedHeight) : oversizedHeight;\n    }\n    return height;\n  }\n\n  /**\r\n   * Returns column header width based on passed source index.\r\n   *\r\n   * @param {number} sourceIndex Column source index.\r\n   * @returns {number}\r\n   */\n  getHeaderWidth(sourceIndex) {\n    return this.headerWidths.get(this.dataAccessObject.wtTable.columnFilter.sourceToRendered(sourceIndex));\n  }\n\n  /**\r\n   * Refreshes the stretching column width by recalculating the widths of the columns.\r\n   */\n  refreshStretching() {\n    const {\n      wtTable,\n      wtViewport,\n      cloneSource\n    } = this.dataAccessObject;\n    const mainHolder = cloneSource ? cloneSource.wtTable.holder : wtTable.holder;\n    const scrollbarCompensation = mainHolder.offsetHeight < mainHolder.scrollHeight ? getScrollbarWidth() : 0;\n    this.stretching.refreshStretching(wtViewport.getViewportWidth() - scrollbarCompensation);\n  }\n\n  /**\r\n   * Calculates column header widths that can be retrieved from the cache.\r\n   */\n  calculateWidths() {\n    const {\n      wtSettings\n    } = this;\n    let rowHeaderWidthSetting = wtSettings.getSetting('rowHeaderWidth');\n    this.refreshStretching();\n    rowHeaderWidthSetting = wtSettings.getSetting('onModifyRowHeaderWidth', rowHeaderWidthSetting);\n    if (rowHeaderWidthSetting !== null && rowHeaderWidthSetting !== undefined) {\n      const rowHeadersCount = wtSettings.getSetting('rowHeaders').length;\n      const defaultColumnWidth = wtSettings.getSetting('defaultColumnWidth');\n      for (let visibleColumnIndex = 0; visibleColumnIndex < rowHeadersCount; visibleColumnIndex++) {\n        let width = Array.isArray(rowHeaderWidthSetting) ? rowHeaderWidthSetting[visibleColumnIndex] : rowHeaderWidthSetting;\n        width = width === null || width === undefined ? defaultColumnWidth : width;\n        this.headerWidths.set(visibleColumnIndex, width);\n      }\n    }\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * Row utils class contains all necessary information about sizes of the rows.\r\n *\r\n * @class {RowUtils}\r\n */\nexport default class RowUtils {\n  /**\r\n   * @param {TableDao} dataAccessObject The table Data Access Object.\r\n   * @param {Settings} wtSettings The walkontable settings.\r\n   */\n  constructor(dataAccessObject, wtSettings) {\n    /**\r\n     * @type {TableDao}\r\n     */\n    _defineProperty(this, \"dataAccessObject\", void 0);\n    /**\r\n     * @type {Settings}\r\n     */\n    _defineProperty(this, \"wtSettings\", void 0);\n    this.dataAccessObject = dataAccessObject;\n    this.wtSettings = wtSettings;\n  }\n\n  /**\r\n   * Returns row height based on passed source index.\r\n   *\r\n   * @param {number} sourceIndex Row source index.\r\n   * @returns {number}\r\n   */\n  getHeight(sourceIndex) {\n    let height = this.wtSettings.getSetting('rowHeight', sourceIndex);\n    const oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n    if (oversizedHeight !== undefined) {\n      height = height === undefined ? oversizedHeight : Math.max(height, oversizedHeight);\n    }\n    return height;\n  }\n\n  /**\r\n   * Returns row height based on passed source index for the specified overlay type.\r\n   *\r\n   * @param {number} sourceIndex Row source index.\r\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'|'master'} overlayName The overlay name.\r\n   * @returns {number}\r\n   */\n  getHeightByOverlayName(sourceIndex, overlayName) {\n    let height = this.wtSettings.getSetting('rowHeightByOverlayName', sourceIndex, overlayName);\n    const oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n    if (oversizedHeight !== undefined) {\n      height = height === undefined ? oversizedHeight : Math.max(height, oversizedHeight);\n    }\n    return height;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { hasClass, index, offset, removeTextNodes, overlayContainsElement, closest, outerHeight, outerWidth, innerHeight, isVisible, setAttribute } from \"../../../helpers/dom/element.mjs\";\nimport { isFunction } from \"../../../helpers/function.mjs\";\nimport ColumnFilter from \"./filter/column.mjs\";\nimport RowFilter from \"./filter/row.mjs\";\nimport { Renderer } from \"./renderer/index.mjs\";\nimport ColumnUtils from \"./utils/column.mjs\";\nimport RowUtils from \"./utils/row.mjs\";\nimport { CLONE_TOP, CLONE_BOTTOM, CLONE_INLINE_START, CLONE_TOP_INLINE_START_CORNER, CLONE_BOTTOM_INLINE_START_CORNER } from \"./overlay/index.mjs\";\nimport { A11Y_PRESENTATION } from \"../../../helpers/a11y.mjs\";\n/**\r\n * @todo These mixes are never added to the class Table, however their members are used here.\r\n * @todo Continue: Potentially it works only, because some of these mixes are added to every inherited class.\r\n * @todo Refactoring, move code from `if(this.isMaster)` into MasterTable, and others like that.\r\n * @mixes stickyColumnsStart\r\n * @mixes stickyRowsBottom\r\n * @mixes stickyRowsTop\r\n * @mixes calculatedRows\r\n * @mixes calculatedColumns\r\n * @abstract\r\n */\nclass Table {\n  /**\r\n   *\r\n   * @abstract\r\n   * @param {TableDao} dataAccessObject The data access object.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {'master'|CLONE_TYPES_ENUM} name Overlay name.\r\n   */\n  constructor(dataAccessObject, facadeGetter, domBindings, wtSettings, name) {\n    /**\r\n     * The walkontable settings.\r\n     *\r\n     * @protected\r\n     * @type {Settings}\r\n     */\n    _defineProperty(this, \"wtSettings\", null);\n    _defineProperty(this, \"domBindings\", void 0);\n    _defineProperty(this, \"TBODY\", null);\n    _defineProperty(this, \"THEAD\", null);\n    _defineProperty(this, \"COLGROUP\", null);\n    /**\r\n     * Indicates if the table has height bigger than 0px.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"hasTableHeight\", true);\n    /**\r\n     * Indicates if the table has width bigger than 0px.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"hasTableWidth\", true);\n    /**\r\n     * Indicates if the table is visible. By visible, it means that the holder\r\n     * element has CSS 'display' property different than 'none'.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isTableVisible\", false);\n    _defineProperty(this, \"tableOffset\", 0);\n    _defineProperty(this, \"holderOffset\", 0);\n    this.domBindings = domBindings;\n    /**\r\n     * Indicates if this instance is of type `MasterTable` (i.e. It is NOT an overlay).\r\n     *\r\n     * @type {boolean}\r\n     */\n    this.isMaster = name === 'master';\n    this.name = name;\n    this.dataAccessObject = dataAccessObject;\n    this.facadeGetter = facadeGetter;\n    this.wtSettings = wtSettings;\n\n    // legacy support\n    this.instance = this.dataAccessObject.wot; // TODO refactoring: it might be removed here, and provides legacy support through facade.\n    this.wot = this.dataAccessObject.wot;\n    this.TABLE = domBindings.rootTable;\n    removeTextNodes(this.TABLE);\n\n    // TODO refactoring, to recognize the legitimacy of moving them into domBidings\n    this.spreader = this.createSpreader(this.TABLE);\n    this.hider = this.createHider(this.spreader);\n    this.holder = this.createHolder(this.hider);\n    this.wtRootElement = this.holder.parentNode;\n    if (this.isMaster) {\n      this.alignOverlaysWithTrimmingContainer(); // todo wow, It calls method from child class (MasterTable).\n    }\n    this.fixTableDomTree();\n    this.rowFilter = null; // TODO refactoring, eliminate all (re)creations of this object, then updates state when needed.\n    this.columnFilter = null; // TODO refactoring, eliminate all (re)creations of this object, then updates state when needed.\n    this.correctHeaderWidth = false;\n    const origRowHeaderWidth = this.wtSettings.getSettingPure('rowHeaderWidth');\n\n    // Fix for jumping row headers (https://github.com/handsontable/handsontable/issues/3850)\n    this.wtSettings.update('rowHeaderWidth', () => this._modifyRowHeaderWidth(origRowHeaderWidth));\n    this.rowUtils = new RowUtils(this.dataAccessObject, this.wtSettings); // TODO refactoring, It can be passed through IOC.\n    this.columnUtils = new ColumnUtils(this.dataAccessObject, this.wtSettings); // TODO refactoring, It can be passed through IOC.\n\n    this.tableRenderer = new Renderer({\n      // TODO refactoring, It can be passed through IOC.\n      TABLE: this.TABLE,\n      THEAD: this.THEAD,\n      COLGROUP: this.COLGROUP,\n      TBODY: this.TBODY,\n      rowUtils: this.rowUtils,\n      columnUtils: this.columnUtils,\n      cellRenderer: this.wtSettings.getSettingPure('cellRenderer')\n    });\n  }\n\n  /**\r\n   * Returns a boolean that is true if this Table represents a specific overlay, identified by the overlay name.\r\n   * For MasterTable, it returns false.\r\n   *\r\n   * @param {string} overlayTypeName The overlay type.\r\n   * @returns {boolean}\r\n   */\n  is(overlayTypeName) {\n    // todo refactoring: eliminate all protected and private usages\n    return this.name === overlayTypeName;\n  }\n\n  /**\r\n   *\r\n   */\n  fixTableDomTree() {\n    const rootDocument = this.domBindings.rootDocument;\n    this.TBODY = this.TABLE.querySelector('tbody');\n    if (!this.TBODY) {\n      this.TBODY = rootDocument.createElement('tbody');\n      this.TABLE.appendChild(this.TBODY);\n    }\n    this.THEAD = this.TABLE.querySelector('thead');\n    if (!this.THEAD) {\n      this.THEAD = rootDocument.createElement('thead');\n      this.TABLE.insertBefore(this.THEAD, this.TBODY);\n    }\n    this.COLGROUP = this.TABLE.querySelector('colgroup');\n    if (!this.COLGROUP) {\n      this.COLGROUP = rootDocument.createElement('colgroup');\n      this.TABLE.insertBefore(this.COLGROUP, this.THEAD);\n    }\n  }\n\n  /**\r\n   * @param {HTMLTableElement} table An element to process.\r\n   * @returns {HTMLElement}\r\n   */\n  createSpreader(table) {\n    const parent = table.parentNode;\n    let spreader;\n    if (!parent || parent.nodeType !== Node.ELEMENT_NODE || !hasClass(parent, 'wtHolder')) {\n      spreader = this.domBindings.rootDocument.createElement('div');\n      spreader.className = 'wtSpreader';\n      if (parent) {\n        // if TABLE is detached (e.g. in Jasmine test), it has no parentNode so we cannot attach holder to it\n        parent.insertBefore(spreader, table);\n      }\n      spreader.appendChild(table);\n    }\n    spreader.style.position = 'relative';\n    if (this.wtSettings.getSetting('ariaTags')) {\n      setAttribute(spreader, [A11Y_PRESENTATION()]);\n    }\n    return spreader;\n  }\n\n  /**\r\n   * @param {HTMLElement} spreader An element to the hider element is injected.\r\n   * @returns {HTMLElement}\r\n   */\n  createHider(spreader) {\n    const parent = spreader.parentNode;\n    let hider;\n    if (!parent || parent.nodeType !== Node.ELEMENT_NODE || !hasClass(parent, 'wtHolder')) {\n      hider = this.domBindings.rootDocument.createElement('div');\n      hider.className = 'wtHider';\n      if (parent) {\n        // if TABLE is detached (e.g. in Jasmine test), it has no parentNode so we cannot attach holder to it\n        parent.insertBefore(hider, spreader);\n      }\n      hider.appendChild(spreader);\n    }\n    if (this.wtSettings.getSetting('ariaTags')) {\n      setAttribute(hider, [A11Y_PRESENTATION()]);\n    }\n    return hider;\n  }\n\n  /**\r\n   *\r\n   * @param {HTMLElement} hider An element to the holder element is injected.\r\n   * @returns {HTMLElement}\r\n   */\n  createHolder(hider) {\n    const parent = hider.parentNode;\n    let holder;\n    if (!parent || parent.nodeType !== Node.ELEMENT_NODE || !hasClass(parent, 'wtHolder')) {\n      holder = this.domBindings.rootDocument.createElement('div');\n      holder.style.position = 'relative';\n      holder.className = 'wtHolder';\n      if (parent) {\n        // if TABLE is detached (e.g. in Jasmine test), it has no parentNode so we cannot attach holder to it\n        parent.insertBefore(holder, hider);\n      }\n      if (this.isMaster) {\n        holder.parentNode.className += 'ht_master handsontable';\n        holder.parentNode.setAttribute('dir', this.wtSettings.getSettingPure('rtlMode') ? 'rtl' : 'ltr');\n        if (this.wtSettings.getSetting('ariaTags')) {\n          setAttribute(holder.parentNode, [A11Y_PRESENTATION()]);\n        }\n      }\n      holder.appendChild(hider);\n    }\n    if (this.wtSettings.getSetting('ariaTags')) {\n      setAttribute(holder, [A11Y_PRESENTATION()]);\n    }\n    return holder;\n  }\n\n  /**\r\n   * Redraws the table.\r\n   *\r\n   * @param {boolean} [fastDraw=false] If TRUE, will try to avoid full redraw and only update the border positions.\r\n   *                                   If FALSE or UNDEFINED, will perform a full redraw.\r\n   * @returns {Table}\r\n   */\n  draw() {\n    let fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const {\n      wtSettings\n    } = this;\n    const {\n      wtOverlays,\n      wtViewport\n    } = this.dataAccessObject;\n    const totalRows = wtSettings.getSetting('totalRows');\n    const totalColumns = wtSettings.getSetting('totalColumns');\n    const rowHeaders = wtSettings.getSetting('rowHeaders');\n    const rowHeadersCount = rowHeaders.length;\n    const columnHeaders = wtSettings.getSetting('columnHeaders');\n    const columnHeadersCount = columnHeaders.length;\n    let runFastDraw = fastDraw;\n    if (this.isMaster) {\n      wtOverlays.beforeDraw();\n      this.holderOffset = offset(this.holder);\n      runFastDraw = wtViewport.createCalculators(runFastDraw);\n      if (rowHeadersCount && !wtSettings.getSetting('fixedColumnsStart')) {\n        const leftScrollPos = wtOverlays.inlineStartOverlay.getScrollPosition();\n        const previousState = this.correctHeaderWidth;\n        this.correctHeaderWidth = leftScrollPos !== 0;\n        if (previousState !== this.correctHeaderWidth) {\n          runFastDraw = false;\n        }\n      }\n    }\n    if (runFastDraw) {\n      if (this.isMaster) {\n        wtOverlays.refresh(true);\n      }\n    } else {\n      if (this.isMaster) {\n        this.tableOffset = offset(this.TABLE);\n      } else {\n        this.tableOffset = this.dataAccessObject.parentTableOffset;\n      }\n      const startRow = totalRows > 0 ? this.getFirstRenderedRow() : 0;\n      const startColumn = totalColumns > 0 ? this.getFirstRenderedColumn() : 0;\n      this.rowFilter = new RowFilter(startRow, totalRows, columnHeadersCount);\n      this.columnFilter = new ColumnFilter(startColumn, totalColumns, rowHeadersCount);\n      let performRedraw = true;\n\n      // Only master table rendering can be skipped\n      if (this.isMaster) {\n        this.alignOverlaysWithTrimmingContainer(); // todo It calls method from child class (MasterTable).\n        const skipRender = {};\n        this.wtSettings.getSetting('beforeDraw', true, skipRender);\n        performRedraw = skipRender.skipRender !== true;\n      }\n      if (performRedraw) {\n        this.tableRenderer.setHeaderContentRenderers(rowHeaders, columnHeaders);\n        if (this.is(CLONE_BOTTOM) || this.is(CLONE_BOTTOM_INLINE_START_CORNER)) {\n          // do NOT render headers on the bottom or bottom-left corner overlay\n          this.tableRenderer.setHeaderContentRenderers(rowHeaders, []);\n        }\n        this.resetOversizedRows();\n        this.tableRenderer.setActiveOverlayName(this.name).setViewportSize(this.getRenderedRowsCount(), this.getRenderedColumnsCount()).setFilters(this.rowFilter, this.columnFilter).render();\n        let workspaceWidth;\n        if (this.isMaster) {\n          workspaceWidth = this.dataAccessObject.workspaceWidth;\n          wtViewport.containerWidth = null;\n          this.markOversizedColumnHeaders();\n        }\n        this.adjustColumnHeaderHeights();\n        if (this.isMaster || this.is(CLONE_BOTTOM)) {\n          this.markOversizedRows();\n        }\n        if (this.isMaster) {\n          if (!this.wtSettings.getSetting('externalRowCalculator')) {\n            wtViewport.createVisibleCalculators();\n          }\n          wtOverlays.refresh(false);\n          wtOverlays.applyToDOM();\n          const hiderWidth = outerWidth(this.hider);\n          const tableWidth = outerWidth(this.TABLE);\n          if (hiderWidth !== 0 && tableWidth !== hiderWidth) {\n            // Recalculate the column widths, if width changes made in the overlays removed the scrollbar, thus changing the viewport width.\n            this.columnUtils.calculateWidths();\n            this.tableRenderer.renderer.colGroup.render();\n          }\n          if (workspaceWidth !== wtViewport.getWorkspaceWidth()) {\n            // workspace width changed though to shown/hidden vertical scrollbar. Let's reapply stretching\n            wtViewport.containerWidth = null;\n            this.columnUtils.calculateWidths();\n            this.tableRenderer.renderer.colGroup.render();\n          }\n          this.wtSettings.getSetting('onDraw', true);\n        } else if (this.is(CLONE_BOTTOM)) {\n          this.dataAccessObject.cloneSource.wtOverlays.adjustElementsSize();\n        }\n      }\n    }\n    let positionChanged = false;\n    if (this.isMaster) {\n      positionChanged = wtOverlays.topOverlay.resetFixedPosition();\n      if (wtOverlays.bottomOverlay.clone) {\n        positionChanged = wtOverlays.bottomOverlay.resetFixedPosition() || positionChanged;\n      }\n      positionChanged = wtOverlays.inlineStartOverlay.resetFixedPosition() || positionChanged;\n      if (wtOverlays.topInlineStartCornerOverlay) {\n        wtOverlays.topInlineStartCornerOverlay.resetFixedPosition();\n      }\n      if (wtOverlays.bottomInlineStartCornerOverlay && wtOverlays.bottomInlineStartCornerOverlay.clone) {\n        wtOverlays.bottomInlineStartCornerOverlay.resetFixedPosition();\n      }\n    }\n    if (positionChanged) {\n      // It refreshes the cells borders caused by a 1px shift (introduced by overlays which add or\n      // remove `innerBorderTop` and `innerBorderInlineStart` CSS classes to the DOM element. This happens\n      // when there is a switch between rendering from 0 to N rows/columns and vice versa).\n      wtOverlays.refreshAll(); // `refreshAll()` internally already calls `refreshSelections()` method\n      wtOverlays.adjustElementsSize();\n    } else {\n      this.dataAccessObject.selectionManager.setActiveOverlay(this.facadeGetter()).render(runFastDraw);\n    }\n    if (this.isMaster) {\n      wtOverlays.afterDraw();\n    }\n    this.dataAccessObject.drawn = true;\n    return this;\n  }\n\n  /**\r\n   * @param {number} col The visual column index.\r\n   */\n  markIfOversizedColumnHeader(col) {\n    const sourceColIndex = this.columnFilter.renderedToSource(col);\n    let level = this.wtSettings.getSetting('columnHeaders').length;\n    const defaultRowHeight = this.wtSettings.getSetting('defaultRowHeight');\n    let previousColHeaderHeight;\n    let currentHeader;\n    let currentHeaderHeight;\n    const columnHeaderHeightSetting = this.wtSettings.getSetting('columnHeaderHeight') || [];\n    while (level) {\n      level -= 1;\n      previousColHeaderHeight = this.getColumnHeaderHeight(level);\n      currentHeader = this.getColumnHeader(sourceColIndex, level);\n      if (!currentHeader) {\n        /* eslint-disable no-continue */\n        continue;\n      }\n      currentHeaderHeight = innerHeight(currentHeader);\n      if (!previousColHeaderHeight && defaultRowHeight < currentHeaderHeight || previousColHeaderHeight < currentHeaderHeight) {\n        this.dataAccessObject.wtViewport.oversizedColumnHeaders[level] = currentHeaderHeight;\n      }\n      if (Array.isArray(columnHeaderHeightSetting)) {\n        if (columnHeaderHeightSetting[level] !== null && columnHeaderHeightSetting[level] !== undefined) {\n          this.dataAccessObject.wtViewport.oversizedColumnHeaders[level] = columnHeaderHeightSetting[level];\n        }\n      } else if (!isNaN(columnHeaderHeightSetting)) {\n        this.dataAccessObject.wtViewport.oversizedColumnHeaders[level] = columnHeaderHeightSetting;\n      }\n      if (this.dataAccessObject.wtViewport.oversizedColumnHeaders[level] < (columnHeaderHeightSetting[level] || columnHeaderHeightSetting)) {\n        this.dataAccessObject.wtViewport.oversizedColumnHeaders[level] = columnHeaderHeightSetting[level] || columnHeaderHeightSetting; // eslint-disable-line max-len\n      }\n    }\n  }\n\n  /**\r\n   *\r\n   */\n  adjustColumnHeaderHeights() {\n    const {\n      wtSettings\n    } = this;\n    const children = this.THEAD.childNodes;\n    const oversizedColumnHeaders = this.dataAccessObject.wtViewport.oversizedColumnHeaders;\n    const columnHeaders = wtSettings.getSetting('columnHeaders');\n    for (let i = 0, len = columnHeaders.length; i < len; i++) {\n      if (oversizedColumnHeaders[i]) {\n        if (!children[i] || children[i].childNodes.length === 0) {\n          return;\n        }\n        children[i].childNodes[0].style.height = `${oversizedColumnHeaders[i]}px`;\n      }\n    }\n  }\n\n  /**\r\n   * Resets cache of row heights. The cache should be cached for each render cycle in a case\r\n   * when new cell values have content which increases/decreases cell height.\r\n   */\n  resetOversizedRows() {\n    const {\n      wtSettings\n    } = this;\n    const {\n      wtViewport\n    } = this.dataAccessObject;\n    if (!this.isMaster && !this.is(CLONE_BOTTOM)) {\n      return;\n    }\n    if (!wtSettings.getSetting('externalRowCalculator')) {\n      const rowsToRender = this.getRenderedRowsCount();\n\n      // Reset the oversized row cache for rendered rows\n      for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n        const sourceRow = this.rowFilter.renderedToSource(visibleRowIndex);\n        if (wtViewport.oversizedRows && wtViewport.oversizedRows[sourceRow]) {\n          wtViewport.oversizedRows[sourceRow] = undefined;\n        }\n      }\n    }\n  }\n\n  /**\r\n   * Get cell element at coords.\r\n   * Negative coords.row or coords.col are used to retrieve header cells. If there are multiple header levels, the\r\n   * negative value corresponds to the distance from the working area. For example, when there are 3 levels of column\r\n   * headers, coords.col=-1 corresponds to the most inner header element, while coords.col=-3 corresponds to the\r\n   * outmost header element.\r\n   *\r\n   * In case an element for the coords is not rendered, the method returns an error code.\r\n   * To produce the error code, the input parameters are validated in the order in which they\r\n   * are given. Thus, if both the row and the column coords are out of the rendered bounds,\r\n   * the method returns the error code for the row.\r\n   *\r\n   * @param {CellCoords} coords The cell coordinates.\r\n   * @returns {HTMLElement|number} HTMLElement on success or Number one of the exit codes on error:\r\n   *  -1 row before viewport\r\n   *  -2 row after viewport\r\n   *  -3 column before viewport\r\n   *  -4 column after viewport.\r\n   */\n  getCell(coords) {\n    let row = coords.row;\n    let column = coords.col;\n    const hookResult = this.wtSettings.getSetting('onModifyGetCellCoords', row, column);\n    if (hookResult && Array.isArray(hookResult)) {\n      [row, column] = hookResult;\n    }\n    if (this.isRowBeforeRenderedRows(row)) {\n      // row before rendered rows\n      return -1;\n    } else if (this.isRowAfterRenderedRows(row)) {\n      // row after rendered rows\n      return -2;\n    } else if (this.isColumnBeforeRenderedColumns(column)) {\n      // column before rendered columns\n      return -3;\n    } else if (this.isColumnAfterRenderedColumns(column)) {\n      // column after rendered columns\n      return -4;\n    }\n    const TR = this.getRow(row);\n    if (!TR && row >= 0) {\n      throw new Error('TR was expected to be rendered but is not');\n    }\n    const TD = TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(column)];\n    if (!TD && column >= 0) {\n      throw new Error('TD or TH was expected to be rendered but is not');\n    }\n    return TD;\n  }\n\n  /**\r\n   * Get the DOM element of the row with the provided index.\r\n   *\r\n   * @param {number} rowIndex Row index.\r\n   * @returns {HTMLTableRowElement|boolean} Return the row's DOM element or `false` if the row with the provided\r\n   * index doesn't exist.\r\n   */\n  getRow(rowIndex) {\n    let renderedRowIndex = null;\n    let parentElement = null;\n    if (rowIndex < 0) {\n      var _this$rowFilter;\n      renderedRowIndex = (_this$rowFilter = this.rowFilter) === null || _this$rowFilter === void 0 ? void 0 : _this$rowFilter.sourceRowToVisibleColHeadedRow(rowIndex);\n      parentElement = this.THEAD;\n    } else {\n      var _this$rowFilter2;\n      renderedRowIndex = (_this$rowFilter2 = this.rowFilter) === null || _this$rowFilter2 === void 0 ? void 0 : _this$rowFilter2.sourceToRendered(rowIndex);\n      parentElement = this.TBODY;\n    }\n    if (renderedRowIndex !== undefined && parentElement !== undefined) {\n      if (parentElement.childNodes.length < renderedRowIndex + 1) {\n        return false;\n      } else {\n        return parentElement.childNodes[renderedRowIndex];\n      }\n    } else {\n      return false;\n    }\n  }\n\n  /**\r\n   * GetColumnHeader.\r\n   *\r\n   * @param {number} col Column index.\r\n   * @param {number} [level=0] Header level (0 = most distant to the table).\r\n   * @returns {object} HTMLElement on success or undefined on error.\r\n   */\n  getColumnHeader(col) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const TR = this.THEAD.childNodes[level];\n    return TR === null || TR === void 0 ? void 0 : TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(col)];\n  }\n\n  /**\r\n   * Gets all columns headers (TH elements) from the table.\r\n   *\r\n   * @param {number} column A source column index.\r\n   * @returns {HTMLTableCellElement[]}\r\n   */\n  getColumnHeaders(column) {\n    const THs = [];\n    const visibleColumn = this.columnFilter.sourceColumnToVisibleRowHeadedColumn(column);\n    this.THEAD.childNodes.forEach(TR => {\n      const TH = TR.childNodes[visibleColumn];\n      if (TH) {\n        THs.push(TH);\n      }\n    });\n    return THs;\n  }\n\n  /**\r\n   * GetRowHeader.\r\n   *\r\n   * @param {number} row Row index.\r\n   * @param {number} [level=0] Header level (0 = most distant to the table).\r\n   * @returns {HTMLElement} HTMLElement on success or Number one of the exit codes on error: `null table doesn't have\r\n   *   row headers`.\r\n   */\n  getRowHeader(row) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const rowHeadersCount = this.wtSettings.getSetting('rowHeaders').length;\n    if (level >= rowHeadersCount) {\n      return;\n    }\n    const renderedRow = this.rowFilter.sourceToRendered(row);\n    const visibleRow = renderedRow < 0 ? this.rowFilter.sourceRowToVisibleColHeadedRow(row) : renderedRow;\n    const parentElement = renderedRow < 0 ? this.THEAD : this.TBODY;\n    const TR = parentElement.childNodes[visibleRow];\n    return TR === null || TR === void 0 ? void 0 : TR.childNodes[level];\n  }\n\n  /**\r\n   * Gets all rows headers (TH elements) from the table.\r\n   *\r\n   * @param {number} row A source row index.\r\n   * @returns {HTMLTableCellElement[]}\r\n   */\n  getRowHeaders(row) {\n    const THs = [];\n    const rowHeadersCount = this.wtSettings.getSetting('rowHeaders').length;\n    for (let renderedRowIndex = 0; renderedRowIndex < rowHeadersCount; renderedRowIndex++) {\n      const TR = this.TBODY.childNodes[this.rowFilter.sourceToRendered(row)];\n      const TH = TR === null || TR === void 0 ? void 0 : TR.childNodes[renderedRowIndex];\n      if (TH) {\n        THs.push(TH);\n      }\n    }\n    return THs;\n  }\n\n  /**\r\n   * Returns cell coords object for a given TD (or a child element of a TD element).\r\n   *\r\n   * @param {HTMLTableCellElement} TD A cell DOM element (or a child of one).\r\n   * @returns {CellCoords|null} The coordinates of the provided TD element (or the closest TD element) or null, if the\r\n   *   provided element is not applicable.\r\n   */\n  getCoords(TD) {\n    let cellElement = TD;\n    if (cellElement.nodeName !== 'TD' && cellElement.nodeName !== 'TH') {\n      cellElement = closest(cellElement, ['TD', 'TH']);\n    }\n    if (cellElement === null) {\n      return null;\n    }\n    const TR = cellElement.parentNode;\n    const CONTAINER = TR.parentNode;\n    let row = index(TR);\n    let col = cellElement.cellIndex;\n    if (overlayContainsElement(CLONE_TOP_INLINE_START_CORNER, cellElement, this.wtRootElement) || overlayContainsElement(CLONE_TOP, cellElement, this.wtRootElement)) {\n      if (CONTAINER.nodeName === 'THEAD') {\n        row -= CONTAINER.childNodes.length;\n      }\n    } else if (overlayContainsElement(CLONE_BOTTOM_INLINE_START_CORNER, cellElement, this.wtRootElement) || overlayContainsElement(CLONE_BOTTOM, cellElement, this.wtRootElement)) {\n      const totalRows = this.wtSettings.getSetting('totalRows');\n      row = totalRows - CONTAINER.childNodes.length + row;\n    } else if (CONTAINER === this.THEAD) {\n      row = this.rowFilter.visibleColHeadedRowToSourceRow(row);\n    } else {\n      row = this.rowFilter.renderedToSource(row);\n    }\n    if (overlayContainsElement(CLONE_TOP_INLINE_START_CORNER, cellElement, this.wtRootElement) || overlayContainsElement(CLONE_INLINE_START, cellElement, this.wtRootElement) || overlayContainsElement(CLONE_BOTTOM_INLINE_START_CORNER, cellElement, this.wtRootElement)) {\n      col = this.columnFilter.offsettedTH(col);\n    } else {\n      col = this.columnFilter.visibleRowHeadedColumnToSourceColumn(col);\n    }\n    return this.wot.createCellCoords(row, col);\n  }\n\n  /**\r\n   * Check if any of the rendered rows is higher than expected, and if so, cache them.\r\n   */\n  markOversizedRows() {\n    if (this.wtSettings.getSetting('externalRowCalculator')) {\n      return;\n    }\n    let rowCount = this.TBODY.childNodes.length;\n    const expectedTableHeight = rowCount * this.wtSettings.getSetting('defaultRowHeight');\n    const actualTableHeight = innerHeight(this.TBODY) - 1;\n    let previousRowHeight;\n    let rowInnerHeight;\n    let sourceRowIndex;\n    let currentTr;\n    let rowHeader;\n    if (expectedTableHeight === actualTableHeight && !this.wtSettings.getSetting('fixedRowsBottom')) {\n      // If the actual table height equals rowCount * default single row height, no row is oversized -> no need to iterate over them\n      return;\n    }\n    while (rowCount) {\n      rowCount -= 1;\n      sourceRowIndex = this.rowFilter.renderedToSource(rowCount);\n      previousRowHeight = this.getRowHeight(sourceRowIndex);\n      currentTr = this.getTrForRow(sourceRowIndex);\n      rowHeader = currentTr.querySelector('th');\n      if (rowHeader) {\n        rowInnerHeight = innerHeight(rowHeader);\n      } else {\n        rowInnerHeight = innerHeight(currentTr) - 1;\n      }\n      if (!previousRowHeight && this.wtSettings.getSetting('defaultRowHeight') < rowInnerHeight || previousRowHeight < rowInnerHeight) {\n        rowInnerHeight += 1;\n        this.dataAccessObject.wtViewport.oversizedRows[sourceRowIndex] = rowInnerHeight;\n      }\n    }\n  }\n\n  /**\r\n   * @param {number} row The visual row index.\r\n   * @returns {HTMLTableElement}\r\n   */\n  getTrForRow(row) {\n    return this.TBODY.childNodes[this.rowFilter.sourceToRendered(row)];\n  }\n\n  /**\r\n   * Checks if the column index (negative value from -1 to N) is rendered.\r\n   *\r\n   * @param {number} column The column index (negative value from -1 to N).\r\n   * @returns {boolean}\r\n   */\n  isColumnHeaderRendered(column) {\n    if (column >= 0) {\n      return false;\n    }\n    const rowHeaders = this.wtSettings.getSetting('rowHeaders');\n    const rowHeadersCount = rowHeaders.length;\n    return Math.abs(column) <= rowHeadersCount;\n  }\n\n  /**\r\n   * Checks if the row index (negative value from -1 to N) is rendered.\r\n   *\r\n   * @param {number} row The row index (negative value from -1 to N).\r\n   * @returns {boolean}\r\n   */\n  isRowHeaderRendered(row) {\n    if (row >= 0) {\n      return false;\n    }\n    const columnHeaders = this.wtSettings.getSetting('columnHeaders');\n    const columnHeadersCount = columnHeaders.length;\n    return Math.abs(row) <= columnHeadersCount;\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\r\n   * Check if the given row index is lower than the index of the first row that\r\n   * is currently rendered and return TRUE in that case, or FALSE otherwise.\r\n   *\r\n   * Negative row index is used to check the columns' headers.\r\n   *\r\n   *  Headers\r\n   *           +--------------+                                     │\r\n   *       -3  │    │    │    │                                     │\r\n   *           +--------------+                                     │\r\n   *       -2  │    │    │    │                                     │ TRUE\r\n   *           +--------------+                                     │\r\n   *       -1  │    │    │    │                                     │\r\n   *  Cells  +==================+                                   │\r\n   *        0  ┇    ┇    ┇    ┇ <--- For fixedRowsTop: 1            │\r\n   *           +--------------+      the master overlay do       ---+ first rendered row (index 1)\r\n   *        1  │ A2 │ B2 │ C2 │      not render the first row.      │\r\n   *           +--------------+                                     │ FALSE\r\n   *        2  │ A3 │ B3 │ C3 │                                     │\r\n   *           +--------------+                                  ---+ last rendered row\r\n   *                                                                │\r\n   *                                                                │ FALSE\r\n   *\r\n   * @param {number} row The visual row index.\r\n   * @memberof Table#\r\n   * @function isRowBeforeRenderedRows\r\n   * @returns {boolean}\r\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  isRowBeforeRenderedRows(row) {\n    const first = this.getFirstRenderedRow();\n\n    // Check the headers only in case when the first rendered row is -1 or 0.\n    // This is an indication that the overlay is placed on the most top position.\n    if (row < 0 && first <= 0) {\n      return !this.isRowHeaderRendered(row);\n    }\n    return row < first;\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\r\n   * Check if the given column index is greater than the index of the last column that\r\n   * is currently rendered and return TRUE in that case, or FALSE otherwise.\r\n   *\r\n   * The negative row index is used to check the columns' headers. However,\r\n   * keep in mind that for negative indexes, the method always returns FALSE as\r\n   * it is not possible to render headers partially. The \"after\" index can not be\r\n   * lower than -1.\r\n   *\r\n   *  Headers\r\n   *           +--------------+                                     │\r\n   *       -3  │    │    │    │                                     │\r\n   *           +--------------+                                     │\r\n   *       -2  │    │    │    │                                     │ FALSE\r\n   *           +--------------+                                     │\r\n   *       -1  │    │    │    │                                     │\r\n   *  Cells  +==================+                                   │\r\n   *        0  ┇    ┇    ┇    ┇ <--- For fixedRowsTop: 1            │\r\n   *           +--------------+      the master overlay do       ---+ first rendered row (index 1)\r\n   *        1  │ A2 │ B2 │ C2 │      not render the first rows      │\r\n   *           +--------------+                                     │ FALSE\r\n   *        2  │ A3 │ B3 │ C3 │                                     │\r\n   *           +--------------+                                  ---+ last rendered row\r\n   *                                                                │\r\n   *                                                                │ TRUE\r\n   *\r\n   * @param {number} row The visual row index.\r\n   * @memberof Table#\r\n   * @function isRowAfterRenderedRows\r\n   * @returns {boolean}\r\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  isRowAfterRenderedRows(row) {\n    return row > this.getLastRenderedRow();\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\r\n   * Check if the given column index is lower than the index of the first column that\r\n   * is currently rendered and return TRUE in that case, or FALSE otherwise.\r\n   *\r\n   * Negative column index is used to check the rows' headers.\r\n   *\r\n   *                            For fixedColumnsStart: 1 the master overlay\r\n   *                            do not render this first columns.\r\n   *  Headers    -3   -2   -1    |\r\n   *           +----+----+----║┄ ┄ +------+------+\r\n   *           │    │    │    ║    │  B1  │  C1  │\r\n   *           +--------------║┄ ┄ --------------│\r\n   *           │    │    │    ║    │  B2  │  C2  │\r\n   *           +--------------║┄ ┄ --------------│\r\n   *           │    │    │    ║    │  B3  │  C3  │\r\n   *           +----+----+----║┄ ┄ +------+------+\r\n   *                               ╷             ╷\r\n   *      -------------------------+-------------+---------------->\r\n   *          TRUE             first    FALSE   last         FALSE\r\n   *                           rendered         rendered\r\n   *                           column           column\r\n   *\r\n   * @param {number} column The visual column index.\r\n   * @memberof Table#\r\n   * @function isColumnBeforeRenderedColumns\r\n   * @returns {boolean}\r\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  isColumnBeforeRenderedColumns(column) {\n    const first = this.getFirstRenderedColumn();\n\n    // Check the headers only in case when the first rendered column is -1 or 0.\n    // This is an indication that the overlay is placed on the most left position.\n    if (column < 0 && first <= 0) {\n      return !this.isColumnHeaderRendered(column);\n    }\n    return column < first;\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\r\n   * Check if the given column index is greater than the index of the last column that\r\n   * is currently rendered and return TRUE in that case, or FALSE otherwise.\r\n   *\r\n   * The negative column index is used to check the rows' headers. However,\r\n   * keep in mind that for negative indexes, the method always returns FALSE as\r\n   * it is not possible to render headers partially. The \"after\" index can not be\r\n   * lower than -1.\r\n   *\r\n   *                            For fixedColumnsStart: 1 the master overlay\r\n   *                            do not render this first columns.\r\n   *  Headers    -3   -2   -1    |\r\n   *           +----+----+----║┄ ┄ +------+------+\r\n   *           │    │    │    ║    │  B1  │  C1  │\r\n   *           +--------------║┄ ┄ --------------│\r\n   *           │    │    │    ║    │  B2  │  C2  │\r\n   *           +--------------║┄ ┄ --------------│\r\n   *           │    │    │    ║    │  B3  │  C3  │\r\n   *           +----+----+----║┄ ┄ +------+------+\r\n   *                               ╷             ╷\r\n   *      -------------------------+-------------+---------------->\r\n   *          FALSE             first    FALSE   last         TRUE\r\n   *                           rendered         rendered\r\n   *                           column           column\r\n   *\r\n   * @param {number} column The visual column index.\r\n   * @memberof Table#\r\n   * @function isColumnAfterRenderedColumns\r\n   * @returns {boolean}\r\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  isColumnAfterRenderedColumns(column) {\n    return this.columnFilter && column > this.getLastRenderedColumn();\n  }\n  isColumnAfterViewport(column) {\n    return this.columnFilter && column > this.getLastVisibleColumn();\n  }\n  isRowAfterViewport(row) {\n    return this.rowFilter && row > this.getLastVisibleRow();\n  }\n  isColumnBeforeViewport(column) {\n    return this.columnFilter && this.columnFilter.sourceToRendered(column) < 0 && column >= 0;\n  }\n  isLastRowFullyVisible() {\n    return this.getLastVisibleRow() === this.getLastRenderedRow();\n  }\n  isLastColumnFullyVisible() {\n    return this.getLastVisibleColumn() === this.getLastRenderedColumn();\n  }\n  allRowsInViewport() {\n    return this.wtSettings.getSetting('totalRows') === this.getVisibleRowsCount();\n  }\n  allColumnsInViewport() {\n    return this.wtSettings.getSetting('totalColumns') === this.getVisibleColumnsCount();\n  }\n\n  /**\r\n   * Checks if any of the row's cells content exceeds its initial height, and if so, returns the oversized height.\r\n   *\r\n   * @param {number} sourceRow The physical row index.\r\n   * @returns {number}\r\n   */\n  getRowHeight(sourceRow) {\n    return this.rowUtils.getHeight(sourceRow);\n  }\n\n  /**\r\n   * @param {number} level The column level.\r\n   * @returns {number}\r\n   */\n  getColumnHeaderHeight(level) {\n    return this.columnUtils.getHeaderHeight(level);\n  }\n\n  /**\r\n   * @param {number} sourceColumn The physical column index.\r\n   * @returns {number}\r\n   */\n  getColumnWidth(sourceColumn) {\n    return this.columnUtils.getWidth(sourceColumn);\n  }\n\n  /**\r\n   * @param {number} sourceColumn The physical column index.\r\n   * @returns {number}\r\n   */\n  getStretchedColumnWidth(sourceColumn) {\n    return this.columnUtils.getStretchedColumnWidth(sourceColumn);\n  }\n\n  /**\r\n   * Checks if the table has defined size. It returns `true` when the table has width and height\r\n   * set bigger than `0px`.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  hasDefinedSize() {\n    return this.hasTableHeight && this.hasTableWidth;\n  }\n\n  /**\r\n   * Gets table's width. The returned width is the width of the rendered cells that fit in the\r\n   * current viewport. The value may change depends on the viewport position (scroll position).\r\n   *\r\n   * @returns {number}\r\n   */\n  getWidth() {\n    return outerWidth(this.TABLE);\n  }\n\n  /**\r\n   * Gets table's height. The returned height is the height of the rendered cells that fit in the\r\n   * current viewport. The value may change depends on the viewport position (scroll position).\r\n   *\r\n   * @returns {number}\r\n   */\n  getHeight() {\n    return outerHeight(this.TABLE);\n  }\n\n  /**\r\n   * Gets table's total width. The returned width is the width of all rendered cells (including headers)\r\n   * that can be displayed in the table.\r\n   *\r\n   * @returns {number}\r\n   */\n  getTotalWidth() {\n    const width = outerWidth(this.hider);\n\n    // when the overlay's table does not have any cells the hider returns 0, get then width from the table element\n    return width !== 0 ? width : this.getWidth();\n  }\n\n  /**\r\n   * Gets table's total height. The returned height is the height of all rendered cells (including headers)\r\n   * that can be displayed in the table.\r\n   *\r\n   * @returns {number}\r\n   */\n  getTotalHeight() {\n    const height = outerHeight(this.hider);\n\n    // when the overlay's table does not have any cells the hider returns 0, get then height from the table element\n    return height !== 0 ? height : this.getHeight();\n  }\n\n  /**\r\n   * Checks if the table is visible. It returns `true` when the holder element (or its parents)\r\n   * has CSS 'display' property different than 'none'.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isVisible() {\n    return isVisible(this.TABLE);\n  }\n\n  /**\r\n   * Modify row header widths provided by user in class contructor.\r\n   *\r\n   * @private\r\n   * @param {Function} rowHeaderWidthFactory The function which can provide default width values for rows..\r\n   * @returns {number}\r\n   */\n  _modifyRowHeaderWidth(rowHeaderWidthFactory) {\n    let widths = isFunction(rowHeaderWidthFactory) ? rowHeaderWidthFactory() : null;\n    if (Array.isArray(widths)) {\n      widths = [...widths];\n      widths[widths.length - 1] = this._correctRowHeaderWidth(widths[widths.length - 1]);\n    } else {\n      widths = this._correctRowHeaderWidth(widths);\n    }\n    return widths;\n  }\n\n  /**\r\n   * Correct row header width if necessary.\r\n   *\r\n   * @private\r\n   * @param {number} width The width to process.\r\n   * @returns {number}\r\n   */\n  _correctRowHeaderWidth(width) {\n    let rowHeaderWidth = width;\n    if (typeof width !== 'number') {\n      rowHeaderWidth = this.wtSettings.getSetting('defaultColumnWidth');\n    }\n    if (this.correctHeaderWidth) {\n      rowHeaderWidth += 1;\n    }\n    return rowHeaderWidth;\n  }\n}\nexport default Table;", "import { defineGetter } from \"../../../../../helpers/object.mjs\";\nconst MIXIN_NAME = 'stickyRowsBottom';\n\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to rows.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use sticky rendering of the bottom rows in the vertical axis.\r\n *\r\n * @type {object}\r\n */\nconst stickyRowsBottom = {\n  /**\r\n   * Get the source index of the first rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstRenderedRow() {\n    const totalRows = this.wtSettings.getSetting('totalRows');\n    const fixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n    const index = totalRows - fixedRowsBottom;\n    if (totalRows === 0 || fixedRowsBottom === 0) {\n      return -1;\n    }\n    if (index < 0) {\n      return 0;\n    }\n    return index;\n  },\n  /**\r\n   * Get the source index of the first row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstVisibleRow() {\n    return this.getFirstRenderedRow();\n  },\n  /**\r\n   * Get the source index of the first row partially visible in the viewport. If no rows are partially visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstPartiallyVisibleRow() {\n    return this.getFirstRenderedRow();\n  },\n  /**\r\n   * Get the source index of the last rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastRenderedRow() {\n    return this.wtSettings.getSetting('totalRows') - 1;\n  },\n  /**\r\n   * Get the source index of the last row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastVisibleRow() {\n    return this.getLastRenderedRow();\n  },\n  /**\r\n   * Get the source index of the last row partially visible in the viewport. If no rows are partially visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastPartiallyVisibleRow() {\n    return this.getLastRenderedRow();\n  },\n  /**\r\n   * Get the number of rendered rows.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getRenderedRowsCount() {\n    const totalRows = this.wtSettings.getSetting('totalRows');\n    return Math.min(this.wtSettings.getSetting('fixedRowsBottom'), totalRows);\n  },\n  /**\r\n   * Get the number of fully visible rows in the viewport.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getVisibleRowsCount() {\n    return this.getRenderedRowsCount();\n  },\n  /**\r\n   * Get the number of rendered column headers.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getColumnHeadersCount() {\n    return 0;\n  }\n};\ndefineGetter(stickyRowsBottom, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default stickyRowsBottom;", "import { defineGetter } from \"../../../../../helpers/object.mjs\";\nconst MIXIN_NAME = 'stickyColumnsStart';\n\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to columns.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use sticky rendering of the first columns in the horizontal axis.\r\n *\r\n * @type {object}\r\n */\nconst stickyColumnsStart = {\n  /**\r\n   * Get the source index of the first rendered column. If no columns are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstRenderedColumn() {\n    const totalColumns = this.wtSettings.getSetting('totalColumns');\n    if (totalColumns === 0) {\n      return -1;\n    }\n    return 0;\n  },\n  /**\r\n   * Get the source index of the first column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered columns are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstVisibleColumn() {\n    return this.getFirstRenderedColumn();\n  },\n  /**\r\n   * Get the source index of the first column partially visible in the viewport. If no columns are partially visible, returns an error code: -1.\r\n   * Assumes that all rendered columns are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstPartiallyVisibleColumn() {\n    return this.getFirstRenderedColumn();\n  },\n  /**\r\n   * Get the source index of the last rendered column. If no columns are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastRenderedColumn() {\n    return this.getRenderedColumnsCount() - 1;\n  },\n  /**\r\n   * Get the source index of the last column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered columns are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastVisibleColumn() {\n    return this.getLastRenderedColumn();\n  },\n  /**\r\n   * Get the source index of the last column partially visible in the viewport. If no columns are partially visible, returns an error code: -1.\r\n   * Assumes that all rendered columns are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastPartiallyVisibleColumn() {\n    return this.getLastRenderedColumn();\n  },\n  /**\r\n   * Get the number of rendered columns.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getRenderedColumnsCount() {\n    const totalColumns = this.wtSettings.getSetting('totalColumns');\n    return Math.min(this.wtSettings.getSetting('fixedColumnsStart'), totalColumns);\n  },\n  /**\r\n   * Get the number of fully visible columns in the viewport.\r\n   * Assumes that all rendered columns are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getVisibleColumnsCount() {\n    return this.getRenderedColumnsCount();\n  },\n  /**\r\n   * Get the number of rendered row headers.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getRowHeadersCount() {\n    return this.dataAccessObject.rowHeaders.length;\n  }\n};\ndefineGetter(stickyColumnsStart, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default stickyColumnsStart;", "import Table from \"../table.mjs\";\nimport stickyRowsBottom from \"./mixin/stickyRowsBottom.mjs\";\nimport stickyColumnsStart from \"./mixin/stickyColumnsStart.mjs\";\nimport { mixin } from \"../../../../helpers/object.mjs\";\nimport { CLONE_BOTTOM_INLINE_START_CORNER } from \"../overlay/index.mjs\";\n/**\r\n * Subclass of `Table` that provides the helper methods relevant to bottomInlineStartCornerOverlay\r\n * (in RTL mode the overlay sits on the right of the screen), implemented through mixins.\r\n *\r\n * @mixes stickyRowsBottom\r\n * @mixes stickyColumnsStart\r\n */\nclass BottomInlineStartCornerOverlayTable extends Table {\n  /**\r\n   * @param {TableDao} dataAccessObject The data access object.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   */\n  constructor(dataAccessObject, facadeGetter, domBindings, wtSettings) {\n    super(dataAccessObject, facadeGetter, domBindings, wtSettings, CLONE_BOTTOM_INLINE_START_CORNER);\n  }\n}\nmixin(BottomInlineStartCornerOverlayTable, stickyRowsBottom);\nmixin(BottomInlineStartCornerOverlayTable, stickyColumnsStart);\nexport default BottomInlineStartCornerOverlayTable;", "/**\r\n * @typedef {'top'|'bottom'|'inline_start'|'top_inline_start_corner'|'bottom_inline_start_corner'} CLONE_TYPES_ENUM\r\n */\nexport const CLONE_TOP = 'top';\nexport const CLONE_BOTTOM = 'bottom';\nexport const CLONE_INLINE_START = 'inline_start';\nexport const CLONE_TOP_INLINE_START_CORNER = 'top_inline_start_corner';\nexport const CLONE_BOTTOM_INLINE_START_CORNER = 'bottom_inline_start_corner';\nexport const CLONE_TYPES = [CLONE_TOP, CLONE_BOTTOM, CLONE_INLINE_START, CLONE_TOP_INLINE_START_CORNER, CLONE_BOTTOM_INLINE_START_CORNER];\nexport const CLONE_CLASS_NAMES = new Map([[CLONE_TOP, `ht_clone_${CLONE_TOP}`], [CLONE_BOTTOM, `ht_clone_${CLONE_BOTTOM}`], [CLONE_INLINE_START, `ht_clone_${CLONE_INLINE_START} ht_clone_left`], [CLONE_TOP_INLINE_START_CORNER, `ht_clone_${CLONE_TOP_INLINE_START_CORNER} ht_clone_top_left_corner`], [CLONE_BOTTOM_INLINE_START_CORNER, `ht_clone_${CLONE_BOTTOM_INLINE_START_CORNER} ht_clone_bottom_left_corner`]]);", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { innerHeight, innerWidth, getScrollLeft, getScrollTop, offset } from \"../../../helpers/dom/element.mjs\";\n/**\r\n * @class Scroll\r\n */\nvar _Scroll_brand = /*#__PURE__*/new WeakSet();\nclass Scroll {\n  /**\r\n   * @param {ScrollDao} dataAccessObject Tha data access object.\r\n   */\n  constructor(dataAccessObject) {\n    /**\r\n     * Get last visible column based on virtual dom and how table is visible in browser window viewport.\r\n     *\r\n     * @param {number} lastColumnIndex The last visible column index.\r\n     * @returns {number}\r\n     */\n    _classPrivateMethodInitSpec(this, _Scroll_brand);\n    /**\r\n     * The data access object.\r\n     *\r\n     * @protected\r\n     * @type {ScrollDao}\r\n     */\n    _defineProperty(this, \"dataAccessObject\", void 0);\n    this.dataAccessObject = dataAccessObject;\n  }\n\n  /**\r\n   * Scrolls viewport to a cell.\r\n   *\r\n   * @param {CellCoords} coords The cell coordinates.\r\n   * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\r\n   * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right of the table.\r\n   * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom of the table.\r\n   * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n    const scrolledHorizontally = this.scrollViewportHorizontally(coords.col, snapToRight, snapToLeft);\n    const scrolledVertically = this.scrollViewportVertically(coords.row, snapToTop, snapToBottom);\n    return scrolledHorizontally || scrolledVertically;\n  }\n\n  /**\r\n   * Scrolls viewport to a column.\r\n   *\r\n   * @param {number} column Visual column index.\r\n   * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right of the table.\r\n   * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n    const {\n      drawn,\n      totalColumns\n    } = this.dataAccessObject;\n\n    // do not scroll the viewport when the column points to a range outside of the dataset\n    if (!drawn || !Number.isInteger(column) || column < 0 || column > totalColumns) {\n      return false;\n    }\n    const autoSnapping = snapToRight === undefined && snapToLeft === undefined;\n    const {\n      fixedColumnsStart,\n      inlineStartOverlay\n    } = this.dataAccessObject;\n\n    // for auto-snapping (both snap* arguments are undefined) do not scroll the viewport\n    // when the columns points to the overlays\n    if (autoSnapping && column < fixedColumnsStart) {\n      return false;\n    }\n    column = this.dataAccessObject.wtSettings.getSetting('onBeforeViewportScrollHorizontally', column);\n    if (!Number.isInteger(column) || column < 0 || column > totalColumns) {\n      return false;\n    }\n    const firstColumn = this.getFirstVisibleColumn();\n    const lastColumn = this.getLastVisibleColumn();\n    let result = false;\n    if (autoSnapping && (column < firstColumn || column > lastColumn) || !autoSnapping) {\n      // if there is at least one fully visible column determine the snapping direction based on\n      // that columns or by snapToRight/snapToLeft flags, if provided.\n      result = inlineStartOverlay.scrollTo(column, autoSnapping ? column >= this.getLastPartiallyVisibleColumn() : snapToRight);\n    }\n    return result;\n  }\n\n  /**\r\n   * Scrolls viewport to a row.\r\n   *\r\n   * @param {number} row Visual row index.\r\n   * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\r\n   * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewportVertically(row, snapToTop, snapToBottom) {\n    const {\n      drawn,\n      totalRows\n    } = this.dataAccessObject;\n\n    // do not scroll the viewport when the row points to a range outside of the dataset\n    if (!drawn || !Number.isInteger(row) || row < 0 || row > totalRows) {\n      return false;\n    }\n    const autoSnapping = snapToTop === undefined && snapToBottom === undefined;\n    const {\n      fixedRowsBottom,\n      fixedRowsTop,\n      topOverlay\n    } = this.dataAccessObject;\n\n    // for auto-snapping (both snap* arguments are undefined) do not scroll the viewport\n    // when the rows points to the overlays\n    if (autoSnapping && (row < fixedRowsTop || row > totalRows - fixedRowsBottom - 1)) {\n      return false;\n    }\n    row = this.dataAccessObject.wtSettings.getSetting('onBeforeViewportScrollVertically', row);\n    if (!Number.isInteger(row) || row < 0 || row > totalRows) {\n      return false;\n    }\n    const firstRow = this.getFirstVisibleRow();\n    const lastRow = this.getLastVisibleRow();\n    let result = false;\n    if (autoSnapping && (row < firstRow || row > lastRow) || !autoSnapping) {\n      // if there is at least one fully visible row determine the snapping direction based on\n      // that rows or by snapToTop/snapToBottom flags, if provided.\n      result = topOverlay.scrollTo(row, autoSnapping ? row >= this.getLastPartiallyVisibleRow() : snapToBottom);\n    }\n    return result;\n  }\n\n  /**\r\n   * Get first visible row based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstVisibleRow() {\n    return this.dataAccessObject.wtTable.getFirstVisibleRow();\n  }\n\n  /**\r\n   * Get last visible row based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastVisibleRow() {\n    return _assertClassBrand(_Scroll_brand, this, _getLastRowIndex).call(this, this.dataAccessObject.wtTable.getLastVisibleRow());\n  }\n\n  /**\r\n   * Get first partially visible row based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstPartiallyVisibleRow() {\n    return this.dataAccessObject.wtTable.getFirstPartiallyVisibleRow();\n  }\n\n  /**\r\n   * Get last visible row based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastPartiallyVisibleRow() {\n    return _assertClassBrand(_Scroll_brand, this, _getLastRowIndex).call(this, this.dataAccessObject.wtTable.getLastPartiallyVisibleRow());\n  }\n\n  /**\r\n   * Get first visible column based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstVisibleColumn() {\n    return this.dataAccessObject.wtTable.getFirstVisibleColumn();\n  }\n\n  /**\r\n   * Get last visible column based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastVisibleColumn() {\n    return _assertClassBrand(_Scroll_brand, this, _getLastColumnIndex).call(this, this.dataAccessObject.wtTable.getLastVisibleColumn());\n  }\n\n  /**\r\n   * Get first partially visible column based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstPartiallyVisibleColumn() {\n    return this.dataAccessObject.wtTable.getFirstPartiallyVisibleColumn();\n  }\n\n  /**\r\n   * Get last partially visible column based on virtual dom and how table is visible in browser window viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastPartiallyVisibleColumn() {\n    return _assertClassBrand(_Scroll_brand, this, _getLastColumnIndex).call(this, this.dataAccessObject.wtTable.getLastPartiallyVisibleColumn());\n  }\n}\nfunction _getLastColumnIndex(lastColumnIndex) {\n  const {\n    wtSettings,\n    inlineStartOverlay,\n    wtTable,\n    wtViewport,\n    totalColumns,\n    rootWindow\n  } = this.dataAccessObject;\n  if (inlineStartOverlay.mainTableScrollableElement === rootWindow) {\n    const isRtl = wtSettings.getSetting('rtlMode');\n    let inlineStartRootElementOffset = null;\n    if (isRtl) {\n      const tableRect = wtTable.TABLE.getBoundingClientRect();\n      const rootDocument = this.dataAccessObject.rootWindow.document;\n      const docOffsetWidth = rootDocument.documentElement.offsetWidth;\n      inlineStartRootElementOffset = Math.abs(tableRect.right - docOffsetWidth);\n    } else {\n      const rootElementOffset = offset(wtTable.wtRootElement);\n      inlineStartRootElementOffset = rootElementOffset.left;\n    }\n    const windowScrollLeft = Math.abs(getScrollLeft(rootWindow, rootWindow));\n\n    // Only calculate lastColumnIndex when table didn't filled (from right) whole viewport space\n    if (inlineStartRootElementOffset > windowScrollLeft) {\n      const windowWidth = innerWidth(rootWindow);\n      let columnsWidth = wtViewport.getRowHeaderWidth();\n      for (let column = 1; column <= totalColumns; column++) {\n        columnsWidth += inlineStartOverlay.sumCellSizes(column - 1, column);\n        if (inlineStartRootElementOffset + columnsWidth - windowScrollLeft >= windowWidth) {\n          // Return physical column - 1 (-2 because rangeEach gives column index + 1 - sumCellSizes requirements)\n          lastColumnIndex = column - 2;\n          break;\n        }\n      }\n    }\n  }\n  return lastColumnIndex;\n}\n/**\r\n * Get last visible row based on virtual dom and how table is visible in browser window viewport.\r\n *\r\n * @param {number} lastRowIndex The last visible row index.\r\n * @returns {number}\r\n */\nfunction _getLastRowIndex(lastRowIndex) {\n  const {\n    topOverlay,\n    wtTable,\n    wtViewport,\n    totalRows,\n    rootWindow\n  } = this.dataAccessObject;\n  if (topOverlay.mainTableScrollableElement === rootWindow) {\n    const rootElementOffset = offset(wtTable.wtRootElement);\n    const windowScrollTop = getScrollTop(rootWindow, rootWindow);\n\n    // Only calculate lastRowIndex when table didn't filled (from bottom) whole viewport space\n    if (rootElementOffset.top > windowScrollTop) {\n      const windowHeight = innerHeight(rootWindow);\n      let rowsHeight = wtViewport.getColumnHeaderHeight();\n      for (let row = 1; row <= totalRows; row++) {\n        rowsHeight += topOverlay.sumCellSizes(row - 1, row);\n        if (rootElementOffset.top + rowsHeight - windowScrollTop >= windowHeight) {\n          // Return physical row - 1 (-2 because rangeEach gives row index + 1 - sumCellSizes requirements)\n          lastRowIndex = row - 2;\n          break;\n        }\n      }\n    }\n  }\n  return lastRowIndex;\n}\nexport default Scroll;", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { fastInnerText } from \"../../../../helpers/dom/element.mjs\";\nimport { randomString } from \"../../../../helpers/string.mjs\";\nimport EventManager from \"../../../../eventManager.mjs\";\nimport Scroll from \"../scroll.mjs\";\nimport CellCoords from \"../cell/coords.mjs\";\nimport CellRange from \"../cell/range.mjs\";\n/**\r\n * @abstract\r\n * @class Walkontable\r\n */\nexport default class CoreAbstract {\n  get eventManager() {\n    return new EventManager(this);\n  }\n\n  /**\r\n   * @param {HTMLTableElement} table Main table.\r\n   * @param {Settings} settings The Walkontable settings.\r\n   */\n  constructor(table, settings) {\n    _defineProperty(this, \"wtTable\", void 0);\n    _defineProperty(this, \"wtScroll\", void 0);\n    _defineProperty(this, \"wtViewport\", void 0);\n    _defineProperty(this, \"wtOverlays\", void 0);\n    _defineProperty(this, \"selectionManager\", void 0);\n    _defineProperty(this, \"wtEvent\", void 0);\n    /**\r\n     * The walkontable instance id.\r\n     *\r\n     * @public\r\n     * @type {Readonly<string>}\r\n     */\n    _defineProperty(this, \"guid\", `wt_${randomString()}`);\n    _defineProperty(this, \"drawInterrupted\", false);\n    _defineProperty(this, \"drawn\", false);\n    /**\r\n     * The DOM bindings.\r\n     *\r\n     * @public\r\n     * @type {DomBindings}\r\n     */\n    _defineProperty(this, \"domBindings\", void 0);\n    /**\r\n     * Settings.\r\n     *\r\n     * @public\r\n     * @type {Settings}\r\n     */\n    _defineProperty(this, \"wtSettings\", void 0);\n    this.domBindings = {\n      rootTable: table,\n      rootDocument: table.ownerDocument,\n      rootWindow: table.ownerDocument.defaultView\n    };\n    this.wtSettings = settings;\n    this.wtScroll = new Scroll(this.createScrollDao());\n  }\n  findOriginalHeaders() {\n    const originalHeaders = [];\n\n    // find original headers\n    if (this.wtTable.THEAD.childNodes.length && this.wtTable.THEAD.childNodes[0].childNodes.length) {\n      for (let c = 0, clen = this.wtTable.THEAD.childNodes[0].childNodes.length; c < clen; c++) {\n        originalHeaders.push(this.wtTable.THEAD.childNodes[0].childNodes[c].innerHTML);\n      }\n      if (!this.wtSettings.getSetting('columnHeaders').length) {\n        this.wtSettings.update('columnHeaders', [function (column, TH) {\n          fastInnerText(TH, originalHeaders[column]);\n        }]);\n      }\n    }\n  }\n\n  /**\r\n   * Creates and returns the CellCoords object.\r\n   *\r\n   * @param {*} row The row index.\r\n   * @param {*} column The column index.\r\n   * @returns {CellCoords}\r\n   */\n  createCellCoords(row, column) {\n    return new CellCoords(row, column, this.wtSettings.getSetting('rtlMode'));\n  }\n\n  /**\r\n   * Creates and returns the CellRange object.\r\n   *\r\n   * @param {CellCoords} highlight The highlight coordinates.\r\n   * @param {CellCoords} from The from coordinates.\r\n   * @param {CellCoords} to The to coordinates.\r\n   * @returns {CellRange}\r\n   */\n  createCellRange(highlight, from, to) {\n    return new CellRange(highlight, from, to, this.wtSettings.getSetting('rtlMode'));\n  }\n\n  /**\r\n   * Force rerender of Walkontable.\r\n   *\r\n   * @param {boolean} [fastDraw=false] When `true`, try to refresh only the positions of borders without rerendering\r\n   *                                   the data. It will only work if Table.draw() does not force\r\n   *                                   rendering anyway.\r\n   * @returns {Walkontable}\r\n   */\n  draw() {\n    let fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.drawInterrupted = false;\n    if (!this.wtTable.isVisible()) {\n      // draw interrupted because TABLE is not visible\n      this.drawInterrupted = true;\n    } else {\n      this.wtTable.draw(fastDraw);\n    }\n    return this;\n  }\n\n  /**\r\n   * Returns the TD at coords. If topmost is set to true, returns TD from the topmost overlay layer,\r\n   * if not set or set to false, returns TD from the master table.\r\n   *\r\n   * @param {CellCoords} coords The cell coordinates.\r\n   * @param {boolean} [topmost=false] If set to `true`, it returns the TD element from the topmost overlay. For example,\r\n   *                                  if the wanted cell is in the range of fixed rows, it will return a TD element\r\n   *                                  from the top overlay.\r\n   * @returns {HTMLElement}\r\n   */\n  getCell(coords) {\n    let topmost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!topmost) {\n      return this.wtTable.getCell(coords);\n    }\n    const totalRows = this.wtSettings.getSetting('totalRows');\n    const fixedRowsTop = this.wtSettings.getSetting('fixedRowsTop');\n    const fixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n    const fixedColumnsStart = this.wtSettings.getSetting('fixedColumnsStart');\n    if (coords.row < fixedRowsTop && coords.col < fixedColumnsStart) {\n      return this.wtOverlays.topInlineStartCornerOverlay.clone.wtTable.getCell(coords);\n    } else if (coords.row < fixedRowsTop) {\n      return this.wtOverlays.topOverlay.clone.wtTable.getCell(coords);\n    } else if (coords.col < fixedColumnsStart && coords.row >= totalRows - fixedRowsBottom) {\n      if (this.wtOverlays.bottomInlineStartCornerOverlay && this.wtOverlays.bottomInlineStartCornerOverlay.clone) {\n        return this.wtOverlays.bottomInlineStartCornerOverlay.clone.wtTable.getCell(coords);\n      }\n    } else if (coords.col < fixedColumnsStart) {\n      return this.wtOverlays.inlineStartOverlay.clone.wtTable.getCell(coords);\n    } else if (coords.row < totalRows && coords.row >= totalRows - fixedRowsBottom) {\n      if (this.wtOverlays.bottomOverlay && this.wtOverlays.bottomOverlay.clone) {\n        return this.wtOverlays.bottomOverlay.clone.wtTable.getCell(coords);\n      }\n    }\n    return this.wtTable.getCell(coords);\n  }\n\n  /**\r\n   * Scrolls the viewport to a cell (rerenders if needed).\r\n   *\r\n   * @param {CellCoords} coords The cell coordinates to scroll to.\r\n   * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\r\n   * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right of the table.\r\n   * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom of the table.\r\n   * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n    if (coords.col < 0 || coords.row < 0) {\n      return false;\n    }\n    return this.wtScroll.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n  }\n\n  /**\r\n   * Scrolls the viewport to a column (rerenders if needed).\r\n   *\r\n   * @param {number} column Visual column index.\r\n   * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right of the table.\r\n   * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n    if (column < 0) {\n      return false;\n    }\n    return this.wtScroll.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n  }\n\n  /**\r\n   * Scrolls the viewport to a row (rerenders if needed).\r\n   *\r\n   * @param {number} row Visual row index.\r\n   * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\r\n   * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewportVertically(row, snapToTop, snapToBottom) {\n    if (row < 0) {\n      return false;\n    }\n    return this.wtScroll.scrollViewportVertically(row, snapToTop, snapToBottom);\n  }\n\n  /**\r\n   * @returns {Array}\r\n   */\n  getViewport() {\n    return [this.wtTable.getFirstVisibleRow(), this.wtTable.getFirstVisibleColumn(), this.wtTable.getLastVisibleRow(), this.wtTable.getLastVisibleColumn()];\n  }\n\n  /**\r\n   * Destroy instance.\r\n   */\n  destroy() {\n    this.wtOverlays.destroy();\n    this.wtEvent.destroy();\n  }\n\n  /**\r\n   * Create data access object for scroll.\r\n   *\r\n   * @protected\r\n   * @returns {ScrollDao}\r\n   */\n  createScrollDao() {\n    const wot = this;\n    return {\n      get drawn() {\n        return wot.drawn; // TODO refactoring: consider about injecting `isDrawn` function : ()=>return wot.drawn. (it'll enables remove dao layer)\n      },\n      get topOverlay() {\n        return wot.wtOverlays.topOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get inlineStartOverlay() {\n        return wot.wtOverlays.inlineStartOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get wtTable() {\n        return wot.wtTable; // TODO refactoring: move outside dao, use IOC\n      },\n      get wtViewport() {\n        return wot.wtViewport; // TODO refactoring: move outside dao, use IOC\n      },\n      get wtSettings() {\n        return wot.wtSettings;\n      },\n      get rootWindow() {\n        return wot.domBindings.rootWindow; // TODO refactoring: move outside dao\n      },\n      // TODO refactoring, consider about using injecting wtSettings into scroll (it'll enables remove dao layer)\n      get totalRows() {\n        return wot.wtSettings.getSetting('totalRows');\n      },\n      get totalColumns() {\n        return wot.wtSettings.getSetting('totalColumns');\n      },\n      get fixedRowsTop() {\n        return wot.wtSettings.getSetting('fixedRowsTop');\n      },\n      get fixedRowsBottom() {\n        return wot.wtSettings.getSetting('fixedRowsBottom');\n      },\n      get fixedColumnsStart() {\n        return wot.wtSettings.getSetting('fixedColumnsStart');\n      }\n    };\n  }\n  // TODO refactoring: it will be much better to not use DAO objects. They are needed for now to provide\n  // dynamically access to related objects\n  /**\r\n   * Create data access object for wtTable.\r\n   *\r\n   * @protected\r\n   * @returns {TableDao}\r\n   */\n  getTableDao() {\n    const wot = this;\n    return {\n      get wot() {\n        return wot;\n      },\n      get parentTableOffset() {\n        return wot.cloneSource.wtTable.tableOffset; // TODO rethink: cloneSource exists only in Clone type.\n      },\n      get cloneSource() {\n        return wot.cloneSource; // TODO rethink: cloneSource exists only in Clone type.\n      },\n      get workspaceWidth() {\n        return wot.wtViewport.getWorkspaceWidth();\n      },\n      get wtViewport() {\n        return wot.wtViewport; // TODO refactoring: move outside dao, use IOC\n      },\n      get wtOverlays() {\n        return wot.wtOverlays; // TODO refactoring: move outside dao, use IOC\n      },\n      get selectionManager() {\n        return wot.selectionManager; // TODO refactoring: move outside dao, use IOC\n      },\n      get drawn() {\n        return wot.drawn;\n      },\n      set drawn(v) {\n        // TODO rethink: this breaks assumes of data access object, however it is required until invent better way to handle WOT state.\n        wot.drawn = v;\n      },\n      get wtTable() {\n        return wot.wtTable; // TODO refactoring: it provides itself\n      },\n      get startColumnRendered() {\n        return wot.wtViewport.columnsRenderCalculator.startColumn;\n      },\n      get startColumnVisible() {\n        return wot.wtViewport.columnsVisibleCalculator.startColumn;\n      },\n      get startColumnPartiallyVisible() {\n        return wot.wtViewport.columnsPartiallyVisibleCalculator.startColumn;\n      },\n      get endColumnRendered() {\n        return wot.wtViewport.columnsRenderCalculator.endColumn;\n      },\n      get endColumnVisible() {\n        return wot.wtViewport.columnsVisibleCalculator.endColumn;\n      },\n      get endColumnPartiallyVisible() {\n        return wot.wtViewport.columnsPartiallyVisibleCalculator.endColumn;\n      },\n      get countColumnsRendered() {\n        return wot.wtViewport.columnsRenderCalculator.count;\n      },\n      get countColumnsVisible() {\n        return wot.wtViewport.columnsVisibleCalculator.count;\n      },\n      get startRowRendered() {\n        return wot.wtViewport.rowsRenderCalculator.startRow;\n      },\n      get startRowVisible() {\n        return wot.wtViewport.rowsVisibleCalculator.startRow;\n      },\n      get startRowPartiallyVisible() {\n        return wot.wtViewport.rowsPartiallyVisibleCalculator.startRow;\n      },\n      get endRowRendered() {\n        return wot.wtViewport.rowsRenderCalculator.endRow;\n      },\n      get endRowVisible() {\n        return wot.wtViewport.rowsVisibleCalculator.endRow;\n      },\n      get endRowPartiallyVisible() {\n        return wot.wtViewport.rowsPartiallyVisibleCalculator.endRow;\n      },\n      get countRowsRendered() {\n        return wot.wtViewport.rowsRenderCalculator.count;\n      },\n      get countRowsVisible() {\n        return wot.wtViewport.rowsVisibleCalculator.count;\n      },\n      get columnHeaders() {\n        return wot.wtSettings.getSetting('columnHeaders');\n      },\n      get rowHeaders() {\n        return wot.wtSettings.getSetting('rowHeaders');\n      }\n    };\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport Event from \"../event.mjs\";\nimport CoreAbstract from \"./_base.mjs\";\n/**\r\n * @class Walkontable\r\n */\nexport default class Clone extends CoreAbstract {\n  /**\r\n   * @param {HTMLTableElement} table Main table.\r\n   * @param {SettingsPure|Settings} settings The Walkontable settings.\r\n   * @param {WalkontableCloneOptions} clone Clone data.\r\n   */\n  constructor(table, settings, clone) {\n    super(table, settings);\n    /**\r\n     * @type {Walkontable}\r\n     */\n    _defineProperty(this, \"cloneSource\", void 0);\n    /**\r\n     * @type {Overlay}\r\n     */\n    _defineProperty(this, \"cloneOverlay\", void 0);\n    const facadeGetter = this.wtSettings.getSetting('facade', this);\n    this.cloneSource = clone.source;\n    this.cloneOverlay = clone.overlay;\n    this.wtTable = this.cloneOverlay.createTable(this.getTableDao(), facadeGetter, this.domBindings, this.wtSettings);\n    this.wtViewport = clone.viewport;\n    this.selectionManager = clone.selectionManager;\n    this.wtEvent = new Event(facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable, this.selectionManager, clone.event);\n    this.findOriginalHeaders();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { getScrollableElement, getTrimmingContainer, getScrollbarWidth, setAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { defineGetter } from \"../../../../helpers/object.mjs\";\nimport { warn } from \"../../../../helpers/console.mjs\";\nimport { CLONE_TYPES, CLONE_CLASS_NAMES, CLONE_TOP, CLONE_INLINE_START } from \"./constants.mjs\";\nimport Clone from \"../core/clone.mjs\";\nimport { A11Y_PRESENTATION } from \"../../../../helpers/a11y.mjs\";\n/**\r\n * Creates an overlay over the original Walkontable instance. The overlay renders the clone of the original Walkontable\r\n * and (optionally) implements behavior needed for native horizontal and vertical scrolling.\r\n *\r\n * @abstract\r\n * @class Overlay\r\n * @property {Walkontable} wot The Walkontable instance.\r\n */\nexport class Overlay {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {CLONE_TYPES_ENUM} type The overlay type name (clone name).\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\r\n   */\n  constructor(wotInstance, facadeGetter, type, wtSettings, domBindings) {\n    /**\r\n     *  The Walkontable settings.\r\n     *\r\n     * @private\r\n     * @type {Settings}\r\n     */\n    _defineProperty(this, \"wtSettings\", null);\n    defineGetter(this, 'wot', wotInstance, {\n      writable: false\n    });\n    this.domBindings = domBindings;\n    this.facadeGetter = facadeGetter;\n    this.wtSettings = wtSettings;\n    const {\n      TABLE,\n      hider,\n      spreader,\n      holder,\n      wtRootElement\n    } = this.wot.wtTable; // todo ioc\n\n    // legacy support, deprecated in the future\n    this.instance = this.wot;\n    this.type = type;\n    this.mainTableScrollableElement = null;\n    this.TABLE = TABLE;\n    this.hider = hider;\n    this.spreader = spreader;\n    this.holder = holder;\n    this.wtRootElement = wtRootElement;\n    this.trimmingContainer = getTrimmingContainer(this.hider.parentNode.parentNode);\n    this.needFullRender = this.shouldBeRendered();\n    this.clone = this.makeClone();\n  }\n\n  /**\r\n   * Checks if the overlay rendering state has changed.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  hasRenderingStateChanged() {\n    return this.needFullRender !== this.shouldBeRendered();\n  }\n\n  /**\r\n   * Updates internal state with an information about the need of full rendering of the overlay in the next draw cycles.\r\n   *\r\n   * If the state is changed to render the overlay, the `needFullRender` property is set to `true` which means that\r\n   * the overlay will be fully rendered in the current draw cycle. If the state is changed to not render the overlay,\r\n   * the `needFullRender` property is set to `false` which means that the overlay will be fully rendered in the\r\n   * current draw cycle but it will not be rendered in the next draw cycles.\r\n   *\r\n   * @param {'before' | 'after'} drawPhase The phase of the rendering process.\r\n   */\n  updateStateOfRendering(drawPhase) {\n    if (drawPhase === 'before' && this.shouldBeRendered()) {\n      this.needFullRender = true;\n    } else if (drawPhase === 'after' && !this.shouldBeRendered()) {\n      this.needFullRender = false;\n    }\n  }\n\n  /**\r\n   * Checks if overlay should be fully rendered.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  shouldBeRendered() {\n    return true;\n  }\n\n  /**\r\n   * Update the trimming container.\r\n   */\n  updateTrimmingContainer() {\n    this.trimmingContainer = getTrimmingContainer(this.hider.parentNode.parentNode);\n  }\n\n  /**\r\n   * Update the main scrollable element.\r\n   */\n  updateMainScrollableElement() {\n    const {\n      wtTable\n    } = this.wot;\n    const {\n      rootWindow\n    } = this.domBindings;\n    if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n      this.mainTableScrollableElement = this.wot.wtTable.holder;\n    } else {\n      this.mainTableScrollableElement = getScrollableElement(wtTable.TABLE);\n    }\n  }\n\n  /**\r\n   * Calculates coordinates of the provided element, relative to the root Handsontable element.\r\n   * NOTE: The element needs to be a child of the overlay in order for the method to work correctly.\r\n   *\r\n   * @param {HTMLElement} element The cell element to calculate the position for.\r\n   * @param {number} rowIndex Visual row index.\r\n   * @param {number} columnIndex Visual column index.\r\n   * @returns {{top: number, start: number}|undefined}\r\n   */\n  getRelativeCellPosition(element, rowIndex, columnIndex) {\n    if (this.clone.wtTable.holder.contains(element) === false) {\n      warn(`The provided element is not a child of the ${this.type} overlay`);\n      return;\n    }\n    const windowScroll = this.mainTableScrollableElement === this.domBindings.rootWindow;\n    const fixedColumnStart = columnIndex < this.wtSettings.getSetting('fixedColumnsStart');\n    const fixedRowTop = rowIndex < this.wtSettings.getSetting('fixedRowsTop');\n    const fixedRowBottom = rowIndex >= this.wtSettings.getSetting('totalRows') - this.wtSettings.getSetting('fixedRowsBottom');\n    const spreader = this.clone.wtTable.spreader;\n    const spreaderOffset = {\n      start: this.getRelativeStartPosition(spreader),\n      top: spreader.offsetTop\n    };\n    const elementOffset = {\n      start: this.getRelativeStartPosition(element),\n      top: element.offsetTop\n    };\n    let offsetObject = null;\n    if (windowScroll) {\n      offsetObject = this.getRelativeCellPositionWithinWindow(fixedRowTop, fixedColumnStart, elementOffset, spreaderOffset);\n    } else {\n      offsetObject = this.getRelativeCellPositionWithinHolder(fixedRowTop, fixedRowBottom, fixedColumnStart, elementOffset, spreaderOffset);\n    }\n    return offsetObject;\n  }\n\n  /**\r\n   * Get inline start value depending of direction.\r\n   *\r\n   * @param {HTMLElement} el Element.\r\n   * @returns {number}\r\n   */\n  getRelativeStartPosition(el) {\n    return this.isRtl() ? el.offsetParent.offsetWidth - el.offsetLeft - el.offsetWidth : el.offsetLeft;\n  }\n\n  /**\r\n   * Calculates coordinates of the provided element, relative to the root Handsontable element within a table with window\r\n   * as a scrollable element.\r\n   *\r\n   * @private\r\n   * @param {boolean} onFixedRowTop `true` if the coordinates point to a place within the top fixed rows.\r\n   * @param {boolean} onFixedColumn `true` if the coordinates point to a place within the fixed columns.\r\n   * @param {number} elementOffset Offset position of the cell element.\r\n   * @param {number} spreaderOffset Offset position of the spreader element.\r\n   * @returns {{top: number, left: number}}\r\n   */\n  getRelativeCellPositionWithinWindow(onFixedRowTop, onFixedColumn, elementOffset, spreaderOffset) {\n    const absoluteRootElementPosition = this.wot.wtTable.wtRootElement.getBoundingClientRect(); // todo refactoring: DEMETER\n    let horizontalOffset = 0;\n    let verticalOffset = 0;\n    if (!onFixedColumn) {\n      horizontalOffset = spreaderOffset.start;\n    } else {\n      let absoluteRootElementStartPosition = absoluteRootElementPosition.left;\n      if (this.isRtl()) {\n        absoluteRootElementStartPosition = this.domBindings.rootWindow.innerWidth - (absoluteRootElementPosition.left + absoluteRootElementPosition.width + getScrollbarWidth());\n      }\n      horizontalOffset = absoluteRootElementStartPosition <= 0 ? -1 * absoluteRootElementStartPosition : 0;\n    }\n    if (onFixedRowTop) {\n      const absoluteOverlayPosition = this.clone.wtTable.TABLE.getBoundingClientRect();\n      verticalOffset = absoluteOverlayPosition.top - absoluteRootElementPosition.top;\n    } else {\n      verticalOffset = spreaderOffset.top;\n    }\n    return {\n      start: elementOffset.start + horizontalOffset,\n      top: elementOffset.top + verticalOffset\n    };\n  }\n\n  /**\r\n   * Calculates coordinates of the provided element, relative to the root Handsontable element within a table with window\r\n   * as a scrollable element.\r\n   *\r\n   * @private\r\n   * @param {boolean} onFixedRowTop `true` if the coordinates point to a place within the top fixed rows.\r\n   * @param {boolean} onFixedRowBottom `true` if the coordinates point to a place within the bottom fixed rows.\r\n   * @param {boolean} onFixedColumn `true` if the coordinates point to a place within the fixed columns.\r\n   * @param {number} elementOffset Offset position of the cell element.\r\n   * @param {number} spreaderOffset Offset position of the spreader element.\r\n   * @returns {{top: number, left: number}}\r\n   */\n  getRelativeCellPositionWithinHolder(onFixedRowTop, onFixedRowBottom, onFixedColumn, elementOffset, spreaderOffset) {\n    const tableScrollPosition = {\n      horizontal: this.wot.wtOverlays.inlineStartOverlay.getScrollPosition(),\n      vertical: this.wot.wtOverlays.topOverlay.getScrollPosition()\n    };\n    let horizontalOffset = 0;\n    let verticalOffset = 0;\n    if (!onFixedColumn) {\n      horizontalOffset = tableScrollPosition.horizontal - spreaderOffset.start;\n    }\n    if (onFixedRowBottom) {\n      const absoluteRootElementPosition = this.wot.wtTable.wtRootElement.getBoundingClientRect(); // todo refactoring: DEMETER\n      const absoluteOverlayPosition = this.clone.wtTable.TABLE.getBoundingClientRect(); // todo refactoring: DEMETER\n\n      verticalOffset = absoluteOverlayPosition.top * -1 + absoluteRootElementPosition.top;\n    } else if (!onFixedRowTop) {\n      verticalOffset = tableScrollPosition.vertical - spreaderOffset.top;\n    }\n    return {\n      start: elementOffset.start - horizontalOffset,\n      top: elementOffset.top - verticalOffset\n    };\n  }\n\n  /**\r\n   * Make a clone of table for overlay.\r\n   *\r\n   * @returns {Clone}\r\n   */\n  makeClone() {\n    if (CLONE_TYPES.indexOf(this.type) === -1) {\n      throw new Error(`Clone type \"${this.type}\" is not supported.`);\n    }\n    const {\n      wtTable,\n      wtSettings\n    } = this.wot;\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n    const clone = rootDocument.createElement('div');\n    const clonedTable = rootDocument.createElement('table');\n    const tableParent = wtTable.wtRootElement.parentNode;\n    clone.className = `${CLONE_CLASS_NAMES.get(this.type)} handsontable`;\n    clone.setAttribute('dir', this.isRtl() ? 'rtl' : 'ltr');\n    clone.style.position = 'absolute';\n    clone.style.top = 0;\n    clone.style.overflow = 'visible';\n    if (this.isRtl()) {\n      clone.style.right = 0;\n    } else {\n      clone.style.left = 0;\n    }\n    if (wtSettings.getSetting('ariaTags')) {\n      setAttribute(clone, [A11Y_PRESENTATION()]);\n    }\n    clonedTable.className = wtTable.TABLE.className;\n\n    // Clone the main table's `role` attribute to the cloned table.\n    const mainTableRole = wtTable.TABLE.getAttribute('role');\n    if (mainTableRole) {\n      clonedTable.setAttribute('role', wtTable.TABLE.getAttribute('role'));\n    }\n    clone.appendChild(clonedTable);\n    tableParent.appendChild(clone);\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    if (preventOverflow === true || preventOverflow === 'horizontal' && this.type === CLONE_TOP || preventOverflow === 'vertical' && this.type === CLONE_INLINE_START) {\n      this.mainTableScrollableElement = rootWindow;\n    } else if (rootWindow.getComputedStyle(tableParent).getPropertyValue('overflow') === 'hidden') {\n      this.mainTableScrollableElement = wtTable.holder;\n    } else {\n      this.mainTableScrollableElement = getScrollableElement(wtTable.TABLE);\n    }\n\n    // Create a new instance of the Walkontable class\n    return new Clone(clonedTable, this.wtSettings, {\n      // todo ioc factory\n      source: this.wot,\n      overlay: this,\n      viewport: this.wot.wtViewport,\n      // todo ioc , or factor func if used only here\n      event: this.wot.wtEvent,\n      // todo ioc , or factory func if used only here\n      selectionManager: this.wot.selectionManager // todo ioc , or factory func if used only here\n    });\n  }\n\n  /**\r\n   * Refresh/Redraw overlay.\r\n   *\r\n   * @param {boolean} [fastDraw=false] When `true`, try to refresh only the positions of borders without rerendering\r\n   *                                   the data. It will only work if Table.draw() does not force\r\n   *                                   rendering anyway.\r\n   */\n  refresh() {\n    let fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (this.needFullRender) {\n      this.clone.draw(fastDraw);\n    }\n  }\n\n  /**\r\n   * Reset overlay styles to initial values.\r\n   */\n  reset() {\n    const holder = this.clone.wtTable.holder; // todo refactoring: DEMETER\n    const hider = this.clone.wtTable.hider; // todo refactoring: DEMETER\n    const holderStyle = holder.style;\n    const hiderStyle = hider.style;\n    const rootStyle = holder.parentNode.style;\n    [holderStyle, hiderStyle, rootStyle].forEach(style => {\n      style.width = '';\n      style.height = '';\n    });\n  }\n\n  /**\r\n   * Determine if Walkontable is running in RTL mode.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isRtl() {\n    return this.wtSettings.getSetting('rtlMode');\n  }\n\n  /**\r\n   * Destroy overlay instance.\r\n   */\n  destroy() {\n    this.clone.eventManager.destroy(); // todo check if it is good place for that operation\n  }\n}", "import { getScrollbarWidth, outerHeight, outerWidth, resetCssTransform } from \"../../../../helpers/dom/element.mjs\";\nimport BottomInlineStartCornerOverlayTable from \"../table/bottomInlineStartCorner.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_BOTTOM_INLINE_START_CORNER } from \"./constants.mjs\";\n/**\r\n * @class BottomInlineStartCornerOverlay\r\n */\nexport class BottomInlineStartCornerOverlay extends Overlay {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\r\n   * @param {BottomOverlay} bottomOverlay The instance of the Top overlay.\r\n   * @param {InlineStartOverlay} inlineStartOverlay The instance of the InlineStart overlay.\r\n   */\n  constructor(wotInstance, facadeGetter, wtSettings, domBindings, bottomOverlay, inlineStartOverlay) {\n    super(wotInstance, facadeGetter, CLONE_BOTTOM_INLINE_START_CORNER, wtSettings, domBindings);\n    this.bottomOverlay = bottomOverlay;\n    this.inlineStartOverlay = inlineStartOverlay;\n  }\n\n  /**\r\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\r\n   *\r\n   * @see Table#constructor\r\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\r\n   * @returns {BottomInlineStartCornerOverlayTable}\r\n   */\n  createTable() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new BottomInlineStartCornerOverlayTable(...args);\n  }\n\n  /**\r\n   * Checks if overlay should be fully rendered.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  shouldBeRendered() {\n    return this.wtSettings.getSetting('shouldRenderBottomOverlay') && this.wtSettings.getSetting('shouldRenderInlineStartOverlay');\n  }\n\n  /**\r\n   * Updates the corner overlay position.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  resetFixedPosition() {\n    const {\n      wot\n    } = this;\n    this.updateTrimmingContainer();\n    if (!wot.wtTable.holder.parentNode) {\n      // removed from DOM\n      return false;\n    }\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    overlayRoot.style.top = '';\n    if (this.trimmingContainer === this.domBindings.rootWindow) {\n      const inlineStartOffset = this.inlineStartOverlay.getOverlayOffset();\n      const bottom = this.bottomOverlay.getOverlayOffset();\n      overlayRoot.style[this.isRtl() ? 'right' : 'left'] = `${inlineStartOffset}px`;\n      overlayRoot.style.bottom = `${bottom}px`;\n    } else {\n      resetCssTransform(overlayRoot);\n      this.repositionOverlay();\n    }\n    let tableHeight = outerHeight(this.clone.wtTable.TABLE);\n    const tableWidth = outerWidth(this.clone.wtTable.TABLE);\n    if (!this.wot.wtTable.hasDefinedSize()) {\n      tableHeight = 0;\n    }\n    overlayRoot.style.height = `${tableHeight}px`;\n    overlayRoot.style.width = `${tableWidth}px`;\n    return false;\n  }\n\n  /**\r\n   * Reposition the overlay.\r\n   */\n  repositionOverlay() {\n    const {\n      wtTable,\n      wtViewport\n    } = this.wot;\n    const {\n      rootDocument\n    } = this.domBindings;\n    const cloneRoot = this.clone.wtTable.holder.parentNode;\n    let bottomOffset = 0;\n    if (!wtViewport.hasVerticalScroll()) {\n      bottomOffset += wtViewport.getWorkspaceHeight() - wtTable.getTotalHeight();\n    }\n    if (wtViewport.hasVerticalScroll() && wtViewport.hasHorizontalScroll()) {\n      bottomOffset += getScrollbarWidth(rootDocument);\n    }\n    cloneRoot.style.bottom = `${bottomOffset}px`;\n  }\n}", "import { defineGetter } from \"../../../../../helpers/object.mjs\";\nconst MIXIN_NAME = 'calculatedColumns';\n\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to columns.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use virtual rendering in the horizontal axis.\r\n *\r\n * @type {object}\r\n */\nconst calculatedColumns = {\n  /**\r\n   * Get the source index of the first rendered column. If no columns are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstRenderedColumn() {\n    const startColumn = this.dataAccessObject.startColumnRendered;\n    if (startColumn === null) {\n      return -1;\n    }\n    return startColumn;\n  },\n  /**\r\n   * Get the source index of the first column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstVisibleColumn() {\n    const startColumn = this.dataAccessObject.startColumnVisible;\n    if (startColumn === null) {\n      return -1;\n    }\n    return startColumn;\n  },\n  /**\r\n   * Get the source index of the first column partially visible in the viewport. If no columns are partially visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstPartiallyVisibleColumn() {\n    const startColumn = this.dataAccessObject.startColumnPartiallyVisible;\n    if (startColumn === null) {\n      return -1;\n    }\n    return startColumn;\n  },\n  /**\r\n   * Get the source index of the last rendered column. If no columns are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastRenderedColumn() {\n    const endColumn = this.dataAccessObject.endColumnRendered;\n    if (endColumn === null) {\n      return -1;\n    }\n    return endColumn;\n  },\n  /**\r\n   * Get the source index of the last column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastVisibleColumn() {\n    const endColumn = this.dataAccessObject.endColumnVisible;\n    if (endColumn === null) {\n      return -1;\n    }\n    return endColumn;\n  },\n  /**\r\n   * Get the source index of the last column partially visible in the viewport. If no columns are partially visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastPartiallyVisibleColumn() {\n    const endColumn = this.dataAccessObject.endColumnPartiallyVisible;\n    if (endColumn === null) {\n      return -1;\n    }\n    return endColumn;\n  },\n  /**\r\n   * Get the number of rendered columns.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getRenderedColumnsCount() {\n    return this.dataAccessObject.countColumnsRendered;\n  },\n  /**\r\n   * Get the number of fully visible columns in the viewport.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getVisibleColumnsCount() {\n    return this.dataAccessObject.countColumnsVisible;\n  },\n  /**\r\n   * Get the number of rendered row headers.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getRowHeadersCount() {\n    return this.dataAccessObject.rowHeaders.length;\n  }\n};\ndefineGetter(calculatedColumns, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default calculatedColumns;", "import Table from \"../table.mjs\";\nimport stickyRowsBottom from \"./mixin/stickyRowsBottom.mjs\";\nimport calculatedColumns from \"./mixin/calculatedColumns.mjs\";\nimport { mixin } from \"../../../../helpers/object.mjs\";\nimport { CLONE_BOTTOM } from \"../overlay/index.mjs\";\n/**\r\n * Subclass of `Table` that provides the helper methods relevant to BottomOverlay, implemented through mixins.\r\n *\r\n * @mixes stickyRowsBottom\r\n * @mixes calculatedColumns\r\n */\nclass BottomOverlayTable extends Table {\n  /**\r\n   * @param {TableDao} dataAccessObject The data access object.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   */\n  constructor(dataAccessObject, facadeGetter, domBindings, wtSettings) {\n    super(dataAccessObject, facadeGetter, domBindings, wtSettings, CLONE_BOTTOM);\n  }\n}\nmixin(BottomOverlayTable, stickyRowsBottom);\nmixin(BottomOverlayTable, calculatedColumns);\nexport default BottomOverlayTable;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { addClass, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass } from \"../../../../helpers/dom/element.mjs\";\nimport BottomOverlayTable from \"./../table/bottom.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_BOTTOM } from \"./constants.mjs\";\n/**\r\n * @class BottomOverlay\r\n */\nexport class BottomOverlay extends Overlay {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\r\n   */\n  constructor(wotInstance, facadeGetter, wtSettings, domBindings) {\n    super(wotInstance, facadeGetter, CLONE_BOTTOM, wtSettings, domBindings);\n    /**\r\n     * Cached value which holds the previous value of the `fixedRowsBottom` option.\r\n     * It is used as a comparison value that can be used to detect changes in that value.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"cachedFixedRowsBottom\", -1);\n    this.cachedFixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n  }\n\n  /**\r\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\r\n   *\r\n   * @see Table#constructor\r\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\r\n   * @returns {BottomOverlayTable}\r\n   */\n  createTable() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new BottomOverlayTable(...args);\n  }\n\n  /**\r\n   * Checks if overlay should be fully rendered.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  shouldBeRendered() {\n    return this.wtSettings.getSetting('shouldRenderBottomOverlay');\n  }\n\n  /**\r\n   * Updates the top overlay position.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  resetFixedPosition() {\n    if (!this.needFullRender || !this.shouldBeRendered() || !this.wot.wtTable.holder.parentNode) {\n      // removed from DOM\n      return false;\n    }\n    const {\n      rootWindow\n    } = this.domBindings;\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    overlayRoot.style.top = '';\n    let overlayPosition = 0;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n      overlayPosition = this.getOverlayOffset();\n      overlayRoot.style.bottom = `${overlayPosition}px`;\n    } else {\n      overlayPosition = this.getScrollPosition();\n      this.repositionOverlay();\n    }\n    const positionChanged = this.adjustHeaderBordersPosition(overlayPosition);\n    this.adjustElementsSize();\n    return positionChanged;\n  }\n\n  /**\r\n   * Updates the bottom overlay position.\r\n   */\n  repositionOverlay() {\n    const {\n      wtTable,\n      wtViewport\n    } = this.wot;\n    const {\n      rootDocument\n    } = this.domBindings;\n    const cloneRoot = this.clone.wtTable.holder.parentNode;\n    let bottomOffset = 0;\n    if (!wtViewport.hasVerticalScroll()) {\n      bottomOffset += wtViewport.getWorkspaceHeight() - wtTable.getTotalHeight();\n    }\n    if (wtViewport.hasVerticalScroll() && wtViewport.hasHorizontalScroll()) {\n      bottomOffset += getScrollbarWidth(rootDocument);\n    }\n    cloneRoot.style.bottom = `${bottomOffset}px`;\n  }\n\n  /**\r\n   * Sets the main overlay's vertical scroll position.\r\n   *\r\n   * @param {number} pos The scroll position.\r\n   * @returns {boolean}\r\n   */\n  setScrollPosition(pos) {\n    const {\n      rootWindow\n    } = this.domBindings;\n    let result = false;\n    if (this.mainTableScrollableElement === rootWindow) {\n      rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n      result = true;\n    } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n      this.mainTableScrollableElement.scrollTop = pos;\n      result = true;\n    }\n    return result;\n  }\n\n  /**\r\n   * Triggers onScroll hook callback.\r\n   */\n  onScroll() {\n    this.wtSettings.getSetting('onScrollHorizontally');\n  }\n\n  /**\r\n   * Calculates total sum cells height.\r\n   *\r\n   * @param {number} from Row index which calculates started from.\r\n   * @param {number} to Row index where calculation is finished.\r\n   * @returns {number} Height sum.\r\n   */\n  sumCellSizes(from, to) {\n    const {\n      wtTable,\n      wtSettings\n    } = this.wot;\n    const defaultRowHeight = wtSettings.getSetting('defaultRowHeight');\n    let row = from;\n    let sum = 0;\n    while (row < to) {\n      const height = wtTable.getRowHeight(row);\n      sum += height === undefined ? defaultRowHeight : height;\n      row += 1;\n    }\n    return sum;\n  }\n\n  /**\r\n   * Adjust overlay root element, children and master table element sizes (width, height).\r\n   */\n  adjustElementsSize() {\n    this.updateTrimmingContainer();\n    if (this.needFullRender) {\n      this.adjustRootElementSize();\n      this.adjustRootChildrenSize();\n    }\n  }\n\n  /**\r\n   * Adjust overlay root element size (width and height).\r\n   */\n  adjustRootElementSize() {\n    const {\n      wtTable,\n      wtViewport\n    } = this.wot;\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n    const scrollbarWidth = getScrollbarWidth(rootDocument);\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    const overlayRootStyle = overlayRoot.style;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n      let width = wtViewport.getWorkspaceWidth();\n      if (this.wot.wtOverlays.hasScrollbarRight) {\n        width -= scrollbarWidth;\n      }\n      width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n      overlayRootStyle.width = `${width}px`;\n    } else {\n      overlayRootStyle.width = '';\n    }\n    this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n    let tableHeight = outerHeight(this.clone.wtTable.TABLE);\n    if (!this.wot.wtTable.hasDefinedSize()) {\n      tableHeight = 0;\n    }\n    overlayRootStyle.height = `${tableHeight}px`;\n  }\n\n  /**\r\n   * Adjust overlay root childs size.\r\n   */\n  adjustRootChildrenSize() {\n    const {\n      holder\n    } = this.clone.wtTable;\n    this.clone.wtTable.hider.style.width = this.hider.style.width;\n    holder.style.width = holder.parentNode.style.width;\n    holder.style.height = holder.parentNode.style.height;\n  }\n\n  /**\r\n   * Adjust the overlay dimensions and position.\r\n   */\n  applyToDOM() {\n    const total = this.wtSettings.getSetting('totalRows');\n    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n      this.spreader.style.top = `${this.wot.wtViewport.rowsRenderCalculator.startPosition}px`;\n    } else if (total === 0) {\n      // can happen if there are 0 rows\n      this.spreader.style.top = '0';\n    } else {\n      throw new Error('Incorrect value of the rowsRenderCalculator');\n    }\n    this.spreader.style.bottom = '';\n    if (this.needFullRender) {\n      this.syncOverlayOffset();\n    }\n  }\n\n  /**\r\n   * Synchronize calculated left position to an element.\r\n   */\n  syncOverlayOffset() {\n    const styleProperty = this.isRtl() ? 'right' : 'left';\n    const {\n      spreader\n    } = this.clone.wtTable;\n    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n      spreader.style[styleProperty] = `${this.wot.wtViewport.columnsRenderCalculator.startPosition}px`;\n    } else {\n      spreader.style[styleProperty] = '';\n    }\n  }\n\n  /**\r\n   * Scrolls vertically to a row.\r\n   *\r\n   * @param {number} sourceRow Row index which you want to scroll to.\r\n   * @param {boolean} [bottomEdge=false] If `true`, scrolls according to the bottom edge (top edge is by default).\r\n   */\n  scrollTo(sourceRow, bottomEdge) {\n    let newY = this.getTableParentOffset();\n    const sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n    const mainHolder = sourceInstance.wtTable.holder;\n    let scrollbarCompensation = 0;\n    if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n      scrollbarCompensation = getScrollbarWidth(this.domBindings.rootDocument);\n    }\n    if (bottomEdge) {\n      newY += this.sumCellSizes(0, sourceRow + 1);\n      newY -= this.wot.wtViewport.getViewportHeight();\n      // Fix 1 pixel offset when cell is selected\n      newY += 1;\n    } else {\n      newY += this.sumCellSizes(this.wtSettings.getSetting('fixedRowsBottom'), sourceRow);\n    }\n    newY += scrollbarCompensation;\n    this.setScrollPosition(newY);\n  }\n\n  /**\r\n   * Gets table parent top position.\r\n   *\r\n   * @returns {number}\r\n   */\n  getTableParentOffset() {\n    if (this.mainTableScrollableElement === this.domBindings.rootWindow) {\n      return this.wot.wtTable.holderOffset.top;\n    }\n    return 0;\n  }\n\n  /**\r\n   * Gets the main overlay's vertical scroll position.\r\n   *\r\n   * @returns {number} Main table's vertical scroll position.\r\n   */\n  getScrollPosition() {\n    return getScrollTop(this.mainTableScrollableElement, this.domBindings.rootWindow);\n  }\n\n  /**\r\n   * Gets the main overlay's vertical overlay offset.\r\n   *\r\n   * @returns {number} Main table's vertical overlay offset.\r\n   */\n  getOverlayOffset() {\n    const {\n      rootWindow\n    } = this.domBindings;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    let overlayOffset = 0;\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n      const rootHeight = this.wot.wtTable.getTotalHeight();\n      const overlayRootHeight = this.clone.wtTable.getTotalHeight();\n      const maxOffset = rootHeight - overlayRootHeight;\n      const docClientHeight = this.domBindings.rootDocument.documentElement.clientHeight;\n      overlayOffset = Math.max(this.getTableParentOffset() - this.getScrollPosition() - docClientHeight + rootHeight, 0);\n      if (overlayOffset > maxOffset) {\n        overlayOffset = 0;\n      }\n    }\n    return overlayOffset;\n  }\n\n  /**\r\n   * Adds css classes to hide the header border's header (cell-selection border hiding issue).\r\n   *\r\n   * @param {number} position Header Y position if trimming container is window or scroll top if not.\r\n   * @returns {boolean}\r\n   */\n  adjustHeaderBordersPosition(position) {\n    const fixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n    const areFixedRowsBottomChanged = this.cachedFixedRowsBottom !== fixedRowsBottom;\n    const columnHeaders = this.wtSettings.getSetting('columnHeaders');\n    let positionChanged = false;\n    if ((areFixedRowsBottomChanged || fixedRowsBottom === 0) && columnHeaders.length > 0) {\n      const masterParent = this.wot.wtTable.holder.parentNode;\n      const previousState = hasClass(masterParent, 'innerBorderBottom');\n      this.cachedFixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');\n      if (position || this.wtSettings.getSetting('totalRows') === 0) {\n        addClass(masterParent, 'innerBorderBottom');\n        positionChanged = !previousState;\n      } else {\n        removeClass(masterParent, 'innerBorderBottom');\n        positionChanged = previousState;\n      }\n    }\n    return positionChanged;\n  }\n}", "import { defineGetter } from \"../../../../../helpers/object.mjs\";\nconst MIXIN_NAME = 'calculatedRows';\n\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to rows.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use virtual rendering in the vertical axis.\r\n *\r\n * @type {object}\r\n */\nconst calculatedRows = {\n  /**\r\n   * Get the source index of the first rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstRenderedRow() {\n    const startRow = this.dataAccessObject.startRowRendered;\n    if (startRow === null) {\n      return -1;\n    }\n    return startRow;\n  },\n  /**\r\n   * Get the source index of the first row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstVisibleRow() {\n    const startRow = this.dataAccessObject.startRowVisible;\n    if (startRow === null) {\n      return -1;\n    }\n    return startRow;\n  },\n  /**\r\n   * Get the source index of the first row partially visible in the viewport. If no rows are partially visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstPartiallyVisibleRow() {\n    const startRow = this.dataAccessObject.startRowPartiallyVisible;\n    if (startRow === null) {\n      return -1;\n    }\n    return startRow;\n  },\n  /**\r\n   * Get the source index of the last rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastRenderedRow() {\n    const endRow = this.dataAccessObject.endRowRendered;\n    if (endRow === null) {\n      return -1;\n    }\n    return endRow;\n  },\n  /**\r\n   * Get the source index of the last row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastVisibleRow() {\n    const endRow = this.dataAccessObject.endRowVisible;\n    if (endRow === null) {\n      return -1;\n    }\n    return endRow;\n  },\n  /**\r\n   * Get the source index of the last row partially visible in the viewport. If no rows are partially visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastPartiallyVisibleRow() {\n    const endRow = this.dataAccessObject.endRowPartiallyVisible;\n    if (endRow === null) {\n      return -1;\n    }\n    return endRow;\n  },\n  /**\r\n   * Get the number of rendered rows.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getRenderedRowsCount() {\n    return this.dataAccessObject.countRowsRendered;\n  },\n  /**\r\n   * Get the number of fully visible rows in the viewport.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getVisibleRowsCount() {\n    return this.dataAccessObject.countRowsVisible;\n  },\n  /**\r\n   * Get the number of rendered column headers.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getColumnHeadersCount() {\n    return this.dataAccessObject.columnHeaders.length;\n  }\n};\ndefineGetter(calculatedRows, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default calculatedRows;", "import Table from \"../table.mjs\";\nimport calculatedRows from \"./mixin/calculatedRows.mjs\";\nimport stickyColumnsStart from \"./mixin/stickyColumnsStart.mjs\";\nimport { mixin } from \"../../../../helpers/object.mjs\";\nimport { CLONE_INLINE_START } from \"../overlay/index.mjs\";\n/**\r\n * Subclass of `Table` that provides the helper methods relevant to InlineStartOverlayTable, implemented through mixins.\r\n */\nclass InlineStartOverlayTable extends Table {\n  /**\r\n   * @param {TableDao} dataAccessObject The data access object.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   */\n  constructor(dataAccessObject, facadeGetter, domBindings, wtSettings) {\n    super(dataAccessObject, facadeGetter, domBindings, wtSettings, CLONE_INLINE_START);\n  }\n}\nmixin(InlineStartOverlayTable, calculatedRows);\nmixin(InlineStartOverlayTable, stickyColumnsStart);\nexport default InlineStartOverlayTable;", "import \"core-js/modules/es.array.push.js\";\nimport { defineGetter } from \"./../helpers/object.mjs\";\nimport { fastCall } from \"./../helpers/function.mjs\";\nconst MIXIN_NAME = 'localHooks';\n\n/**\r\n * Mixin object to extend objects functionality for local hooks.\r\n *\r\n * @type {object}\r\n */\nconst localHooks = {\n  /**\r\n   * Internal hooks storage.\r\n   */\n  _localHooks: Object.create(null),\n  /**\r\n   * Add hook to the collection.\r\n   *\r\n   * @param {string} key The hook name.\r\n   * @param {Function} callback The hook callback.\r\n   * @returns {object}\r\n   */\n  addLocalHook(key, callback) {\n    if (!this._localHooks[key]) {\n      this._localHooks[key] = [];\n    }\n    this._localHooks[key].push(callback);\n    return this;\n  },\n  /**\r\n   * Run hooks.\r\n   *\r\n   * @param {string} key The name of the hook to run.\r\n   * @param {*} [arg1] An additional parameter passed to the callback function.\r\n   * @param {*} [arg2] An additional parameter passed to the callback function.\r\n   * @param {*} [arg3] An additional parameter passed to the callback function.\r\n   * @param {*} [arg4] An additional parameter passed to the callback function.\r\n   * @param {*} [arg5] An additional parameter passed to the callback function.\r\n   * @param {*} [arg6] An additional parameter passed to the callback function.\r\n   */\n  runLocalHooks(key, arg1, arg2, arg3, arg4, arg5, arg6) {\n    if (this._localHooks[key]) {\n      const length = this._localHooks[key].length;\n\n      // don't optimize this loop with the `arrayEach()` method or arrow functions\n      // otherwise, performance will decrease because of garbage collection\n      // using the `...rest` syntax (ES6 and later) will decrease performance as well\n      for (let i = 0; i < length; i++) {\n        fastCall(this._localHooks[key][i], this, arg1, arg2, arg3, arg4, arg5, arg6);\n      }\n    }\n  },\n  /**\r\n   * Clear all added hooks.\r\n   *\r\n   * @returns {object}\r\n   */\n  clearLocalHooks() {\n    this._localHooks = {};\n    return this;\n  }\n};\ndefineGetter(localHooks, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default localHooks;", "import { mixin } from \"../../../../helpers/object.mjs\";\nimport localHooks from \"../../../../mixins/localHooks.mjs\";\n/**\r\n * The Selection class allows highlighting (by applying CSS class) the table's cells or headers\r\n * and setting up the borders if defined in the settings.\r\n *\r\n * The Selection coordinates may point to the cells (positive numbers) or headers (negative numbers).\r\n *\r\n * @class Selection\r\n */\nclass Selection {\n  /**\r\n   * @param {object} settings The selection settings object. @todo type.\r\n   * @param {CellRange} cellRange The cell range instance.\r\n   */\n  constructor(settings, cellRange) {\n    this.settings = settings;\n    this.cellRange = cellRange || null;\n  }\n\n  /**\r\n   * Checks if selection is empty.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isEmpty() {\n    return this.cellRange === null;\n  }\n\n  /**\r\n   * Adds a cell coords to the selection.\r\n   *\r\n   * @param {CellCoords} coords The cell coordinates to add.\r\n   * @returns {Selection}\r\n   */\n  add(coords) {\n    if (this.isEmpty()) {\n      this.cellRange = this.settings.createCellRange(coords);\n    } else {\n      this.cellRange.expand(coords);\n    }\n    return this;\n  }\n\n  /**\r\n   * If selection range from or to property equals oldCoords, replace it with newCoords. Return boolean\r\n   * information about success.\r\n   *\r\n   * @param {CellCoords} oldCoords An old cell coordinates to replace.\r\n   * @param {CellCoords} newCoords The new cell coordinates.\r\n   * @returns {boolean}\r\n   */\n  replace(oldCoords, newCoords) {\n    if (!this.isEmpty()) {\n      if (this.cellRange.from.isEqual(oldCoords)) {\n        this.cellRange.from = newCoords;\n        return true;\n      }\n      if (this.cellRange.to.isEqual(oldCoords)) {\n        this.cellRange.to = newCoords;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\r\n   * Clears selection.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  clear() {\n    this.cellRange = null;\n    return this;\n  }\n\n  /**\r\n   * Returns the top left (or top right in RTL) and bottom right (or bottom left in RTL) selection coordinates.\r\n   *\r\n   * @returns {number[]} Returns array of coordinates for example `[1, 1, 5, 5]`.\r\n   */\n  getCorners() {\n    const topStart = this.cellRange.getOuterTopStartCorner();\n    const bottomEnd = this.cellRange.getOuterBottomEndCorner();\n    return [topStart.row, topStart.col, bottomEnd.row, bottomEnd.col];\n  }\n\n  /**\r\n   * Destroys the instance.\r\n   */\n  destroy() {\n    this.runLocalHooks('destroy');\n  }\n}\nmixin(Selection, localHooks);\nexport default Selection;", "/**\r\n * Selection type that is visible only if the row or column header is clicked. If that happened\r\n * all row or column header layers are highlighted.\r\n *\r\n * @type {string}\r\n */\nexport const ACTIVE_HEADER_TYPE = 'active-header';\n/**\r\n * Selection type that is visible only if the a cell or cells are clicked. If that happened\r\n * only the most closest to the cells row or column header is highlighted.\r\n *\r\n * @type {string}\r\n */\nexport const HEADER_TYPE = 'header';\n/**\r\n * Selection type that is visible when a cell or cells are clicked. The selected cells are\r\n * highlighted.\r\n *\r\n * @type {string}\r\n */\nexport const AREA_TYPE = 'area';\n/**\r\n * Selection type defines a cell that follows the user (keyboard navigation).\r\n *\r\n * @type {string}\r\n */\nexport const FOCUS_TYPE = 'focus';\n/**\r\n * Selection type defines borders for the autofill functionality.\r\n *\r\n * @type {string}\r\n */\nexport const FILL_TYPE = 'fill';\n/**\r\n * Selection type defines highlights for the `currentRowClassName` option.\r\n *\r\n * @type {string}\r\n */\nexport const ROW_TYPE = 'row';\n/**\r\n * Selection type defines highlights for the `currentColumnClassName` option.\r\n *\r\n * @type {string}\r\n */\nexport const COLUMN_TYPE = 'column';\n/**\r\n * Selection type defines highlights managed by the CustomBorders plugin.\r\n *\r\n * @type {string}\r\n */\nexport const CUSTOM_SELECTION_TYPE = 'custom-selection';", "/**\r\n * Default border corner style.\r\n *\r\n * @type {object}\r\n */\nexport const CORNER_DEFAULT_STYLE = Object.freeze({\n  width: '6px',\n  height: '6px',\n  borderWidth: '1px',\n  borderStyle: 'solid',\n  borderColor: '#FFF'\n});", "'use strict';\n\n// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flat');", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\n/* eslint-disable no-continue */\nimport { addClass } from \"../../../../helpers/dom/element.mjs\";\n/**\r\n * Selection scanner module scans the rendered cells and headers and if it finds an intersection with\r\n * the coordinates of the Selection class (highlight) it returns the DOM elements.\r\n *\r\n * @private\r\n */\nvar _selection = /*#__PURE__*/new WeakMap();\nvar _activeOverlaysWot = /*#__PURE__*/new WeakMap();\nvar _SelectionScanner_brand = /*#__PURE__*/new WeakSet();\nexport class SelectionScanner {\n  constructor() {\n    /**\r\n     * The method triggers a callback for each rendered cell.\r\n     *\r\n     * @param {function(number, number): void} callback The callback function to trigger.\r\n     */\n    _classPrivateMethodInitSpec(this, _SelectionScanner_brand);\n    /**\r\n     * Active Selection instance to process.\r\n     *\r\n     * @type {Selection}\r\n     */\n    _classPrivateFieldInitSpec(this, _selection, void 0);\n    /**\r\n     * The Walkontable instance that the scans depends on.\r\n     *\r\n     * @type {Walkontable}\r\n     */\n    _classPrivateFieldInitSpec(this, _activeOverlaysWot, void 0);\n  }\n  /**\r\n   * Sets the Walkontable instance that will be taking into account while scanning the table.\r\n   *\r\n   * @param {Walkontable} activeOverlaysWot The Walkontable instance.\r\n   * @returns {SelectionScanner}\r\n   */\n  setActiveOverlay(activeOverlaysWot) {\n    _classPrivateFieldSet(_activeOverlaysWot, this, activeOverlaysWot);\n    return this;\n  }\n\n  /**\r\n   * Sets the Selection instance to process.\r\n   *\r\n   * @param {Selection} selection The Selection instance.\r\n   * @returns {SelectionScanner}\r\n   */\n  setActiveSelection(selection) {\n    _classPrivateFieldSet(_selection, this, selection);\n    return this;\n  }\n\n  /**\r\n   * Scans the rendered table with selection and returns elements that intersects\r\n   * with selection coordinates.\r\n   *\r\n   * @returns {HTMLTableElement[]}\r\n   */\n  scan() {\n    const selectionType = _classPrivateFieldGet(_selection, this).settings.selectionType;\n    const elements = new Set();\n\n    // TODO(improvement): use heuristics from coords to detect what type of scan\n    // the Selection needs instead of using `selectionType` property.\n    if (selectionType === 'active-header') {\n      this.scanColumnsInHeadersRange(element => elements.add(element));\n      this.scanRowsInHeadersRange(element => elements.add(element));\n    } else if (selectionType === 'area') {\n      this.scanCellsRange(element => elements.add(element));\n    } else if (selectionType === 'focus') {\n      this.scanColumnsInHeadersRange(element => elements.add(element));\n      this.scanRowsInHeadersRange(element => elements.add(element));\n      this.scanCellsRange(element => elements.add(element));\n    } else if (selectionType === 'fill') {\n      this.scanCellsRange(element => elements.add(element));\n    } else if (selectionType === 'header') {\n      this.scanColumnsInHeadersRange(element => elements.add(element));\n      this.scanRowsInHeadersRange(element => elements.add(element));\n    } else if (selectionType === 'row') {\n      this.scanRowsInHeadersRange(element => elements.add(element));\n      this.scanRowsInCellsRange(element => elements.add(element));\n    } else if (selectionType === 'column') {\n      this.scanColumnsInHeadersRange(element => elements.add(element));\n      this.scanColumnsInCellsRange(element => elements.add(element));\n    }\n    return elements;\n  }\n\n  /**\r\n   * Scans the table (only rendered headers) and collect all column headers (TH) that match\r\n   * the coordinates passed in the Selection instance.\r\n   *\r\n   * @param {function(HTMLTableElement): void} callback The callback function to trigger.\r\n   */\n  scanColumnsInHeadersRange(callback) {\n    const [topRow, topColumn, bottomRow, bottomColumn] = _classPrivateFieldGet(_selection, this).getCorners();\n    const {\n      wtTable\n    } = _classPrivateFieldGet(_activeOverlaysWot, this);\n    const renderedColumnsCount = wtTable.getRenderedColumnsCount();\n    const columnHeadersCount = wtTable.getColumnHeadersCount();\n    let cursor = 0;\n    for (let column = -wtTable.getRowHeadersCount(); column < renderedColumnsCount; column++) {\n      const sourceColumn = wtTable.columnFilter.renderedToSource(column);\n      if (sourceColumn < topColumn || sourceColumn > bottomColumn) {\n        continue;\n      }\n      for (let headerLevel = -columnHeadersCount; headerLevel < 0; headerLevel++) {\n        if (headerLevel < topRow || headerLevel > bottomRow) {\n          continue;\n        }\n        const positiveBasedHeaderLevel = headerLevel + columnHeadersCount;\n        let TH = wtTable.getColumnHeader(sourceColumn, positiveBasedHeaderLevel);\n        const newSourceCol = _classPrivateFieldGet(_activeOverlaysWot, this).getSetting('onBeforeHighlightingColumnHeader', sourceColumn, positiveBasedHeaderLevel, {\n          selectionType: _classPrivateFieldGet(_selection, this).settings.selectionType,\n          columnCursor: cursor,\n          selectionWidth: bottomColumn - topColumn + 1\n        });\n        if (newSourceCol === null) {\n          continue;\n        }\n        if (newSourceCol !== sourceColumn) {\n          TH = wtTable.getColumnHeader(newSourceCol, positiveBasedHeaderLevel);\n        }\n        callback(TH);\n      }\n      cursor += 1;\n    }\n  }\n\n  /**\r\n   * Scans the table (only rendered headers) and collect all row headers (TH) that match\r\n   * the coordinates passed in the Selection instance.\r\n   *\r\n   * @param {function(HTMLTableElement): void} callback The callback function to trigger.\r\n   */\n  scanRowsInHeadersRange(callback) {\n    const [topRow, topColumn, bottomRow, bottomColumn] = _classPrivateFieldGet(_selection, this).getCorners();\n    const {\n      wtTable\n    } = _classPrivateFieldGet(_activeOverlaysWot, this);\n    const renderedRowsCount = wtTable.getRenderedRowsCount();\n    const rowHeadersCount = wtTable.getRowHeadersCount();\n    let cursor = 0;\n    for (let row = -wtTable.getColumnHeadersCount(); row < renderedRowsCount; row++) {\n      const sourceRow = wtTable.rowFilter.renderedToSource(row);\n      if (sourceRow < topRow || sourceRow > bottomRow) {\n        continue;\n      }\n      for (let headerLevel = -rowHeadersCount; headerLevel < 0; headerLevel++) {\n        if (headerLevel < topColumn || headerLevel > bottomColumn) {\n          continue;\n        }\n        const positiveBasedHeaderLevel = headerLevel + rowHeadersCount;\n        let TH = wtTable.getRowHeader(sourceRow, positiveBasedHeaderLevel);\n        const newSourceRow = _classPrivateFieldGet(_activeOverlaysWot, this).getSetting('onBeforeHighlightingRowHeader', sourceRow, positiveBasedHeaderLevel, {\n          selectionType: _classPrivateFieldGet(_selection, this).settings.selectionType,\n          rowCursor: cursor,\n          selectionHeight: bottomRow - topRow + 1\n        });\n        if (newSourceRow === null) {\n          continue;\n        }\n        if (newSourceRow !== sourceRow) {\n          TH = wtTable.getRowHeader(newSourceRow, positiveBasedHeaderLevel);\n        }\n        callback(TH);\n      }\n      cursor += 1;\n    }\n  }\n\n  /**\r\n   * Scans the table (only rendered cells) and collect all cells (TR) that match\r\n   * the coordinates passed in the Selection instance.\r\n   *\r\n   * @param {function(HTMLTableElement): void} callback The callback function to trigger.\r\n   */\n  scanCellsRange(callback) {\n    const [topRow, topColumn, bottomRow, bottomColumn] = _classPrivateFieldGet(_selection, this).getCorners();\n    const {\n      wtTable\n    } = _classPrivateFieldGet(_activeOverlaysWot, this);\n    _assertClassBrand(_SelectionScanner_brand, this, _scanCellsRange).call(this, (sourceRow, sourceColumn) => {\n      if (sourceRow >= topRow && sourceRow <= bottomRow && sourceColumn >= topColumn && sourceColumn <= bottomColumn) {\n        const cell = wtTable.getCell(_classPrivateFieldGet(_activeOverlaysWot, this).createCellCoords(sourceRow, sourceColumn));\n\n        // support for old API\n        const additionalSelectionClass = _classPrivateFieldGet(_activeOverlaysWot, this).getSetting('onAfterDrawSelection', sourceRow, sourceColumn, _classPrivateFieldGet(_selection, this).settings.layerLevel);\n        if (typeof additionalSelectionClass === 'string') {\n          addClass(cell, additionalSelectionClass);\n        }\n        callback(cell);\n      }\n    });\n  }\n\n  /**\r\n   * Scans the table (only rendered cells) and collects all cells (TR) that match the coordinates\r\n   * passed in the Selection instance but only for the X axis (rows).\r\n   *\r\n   * @param {function(HTMLTableElement): void} callback The callback function to trigger.\r\n   */\n  scanRowsInCellsRange(callback) {\n    // eslint-disable-next-line comma-spacing\n    const [topRow,, bottomRow] = _classPrivateFieldGet(_selection, this).getCorners();\n    const {\n      wtTable\n    } = _classPrivateFieldGet(_activeOverlaysWot, this);\n    _assertClassBrand(_SelectionScanner_brand, this, _scanCellsRange).call(this, (sourceRow, sourceColumn) => {\n      if (sourceRow >= topRow && sourceRow <= bottomRow) {\n        const cell = wtTable.getCell(_classPrivateFieldGet(_activeOverlaysWot, this).createCellCoords(sourceRow, sourceColumn));\n        callback(cell);\n      }\n    });\n  }\n\n  /**\r\n   * Scans the table (only rendered cells) and collects all cells (TR) that match the coordinates\r\n   * passed in the Selection instance but only for the Y axis (columns).\r\n   *\r\n   * @param {function(HTMLTableElement): void} callback The callback function to trigger.\r\n   */\n  scanColumnsInCellsRange(callback) {\n    const [, topColumn,, bottomColumn] = _classPrivateFieldGet(_selection, this).getCorners();\n    const {\n      wtTable\n    } = _classPrivateFieldGet(_activeOverlaysWot, this);\n    _assertClassBrand(_SelectionScanner_brand, this, _scanCellsRange).call(this, (sourceRow, sourceColumn) => {\n      if (sourceColumn >= topColumn && sourceColumn <= bottomColumn) {\n        const cell = wtTable.getCell(_classPrivateFieldGet(_activeOverlaysWot, this).createCellCoords(sourceRow, sourceColumn));\n        callback(cell);\n      }\n    });\n  }\n}\nfunction _scanCellsRange(callback) {\n  const {\n    wtTable\n  } = _classPrivateFieldGet(_activeOverlaysWot, this);\n  const renderedRowsCount = wtTable.getRenderedRowsCount();\n  const renderedColumnsCount = wtTable.getRenderedColumnsCount();\n  for (let row = 0; row < renderedRowsCount; row += 1) {\n    const sourceRow = wtTable.rowFilter.renderedToSource(row);\n    for (let column = 0; column < renderedColumnsCount; column += 1) {\n      callback(sourceRow, wtTable.columnFilter.renderedToSource(column));\n    }\n  }\n}", "import { addClass, hasClass, removeClass, getComputedStyle, getTrimmingContainer, innerWidth, innerHeight, offset, outerHeight, outerWidth } from \"../../../../../helpers/dom/element.mjs\";\nimport { stopImmediatePropagation } from \"../../../../../helpers/dom/event.mjs\";\nimport { objectEach } from \"../../../../../helpers/object.mjs\";\nimport { isMobileBrowser } from \"../../../../../helpers/browser.mjs\";\nimport { CORNER_DEFAULT_STYLE } from \"./constants.mjs\";\n/**\r\n *\r\n */\nclass Border {\n  // TODO As this is an internal class, should be designed for using {Walkontable}. It uses the facade,\n  // TODO Con. Because the class is created on place where the instance reference comes from external origin.\n  // TODO Imho, the discrimination for handling both, facade and non-facade should be handled.\n  /**\r\n   * @param {WalkontableFacade} wotInstance The Walkontable instance.\r\n   * @param {object} settings The border settings.\r\n   */\n  constructor(wotInstance, settings) {\n    if (!settings) {\n      return;\n    }\n    this.eventManager = wotInstance.eventManager;\n    this.instance = wotInstance;\n    this.wot = wotInstance;\n    this.settings = settings;\n    this.mouseDown = false;\n    this.main = null;\n    this.top = null;\n    this.bottom = null;\n    this.start = null;\n    this.end = null;\n    this.topStyle = null;\n    this.bottomStyle = null;\n    this.startStyle = null;\n    this.endStyle = null;\n    this.cornerDefaultStyle = CORNER_DEFAULT_STYLE;\n    // Offset to moving the corner to be centered relative to the grid.\n    this.cornerCenterPointOffset = -(parseInt(this.cornerDefaultStyle.width, 10) / 2);\n    this.corner = null;\n    this.cornerStyle = null;\n    this.createBorders(settings);\n    this.registerListeners();\n  }\n\n  /**\r\n   * Register all necessary events.\r\n   */\n  registerListeners() {\n    const documentBody = this.wot.rootDocument.body;\n    this.eventManager.addEventListener(documentBody, 'mousedown', () => this.onMouseDown());\n    this.eventManager.addEventListener(documentBody, 'mouseup', () => this.onMouseUp());\n    for (let c = 0, len = this.main.childNodes.length; c < len; c++) {\n      const element = this.main.childNodes[c];\n      this.eventManager.addEventListener(element, 'mouseenter', event => this.onMouseEnter(event, this.main.childNodes[c]));\n    }\n  }\n\n  /**\r\n   * Mouse down listener.\r\n   *\r\n   * @private\r\n   */\n  onMouseDown() {\n    this.mouseDown = true;\n  }\n\n  /**\r\n   * Mouse up listener.\r\n   *\r\n   * @private\r\n   */\n  onMouseUp() {\n    this.mouseDown = false;\n  }\n\n  /**\r\n   * Mouse enter listener for fragment selection functionality.\r\n   *\r\n   * @private\r\n   * @param {Event} event Dom event.\r\n   * @param {HTMLElement} parentElement Part of border element.\r\n   */\n  onMouseEnter(event, parentElement) {\n    if (!this.mouseDown || !this.wot.getSetting('hideBorderOnMouseDownOver')) {\n      return;\n    }\n    event.preventDefault();\n    stopImmediatePropagation(event);\n    const _this = this;\n    const documentBody = this.wot.rootDocument.body;\n    const bounds = parentElement.getBoundingClientRect();\n\n    // Hide border to prevents selection jumping when fragmentSelection is enabled.\n    parentElement.style.display = 'none';\n\n    /**\r\n     * @param {Event} mouseEvent The mouse event object.\r\n     * @returns {boolean}\r\n     */\n    function isOutside(mouseEvent) {\n      if (mouseEvent.clientY < Math.floor(bounds.top)) {\n        return true;\n      }\n      if (mouseEvent.clientY > Math.ceil(bounds.top + bounds.height)) {\n        return true;\n      }\n      if (mouseEvent.clientX < Math.floor(bounds.left)) {\n        return true;\n      }\n      if (mouseEvent.clientX > Math.ceil(bounds.left + bounds.width)) {\n        return true;\n      }\n    }\n\n    /**\r\n     * @param {Event} handlerEvent The mouse event object.\r\n     */\n    function handler(handlerEvent) {\n      if (isOutside(handlerEvent)) {\n        _this.eventManager.removeEventListener(documentBody, 'mousemove', handler);\n        parentElement.style.display = 'block';\n      }\n    }\n    this.eventManager.addEventListener(documentBody, 'mousemove', handler);\n  }\n\n  /**\r\n   * Create border elements.\r\n   *\r\n   * @param {object} settings The border settings.\r\n   */\n  createBorders(settings) {\n    const {\n      rootDocument\n    } = this.wot;\n    this.main = rootDocument.createElement('div');\n    const borderDivs = ['top', 'start', 'bottom', 'end', 'corner'];\n    let style = this.main.style;\n    style.position = 'absolute';\n    style.top = 0;\n    style.left = 0;\n    for (let i = 0; i < 5; i++) {\n      const position = borderDivs[i];\n      const div = rootDocument.createElement('div');\n      div.className = `wtBorder ${this.settings.className || ''}`; // + borderDivs[i];\n\n      if (this.settings[position] && this.settings[position].hide) {\n        div.className += ' hidden';\n      }\n      style = div.style;\n      style.backgroundColor = this.settings[position] && this.settings[position].color ? this.settings[position].color : settings.border.color;\n      style.height = this.settings[position] && this.settings[position].width ? `${this.settings[position].width}px` : `${settings.border.width}px`;\n      style.width = this.settings[position] && this.settings[position].width ? `${this.settings[position].width}px` : `${settings.border.width}px`;\n      this.main.appendChild(div);\n    }\n    this.top = this.main.childNodes[0];\n    this.start = this.main.childNodes[1];\n    this.bottom = this.main.childNodes[2];\n    this.end = this.main.childNodes[3];\n    this.topStyle = this.top.style;\n    this.startStyle = this.start.style;\n    this.bottomStyle = this.bottom.style;\n    this.endStyle = this.end.style;\n    this.corner = this.main.childNodes[4];\n    this.corner.className += ' corner';\n    this.cornerStyle = this.corner.style;\n    this.cornerStyle.width = this.cornerDefaultStyle.width;\n    this.cornerStyle.height = this.cornerDefaultStyle.height;\n    this.cornerStyle.border = [this.cornerDefaultStyle.borderWidth, this.cornerDefaultStyle.borderStyle, this.cornerDefaultStyle.borderColor].join(' ');\n    if (isMobileBrowser() && this.instance.getSetting('isDataViewInstance')) {\n      this.createMultipleSelectorHandles();\n    }\n    this.disappear();\n    const {\n      wtTable\n    } = this.wot;\n    let bordersHolder = wtTable.bordersHolder;\n    if (!bordersHolder) {\n      bordersHolder = rootDocument.createElement('div');\n      bordersHolder.className = 'htBorders';\n      wtTable.bordersHolder = bordersHolder;\n      wtTable.spreader.appendChild(bordersHolder);\n    }\n    bordersHolder.appendChild(this.main);\n  }\n\n  /**\r\n   * Create multiple selector handler for mobile devices.\r\n   */\n  createMultipleSelectorHandles() {\n    const {\n      rootDocument\n    } = this.wot;\n    this.selectionHandles = {\n      top: rootDocument.createElement('DIV'),\n      topHitArea: rootDocument.createElement('DIV'),\n      bottom: rootDocument.createElement('DIV'),\n      bottomHitArea: rootDocument.createElement('DIV')\n    };\n    const width = 10;\n    const hitAreaWidth = 40;\n    this.selectionHandles.top.className = 'topSelectionHandle topLeftSelectionHandle';\n    this.selectionHandles.topHitArea.className = 'topSelectionHandle-HitArea topLeftSelectionHandle-HitArea';\n    this.selectionHandles.bottom.className = 'bottomSelectionHandle bottomRightSelectionHandle';\n    this.selectionHandles.bottomHitArea.className = 'bottomSelectionHandle-HitArea bottomRightSelectionHandle-HitArea';\n    this.selectionHandles.styles = {\n      top: this.selectionHandles.top.style,\n      topHitArea: this.selectionHandles.topHitArea.style,\n      bottom: this.selectionHandles.bottom.style,\n      bottomHitArea: this.selectionHandles.bottomHitArea.style\n    };\n    const hitAreaStyle = {\n      position: 'absolute',\n      height: `${hitAreaWidth}px`,\n      width: `${hitAreaWidth}px`,\n      'border-radius': `${parseInt(hitAreaWidth / 1.5, 10)}px`\n    };\n    objectEach(hitAreaStyle, (value, key) => {\n      this.selectionHandles.styles.bottomHitArea[key] = value;\n      this.selectionHandles.styles.topHitArea[key] = value;\n    });\n    const handleStyle = {\n      position: 'absolute',\n      height: `${width}px`,\n      width: `${width}px`,\n      'border-radius': `${parseInt(width / 1.5, 10)}px`,\n      background: '#F5F5FF',\n      border: '1px solid #4285c8'\n    };\n    objectEach(handleStyle, (value, key) => {\n      this.selectionHandles.styles.bottom[key] = value;\n      this.selectionHandles.styles.top[key] = value;\n    });\n    this.main.appendChild(this.selectionHandles.top);\n    this.main.appendChild(this.selectionHandles.bottom);\n    this.main.appendChild(this.selectionHandles.topHitArea);\n    this.main.appendChild(this.selectionHandles.bottomHitArea);\n  }\n\n  /**\r\n   * @param {number} row The visual row index.\r\n   * @param {number} col The visual column index.\r\n   * @returns {boolean}\r\n   */\n  isPartRange(row, col) {\n    const areaSelection = this.wot.selectionManager.getAreaSelection();\n    if (areaSelection.cellRange) {\n      if (row !== areaSelection.cellRange.to.row || col !== areaSelection.cellRange.to.col) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\r\n   * @param {number} row The visual row index.\r\n   * @param {number} col The visual column index.\r\n   * @param {number} top The top position of the handler.\r\n   * @param {number} left The left position of the handler.\r\n   * @param {number} width The width of the handler.\r\n   * @param {number} height The height of the handler.\r\n   */\n  updateMultipleSelectionHandlesPosition(row, col, top, left, width, height) {\n    const isRtl = this.wot.wtSettings.getSetting('rtlMode');\n    const inlinePosProperty = isRtl ? 'right' : 'left';\n    const {\n      top: topStyles,\n      topHitArea: topHitAreaStyles,\n      bottom: bottomStyles,\n      bottomHitArea: bottomHitAreaStyles\n    } = this.selectionHandles.styles;\n    const handleBorderSize = parseInt(topStyles.borderWidth, 10);\n    const handleSize = parseInt(topStyles.width, 10);\n    const hitAreaSize = parseInt(topHitAreaStyles.width, 10);\n    const totalTableWidth = this.wot.wtTable.getWidth();\n    const totalTableHeight = this.wot.wtTable.getHeight();\n    topStyles.top = `${parseInt(top - handleSize - 1, 10)}px`;\n    topStyles[inlinePosProperty] = `${parseInt(left - handleSize - 1, 10)}px`;\n    topHitAreaStyles.top = `${parseInt(top - hitAreaSize / 4 * 3, 10)}px`;\n    topHitAreaStyles[inlinePosProperty] = `${parseInt(left - hitAreaSize / 4 * 3, 10)}px`;\n    const bottomHandlerInline = Math.min(parseInt(left + width, 10), totalTableWidth - handleSize - handleBorderSize * 2);\n    const bottomHandlerAreaInline = Math.min(parseInt(left + width - hitAreaSize / 4, 10), totalTableWidth - hitAreaSize - handleBorderSize * 2);\n    bottomStyles[inlinePosProperty] = `${bottomHandlerInline}px`;\n    bottomHitAreaStyles[inlinePosProperty] = `${bottomHandlerAreaInline}px`;\n    const bottomHandlerTop = Math.min(parseInt(top + height, 10), totalTableHeight - handleSize - handleBorderSize * 2);\n    const bottomHandlerAreaTop = Math.min(parseInt(top + height - hitAreaSize / 4, 10), totalTableHeight - hitAreaSize - handleBorderSize * 2);\n    bottomStyles.top = `${bottomHandlerTop}px`;\n    bottomHitAreaStyles.top = `${bottomHandlerAreaTop}px`;\n    if (this.settings.border.cornerVisible && this.settings.border.cornerVisible()) {\n      topStyles.display = 'block';\n      topHitAreaStyles.display = 'block';\n      if (this.isPartRange(row, col)) {\n        bottomStyles.display = 'none';\n        bottomHitAreaStyles.display = 'none';\n      } else {\n        bottomStyles.display = 'block';\n        bottomHitAreaStyles.display = 'block';\n      }\n    } else {\n      topStyles.display = 'none';\n      bottomStyles.display = 'none';\n      topHitAreaStyles.display = 'none';\n      bottomHitAreaStyles.display = 'none';\n    }\n    if (row === this.wot.wtSettings.getSetting('fixedRowsTop') || col === this.wot.wtSettings.getSetting('fixedColumnsStart')) {\n      topStyles.zIndex = '9999';\n      topHitAreaStyles.zIndex = '9999';\n    } else {\n      topStyles.zIndex = '';\n      topHitAreaStyles.zIndex = '';\n    }\n  }\n\n  /**\r\n   * Show border around one or many cells.\r\n   *\r\n   * @param {Array} corners The corner coordinates.\r\n   */\n  appear(corners) {\n    if (this.disabled) {\n      return;\n    }\n    const {\n      wtTable,\n      rootDocument,\n      rootWindow\n    } = this.wot; // todo refactoring: consider about using internal facade (it is given by external code)\n    let fromRow;\n    let toRow;\n    let fromColumn;\n    let toColumn;\n    let rowHeader;\n    let columnHeader;\n    const rowsCount = wtTable.getRenderedRowsCount();\n    for (let i = 0; i < rowsCount; i += 1) {\n      const s = wtTable.rowFilter.renderedToSource(i);\n      if (s >= corners[0] && s <= corners[2]) {\n        fromRow = s;\n        rowHeader = corners[0];\n        break;\n      }\n    }\n    for (let i = rowsCount - 1; i >= 0; i -= 1) {\n      const s = wtTable.rowFilter.renderedToSource(i);\n      if (s >= corners[0] && s <= corners[2]) {\n        toRow = s;\n        break;\n      }\n    }\n    const columnsCount = wtTable.getRenderedColumnsCount();\n    for (let i = 0; i < columnsCount; i += 1) {\n      const s = wtTable.columnFilter.renderedToSource(i);\n      if (s >= corners[1] && s <= corners[3]) {\n        fromColumn = s;\n        columnHeader = corners[1];\n        break;\n      }\n    }\n    for (let i = columnsCount - 1; i >= 0; i -= 1) {\n      const s = wtTable.columnFilter.renderedToSource(i);\n      if (s >= corners[1] && s <= corners[3]) {\n        toColumn = s;\n        break;\n      }\n    }\n    if (fromRow === undefined || fromColumn === undefined) {\n      this.disappear();\n      return;\n    }\n    let fromTD = wtTable.getCell(this.wot.createCellCoords(fromRow, fromColumn));\n    const isMultiple = fromRow !== toRow || fromColumn !== toColumn;\n    const toTD = isMultiple ? wtTable.getCell(this.wot.createCellCoords(toRow, toColumn)) : fromTD;\n    const fromOffset = offset(fromTD);\n    const toOffset = isMultiple ? offset(toTD) : fromOffset;\n    const containerOffset = offset(wtTable.TABLE);\n    const containerWidth = outerWidth(wtTable.TABLE);\n    const minTop = fromOffset.top;\n    const minLeft = fromOffset.left;\n    const isRtl = this.wot.wtSettings.getSetting('rtlMode');\n    let inlineStartPos = 0;\n    let width = 0;\n    if (isRtl) {\n      const fromWidth = outerWidth(fromTD);\n      const gridRightPos = rootWindow.innerWidth - containerOffset.left - containerWidth;\n      width = minLeft + fromWidth - toOffset.left;\n      inlineStartPos = rootWindow.innerWidth - minLeft - fromWidth - gridRightPos - 1;\n    } else {\n      width = toOffset.left + outerWidth(toTD) - minLeft;\n      inlineStartPos = minLeft - containerOffset.left - 1;\n    }\n    if (this.isEntireColumnSelected(fromRow, toRow)) {\n      const modifiedValues = this.getDimensionsFromHeader('columns', fromColumn, toColumn, rowHeader, containerOffset);\n      let fromTH = null;\n      if (modifiedValues) {\n        [fromTH, inlineStartPos, width] = modifiedValues;\n      }\n      if (fromTH) {\n        fromTD = fromTH;\n      }\n    }\n    let top = minTop - containerOffset.top - 1;\n    let height = toOffset.top + outerHeight(toTD) - minTop;\n    if (this.isEntireRowSelected(fromColumn, toColumn)) {\n      const modifiedValues = this.getDimensionsFromHeader('rows', fromRow, toRow, columnHeader, containerOffset);\n      let fromTH = null;\n      if (modifiedValues) {\n        [fromTH, top, height] = modifiedValues;\n      }\n      if (fromTH) {\n        fromTD = fromTH;\n      }\n    }\n    const style = getComputedStyle(fromTD, rootWindow);\n    if (parseInt(style.borderTopWidth, 10) > 0) {\n      top += 1;\n      height = height > 0 ? height - 1 : 0;\n    }\n    if (parseInt(style[isRtl ? 'borderRightWidth' : 'borderLeftWidth'], 10) > 0) {\n      inlineStartPos += 1;\n      width = width > 0 ? width - 1 : 0;\n    }\n    const inlinePosProperty = isRtl ? 'right' : 'left';\n    this.topStyle.top = `${top}px`;\n    this.topStyle[inlinePosProperty] = `${inlineStartPos}px`;\n    this.topStyle.width = `${width}px`;\n    this.topStyle.display = 'block';\n    this.startStyle.top = `${top}px`;\n    this.startStyle[inlinePosProperty] = `${inlineStartPos}px`;\n    this.startStyle.height = `${height}px`;\n    this.startStyle.display = 'block';\n    const delta = Math.floor(this.settings.border.width / 2);\n    this.bottomStyle.top = `${top + height - delta}px`;\n    this.bottomStyle[inlinePosProperty] = `${inlineStartPos}px`;\n    this.bottomStyle.width = `${width}px`;\n    this.bottomStyle.display = 'block';\n    this.endStyle.top = `${top}px`;\n    this.endStyle[inlinePosProperty] = `${inlineStartPos + width - delta}px`;\n    this.endStyle.height = `${height + 1}px`;\n    this.endStyle.display = 'block';\n    let cornerVisibleSetting = this.settings.border.cornerVisible;\n    cornerVisibleSetting = typeof cornerVisibleSetting === 'function' ? cornerVisibleSetting(this.settings.layerLevel) : cornerVisibleSetting;\n    const hookResult = this.wot.getSetting('onModifyGetCellCoords', toRow, toColumn);\n    let [checkRow, checkCol] = [toRow, toColumn];\n    if (hookResult && Array.isArray(hookResult)) {\n      [,, checkRow, checkCol] = hookResult;\n    }\n    if (isMobileBrowser() || !cornerVisibleSetting || this.isPartRange(checkRow, checkCol)) {\n      this.cornerStyle.display = 'none';\n    } else {\n      this.cornerStyle.top = `${top + height + this.cornerCenterPointOffset - 1}px`;\n      this.cornerStyle[inlinePosProperty] = `${inlineStartPos + width + this.cornerCenterPointOffset - 1}px`;\n      this.cornerStyle.borderRightWidth = this.cornerDefaultStyle.borderWidth;\n      this.cornerStyle.width = this.cornerDefaultStyle.width;\n\n      // Hide the fill handle, so the possible further adjustments won't force unneeded scrollbars.\n      this.cornerStyle.display = 'none';\n      let trimmingContainer = getTrimmingContainer(wtTable.TABLE);\n      const trimToWindow = trimmingContainer === rootWindow;\n      if (trimToWindow) {\n        trimmingContainer = rootDocument.documentElement;\n      }\n      const cornerHalfWidth = parseInt(this.cornerDefaultStyle.width, 10) / 2;\n      const cornerHalfHeight = parseInt(this.cornerDefaultStyle.height, 10) / 2;\n      if (toColumn === this.wot.getSetting('totalColumns') - 1) {\n        const toTdOffsetLeft = trimToWindow ? toTD.getBoundingClientRect().left : toTD.offsetLeft;\n        let cornerOverlappingContainer = false;\n        let cornerEdge = 0;\n        if (isRtl) {\n          cornerEdge = toTdOffsetLeft - parseInt(this.cornerDefaultStyle.width, 10) / 2;\n          cornerOverlappingContainer = cornerEdge < 0;\n        } else {\n          cornerEdge = toTdOffsetLeft + outerWidth(toTD) + parseInt(this.cornerDefaultStyle.width, 10) / 2;\n          cornerOverlappingContainer = cornerEdge >= innerWidth(trimmingContainer);\n        }\n        if (cornerOverlappingContainer) {\n          this.cornerStyle[inlinePosProperty] = `${Math.floor(inlineStartPos + width + this.cornerCenterPointOffset - cornerHalfWidth)}px`;\n          this.cornerStyle[isRtl ? 'borderLeftWidth' : 'borderRightWidth'] = 0;\n        }\n      }\n      if (toRow === this.wot.getSetting('totalRows') - 1) {\n        const toTdOffsetTop = trimToWindow ? toTD.getBoundingClientRect().top : toTD.offsetTop;\n        const cornerBottomEdge = toTdOffsetTop + outerHeight(toTD) + parseInt(this.cornerDefaultStyle.height, 10) / 2;\n        const cornerOverlappingContainer = cornerBottomEdge >= innerHeight(trimmingContainer);\n        if (cornerOverlappingContainer) {\n          this.cornerStyle.top = `${Math.floor(top + height + this.cornerCenterPointOffset - cornerHalfHeight)}px`;\n          this.cornerStyle.borderBottomWidth = 0;\n        }\n      }\n      this.cornerStyle.display = 'block';\n    }\n    if (isMobileBrowser() && this.instance.getSetting('isDataViewInstance')) {\n      this.updateMultipleSelectionHandlesPosition(toRow, toColumn, top, inlineStartPos, width, height);\n    }\n  }\n\n  /**\r\n   * Check whether an entire column of cells is selected.\r\n   *\r\n   * @private\r\n   * @param {number} startRowIndex Start row index.\r\n   * @param {number} endRowIndex End row index.\r\n   * @returns {boolean}\r\n   */\n  isEntireColumnSelected(startRowIndex, endRowIndex) {\n    return startRowIndex === this.wot.wtTable.getFirstRenderedRow() && endRowIndex === this.wot.wtTable.getLastRenderedRow();\n  }\n\n  /**\r\n   * Check whether an entire row of cells is selected.\r\n   *\r\n   * @private\r\n   * @param {number} startColumnIndex Start column index.\r\n   * @param {number} endColumnIndex End column index.\r\n   * @returns {boolean}\r\n   */\n  isEntireRowSelected(startColumnIndex, endColumnIndex) {\n    return startColumnIndex === this.wot.wtTable.getFirstRenderedColumn() && endColumnIndex === this.wot.wtTable.getLastRenderedColumn();\n  }\n\n  /**\r\n   * Get left/top index and width/height depending on the `direction` provided.\r\n   *\r\n   * @private\r\n   * @param {string} direction `rows` or `columns`, defines if an entire column or row is selected.\r\n   * @param {number} fromIndex Start index of the selection.\r\n   * @param {number} toIndex End index of the selection.\r\n   * @param {number} headerIndex The header index as negative value.\r\n   * @param {number} containerOffset Offset of the container.\r\n   * @returns {Array|boolean} Returns an array of [headerElement, left, width] or [headerElement, top, height], depending on `direction` (`false` in case of an error getting the headers).\r\n   */\n  getDimensionsFromHeader(direction, fromIndex, toIndex, headerIndex, containerOffset) {\n    const {\n      wtTable\n    } = this.wot;\n    const rootHotElement = wtTable.wtRootElement.parentNode;\n    let getHeaderFn = null;\n    let dimensionFn = null;\n    let entireSelectionClassname = null;\n    let index = null;\n    let dimension = null;\n    let dimensionProperty = null;\n    let startHeader = null;\n    let endHeader = null;\n    switch (direction) {\n      case 'rows':\n        getHeaderFn = function () {\n          return wtTable.getRowHeader(...arguments);\n        };\n        dimensionFn = function () {\n          return outerHeight(...arguments);\n        };\n        entireSelectionClassname = 'ht__selection--rows';\n        dimensionProperty = 'top';\n        break;\n      case 'columns':\n        getHeaderFn = function () {\n          return wtTable.getColumnHeader(...arguments);\n        };\n        dimensionFn = function () {\n          return outerWidth(...arguments);\n        };\n        entireSelectionClassname = 'ht__selection--columns';\n        dimensionProperty = 'left';\n        break;\n      default:\n    }\n    if (rootHotElement.classList.contains(entireSelectionClassname)) {\n      const columnHeaderLevelCount = this.wot.getSetting('columnHeaders').length;\n      startHeader = getHeaderFn(fromIndex, columnHeaderLevelCount - headerIndex);\n      endHeader = getHeaderFn(toIndex, columnHeaderLevelCount - headerIndex);\n      if (!startHeader || !endHeader) {\n        return false;\n      }\n      const startHeaderOffset = offset(startHeader);\n      const endOffset = offset(endHeader);\n      if (startHeader && endHeader) {\n        index = startHeaderOffset[dimensionProperty] - containerOffset[dimensionProperty] - 1;\n        dimension = endOffset[dimensionProperty] + dimensionFn(endHeader) - startHeaderOffset[dimensionProperty];\n      }\n      return [startHeader, index, dimension];\n    }\n    return false;\n  }\n\n  /**\r\n   * Change border style.\r\n   *\r\n   * @private\r\n   * @param {string} borderElement Coordinate where add/remove border: top, bottom, start, end.\r\n   * @param {object} border The border object descriptor.\r\n   */\n  changeBorderStyle(borderElement, border) {\n    const style = this[borderElement].style;\n    const borderStyle = border[borderElement];\n    if (!borderStyle || borderStyle.hide) {\n      addClass(this[borderElement], 'hidden');\n    } else {\n      if (hasClass(this[borderElement], 'hidden')) {\n        removeClass(this[borderElement], 'hidden');\n      }\n      style.backgroundColor = borderStyle.color;\n      if (borderElement === 'top' || borderElement === 'bottom') {\n        style.height = `${borderStyle.width}px`;\n      }\n      if (borderElement === 'start' || borderElement === 'end') {\n        style.width = `${borderStyle.width}px`;\n      }\n    }\n  }\n\n  /**\r\n   * Change border style to default.\r\n   *\r\n   * @private\r\n   * @param {string} position The position type (\"top\", \"bottom\", \"start\", \"end\") to change.\r\n   */\n  changeBorderToDefaultStyle(position) {\n    const defaultBorder = {\n      width: 1,\n      color: '#000'\n    };\n    const style = this[position].style;\n    style.backgroundColor = defaultBorder.color;\n    style.width = `${defaultBorder.width}px`;\n    style.height = `${defaultBorder.width}px`;\n  }\n\n  /**\r\n   * Toggle class 'hidden' to element.\r\n   *\r\n   * @private\r\n   * @param {string} borderElement Coordinate where add/remove border: top, bottom, start, end.\r\n   * @param {boolean} [remove] Defines type of the action to perform.\r\n   */\n  toggleHiddenClass(borderElement, remove) {\n    this.changeBorderToDefaultStyle(borderElement);\n    if (remove) {\n      addClass(this[borderElement], 'hidden');\n    } else {\n      removeClass(this[borderElement], 'hidden');\n    }\n  }\n\n  /**\r\n   * Hide border.\r\n   */\n  disappear() {\n    this.topStyle.display = 'none';\n    this.bottomStyle.display = 'none';\n    this.startStyle.display = 'none';\n    this.endStyle.display = 'none';\n    this.cornerStyle.display = 'none';\n    if (isMobileBrowser() && this.instance.getSetting('isDataViewInstance')) {\n      this.selectionHandles.styles.top.display = 'none';\n      this.selectionHandles.styles.topHitArea.display = 'none';\n      this.selectionHandles.styles.bottom.display = 'none';\n      this.selectionHandles.styles.bottomHitArea.display = 'none';\n    }\n  }\n\n  /**\r\n   * Cleans up all the DOM state related to a Border instance. Call this prior to deleting a Border instance.\r\n   */\n  destroy() {\n    this.eventManager.destroyWithOwnEventsOnly();\n    this.main.parentNode.removeChild(this.main);\n  }\n}\nexport default Border;", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { removeClass, addClass, setAttribute, removeAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { SelectionScanner } from \"./scanner.mjs\";\nimport Border from \"./border/border.mjs\";\n/**\r\n * Module responsible for rendering selections (CSS classes) and borders based on the\r\n * collection of the Selection instances provided throughout the `selections` Walkontable\r\n * setting.\r\n *\r\n * @private\r\n */\nvar _activeOverlaysWot = /*#__PURE__*/new WeakMap();\nvar _selections = /*#__PURE__*/new WeakMap();\nvar _scanner = /*#__PURE__*/new WeakMap();\nvar _appliedClasses = /*#__PURE__*/new WeakMap();\nvar _destroyListeners = /*#__PURE__*/new WeakMap();\nvar _selectionBorders = /*#__PURE__*/new WeakMap();\nvar _SelectionManager_brand = /*#__PURE__*/new WeakSet();\nexport class SelectionManager {\n  constructor(selections) {\n    /**\r\n     * Resets the elements to their initial state (remove the CSS classes that are added in the\r\n     * previous render cycle).\r\n     */\n    _classPrivateMethodInitSpec(this, _SelectionManager_brand);\n    /**\r\n     * The overlay's Walkontable instance that are currently processed.\r\n     *\r\n     * @type {Walkontable}\r\n     */\n    _classPrivateFieldInitSpec(this, _activeOverlaysWot, void 0);\n    /**\r\n     * The Highlight instance that holds Selections instances within it.\r\n     *\r\n     * @type {Highlight|null}\r\n     */\n    _classPrivateFieldInitSpec(this, _selections, void 0);\n    /**\r\n     * The SelectionScanner allows to scan and collect the cell and header elements that matches\r\n     * to the coords defined in the selections.\r\n     *\r\n     * @type {SelectionScanner}\r\n     */\n    _classPrivateFieldInitSpec(this, _scanner, new SelectionScanner());\n    /**\r\n     * The Map tracks applied CSS classes. It's used to reset the elements state to their initial state.\r\n     *\r\n     * @type {WeakMap}\r\n     */\n    _classPrivateFieldInitSpec(this, _appliedClasses, new WeakMap());\n    /**\r\n     * The Map tracks applied \"destroy\" listeners for Selection instances.\r\n     *\r\n     * @type {WeakMap}\r\n     */\n    _classPrivateFieldInitSpec(this, _destroyListeners, new WeakSet());\n    /**\r\n     * The Map holds references to Border classes for Selection instances which requires that when\r\n     * the \"border\" setting is defined.\r\n     *\r\n     * @type {Map}\r\n     */\n    _classPrivateFieldInitSpec(this, _selectionBorders, new Map());\n    _classPrivateFieldSet(_selections, this, selections);\n  }\n\n  /**\r\n   * Sets the active Walkontable instance.\r\n   *\r\n   * @param {Walkontable} activeWot The overlays or master Walkontable instance.\r\n   * @returns {SelectionManager}\r\n   */\n  setActiveOverlay(activeWot) {\n    _classPrivateFieldSet(_activeOverlaysWot, this, activeWot);\n    _classPrivateFieldGet(_scanner, this).setActiveOverlay(_classPrivateFieldGet(_activeOverlaysWot, this));\n    if (!_classPrivateFieldGet(_appliedClasses, this).has(_classPrivateFieldGet(_activeOverlaysWot, this))) {\n      _classPrivateFieldGet(_appliedClasses, this).set(_classPrivateFieldGet(_activeOverlaysWot, this), new Set());\n    }\n    return this;\n  }\n\n  /**\r\n   * Gets the Selection instance of the \"focus\" type.\r\n   *\r\n   * @returns {Selection|null}\r\n   */\n  getFocusSelection() {\n    return _classPrivateFieldGet(_selections, this) !== null ? _classPrivateFieldGet(_selections, this).getFocus() : null;\n  }\n\n  /**\r\n   * Gets the Selection instance of the \"area\" type.\r\n   *\r\n   * @returns {Selection|null}\r\n   */\n  getAreaSelection() {\n    return _classPrivateFieldGet(_selections, this) !== null ? _classPrivateFieldGet(_selections, this).createLayeredArea() : null;\n  }\n\n  /**\r\n   * Gets the Border instance associated with Selection instance.\r\n   *\r\n   * @param {Selection} selection The selection instance.\r\n   * @returns {Border|null} Returns the Border instance (new for each overlay Walkontable instance).\r\n   */\n  getBorderInstance(selection) {\n    if (!selection.settings.border) {\n      return null;\n    }\n    if (_classPrivateFieldGet(_selectionBorders, this).has(selection)) {\n      const borders = _classPrivateFieldGet(_selectionBorders, this).get(selection);\n      if (borders.has(_classPrivateFieldGet(_activeOverlaysWot, this))) {\n        return borders.get(_classPrivateFieldGet(_activeOverlaysWot, this));\n      }\n      const border = new Border(_classPrivateFieldGet(_activeOverlaysWot, this), selection.settings);\n      borders.set(_classPrivateFieldGet(_activeOverlaysWot, this), border);\n      return border;\n    }\n    const border = new Border(_classPrivateFieldGet(_activeOverlaysWot, this), selection.settings);\n    _classPrivateFieldGet(_selectionBorders, this).set(selection, new Map([[_classPrivateFieldGet(_activeOverlaysWot, this), border]]));\n    return border;\n  }\n\n  /**\r\n   * Gets all Border instances associated with Selection instance for all overlays.\r\n   *\r\n   * @param {Selection} selection The selection instance.\r\n   * @returns {Border[]}\r\n   */\n  getBorderInstances(selection) {\n    var _classPrivateFieldGet2, _classPrivateFieldGet3;\n    return Array.from((_classPrivateFieldGet2 = (_classPrivateFieldGet3 = _classPrivateFieldGet(_selectionBorders, this).get(selection)) === null || _classPrivateFieldGet3 === void 0 ? void 0 : _classPrivateFieldGet3.values()) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : []);\n  }\n\n  /**\r\n   * Destroys the Border instance associated with Selection instance.\r\n   *\r\n   * @param {Selection} selection The selection instance.\r\n   */\n  destroyBorders(selection) {\n    _classPrivateFieldGet(_selectionBorders, this).get(selection).forEach(border => border.destroy());\n    _classPrivateFieldGet(_selectionBorders, this).delete(selection);\n  }\n\n  /**\r\n   * Renders all the selections (add CSS classes to cells and draw borders).\r\n   *\r\n   * @param {boolean} fastDraw Indicates the render cycle type (fast/slow).\r\n   */\n  render(fastDraw) {\n    if (_classPrivateFieldGet(_selections, this) === null) {\n      return;\n    }\n    if (fastDraw) {\n      // there was no rerender, so we need to remove classNames by ourselves\n      _assertClassBrand(_SelectionManager_brand, this, _resetCells).call(this);\n    }\n    const selections = Array.from(_classPrivateFieldGet(_selections, this));\n    const classNamesMap = new Map();\n    const headerAttributesMap = new Map();\n    for (let i = 0; i < selections.length; i++) {\n      const selection = selections[i];\n      const {\n        className,\n        headerAttributes,\n        createLayers,\n        selectionType\n      } = selection.settings;\n      if (!_classPrivateFieldGet(_destroyListeners, this).has(selection)) {\n        _classPrivateFieldGet(_destroyListeners, this).add(selection);\n        selection.addLocalHook('destroy', () => this.destroyBorders(selection));\n      }\n      const borderInstance = this.getBorderInstance(selection);\n      if (selection.isEmpty()) {\n        borderInstance === null || borderInstance === void 0 || borderInstance.disappear();\n        continue; // eslint-disable-line no-continue\n      }\n      if (className) {\n        const elements = _classPrivateFieldGet(_scanner, this).setActiveSelection(selection).scan();\n        elements.forEach(element => {\n          if (classNamesMap.has(element)) {\n            const classNamesLayers = classNamesMap.get(element);\n            if (classNamesLayers.has(className) && createLayers === true) {\n              classNamesLayers.set(className, classNamesLayers.get(className) + 1);\n            } else {\n              classNamesLayers.set(className, 1);\n            }\n          } else {\n            classNamesMap.set(element, new Map([[className, 1]]));\n          }\n          if (headerAttributes) {\n            if (!headerAttributesMap.has(element)) {\n              headerAttributesMap.set(element, []);\n            }\n            if (element.nodeName === 'TH') {\n              headerAttributesMap.get(element).push(...headerAttributes);\n            }\n          }\n        });\n      }\n      const corners = selection.getCorners();\n      _classPrivateFieldGet(_activeOverlaysWot, this).getSetting('onBeforeDrawBorders', corners, selectionType);\n      borderInstance === null || borderInstance === void 0 || borderInstance.appear(corners);\n    }\n    classNamesMap.forEach((classNamesLayers, element) => {\n      var _classPrivateFieldGet4;\n      const classNames = Array.from(classNamesLayers).map(_ref => {\n        let [className, occurrenceCount] = _ref;\n        if (occurrenceCount === 1) {\n          return className;\n        }\n        return [className, ...Array.from({\n          length: occurrenceCount - 1\n        }, (_, i) => `${className}-${i + 1}`)];\n      }).flat();\n      classNames.forEach(className => _classPrivateFieldGet(_appliedClasses, this).get(_classPrivateFieldGet(_activeOverlaysWot, this)).add(className));\n      addClass(element, classNames);\n      if (element.nodeName === 'TD' && Array.isArray((_classPrivateFieldGet4 = _classPrivateFieldGet(_selections, this).options) === null || _classPrivateFieldGet4 === void 0 ? void 0 : _classPrivateFieldGet4.cellAttributes)) {\n        setAttribute(element, _classPrivateFieldGet(_selections, this).options.cellAttributes);\n      }\n    });\n\n    // Set the attributes for the headers if they're focused.\n    Array.from(headerAttributesMap.keys()).forEach(element => {\n      setAttribute(element, [...headerAttributesMap.get(element)]);\n    });\n  }\n}\nfunction _resetCells() {\n  const appliedOverlaysClasses = _classPrivateFieldGet(_appliedClasses, this).get(_classPrivateFieldGet(_activeOverlaysWot, this));\n  const classesToRemove = _classPrivateFieldGet(_activeOverlaysWot, this).wtSettings.getSetting('onBeforeRemoveCellClassNames');\n  if (Array.isArray(classesToRemove)) {\n    for (let i = 0; i < classesToRemove.length; i++) {\n      appliedOverlaysClasses.add(classesToRemove[i]);\n    }\n  }\n  appliedOverlaysClasses.forEach(className => {\n    var _classPrivateFieldGet5, _classPrivateFieldGet6;\n    const nodes = _classPrivateFieldGet(_activeOverlaysWot, this).wtTable.TABLE.querySelectorAll(`.${className}`);\n    let cellAttributes = [];\n    if (Array.isArray((_classPrivateFieldGet5 = _classPrivateFieldGet(_selections, this).options) === null || _classPrivateFieldGet5 === void 0 ? void 0 : _classPrivateFieldGet5.cellAttributes)) {\n      cellAttributes = _classPrivateFieldGet(_selections, this).options.cellAttributes.map(el => el[0]);\n    }\n    if (Array.isArray((_classPrivateFieldGet6 = _classPrivateFieldGet(_selections, this).options) === null || _classPrivateFieldGet6 === void 0 ? void 0 : _classPrivateFieldGet6.headerAttributes)) {\n      cellAttributes = [...cellAttributes, ..._classPrivateFieldGet(_selections, this).options.headerAttributes.map(el => el[0])];\n    }\n    for (let i = 0, len = nodes.length; i < len; i++) {\n      removeClass(nodes[i], className);\n      removeAttribute(nodes[i], cellAttributes);\n    }\n  });\n  appliedOverlaysClasses.clear();\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { addClass, getScrollbarWidth, getScrollLeft, getMaximumScrollLeft, getWindowScrollTop, hasClass, outerWidth, removeClass, setOverlayPosition, resetCssTransform } from \"../../../../helpers/dom/element.mjs\";\nimport InlineStartOverlayTable from \"../table/inlineStart.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CORNER_DEFAULT_STYLE } from \"../selection/index.mjs\";\nimport { CLONE_INLINE_START } from \"./constants.mjs\";\n/**\r\n * @class InlineStartOverlay\r\n */\nexport class InlineStartOverlay extends Overlay {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\r\n   */\n  constructor(wotInstance, facadeGetter, wtSettings, domBindings) {\n    super(wotInstance, facadeGetter, CLONE_INLINE_START, wtSettings, domBindings);\n  }\n\n  /**\r\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\r\n   *\r\n   * @see Table#constructor\r\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\r\n   * @returns {InlineStartOverlayTable}\r\n   */\n  createTable() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new InlineStartOverlayTable(...args);\n  }\n\n  /**\r\n   * Checks if overlay should be fully rendered.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  shouldBeRendered() {\n    return this.wtSettings.getSetting('shouldRenderInlineStartOverlay');\n  }\n\n  /**\r\n   * Updates the left overlay position.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  resetFixedPosition() {\n    const {\n      wtTable\n    } = this.wot;\n    if (!this.needFullRender || !this.shouldBeRendered() || !wtTable.holder.parentNode) {\n      // removed from DOM\n      return false;\n    }\n    const {\n      rootWindow\n    } = this.domBindings;\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    let overlayPosition = 0;\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'horizontal')) {\n      overlayPosition = this.getOverlayOffset() * (this.isRtl() ? -1 : 1);\n      setOverlayPosition(overlayRoot, `${overlayPosition}px`, '0px');\n    } else {\n      overlayPosition = this.getScrollPosition();\n      resetCssTransform(overlayRoot);\n    }\n    const positionChanged = this.adjustHeaderBordersPosition(overlayPosition);\n    this.adjustElementsSize();\n    return positionChanged;\n  }\n\n  /**\r\n   * Sets the main overlay's horizontal scroll position.\r\n   *\r\n   * @param {number} pos The scroll position.\r\n   * @returns {boolean}\r\n   */\n  setScrollPosition(pos) {\n    const {\n      rootWindow\n    } = this.domBindings;\n    let result = false;\n    if (this.isRtl()) {\n      pos = -pos;\n    }\n    if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollX !== pos) {\n      rootWindow.scrollTo(pos, getWindowScrollTop(rootWindow));\n      result = true;\n    } else if (this.mainTableScrollableElement.scrollLeft !== pos) {\n      this.mainTableScrollableElement.scrollLeft = pos;\n      result = true;\n    }\n    return result;\n  }\n\n  /**\r\n   * Triggers onScroll hook callback.\r\n   */\n  onScroll() {\n    this.wtSettings.getSetting('onScrollVertically');\n  }\n\n  /**\r\n   * Calculates total sum cells width.\r\n   *\r\n   * @param {number} from Column index which calculates started from.\r\n   * @param {number} to Column index where calculation is finished.\r\n   * @returns {number} Width sum.\r\n   */\n  sumCellSizes(from, to) {\n    const defaultColumnWidth = this.wtSettings.getSetting('defaultColumnWidth');\n    let column = from;\n    let sum = 0;\n    while (column < to) {\n      sum += this.wot.wtTable.getStretchedColumnWidth(column) || defaultColumnWidth;\n      column += 1;\n    }\n    return sum;\n  }\n\n  /**\r\n   * Adjust overlay root element, children and master table element sizes (width, height).\r\n   */\n  adjustElementsSize() {\n    this.updateTrimmingContainer();\n    if (this.needFullRender) {\n      this.adjustRootElementSize();\n      this.adjustRootChildrenSize();\n    }\n  }\n\n  /**\r\n   * Adjust overlay root element size (width and height).\r\n   */\n  adjustRootElementSize() {\n    const {\n      wtTable\n    } = this.wot;\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n    const scrollbarHeight = getScrollbarWidth(rootDocument);\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    const overlayRootStyle = overlayRoot.style;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    if (this.trimmingContainer !== rootWindow || preventOverflow === 'vertical') {\n      let height = this.wot.wtViewport.getWorkspaceHeight();\n      if (this.wot.wtOverlays.hasScrollbarBottom) {\n        height -= scrollbarHeight;\n      }\n      height = Math.min(height, wtTable.wtRootElement.scrollHeight);\n      overlayRootStyle.height = `${height}px`;\n    } else {\n      overlayRootStyle.height = '';\n    }\n    this.clone.wtTable.holder.style.height = overlayRootStyle.height;\n    const tableWidth = outerWidth(this.clone.wtTable.TABLE);\n    overlayRootStyle.width = `${tableWidth}px`;\n  }\n\n  /**\r\n   * Adjust overlay root childs size.\r\n   */\n  adjustRootChildrenSize() {\n    const {\n      holder\n    } = this.clone.wtTable;\n    const selectionCornerOffset = this.wot.selectionManager.getFocusSelection() ? parseInt(CORNER_DEFAULT_STYLE.width, 10) / 2 : 0;\n    this.clone.wtTable.hider.style.height = this.hider.style.height;\n    holder.style.height = holder.parentNode.style.height;\n    // Add selection corner protruding part to the holder total width to make sure that\n    // borders' corner won't be cut after horizontal scroll (#6937).\n    holder.style.width = `${parseInt(holder.parentNode.style.width, 10) + selectionCornerOffset}px`;\n  }\n\n  /**\r\n   * Adjust the overlay dimensions and position.\r\n   */\n  applyToDOM() {\n    const total = this.wtSettings.getSetting('totalColumns');\n    const styleProperty = this.isRtl() ? 'right' : 'left';\n    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n      this.spreader.style[styleProperty] = `${this.wot.wtViewport.columnsRenderCalculator.startPosition}px`;\n    } else if (total === 0) {\n      this.spreader.style[styleProperty] = '0';\n    } else {\n      throw new Error('Incorrect value of the columnsRenderCalculator');\n    }\n    if (this.isRtl()) {\n      this.spreader.style.left = '';\n    } else {\n      this.spreader.style.right = '';\n    }\n    if (this.needFullRender) {\n      this.syncOverlayOffset();\n    }\n  }\n\n  /**\r\n   * Synchronize calculated top position to an element.\r\n   */\n  syncOverlayOffset() {\n    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n      this.clone.wtTable.spreader.style.top = `${this.wot.wtViewport.rowsRenderCalculator.startPosition}px`;\n    } else {\n      this.clone.wtTable.spreader.style.top = '';\n    }\n  }\n\n  /**\r\n   * Scrolls horizontally to a column at the left edge of the viewport.\r\n   *\r\n   * @param {number} sourceCol  Column index which you want to scroll to.\r\n   * @param {boolean} [beyondRendered]  If `true`, scrolls according to the right\r\n   *                                    edge (left edge is by default).\r\n   * @returns {boolean}\r\n   */\n  scrollTo(sourceCol, beyondRendered) {\n    const {\n      wtSettings\n    } = this;\n    const rowHeaders = wtSettings.getSetting('rowHeaders');\n    const fixedColumnsStart = wtSettings.getSetting('fixedColumnsStart');\n    const sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n    const mainHolder = sourceInstance.wtTable.holder;\n    const rowHeaderBorderCompensation = fixedColumnsStart === 0 && rowHeaders.length > 0 && !hasClass(mainHolder.parentNode, 'innerBorderInlineStart') ? 1 : 0;\n    let newX = this.getTableParentOffset();\n    let scrollbarCompensation = 0;\n    if (beyondRendered) {\n      const columnWidth = this.wot.wtTable.getColumnWidth(sourceCol);\n      const viewportWidth = this.wot.wtViewport.getViewportWidth();\n      if (columnWidth > viewportWidth) {\n        beyondRendered = false;\n      }\n    }\n    if (beyondRendered && mainHolder.offsetWidth !== mainHolder.clientWidth) {\n      scrollbarCompensation = getScrollbarWidth(this.domBindings.rootDocument);\n    }\n    if (beyondRendered) {\n      newX += this.sumCellSizes(0, sourceCol + 1);\n      newX -= this.wot.wtViewport.getViewportWidth();\n      // Compensate for the right header border if scrolled from the absolute left.\n      newX += rowHeaderBorderCompensation;\n    } else {\n      newX += this.sumCellSizes(this.wtSettings.getSetting('fixedColumnsStart'), sourceCol);\n    }\n    newX += scrollbarCompensation;\n\n    // If the table is scrolled all the way left when starting the scroll and going to be scrolled to the far right,\n    // we need to compensate for the potential header border width.\n    if (getMaximumScrollLeft(this.mainTableScrollableElement) === newX - rowHeaderBorderCompensation && rowHeaderBorderCompensation > 0) {\n      this.wot.wtOverlays.expandHiderHorizontallyBy(rowHeaderBorderCompensation);\n    }\n    return this.setScrollPosition(newX);\n  }\n\n  /**\r\n   * Gets table parent left position.\r\n   *\r\n   * @returns {number}\r\n   */\n  getTableParentOffset() {\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    let offset = 0;\n    if (!preventOverflow && this.trimmingContainer === this.domBindings.rootWindow) {\n      offset = this.wot.wtTable.holderOffset.left;\n    }\n    return offset;\n  }\n\n  /**\r\n   * Gets the main overlay's horizontal scroll position.\r\n   *\r\n   * @returns {number} Main table's horizontal scroll position.\r\n   */\n  getScrollPosition() {\n    return Math.abs(getScrollLeft(this.mainTableScrollableElement, this.domBindings.rootWindow));\n  }\n\n  /**\r\n   * Gets the main overlay's horizontal overlay offset.\r\n   *\r\n   * @returns {number} Main table's horizontal overlay offset.\r\n   */\n  getOverlayOffset() {\n    const {\n      rootWindow\n    } = this.domBindings;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    let overlayOffset = 0;\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'horizontal')) {\n      if (this.isRtl()) {\n        overlayOffset = Math.abs(Math.min(this.getTableParentOffset() - this.getScrollPosition(), 0));\n      } else {\n        overlayOffset = Math.max(this.getScrollPosition() - this.getTableParentOffset(), 0);\n      }\n      const rootWidth = this.wot.wtTable.getTotalWidth();\n      const overlayRootWidth = this.clone.wtTable.getTotalWidth();\n      const maxOffset = rootWidth - overlayRootWidth;\n      if (overlayOffset > maxOffset) {\n        overlayOffset = 0;\n      }\n    }\n    return overlayOffset;\n  }\n\n  /**\r\n   * Adds css classes to hide the header border's header (cell-selection border hiding issue).\r\n   *\r\n   * @param {number} position Header X position if trimming container is window or scroll top if not.\r\n   * @returns {boolean}\r\n   */\n  adjustHeaderBordersPosition(position) {\n    const {\n      wtSettings\n    } = this;\n    const masterParent = this.wot.wtTable.holder.parentNode;\n    const rowHeaders = wtSettings.getSetting('rowHeaders');\n    const fixedColumnsStart = wtSettings.getSetting('fixedColumnsStart');\n    const totalRows = wtSettings.getSetting('totalRows');\n    const preventVerticalOverflow = wtSettings.getSetting('preventOverflow') === 'vertical';\n    if (totalRows) {\n      removeClass(masterParent, 'emptyRows');\n    } else {\n      addClass(masterParent, 'emptyRows');\n    }\n    let positionChanged = false;\n    if (!preventVerticalOverflow) {\n      if (fixedColumnsStart && !rowHeaders.length) {\n        // \"innerBorderLeft\" is for backward compatibility\n        addClass(masterParent, 'innerBorderLeft innerBorderInlineStart');\n      } else if (!fixedColumnsStart && rowHeaders.length) {\n        const previousState = hasClass(masterParent, 'innerBorderInlineStart');\n        if (position) {\n          addClass(masterParent, 'innerBorderLeft innerBorderInlineStart');\n          positionChanged = !previousState;\n        } else {\n          removeClass(masterParent, 'innerBorderLeft innerBorderInlineStart');\n          positionChanged = previousState;\n        }\n      }\n    }\n    return positionChanged;\n  }\n}", "import { defineGetter } from \"../../../../../helpers/object.mjs\";\nconst MIXIN_NAME = 'stickyRowsTop';\n\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to rows.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use sticky rendering of the top rows in the vertical axis.\r\n *\r\n * @type {object}\r\n */\nconst stickyRowsTop = {\n  /**\r\n   * Get the source index of the first rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstRenderedRow() {\n    const totalRows = this.wtSettings.getSetting('totalRows');\n    if (totalRows === 0) {\n      return -1;\n    }\n    return 0;\n  },\n  /**\r\n   * Get the source index of the first row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstVisibleRow() {\n    return this.getFirstRenderedRow();\n  },\n  /**\r\n   * Get the source index of the first row partially visible in the viewport. If no rows are partially visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getFirstPartiallyVisibleRow() {\n    return this.getFirstRenderedRow();\n  },\n  /**\r\n   * Get the source index of the last rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastRenderedRow() {\n    return this.getRenderedRowsCount() - 1;\n  },\n  /**\r\n   * Get the source index of the last row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastVisibleRow() {\n    return this.getLastRenderedRow();\n  },\n  /**\r\n   * Get the source index of the last row partially visible in the viewport. If no rows are partially visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getLastPartiallyVisibleRow() {\n    return this.getLastRenderedRow();\n  },\n  /**\r\n   * Get the number of rendered rows.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getRenderedRowsCount() {\n    const totalRows = this.wtSettings.getSetting('totalRows');\n    return Math.min(this.wtSettings.getSetting('fixedRowsTop'), totalRows);\n  },\n  /**\r\n   * Get the number of fully visible rows in the viewport.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getVisibleRowsCount() {\n    return this.getRenderedRowsCount();\n  },\n  /**\r\n   * Get the number of rendered column headers.\r\n   *\r\n   * @returns {number}\r\n   * @this Table\r\n   */\n  getColumnHeadersCount() {\n    return this.dataAccessObject.columnHeaders.length;\n  }\n};\ndefineGetter(stickyRowsTop, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default stickyRowsTop;", "import Table from \"../table.mjs\";\nimport stickyRowsTop from \"./mixin/stickyRowsTop.mjs\";\nimport stickyColumnsStart from \"./mixin/stickyColumnsStart.mjs\";\nimport { mixin } from \"../../../../helpers/object.mjs\";\nimport { CLONE_TOP_INLINE_START_CORNER } from \"../overlay/index.mjs\";\n/**\r\n * Subclass of `Table` that provides the helper methods relevant to topInlineStartCornerOverlay\r\n * (in RTL mode the overlay sits on the right of the screen), implemented through mixins.\r\n *\r\n * @mixes stickyRowsTop\r\n * @mixes stickyColumnsStart\r\n */\nclass TopInlineStartCornerOverlayTable extends Table {\n  /**\r\n   * @param {TableDao} dataAccessObject The data access object.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   */\n  constructor(dataAccessObject, facadeGetter, domBindings, wtSettings) {\n    super(dataAccessObject, facadeGetter, domBindings, wtSettings, CLONE_TOP_INLINE_START_CORNER);\n  }\n}\nmixin(TopInlineStartCornerOverlayTable, stickyRowsTop);\nmixin(TopInlineStartCornerOverlayTable, stickyColumnsStart);\nexport default TopInlineStartCornerOverlayTable;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { outerHeight, outerWidth, setOverlayPosition, resetCssTransform } from \"../../../../helpers/dom/element.mjs\";\nimport TopInlineStartCornerOverlayTable from \"../table/topInlineStartCorner.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_TOP_INLINE_START_CORNER } from \"./constants.mjs\";\n/**\r\n * @class TopInlineStartCornerOverlay\r\n */\nexport class TopInlineStartCornerOverlay extends Overlay {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\r\n   * @param {TopOverlay} topOverlay The instance of the Top overlay.\r\n   * @param {InlineStartOverlay} inlineStartOverlay The instance of the InlineStart overlay.\r\n   */\n  constructor(wotInstance, facadeGetter, wtSettings, domBindings, topOverlay, inlineStartOverlay) {\n    super(wotInstance, facadeGetter, CLONE_TOP_INLINE_START_CORNER, wtSettings, domBindings);\n    /**\r\n     * The instance of the Top overlay.\r\n     *\r\n     * @type {TopOverlay}\r\n     */\n    _defineProperty(this, \"topOverlay\", void 0);\n    /**\r\n     * The instance of the InlineStart overlay.\r\n     *\r\n     * @type {InlineStartOverlay}\r\n     */\n    _defineProperty(this, \"inlineStartOverlay\", void 0);\n    this.topOverlay = topOverlay;\n    this.inlineStartOverlay = inlineStartOverlay;\n  }\n\n  /**\r\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\r\n   *\r\n   * @see Table#constructor\r\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\r\n   * @returns {TopInlineStartCornerOverlayTable}\r\n   */\n  createTable() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new TopInlineStartCornerOverlayTable(...args);\n  }\n\n  /**\r\n   * Checks if overlay should be fully rendered.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  shouldBeRendered() {\n    return this.wtSettings.getSetting('shouldRenderTopOverlay') && this.wtSettings.getSetting('shouldRenderInlineStartOverlay');\n  }\n\n  /**\r\n   * Updates the corner overlay position.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  resetFixedPosition() {\n    this.updateTrimmingContainer();\n    if (!this.wot.wtTable.holder.parentNode) {\n      // removed from DOM\n      return false;\n    }\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    if (this.trimmingContainer === this.domBindings.rootWindow) {\n      const left = this.inlineStartOverlay.getOverlayOffset() * (this.isRtl() ? -1 : 1);\n      const top = this.topOverlay.getOverlayOffset();\n      setOverlayPosition(overlayRoot, `${left}px`, `${top}px`);\n    } else {\n      resetCssTransform(overlayRoot);\n    }\n    let tableHeight = outerHeight(this.clone.wtTable.TABLE);\n    const tableWidth = outerWidth(this.clone.wtTable.TABLE);\n    if (!this.wot.wtTable.hasDefinedSize()) {\n      tableHeight = 0;\n    }\n    overlayRoot.style.height = `${tableHeight}px`;\n    overlayRoot.style.width = `${tableWidth}px`;\n    return false;\n  }\n}", "import Table from \"../table.mjs\";\nimport stickyRowsTop from \"./mixin/stickyRowsTop.mjs\";\nimport calculatedColumns from \"./mixin/calculatedColumns.mjs\";\nimport { mixin } from \"../../../../helpers/object.mjs\";\nimport { CLONE_TOP } from \"../overlay/index.mjs\";\n/**\r\n * Subclass of `Table` that provides the helper methods relevant to TopOverlay, implemented through mixins.\r\n *\r\n * @mixes stickyRowsTop\r\n * @mixes calculatedColumns\r\n */\nclass TopOverlayTable extends Table {\n  /**\r\n   * @param {TableDao} dataAccessObject The data access object.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   */\n  constructor(dataAccessObject, facadeGetter, domBindings, wtSettings) {\n    super(dataAccessObject, facadeGetter, domBindings, wtSettings, CLONE_TOP);\n  }\n}\nmixin(TopOverlayTable, stickyRowsTop);\nmixin(TopOverlayTable, calculatedColumns);\nexport default TopOverlayTable;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { addClass, getMaximumScrollTop, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass, setOverlayPosition, resetCssTransform } from \"../../../../helpers/dom/element.mjs\";\nimport TopOverlayTable from \"./../table/top.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CORNER_DEFAULT_STYLE } from \"../selection/index.mjs\";\nimport { CLONE_TOP } from \"./constants.mjs\";\n/**\r\n * @class TopOverlay\r\n */\nexport class TopOverlay extends Overlay {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance. @TODO refactoring: check if can be deleted.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {DomBindings} domBindings Dom elements bound to the current instance.\r\n   */\n  constructor(wotInstance, facadeGetter, wtSettings, domBindings) {\n    super(wotInstance, facadeGetter, CLONE_TOP, wtSettings, domBindings);\n    /**\r\n     * Cached value which holds the previous value of the `fixedRowsTop` option.\r\n     * It is used as a comparison value that can be used to detect changes in this value.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"cachedFixedRowsTop\", -1);\n    this.cachedFixedRowsTop = this.wtSettings.getSetting('fixedRowsTop');\n  }\n\n  /**\r\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\r\n   *\r\n   * @see Table#constructor\r\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\r\n   * @returns {TopOverlayTable}\r\n   */\n  createTable() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new TopOverlayTable(...args);\n  }\n\n  /**\r\n   * Checks if overlay should be fully rendered.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  shouldBeRendered() {\n    return this.wtSettings.getSetting('shouldRenderTopOverlay');\n  }\n\n  /**\r\n   * Updates the top overlay position.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  resetFixedPosition() {\n    if (!this.needFullRender || !this.shouldBeRendered() || !this.wot.wtTable.holder.parentNode) {\n      // removed from DOM\n      return false;\n    }\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    const {\n      rootWindow\n    } = this.domBindings;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    let overlayPosition = 0;\n    let skipInnerBorderAdjusting = false;\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n      const {\n        wtTable\n      } = this.wot;\n      const hiderRect = wtTable.hider.getBoundingClientRect();\n      const bottom = Math.ceil(hiderRect.bottom);\n      const rootHeight = overlayRoot.offsetHeight;\n\n      // This checks if the overlay is going to an infinite loop caused by added (or removed)\n      // `innerBorderTop` class name. Toggling the class name shifts the viewport by 1px and\n      // triggers the `scroll` event. It causes the table to render. The new render cycle takes into,\n      // account the shift and toggles the class name again. This causes the next loops. This\n      // happens only on Chrome (#7256).\n      //\n      // When we detect that the table bottom position is the same as the overlay bottom,\n      // do not toggle the class name.\n      //\n      // This workaround will be able to be cleared after merging the SVG borders, which introduces\n      // frozen lines (no more `innerBorderTop` workaround).\n      skipInnerBorderAdjusting = bottom === rootHeight;\n      overlayPosition = this.getOverlayOffset();\n      setOverlayPosition(overlayRoot, '0px', `${overlayPosition}px`);\n    } else {\n      overlayPosition = this.getScrollPosition();\n      resetCssTransform(overlayRoot);\n    }\n    const positionChanged = this.adjustHeaderBordersPosition(overlayPosition, skipInnerBorderAdjusting);\n    this.adjustElementsSize();\n    return positionChanged;\n  }\n\n  /**\r\n   * Sets the main overlay's vertical scroll position.\r\n   *\r\n   * @param {number} pos The scroll position.\r\n   * @returns {boolean}\r\n   */\n  setScrollPosition(pos) {\n    const rootWindow = this.domBindings.rootWindow;\n    let result = false;\n    if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollY !== pos) {\n      rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n      result = true;\n    } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n      this.mainTableScrollableElement.scrollTop = pos;\n      result = true;\n    }\n    return result;\n  }\n\n  /**\r\n   * Triggers onScroll hook callback.\r\n   */\n  onScroll() {\n    this.wtSettings.getSetting('onScrollHorizontally');\n  }\n\n  /**\r\n   * Calculates total sum cells height.\r\n   *\r\n   * @param {number} from Row index which calculates started from.\r\n   * @param {number} to Row index where calculation is finished.\r\n   * @returns {number} Height sum.\r\n   */\n  sumCellSizes(from, to) {\n    const defaultRowHeight = this.wtSettings.getSetting('defaultRowHeight');\n    let row = from;\n    let sum = 0;\n    while (row < to) {\n      const height = this.wot.wtTable.getRowHeight(row);\n      sum += height === undefined ? defaultRowHeight : height;\n      row += 1;\n    }\n    return sum;\n  }\n\n  /**\r\n   * Adjust overlay root element, children and master table element sizes (width, height).\r\n   */\n  adjustElementsSize() {\n    this.updateTrimmingContainer();\n    if (this.needFullRender) {\n      this.adjustRootElementSize();\n      this.adjustRootChildrenSize();\n    }\n  }\n\n  /**\r\n   * Adjust overlay root element size (width and height).\r\n   */\n  adjustRootElementSize() {\n    const {\n      wtTable\n    } = this.wot;\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n    const scrollbarWidth = getScrollbarWidth(rootDocument);\n    const overlayRoot = this.clone.wtTable.holder.parentNode;\n    const overlayRootStyle = overlayRoot.style;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n      let width = this.wot.wtViewport.getWorkspaceWidth();\n      if (this.wot.wtOverlays.hasScrollbarRight) {\n        width -= scrollbarWidth;\n      }\n      width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n      overlayRootStyle.width = `${width}px`;\n    } else {\n      overlayRootStyle.width = '';\n    }\n    this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n    let tableHeight = outerHeight(this.clone.wtTable.TABLE);\n    if (!this.wot.wtTable.hasDefinedSize()) {\n      tableHeight = 0;\n    }\n    overlayRootStyle.height = `${tableHeight}px`;\n  }\n\n  /**\r\n   * Adjust overlay root childs size.\r\n   */\n  adjustRootChildrenSize() {\n    const {\n      holder\n    } = this.clone.wtTable;\n    const selectionCornerOffset = this.wot.selectionManager.getFocusSelection() ? parseInt(CORNER_DEFAULT_STYLE.height, 10) / 2 : 0;\n    this.clone.wtTable.hider.style.width = this.hider.style.width;\n    holder.style.width = holder.parentNode.style.width;\n    // Add selection corner protruding part to the holder total height to make sure that\n    // borders' corner won't be cut after vertical scroll (#6937).\n    holder.style.height = `${parseInt(holder.parentNode.style.height, 10) + selectionCornerOffset}px`;\n  }\n\n  /**\r\n   * Adjust the overlay dimensions and position.\r\n   */\n  applyToDOM() {\n    const total = this.wtSettings.getSetting('totalRows');\n    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n      this.spreader.style.top = `${this.wot.wtViewport.rowsRenderCalculator.startPosition}px`;\n    } else if (total === 0) {\n      // can happen if there are 0 rows\n      this.spreader.style.top = '0';\n    } else {\n      throw new Error('Incorrect value of the rowsRenderCalculator');\n    }\n    this.spreader.style.bottom = '';\n    if (this.needFullRender) {\n      this.syncOverlayOffset();\n    }\n  }\n\n  /**\r\n   * Synchronize calculated left position to an element.\r\n   */\n  syncOverlayOffset() {\n    const styleProperty = this.isRtl() ? 'right' : 'left';\n    const {\n      spreader\n    } = this.clone.wtTable;\n    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n      spreader.style[styleProperty] = `${this.wot.wtViewport.columnsRenderCalculator.startPosition}px`;\n    } else {\n      spreader.style[styleProperty] = '';\n    }\n  }\n\n  /**\r\n   * Scrolls vertically to a row.\r\n   *\r\n   * @param {number} sourceRow Row index which you want to scroll to.\r\n   * @param {boolean} [bottomEdge] If `true`, scrolls according to the bottom edge (top edge is by default).\r\n   * @returns {boolean}\r\n   */\n  scrollTo(sourceRow, bottomEdge) {\n    const {\n      wot,\n      wtSettings\n    } = this;\n    const sourceInstance = wot.cloneSource ? wot.cloneSource : wot;\n    const mainHolder = sourceInstance.wtTable.holder;\n    const columnHeaders = wtSettings.getSetting('columnHeaders');\n    const fixedRowsTop = wtSettings.getSetting('fixedRowsTop');\n    const columnHeaderBorderCompensation = fixedRowsTop === 0 && columnHeaders.length > 0 && !hasClass(mainHolder.parentNode, 'innerBorderTop') ? 1 : 0;\n    let newY = this.getTableParentOffset();\n    let scrollbarCompensation = 0;\n    if (bottomEdge) {\n      const rowHeight = this.wot.wtTable.getRowHeight(sourceRow);\n      const viewportHeight = this.wot.wtViewport.getViewportHeight();\n      if (rowHeight > viewportHeight) {\n        bottomEdge = false;\n      }\n    }\n    if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n      scrollbarCompensation = getScrollbarWidth(this.domBindings.rootDocument);\n    }\n    if (bottomEdge) {\n      const fixedRowsBottom = wtSettings.getSetting('fixedRowsBottom');\n      const totalRows = wtSettings.getSetting('totalRows');\n      newY += this.sumCellSizes(0, sourceRow + 1);\n      newY -= wot.wtViewport.getViewportHeight() - this.sumCellSizes(totalRows - fixedRowsBottom, totalRows);\n      // Fix 1 pixel offset when cell is selected\n      newY += 1;\n      // Compensate for the bottom header border if scrolled from the absolute top.\n      newY += columnHeaderBorderCompensation;\n    } else {\n      newY += this.sumCellSizes(wtSettings.getSetting('fixedRowsTop'), sourceRow);\n    }\n    newY += scrollbarCompensation;\n\n    // If the table is scrolled all the way up when starting the scroll and going to be scrolled to the bottom,\n    // we need to compensate for the potential header bottom border height.\n    if (getMaximumScrollTop(this.mainTableScrollableElement) === newY - columnHeaderBorderCompensation && columnHeaderBorderCompensation > 0) {\n      this.wot.wtOverlays.expandHiderVerticallyBy(columnHeaderBorderCompensation);\n    }\n    return this.setScrollPosition(newY);\n  }\n\n  /**\r\n   * Gets table parent top position.\r\n   *\r\n   * @returns {number}\r\n   */\n  getTableParentOffset() {\n    if (this.mainTableScrollableElement === this.domBindings.rootWindow) {\n      return this.wot.wtTable.holderOffset.top;\n    }\n    return 0;\n  }\n\n  /**\r\n   * Gets the main overlay's vertical scroll position.\r\n   *\r\n   * @returns {number} Main table's vertical scroll position.\r\n   */\n  getScrollPosition() {\n    return getScrollTop(this.mainTableScrollableElement, this.domBindings.rootWindow);\n  }\n\n  /**\r\n   * Gets the main overlay's vertical overlay offset.\r\n   *\r\n   * @returns {number} Main table's vertical overlay offset.\r\n   */\n  getOverlayOffset() {\n    const {\n      rootWindow\n    } = this.domBindings;\n    const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n    let overlayOffset = 0;\n    if (this.trimmingContainer === rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n      const rootHeight = this.wot.wtTable.getTotalHeight();\n      const overlayRootHeight = this.clone.wtTable.getTotalHeight();\n      const maxOffset = rootHeight - overlayRootHeight;\n      overlayOffset = Math.max(this.getScrollPosition() - this.getTableParentOffset(), 0);\n      if (overlayOffset > maxOffset) {\n        overlayOffset = 0;\n      }\n    }\n    return overlayOffset;\n  }\n\n  /**\r\n   * Adds css classes to hide the header border's header (cell-selection border hiding issue).\r\n   *\r\n   * @param {number} position Header Y position if trimming container is window or scroll top if not.\r\n   * @param {boolean} [skipInnerBorderAdjusting=false] If `true` the inner border adjusting will be skipped.\r\n   * @returns {boolean}\r\n   */\n  adjustHeaderBordersPosition(position) {\n    let skipInnerBorderAdjusting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const {\n      wtSettings\n    } = this;\n    const masterParent = this.wot.wtTable.holder.parentNode;\n    const totalColumns = wtSettings.getSetting('totalColumns');\n    const preventHorizontalOverflow = wtSettings.getSetting('preventOverflow') === 'horizontal';\n    if (totalColumns) {\n      removeClass(masterParent, 'emptyColumns');\n    } else {\n      addClass(masterParent, 'emptyColumns');\n    }\n    let positionChanged = false;\n    if (!skipInnerBorderAdjusting && !preventHorizontalOverflow) {\n      const fixedRowsTop = wtSettings.getSetting('fixedRowsTop');\n      const areFixedRowsTopChanged = this.cachedFixedRowsTop !== fixedRowsTop;\n      const columnHeaders = wtSettings.getSetting('columnHeaders');\n      if ((areFixedRowsTopChanged || fixedRowsTop === 0) && columnHeaders.length > 0) {\n        const previousState = hasClass(masterParent, 'innerBorderTop');\n        this.cachedFixedRowsTop = wtSettings.getSetting('fixedRowsTop');\n        if (position || wtSettings.getSetting('totalRows') === 0) {\n          addClass(masterParent, 'innerBorderTop');\n          positionChanged = !previousState;\n        } else {\n          removeClass(masterParent, 'innerBorderTop');\n          positionChanged = previousState;\n        }\n      }\n    }\n    return positionChanged;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { getScrollableElement, getScrollbarWidth } from \"../../../helpers/dom/element.mjs\";\nimport { requestAnimationFrame } from \"../../../helpers/feature.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport { isChrome } from \"../../../helpers/browser.mjs\";\nimport { warn } from \"../../../helpers/console.mjs\";\nimport { InlineStartOverlay, TopOverlay, TopInlineStartCornerOverlay, BottomOverlay, BottomInlineStartCornerOverlay } from \"./overlay/index.mjs\";\n/**\r\n * @class Overlays\r\n */\nvar _overlays = /*#__PURE__*/new WeakMap();\nvar _hasRenderingStateChanged = /*#__PURE__*/new WeakMap();\nvar _containerDomResizeCount = /*#__PURE__*/new WeakMap();\nvar _containerDomResizeCountTimeout = /*#__PURE__*/new WeakMap();\nclass Overlays {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance. @todo refactoring remove.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {EventManager} eventManager The walkontable event manager.\r\n   * @param {MasterTable} wtTable The master table.\r\n   */\n  constructor(wotInstance, facadeGetter, domBindings, wtSettings, eventManager, wtTable) {\n    /**\r\n     * Walkontable instance's reference.\r\n     *\r\n     * @protected\r\n     * @type {Walkontable}\r\n     */\n    _defineProperty(this, \"wot\", null);\n    /**\r\n     * An array of the all overlays.\r\n     *\r\n     * @type {Overlay[]}\r\n     */\n    _classPrivateFieldInitSpec(this, _overlays, []);\n    /**\r\n     * Refer to the TopOverlay instance.\r\n     *\r\n     * @protected\r\n     * @type {TopOverlay}\r\n     */\n    _defineProperty(this, \"topOverlay\", null);\n    /**\r\n     * Refer to the BottomOverlay instance.\r\n     *\r\n     * @protected\r\n     * @type {BottomOverlay}\r\n     */\n    _defineProperty(this, \"bottomOverlay\", null);\n    /**\r\n     * Refer to the InlineStartOverlay or instance.\r\n     *\r\n     * @protected\r\n     * @type {InlineStartOverlay}\r\n     */\n    _defineProperty(this, \"inlineStartOverlay\", null);\n    /**\r\n     * Refer to the TopInlineStartCornerOverlay instance.\r\n     *\r\n     * @protected\r\n     * @type {TopInlineStartCornerOverlay}\r\n     */\n    _defineProperty(this, \"topInlineStartCornerOverlay\", null);\n    /**\r\n     * Refer to the BottomInlineStartCornerOverlay instance.\r\n     *\r\n     * @protected\r\n     * @type {BottomInlineStartCornerOverlay}\r\n     */\n    _defineProperty(this, \"bottomInlineStartCornerOverlay\", null);\n    /**\r\n     * Browser line height for purposes of translating mouse wheel.\r\n     *\r\n     * @private\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"browserLineHeight\", undefined);\n    /**\r\n     * The walkontable settings.\r\n     *\r\n     * @protected\r\n     * @type {Settings}\r\n     */\n    _defineProperty(this, \"wtSettings\", null);\n    /**\r\n     * Indicates whether the rendering state has changed for one of the overlays.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _hasRenderingStateChanged, false);\n    /**\r\n     * The amount of times the ResizeObserver callback was fired in direct succession.\r\n     *\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _containerDomResizeCount, 0);\n    /**\r\n     * The timeout ID for the ResizeObserver endless-loop-blocking logic.\r\n     *\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _containerDomResizeCountTimeout, null);\n    /**\r\n     * The instance of the ResizeObserver that observes the size of the Walkontable wrapper element.\r\n     * In case of the size change detection the `onContainerElementResize` is fired.\r\n     *\r\n     * @private\r\n     * @type {ResizeObserver}\r\n     */\n    _defineProperty(this, \"resizeObserver\", new ResizeObserver(entries => {\n      requestAnimationFrame(() => {\n        if (!Array.isArray(entries) || !entries.length) {\n          return;\n        }\n        _classPrivateFieldSet(_containerDomResizeCount, this, _classPrivateFieldGet(_containerDomResizeCount, this) + 1);\n        if (_classPrivateFieldGet(_containerDomResizeCount, this) === 100) {\n          warn('The ResizeObserver callback was fired too many times in direct succession.' + '\\nThis may be due to an infinite loop caused by setting a dynamic height/width (for example, ' + 'with the `dvh` units) to a Handsontable container\\'s parent. ' + '\\nThe observer will be disconnected.');\n          this.resizeObserver.disconnect();\n        }\n\n        // This logic is required to prevent an endless loop of the ResizeObserver callback.\n        // https://github.com/handsontable/dev-handsontable/issues/1898#issuecomment-2154794817\n        if (_classPrivateFieldGet(_containerDomResizeCountTimeout, this) !== null) {\n          clearTimeout(_classPrivateFieldGet(_containerDomResizeCountTimeout, this));\n        }\n        _classPrivateFieldSet(_containerDomResizeCountTimeout, this, setTimeout(() => {\n          _classPrivateFieldSet(_containerDomResizeCount, this, 0);\n        }, 100));\n        this.wtSettings.getSetting('onContainerElementResize');\n      });\n    }));\n    this.wot = wotInstance;\n    this.wtSettings = wtSettings;\n    this.domBindings = domBindings;\n    this.facadeGetter = facadeGetter;\n    this.wtTable = wtTable;\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n\n    // legacy support\n    this.instance = this.wot; // todo refactoring: move to facade\n    this.eventManager = eventManager;\n\n    // TODO refactoring: probably invalid place to this logic\n    this.scrollbarSize = getScrollbarWidth(rootDocument);\n    const isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : getScrollableElement(wtTable.TABLE);\n    this.initOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.initBrowserLineHeight();\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n\n  /**\r\n   * Get the list of references to all overlays.\r\n   *\r\n   * @param {boolean} [includeMaster = false] If set to `true`, the list will contain the master table as the last\r\n   * element.\r\n   * @returns {(TopOverlay|TopInlineStartCornerOverlay|InlineStartOverlay|BottomOverlay|BottomInlineStartCornerOverlay)[]}\r\n   */\n  getOverlays() {\n    let includeMaster = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const overlays = [..._classPrivateFieldGet(_overlays, this)];\n    if (includeMaster) {\n      overlays.push(this.wtTable);\n    }\n    return overlays;\n  }\n\n  /**\r\n   * Retrieve browser line height and apply its value to `browserLineHeight`.\r\n   *\r\n   * @private\r\n   */\n  initBrowserLineHeight() {\n    const {\n      rootWindow,\n      rootDocument\n    } = this.domBindings;\n    const computedStyle = rootWindow.getComputedStyle(rootDocument.body);\n    /**\r\n     * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\r\n     * Https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values.\r\n     */\n    const lineHeight = parseInt(computedStyle.lineHeight, 10);\n    const lineHeightFalback = parseInt(computedStyle.fontSize, 10) * 1.2;\n    this.browserLineHeight = lineHeight || lineHeightFalback;\n  }\n\n  /**\r\n   * Prepare overlays based on user settings.\r\n   *\r\n   * @private\r\n   */\n  initOverlays() {\n    const args = [this.wot, this.facadeGetter, this.wtSettings, this.domBindings];\n\n    // todo refactoring: IOC, collection or factories.\n    // TODO refactoring, conceive about using generic collection of overlays.\n    this.topOverlay = new TopOverlay(...args);\n    this.bottomOverlay = new BottomOverlay(...args);\n    this.inlineStartOverlay = new InlineStartOverlay(...args);\n\n    // TODO discuss, the controversial here would be removing the lazy creation mechanism for corners.\n    // TODO cond. Has no any visual impact. They're initially hidden in same way like left, top, and bottom overlays.\n    this.topInlineStartCornerOverlay = new TopInlineStartCornerOverlay(...args, this.topOverlay, this.inlineStartOverlay);\n    this.bottomInlineStartCornerOverlay = new BottomInlineStartCornerOverlay(...args, this.bottomOverlay, this.inlineStartOverlay);\n    _classPrivateFieldSet(_overlays, this, [this.topOverlay, this.bottomOverlay, this.inlineStartOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay]);\n  }\n\n  /**\r\n   * Runs logic for the overlays before the table is drawn.\r\n   */\n  beforeDraw() {\n    _classPrivateFieldSet(_hasRenderingStateChanged, this, _classPrivateFieldGet(_overlays, this).reduce((acc, overlay) => {\n      return overlay.hasRenderingStateChanged() || acc;\n    }, false));\n    _classPrivateFieldGet(_overlays, this).forEach(overlay => overlay.updateStateOfRendering('before'));\n  }\n\n  /**\r\n   * Runs logic for the overlays after the table is drawn.\r\n   */\n  afterDraw() {\n    this.syncScrollWithMaster();\n    _classPrivateFieldGet(_overlays, this).forEach(overlay => {\n      const hasRenderingStateChanged = overlay.hasRenderingStateChanged();\n      overlay.updateStateOfRendering('after');\n      if (hasRenderingStateChanged && !overlay.needFullRender) {\n        overlay.reset();\n      }\n    });\n  }\n\n  /**\r\n   * Refresh and redraw table.\r\n   */\n  refreshAll() {\n    if (!this.wot.drawn) {\n      return;\n    }\n    if (!this.wtTable.holder.parentNode) {\n      // Walkontable was detached from DOM, but this handler was not removed\n      this.destroy();\n      return;\n    }\n    this.wot.draw(true);\n    if (this.verticalScrolling) {\n      this.inlineStartOverlay.onScroll(); // todo the inlineStartOverlay.onScroll() fires hook. Why is it needed there, not in any another place?\n    }\n    if (this.horizontalScrolling) {\n      this.topOverlay.onScroll();\n    }\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n  }\n\n  /**\r\n   * Register all necessary event listeners.\r\n   */\n  registerListeners() {\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n    const {\n      mainTableScrollableElement: topOverlayScrollableElement\n    } = this.topOverlay;\n    const {\n      mainTableScrollableElement: inlineStartOverlayScrollableElement\n    } = this.inlineStartOverlay;\n    this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', event => this.onKeyDown(event));\n    this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', () => this.onKeyUp());\n    this.eventManager.addEventListener(rootDocument, 'visibilitychange', () => this.onKeyUp());\n    this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', event => this.onTableScroll(event), {\n      passive: true\n    });\n    if (topOverlayScrollableElement !== inlineStartOverlayScrollableElement) {\n      this.eventManager.addEventListener(inlineStartOverlayScrollableElement, 'scroll', event => this.onTableScroll(event), {\n        passive: true\n      });\n    }\n    const isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n    const isScrollOnWindow = this.scrollableElement === rootWindow;\n    const preventWheel = this.wtSettings.getSetting('preventWheel');\n    const wheelEventOptions = {\n      passive: isScrollOnWindow\n    };\n    if (preventWheel || isHighPixelRatio || !isChrome()) {\n      this.eventManager.addEventListener(this.wtTable.wtRootElement, 'wheel', event => this.onCloneWheel(event, preventWheel), wheelEventOptions);\n    }\n    const overlays = [this.topOverlay, this.bottomOverlay, this.inlineStartOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n    overlays.forEach(overlay => {\n      if (overlay && overlay.needFullRender) {\n        const {\n          holder\n        } = overlay.clone.wtTable; // todo rethink, maybe: overlay.getHolder()\n\n        this.eventManager.addEventListener(holder, 'wheel', event => this.onCloneWheel(event, preventWheel), wheelEventOptions);\n      }\n    });\n    let resizeTimeout;\n    this.eventManager.addEventListener(rootWindow, 'resize', () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => {\n        this.wtSettings.getSetting('onWindowResize');\n\n        // Remove resizing the window from the ResizeObserver's endless-loop-blocking logic.\n        _classPrivateFieldSet(_containerDomResizeCount, this, 0);\n      }, 200);\n    });\n    if (!isScrollOnWindow) {\n      this.resizeObserver.observe(this.wtTable.wtRootElement.parentElement);\n    }\n  }\n\n  /**\r\n   * Deregister all previously registered listeners.\r\n   */\n  deregisterListeners() {\n    this.eventManager.clearEvents(true);\n  }\n\n  /**\r\n   * Scroll listener.\r\n   *\r\n   * @param {Event} event The mouse event object.\r\n   */\n  onTableScroll(event) {\n    // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n    // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n    const rootWindow = this.domBindings.rootWindow;\n    const masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n    const masterVertical = this.topOverlay.mainTableScrollableElement;\n    const target = event.target;\n\n    // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n    // by hot.refreshBorder\n    if (this.keyPressed) {\n      if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n        return;\n      }\n    }\n    this.syncScrollPositions(event);\n  }\n\n  /**\r\n   * Wheel listener for cloned overlays.\r\n   *\r\n   * @param {Event} event The mouse event object.\r\n   * @param {boolean} preventDefault If `true`, the `preventDefault` will be called on event object.\r\n   */\n  onCloneWheel(event, preventDefault) {\n    const {\n      rootWindow\n    } = this.domBindings;\n\n    // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n    // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n    const masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n    const masterVertical = this.topOverlay.mainTableScrollableElement;\n    const target = event.target;\n\n    // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n    // by hot.refreshBorder\n    const shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n    const shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n    if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally) || this.scrollableElement === rootWindow) {\n      return;\n    }\n    const isScrollPossible = this.translateMouseWheelToScroll(event);\n    if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n      event.preventDefault();\n    }\n  }\n\n  /**\r\n   * Key down listener.\r\n   *\r\n   * @param {Event} event The keyboard event object.\r\n   */\n  onKeyDown(event) {\n    this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n  }\n\n  /**\r\n   * Key up listener.\r\n   */\n  onKeyUp() {\n    this.keyPressed = false;\n  }\n\n  /**\r\n   * Translate wheel event into scroll event and sync scroll overlays position.\r\n   *\r\n   * @private\r\n   * @param {Event} event The mouse event object.\r\n   * @returns {boolean}\r\n   */\n  translateMouseWheelToScroll(event) {\n    let deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n    let deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n    if (event.deltaMode === 1) {\n      deltaX += deltaX * this.browserLineHeight;\n      deltaY += deltaY * this.browserLineHeight;\n    }\n    const isScrollVerticallyPossible = this.scrollVertically(deltaY);\n    const isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n    return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n  }\n\n  /**\r\n   * Scrolls main scrollable element horizontally.\r\n   *\r\n   * @param {number} delta Relative value to scroll.\r\n   * @returns {boolean}\r\n   */\n  scrollVertically(delta) {\n    const previousScroll = this.scrollableElement.scrollTop;\n    this.scrollableElement.scrollTop += delta;\n    return previousScroll !== this.scrollableElement.scrollTop;\n  }\n\n  /**\r\n   * Scrolls main scrollable element horizontally.\r\n   *\r\n   * @param {number} delta Relative value to scroll.\r\n   * @returns {boolean}\r\n   */\n  scrollHorizontally(delta) {\n    const previousScroll = this.scrollableElement.scrollLeft;\n    this.scrollableElement.scrollLeft += delta;\n    return previousScroll !== this.scrollableElement.scrollLeft;\n  }\n\n  /**\r\n   * Synchronize scroll position between master table and overlay table.\r\n   *\r\n   * @private\r\n   */\n  syncScrollPositions() {\n    if (this.destroyed) {\n      return;\n    }\n    const {\n      rootWindow\n    } = this.domBindings;\n    const topHolder = this.topOverlay.clone.wtTable.holder; // todo rethink\n    const leftHolder = this.inlineStartOverlay.clone.wtTable.holder; // todo rethink\n\n    const [scrollLeft, scrollTop] = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop];\n    this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n    this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n    if (this.horizontalScrolling) {\n      topHolder.scrollLeft = scrollLeft;\n      const bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null; // todo rethink\n\n      if (bottomHolder) {\n        bottomHolder.scrollLeft = scrollLeft;\n      }\n    }\n    if (this.verticalScrolling) {\n      leftHolder.scrollTop = scrollTop;\n    }\n    this.refreshAll();\n  }\n\n  /**\r\n   * Synchronize overlay scrollbars with the master scrollbar.\r\n   */\n  syncScrollWithMaster() {\n    if (!_classPrivateFieldGet(_hasRenderingStateChanged, this)) {\n      return;\n    }\n    const master = this.topOverlay.mainTableScrollableElement;\n    const {\n      scrollLeft,\n      scrollTop\n    } = master;\n    if (this.topOverlay.needFullRender) {\n      this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n    }\n    if (this.bottomOverlay.needFullRender) {\n      this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n    }\n    if (this.inlineStartOverlay.needFullRender) {\n      this.inlineStartOverlay.clone.wtTable.holder.scrollTop = scrollTop; // todo rethink, *overlay.setScroll*()\n    }\n    _classPrivateFieldSet(_hasRenderingStateChanged, this, false);\n  }\n\n  /**\r\n   * Update the main scrollable elements for all the overlays.\r\n   */\n  updateMainScrollableElements() {\n    this.deregisterListeners();\n    this.inlineStartOverlay.updateMainScrollableElement();\n    this.topOverlay.updateMainScrollableElement();\n    if (this.bottomOverlay.needFullRender) {\n      this.bottomOverlay.updateMainScrollableElement();\n    }\n    const {\n      wtTable\n    } = this;\n    const {\n      rootWindow\n    } = this.domBindings;\n    if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n      this.scrollableElement = wtTable.holder;\n    } else {\n      this.scrollableElement = getScrollableElement(wtTable.TABLE);\n    }\n    this.registerListeners();\n  }\n\n  /**\r\n   *\r\n   */\n  destroy() {\n    this.resizeObserver.disconnect();\n    this.eventManager.destroy();\n    // todo, probably all below `destory` calls has no sense. To analyze\n    this.topOverlay.destroy();\n    if (this.bottomOverlay.clone) {\n      this.bottomOverlay.destroy();\n    }\n    this.inlineStartOverlay.destroy();\n    if (this.topInlineStartCornerOverlay) {\n      this.topInlineStartCornerOverlay.destroy();\n    }\n    if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n      this.bottomInlineStartCornerOverlay.destroy();\n    }\n    this.destroyed = true;\n  }\n\n  /**\r\n   * @param {boolean} [fastDraw=false] When `true`, try to refresh only the positions of borders without rerendering\r\n   *                                   the data. It will only work if Table.draw() does not force\r\n   *                                   rendering anyway.\r\n   */\n  refresh() {\n    let fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const wasSpreaderSizeUpdated = this.updateLastSpreaderSize();\n    if (wasSpreaderSizeUpdated) {\n      this.adjustElementsSize();\n    }\n    if (this.bottomOverlay.clone) {\n      this.bottomOverlay.refresh(fastDraw);\n    }\n    this.inlineStartOverlay.refresh(fastDraw);\n    this.topOverlay.refresh(fastDraw);\n    if (this.topInlineStartCornerOverlay) {\n      this.topInlineStartCornerOverlay.refresh(fastDraw);\n    }\n    if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n      this.bottomInlineStartCornerOverlay.refresh(fastDraw);\n    }\n  }\n\n  /**\r\n   * Update the last cached spreader size with the current size.\r\n   *\r\n   * @returns {boolean} `true` if the lastSpreaderSize cache was updated, `false` otherwise.\r\n   */\n  updateLastSpreaderSize() {\n    const spreader = this.wtTable.spreader;\n    const width = spreader.clientWidth;\n    const height = spreader.clientHeight;\n    const needsUpdating = width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height;\n    if (needsUpdating) {\n      this.spreaderLastSize.width = width;\n      this.spreaderLastSize.height = height;\n    }\n    return needsUpdating;\n  }\n\n  /**\r\n   * Adjust overlays elements size and master table size.\r\n   */\n  adjustElementsSize() {\n    const {\n      wtViewport\n    } = this.wot;\n    const {\n      wtTable\n    } = this;\n    const {\n      rootWindow\n    } = this.domBindings;\n    const isWindowScrolled = this.scrollableElement === rootWindow;\n    const totalColumns = this.wtSettings.getSetting('totalColumns');\n    const totalRows = this.wtSettings.getSetting('totalRows');\n    const headerRowSize = wtViewport.getRowHeaderWidth();\n    const headerColumnSize = wtViewport.getColumnHeaderHeight();\n    const proposedHiderHeight = headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1;\n    const proposedHiderWidth = headerRowSize + this.inlineStartOverlay.sumCellSizes(0, totalColumns);\n    const hiderElement = wtTable.hider;\n    const hiderStyle = hiderElement.style;\n    const isScrolledBeyondHiderHeight = () => {\n      return isWindowScrolled ? false : this.scrollableElement.scrollTop > Math.max(0, proposedHiderHeight - wtTable.holder.clientHeight);\n    };\n    const isScrolledBeyondHiderWidth = () => {\n      return isWindowScrolled ? false : this.scrollableElement.scrollLeft > Math.max(0, proposedHiderWidth - wtTable.holder.clientWidth);\n    };\n    const columnHeaderBorderCompensation = isScrolledBeyondHiderHeight() ? 1 : 0;\n    const rowHeaderBorderCompensation = isScrolledBeyondHiderWidth() ? 1 : 0;\n\n    // If the elements are being adjusted after scrolling the table from the very beginning to the very end,\n    // we need to adjust the hider dimensions by the header border size. (https://github.com/handsontable/dev-handsontable/issues/1772)\n    hiderStyle.width = `${proposedHiderWidth + rowHeaderBorderCompensation}px`;\n    hiderStyle.height = `${proposedHiderHeight + columnHeaderBorderCompensation}px`;\n    if (this.scrollbarSize > 0) {\n      // todo refactoring, looking as a part of logic which should be moved outside the class\n      const {\n        scrollHeight: rootElemScrollHeight,\n        scrollWidth: rootElemScrollWidth\n      } = wtTable.wtRootElement;\n      const {\n        scrollHeight: holderScrollHeight,\n        scrollWidth: holderScrollWidth\n      } = wtTable.holder;\n      this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n      this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n      if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n        this.hasScrollbarBottom = true;\n      } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n        this.hasScrollbarRight = true;\n      }\n    }\n    this.topOverlay.adjustElementsSize();\n    this.inlineStartOverlay.adjustElementsSize();\n    this.bottomOverlay.adjustElementsSize();\n  }\n\n  /**\r\n   * Expand the hider vertically element by the provided delta value.\r\n   *\r\n   * @param {number} heightDelta The delta value to expand the hider element by.\r\n   */\n  expandHiderVerticallyBy(heightDelta) {\n    const {\n      wtTable\n    } = this;\n    wtTable.hider.style.height = `${parseInt(wtTable.hider.style.height, 10) + heightDelta}px`;\n  }\n\n  /**\r\n   * Expand the hider horizontally element by the provided delta value.\r\n   *\r\n   * @param {number} widthDelta The delta value to expand the hider element by.\r\n   */\n  expandHiderHorizontallyBy(widthDelta) {\n    const {\n      wtTable\n    } = this;\n    wtTable.hider.style.width = `${parseInt(wtTable.hider.style.width, 10) + widthDelta}px`;\n  }\n\n  /**\r\n   *\r\n   */\n  applyToDOM() {\n    if (!this.wtTable.isVisible()) {\n      return;\n    }\n    this.topOverlay.applyToDOM();\n    if (this.bottomOverlay.clone) {\n      this.bottomOverlay.applyToDOM();\n    }\n    this.inlineStartOverlay.applyToDOM();\n  }\n\n  /**\r\n   * Get the parent overlay of the provided element.\r\n   *\r\n   * @param {HTMLElement} element An element to process.\r\n   * @returns {object|null}\r\n   */\n  getParentOverlay(element) {\n    if (!element) {\n      return null;\n    }\n    const overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n    let result = null;\n    arrayEach(overlays, overlay => {\n      if (!overlay) {\n        return;\n      }\n      if (overlay.clone && overlay.clone.wtTable.TABLE.contains(element)) {\n        // todo demeter\n        result = overlay.clone;\n      }\n    });\n    return result;\n  }\n\n  /**\r\n   * Synchronize the class names between the main overlay table and the tables on the other overlays.\r\n   *\r\n   */\n  syncOverlayTableClassNames() {\n    const masterTable = this.wtTable.TABLE;\n    const overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n    arrayEach(overlays, elem => {\n      if (!elem) {\n        return;\n      }\n      elem.clone.wtTable.TABLE.className = masterTable.className; // todo demeter\n    });\n  }\n}\nexport default Overlays;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { fastInnerText } from \"../../../helpers/dom/element.mjs\";\nimport { objectEach } from \"../../../helpers/object.mjs\";\n/**\r\n * @todo Describe options.\r\n * @typedef SettingsPure\r\n *\r\n * @property {Option} facade @todo desc.\r\n * @property {Option} ariaTags Option `ariaTags`.\r\n * @property {Option} cellRenderer Option `cellRenderer`.\r\n * @property {Option} columnHeaders Option `columnHeaders`.\r\n * @property {Option} columnWidth Option `columnWidth`.\r\n * @property {Option} currentRowClassName Option `currentRowClassName`.\r\n * @property {Option} data Option `data`.\r\n * @property {Option} defaultColumnWidth Option `defaultColumnWidth`.\r\n * @property {Option} defaultRowHeight Option `defaultRowHeight`.\r\n * @property {Option} externalRowCalculator Option `externalRowCalculator`.\r\n * @property {Option} fixedColumnsStart Option `fixedColumnsStart`.\r\n * @property {Option} fixedRowsBottom Option `fixedRowsBottom`.\r\n * @property {Option} fixedRowsTop Option `fixedRowsTop`.\r\n * @property {Option} freezeOverlays Option `freezeOverlays`.\r\n * @property {Option} groups Option `groups`.\r\n * @property {Option} hideBorderOnMouseDownOver Option `hideBorderOnMouseDownOver`.\r\n * @property {Option} isRtl Option `isRtl`.\r\n * @property {Option} isDataViewInstance Option `isDataViewInstance`.\r\n * @property {Option} minSpareRows Option `minSpareRows`.\r\n * @property {Option} onBeforeHighlightingColumnHeader Option `onBeforeHighlightingColumnHeader`.\r\n * @property {Option} onBeforeHighlightingRowHeader Option `onBeforeHighlightingRowHeader`.\r\n * @property {Option} onBeforeRemoveCellClassNames Option `onBeforeRemoveCellClassNames`.\r\n * @property {Option} onBeforeStretchingColumnWidth Option `onBeforeStretchingColumnWidth`.\r\n * @property {Option} preventOverflow Option `preventOverflow`.\r\n * @property {Option} preventWheel Option `preventWheel`.\r\n * @property {Option} renderAllColumns Option `renderAllColumns`.\r\n * @property {Option} renderAllRows Option `renderAllRows`.\r\n * @property {Option} rowHeaders Option `rowHeaders`.\r\n * @property {Option} rowHeightOption `rowHeight`.\r\n * @property {Option} rowHeightByOverlayName Option `rowHeightByOverlayName`.\r\n * @property {Option} shouldRenderBottomOverlay Option `shouldRenderBottomOverlay`.\r\n * @property {Option} shouldRenderInlineStartOverlay Option `shouldRenderInlineStartOverlay`.\r\n * @property {Option} shouldRenderTopOverlay Option `shouldRenderTopOverlay`.\r\n * @property {Option} stretchH Option `stretchH`.\r\n * @property {Option} table Option `table`.\r\n * @property {Option} totalColumns Option `totalColumns`.\r\n * @property {Option} totalRows Option `totalRows`.\r\n * @property {?Option} beforeDraw Option `beforeDraw`.\r\n * @property {?Option} columnHeaderHeight Option `columnHeaderHeight`.\r\n * @property {?Option} currentColumnClassName Option `currentColumnClassName`.\r\n * @property {?Option} headerClassName Option `headerClassName`.\r\n * @property {?Option} onAfterDrawSelection Option `onAfterDrawSelection`.\r\n * @property {?Option} onAfterMomentumScroll Option `onAfterMomentumScroll`.\r\n * @property {?Option} onBeforeDrawBorders Option `onBeforeDrawBorders`.\r\n * @property {?Option} onBeforeTouchScroll Option `onBeforeTouchScroll`.\r\n * @property {?Option} onCellContextMenu Option `onCellContextMenu`.\r\n * @property {?Option} onCellCornerDblClick Option `onCellCornerDblClick`.\r\n * @property {?Option} onCellCornerMouseDown Option `onCellCornerMouseDown`.\r\n * @property {?Option} onCellDblClick Option `onCellDblClick`.\r\n * @property {?Option} onCellMouseDown Option `onCellMouseDown`.\r\n * @property {?Option} onCellMouseOut Option `onCellMouseOut`.\r\n * @property {?Option} onCellMouseOver Option `onCellMouseOver`.\r\n * @property {?Option} onCellMouseUp Option `onCellMouseUp`.\r\n * @property {?Option} onDraw Option `onDraw`.\r\n * @property {?Option} onModifyGetCellCoords Option `onModifyGetCellCoords`.\r\n * @property {?Option} onModifyRowHeaderWidth Option `onModifyRowHeaderWidth`.\r\n * @property {?Option} onBeforeViewportScrollHorizontally Option `onBeforeViewportScrollHorizontally`.\r\n * @property {?Option} onBeforeViewportScrollVertically Option `onBeforeViewportScrollVertically`.\r\n * @property {?Option} onScrollHorizontally Option `onScrollHorizontally`.\r\n * @property {?Option} onScrollVertically Option `onScrollVertically`.\r\n * @property {?Option} onWindowResize Option `onWindowResize`.\r\n * @property {?Option} rowHeaderWidth Option `rowHeaderWidth`.\r\n * @property {?Option} selections Option `selections`.\r\n * @property {?Option} viewportColumnCalculatorOverride Option `viewportColumnCalculatorOverride`.\r\n * @property {?Option} viewportRowCalculatorOverride Option `viewportRowCalculatorOverride`.\r\n */\n/**\r\n * @template TValue.\r\n * @typedef { TValue | Array.<TValue> | (function(...*): TValue) } Option\r\n */\n/**\r\n * @class Settings\r\n */\nexport default class Settings {\n  /**\r\n   * @param {SettingsPure} settings The user defined settings.\r\n   */\n  constructor(settings) {\n    /**\r\n     * Reference to settings.\r\n     *\r\n     * @protected\r\n     * @type {SettingsPure}\r\n     */\n    _defineProperty(this, \"settings\", {});\n    /**\r\n     * The defaults values of settings.\r\n     * Void 0 means it is required, null means it can be empty.\r\n     *\r\n     * @public\r\n     * @type {Readonly<SettingsPure>}\r\n     */\n    _defineProperty(this, \"defaults\", Object.freeze(this.getDefaults()));\n    objectEach(this.defaults, (value, key) => {\n      if (settings[key] !== undefined) {\n        this.settings[key] = settings[key];\n      } else if (value === undefined) {\n        throw new Error(`A required setting \"${key}\" was not provided`);\n      } else {\n        this.settings[key] = value;\n      }\n    });\n  }\n\n  /**\r\n   * Generate defaults for a settings.\r\n   * Void 0 means it is required, null means it can be empty.\r\n   *\r\n   * @private\r\n   * @returns {SettingsPure}\r\n   */\n  getDefaults() {\n    return {\n      facade: undefined,\n      table: undefined,\n      // Determines whether the Walkontable instance is used as dataset viewer. When its instance is used as\n      // a context menu, autocomplete list, etc, the returned value is `false`.\n      isDataViewInstance: true,\n      // presentation mode\n      externalRowCalculator: false,\n      stretchH: 'none',\n      // values: all, last, none\n      currentRowClassName: null,\n      currentColumnClassName: null,\n      preventOverflow() {\n        return false;\n      },\n      preventWheel: false,\n      // data source\n      data: undefined,\n      freezeOverlays: false,\n      // Number of renderable columns for the left overlay.\n      fixedColumnsStart: 0,\n      // Number of renderable rows for the top overlay.\n      fixedRowsTop: 0,\n      // Number of renderable rows for the bottom overlay.\n      fixedRowsBottom: 0,\n      // Enable the inline start overlay when conditions are met (left for LTR and right for RTL document mode).\n      shouldRenderInlineStartOverlay: () => {\n        return this.getSetting('fixedColumnsStart') > 0 || this.getSetting('rowHeaders').length > 0;\n      },\n      // Enable the top overlay when conditions are met.\n      shouldRenderTopOverlay: () => {\n        return this.getSetting('fixedRowsTop') > 0 || this.getSetting('columnHeaders').length > 0;\n      },\n      // Enable the bottom overlay when conditions are met.\n      shouldRenderBottomOverlay: () => {\n        return this.getSetting('fixedRowsBottom') > 0;\n      },\n      minSpareRows: 0,\n      // this must be array of functions: [function (row, TH) {}]\n      rowHeaders() {\n        return [];\n      },\n      // this must be array of functions: [function (column, TH) {}]\n      columnHeaders() {\n        return [];\n      },\n      totalRows: undefined,\n      totalColumns: undefined,\n      cellRenderer: (row, column, TD) => {\n        const cellData = this.getSetting('data', row, column);\n        fastInnerText(TD, cellData === undefined || cellData === null ? '' : cellData);\n      },\n      // columnWidth: 50,\n      columnWidth() {\n        // return undefined means use default size for the rendered cell content\n      },\n      rowHeight() {\n        // return undefined means use default size for the rendered cell content\n      },\n      rowHeightByOverlayName() {\n        // return undefined means use default size for the rendered cell content\n      },\n      defaultRowHeight: 23,\n      defaultColumnWidth: 50,\n      selections: null,\n      hideBorderOnMouseDownOver: false,\n      viewportRowCalculatorOverride: null,\n      viewportColumnCalculatorOverride: null,\n      // callbacks\n      onCellMouseDown: null,\n      onCellContextMenu: null,\n      onCellMouseOver: null,\n      onCellMouseOut: null,\n      onCellMouseUp: null,\n      // onCellMouseOut: null,\n      onCellDblClick: null,\n      onCellCornerMouseDown: null,\n      onCellCornerDblClick: null,\n      beforeDraw: null,\n      onDraw: null,\n      onBeforeRemoveCellClassNames: null,\n      onAfterDrawSelection: null,\n      onBeforeDrawBorders: null,\n      // viewport scroll hooks\n      onBeforeViewportScrollHorizontally: column => column,\n      onBeforeViewportScrollVertically: row => row,\n      // native scroll hooks\n      onScrollHorizontally: null,\n      onScrollVertically: null,\n      //\n      onBeforeTouchScroll: null,\n      onAfterMomentumScroll: null,\n      onBeforeStretchingColumnWidth: width => width,\n      onModifyRowHeaderWidth: null,\n      onModifyGetCellCoords: null,\n      onBeforeHighlightingRowHeader: sourceRow => sourceRow,\n      onBeforeHighlightingColumnHeader: sourceCol => sourceCol,\n      onWindowResize: null,\n      onContainerElementResize: null,\n      renderAllColumns: false,\n      renderAllRows: false,\n      groups: false,\n      rowHeaderWidth: null,\n      columnHeaderHeight: null,\n      headerClassName: null,\n      rtlMode: false,\n      ariaTags: true\n    };\n  }\n\n  /**\r\n   * Update settings.\r\n   *\r\n   * @param {object|string} settings The singular settings to update or if passed as object to merge with.\r\n   * @param {*} value The value to set if the first argument is passed as string.\r\n   * @returns {Settings}\r\n   */\n  update(settings, value) {\n    if (value === undefined) {\n      // settings is object\n      objectEach(settings, (settingValue, key) => {\n        this.settings[key] = settingValue;\n      });\n    } else {\n      // if value is defined then settings is the key\n      this.settings[settings] = value;\n    }\n    return this;\n  }\n\n  /**\r\n   * Get setting by name.\r\n   *\r\n   * @param {$Keys<SettingsPure>} key The settings key to retrieve.\r\n   * @param {*} [param1] Additional parameter passed to the options defined as function.\r\n   * @param {*} [param2] Additional parameter passed to the options defined as function.\r\n   * @param {*} [param3] Additional parameter passed to the options defined as function.\r\n   * @param {*} [param4] Additional parameter passed to the options defined as function.\r\n   * @returns {*}\r\n   */\n  getSetting(key, param1, param2, param3, param4) {\n    if (typeof this.settings[key] === 'function') {\n      return this.settings[key](param1, param2, param3, param4);\n    } else if (param1 !== undefined && Array.isArray(this.settings[key])) {\n      return this.settings[key][param1];\n    }\n    return this.settings[key];\n  }\n\n  /**\r\n   * Get a setting value without any evaluation.\r\n   *\r\n   * @param {string} key The settings key to retrieve.\r\n   * @returns {*}\r\n   */\n  getSettingPure(key) {\n    return this.settings[key];\n  }\n\n  /**\r\n   * Checks if setting exists.\r\n   *\r\n   * @param {boolean} key The settings key to check.\r\n   * @returns {boolean}\r\n   */\n  has(key) {\n    return !!this.settings[key];\n  }\n}", "import { getStyle, getComputedStyle, getTrimmingContainer, isVisible } from \"./../../../../helpers/dom/element.mjs\";\nimport Table from \"../table.mjs\";\nimport calculatedRows from \"./mixin/calculatedRows.mjs\";\nimport calculatedColumns from \"./mixin/calculatedColumns.mjs\";\nimport { mixin } from \"./../../../../helpers/object.mjs\";\n/**\r\n * Subclass of `Table` that provides the helper methods relevant to the master table (not overlays), implemented through mixins.\r\n *\r\n * @mixes calculatedRows\r\n * @mixes calculatedColumns\r\n */\nclass MasterTable extends Table {\n  /**\r\n   * @param {TableDao} dataAccessObject The data access object.\r\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   */\n  constructor(dataAccessObject, facadeGetter, domBindings, wtSettings) {\n    super(dataAccessObject, facadeGetter, domBindings, wtSettings, 'master');\n  }\n  alignOverlaysWithTrimmingContainer() {\n    const trimmingElement = getTrimmingContainer(this.wtRootElement);\n    const {\n      rootWindow\n    } = this.domBindings;\n    if (trimmingElement === rootWindow) {\n      const preventOverflow = this.wtSettings.getSetting('preventOverflow');\n      if (!preventOverflow) {\n        this.holder.style.overflow = 'visible';\n        this.wtRootElement.style.overflow = 'visible';\n      }\n    } else {\n      const trimmingElementParent = trimmingElement.parentElement;\n      const trimmingHeight = getStyle(trimmingElement, 'height', rootWindow);\n      const trimmingOverflow = getStyle(trimmingElement, 'overflow', rootWindow);\n      const holderStyle = this.holder.style;\n      const {\n        scrollWidth,\n        scrollHeight\n      } = trimmingElement;\n      let width = trimmingElement.offsetWidth;\n      let height = trimmingElement.offsetHeight;\n      const overflow = ['auto', 'hidden', 'scroll'];\n      if (trimmingElementParent && overflow.includes(trimmingOverflow)) {\n        const cloneNode = trimmingElement.cloneNode(false);\n\n        // Before calculating the height of the trimming element, set overflow: auto to hide scrollbars.\n        // An issue occurred on Firefox, where an empty element with overflow: scroll returns an element height higher than 0px\n        // despite an empty content within.\n        cloneNode.style.overflow = 'auto';\n        // Issue #9545 shows problem with calculating height for HOT on Firefox while placing instance in some\n        // flex containers and setting overflow for some `div` section.\n        cloneNode.style.position = 'absolute';\n        if (trimmingElement.nextElementSibling) {\n          trimmingElementParent.insertBefore(cloneNode, trimmingElement.nextElementSibling);\n        } else {\n          trimmingElementParent.appendChild(cloneNode);\n        }\n        const cloneHeight = parseInt(getComputedStyle(cloneNode, rootWindow).height, 10);\n        trimmingElementParent.removeChild(cloneNode);\n        if (cloneHeight === 0) {\n          height = 0;\n        }\n      }\n      height = Math.min(height, scrollHeight);\n      holderStyle.height = trimmingHeight === 'auto' ? 'auto' : `${height}px`;\n      width = Math.min(width, scrollWidth);\n      holderStyle.width = `${width}px`;\n      holderStyle.overflow = '';\n      this.hasTableHeight = holderStyle.height === 'auto' ? true : height > 0;\n      this.hasTableWidth = width > 0;\n    }\n    this.isTableVisible = isVisible(this.TABLE);\n  }\n  markOversizedColumnHeaders() {\n    const {\n      wtSettings\n    } = this;\n    const {\n      wtViewport\n    } = this.dataAccessObject;\n    const overlayName = 'master';\n    const columnHeaders = wtSettings.getSetting('columnHeaders');\n    const columnHeadersCount = columnHeaders.length;\n    if (columnHeadersCount && !wtViewport.hasOversizedColumnHeadersMarked[overlayName]) {\n      const rowHeaders = wtSettings.getSetting('rowHeaders');\n      const rowHeaderCount = rowHeaders.length;\n      const columnCount = this.getRenderedColumnsCount();\n      for (let i = 0; i < columnHeadersCount; i++) {\n        for (let renderedColumnIndex = -1 * rowHeaderCount; renderedColumnIndex < columnCount; renderedColumnIndex++) {\n          // eslint-disable-line max-len\n          this.markIfOversizedColumnHeader(renderedColumnIndex);\n        }\n      }\n      wtViewport.hasOversizedColumnHeadersMarked[overlayName] = true;\n    }\n  }\n}\nmixin(MasterTable, calculatedRows);\nmixin(MasterTable, calculatedColumns);\nexport default MasterTable;", "import { getScrollbarWidth, getStyle, offset, outerHeight, outerWidth } from \"../../../helpers/dom/element.mjs\";\nimport { objectEach } from \"../../../helpers/object.mjs\";\nimport { FullyVisibleColumnsCalculationType, FullyVisibleRowsCalculationType, PartiallyVisibleColumnsCalculationType, PartiallyVisibleRowsCalculationType, RenderedAllColumnsCalculationType, RenderedAllRowsCalculationType, RenderedColumnsCalculationType, RenderedRowsCalculationType, ViewportColumnsCalculator, ViewportRowsCalculator } from \"./calculator/index.mjs\";\n/**\r\n * @class Viewport\r\n */\nclass Viewport {\n  /**\r\n   * @param {ViewportDao} dataAccessObject The Walkontable instance.\r\n   * @param {DomBindings} domBindings Bindings into DOM.\r\n   * @param {Settings} wtSettings The Walkontable settings.\r\n   * @param {EventManager} eventManager The instance event manager.\r\n   * @param {Table} wtTable The table.\r\n   */\n  constructor(dataAccessObject, domBindings, wtSettings, eventManager, wtTable) {\n    this.dataAccessObject = dataAccessObject;\n    // legacy support\n    this.wot = dataAccessObject.wot;\n    this.instance = this.wot;\n    this.domBindings = domBindings;\n    this.wtSettings = wtSettings;\n    this.wtTable = wtTable;\n    this.oversizedRows = [];\n    this.oversizedColumnHeaders = [];\n    this.hasOversizedColumnHeadersMarked = {};\n    this.clientHeight = 0;\n    this.containerWidth = NaN;\n    this.rowHeaderWidth = NaN;\n    this.rowsVisibleCalculator = null;\n    this.columnsVisibleCalculator = null;\n    this.rowsCalculatorTypes = new Map([['rendered', () => this.wtSettings.getSetting('renderAllRows') ? new RenderedAllRowsCalculationType() : new RenderedRowsCalculationType()], ['fullyVisible', () => new FullyVisibleRowsCalculationType()], ['partiallyVisible', () => new PartiallyVisibleRowsCalculationType()]]);\n    this.columnsCalculatorTypes = new Map([['rendered', () => this.wtSettings.getSetting('renderAllColumns') ? new RenderedAllColumnsCalculationType() : new RenderedColumnsCalculationType()], ['fullyVisible', () => new FullyVisibleColumnsCalculationType()], ['partiallyVisible', () => new PartiallyVisibleColumnsCalculationType()]]);\n    this.eventManager = eventManager;\n    this.eventManager.addEventListener(this.domBindings.rootWindow, 'resize', () => {\n      this.clientHeight = this.getWorkspaceHeight();\n    });\n  }\n\n  /**\r\n   * @returns {number}\r\n   */\n  getWorkspaceHeight() {\n    const currentDocument = this.domBindings.rootDocument;\n    const trimmingContainer = this.dataAccessObject.topOverlayTrimmingContainer;\n    let height = 0;\n    if (trimmingContainer === this.domBindings.rootWindow) {\n      height = currentDocument.documentElement.clientHeight;\n    } else {\n      const elemHeight = outerHeight(trimmingContainer);\n\n      // returns height without DIV scrollbar\n      height = elemHeight > 0 && trimmingContainer.clientHeight > 0 ? trimmingContainer.clientHeight : Infinity;\n    }\n    return height;\n  }\n  getWorkspaceWidth() {\n    const {\n      wtSettings\n    } = this;\n    const {\n      rootDocument,\n      rootWindow\n    } = this.domBindings;\n    const trimmingContainer = this.dataAccessObject.inlineStartOverlayTrimmingContainer;\n    const docOffsetWidth = rootDocument.documentElement.offsetWidth;\n    const totalColumns = wtSettings.getSetting('totalColumns');\n    const preventOverflow = wtSettings.getSetting('preventOverflow');\n    const isRtl = wtSettings.getSetting('rtlMode');\n    const tableRect = this.wtTable.TABLE.getBoundingClientRect();\n    const inlineStart = isRtl ? tableRect.right - docOffsetWidth : tableRect.left;\n    const tableOffset = docOffsetWidth - inlineStart;\n    let width;\n    let overflow;\n    if (preventOverflow) {\n      return outerWidth(this.wtTable.wtRootElement);\n    }\n    if (wtSettings.getSetting('freezeOverlays')) {\n      width = Math.min(tableOffset, docOffsetWidth);\n    } else {\n      width = Math.min(this.getContainerFillWidth(), tableOffset, docOffsetWidth);\n    }\n    if (trimmingContainer === rootWindow && totalColumns > 0 && this.sumColumnWidths(0, totalColumns - 1) > width) {\n      // in case sum of column widths is higher than available stylesheet width, let's assume using the whole window\n      // otherwise continue below, which will allow stretching\n      // this is used in `scroll_window.html`\n      // TODO test me\n      return rootDocument.documentElement.clientWidth;\n    }\n    if (trimmingContainer !== rootWindow) {\n      overflow = getStyle(this.dataAccessObject.inlineStartOverlayTrimmingContainer, 'overflow', rootWindow);\n      if (overflow === 'scroll' || overflow === 'hidden' || overflow === 'auto') {\n        // this is used in `scroll.html`\n        // TODO test me\n        return Math.max(width, trimmingContainer.clientWidth);\n      }\n    }\n    const stretchSetting = wtSettings.getSetting('stretchH');\n    if (stretchSetting === 'none' || !stretchSetting) {\n      // if no stretching is used, return the maximum used workspace width\n      return Math.max(width, outerWidth(this.wtTable.TABLE));\n    }\n\n    // if stretching is used, return the actual container width, so the columns can fit inside it\n    return width;\n  }\n\n  /**\r\n   * Checks if viewport has vertical scroll.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  hasVerticalScroll() {\n    return this.wtTable.hider.offsetHeight > this.getWorkspaceHeight();\n  }\n\n  /**\r\n   * Checks if viewport has horizontal scroll.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  hasHorizontalScroll() {\n    return this.wtTable.hider.offsetWidth > this.getWorkspaceWidth();\n  }\n\n  /**\r\n   * @param {number} from The visual column index from the width sum is start calculated.\r\n   * @param {number} length The length of the column to traverse.\r\n   * @returns {number}\r\n   */\n  sumColumnWidths(from, length) {\n    let sum = 0;\n    let column = from;\n    while (column < length) {\n      sum += this.wtTable.getColumnWidth(column);\n      column += 1;\n    }\n    return sum;\n  }\n\n  /**\r\n   * @returns {number}\r\n   */\n  getContainerFillWidth() {\n    if (this.containerWidth) {\n      return this.containerWidth;\n    }\n    const mainContainer = this.wtTable.holder;\n    const dummyElement = this.domBindings.rootDocument.createElement('div');\n    dummyElement.style.width = '100%';\n    dummyElement.style.height = '1px';\n    mainContainer.appendChild(dummyElement);\n    const fillWidth = dummyElement.offsetWidth;\n    this.containerWidth = fillWidth;\n    mainContainer.removeChild(dummyElement);\n    return fillWidth;\n  }\n\n  /**\r\n   * @returns {number}\r\n   */\n  getWorkspaceOffset() {\n    return offset(this.wtTable.TABLE);\n  }\n\n  /**\r\n   * @returns {number}\r\n   */\n  getColumnHeaderHeight() {\n    const columnHeaders = this.wtSettings.getSetting('columnHeaders');\n    if (!columnHeaders.length) {\n      this.columnHeaderHeight = 0;\n    } else if (isNaN(this.columnHeaderHeight)) {\n      this.columnHeaderHeight = outerHeight(this.wtTable.THEAD);\n    }\n    return this.columnHeaderHeight;\n  }\n\n  /**\r\n   * @returns {number}\r\n   */\n  getViewportHeight() {\n    let containerHeight = this.getWorkspaceHeight();\n    if (containerHeight === Infinity) {\n      return containerHeight;\n    }\n    const columnHeaderHeight = this.getColumnHeaderHeight();\n    if (columnHeaderHeight > 0) {\n      containerHeight -= columnHeaderHeight;\n    }\n    return containerHeight;\n  }\n\n  /**\r\n   * @returns {number}\r\n   */\n  getRowHeaderWidth() {\n    const rowHeadersWidthSetting = this.wtSettings.getSetting('rowHeaderWidth');\n    const rowHeaders = this.wtSettings.getSetting('rowHeaders');\n    if (rowHeadersWidthSetting) {\n      this.rowHeaderWidth = 0;\n      for (let i = 0, len = rowHeaders.length; i < len; i++) {\n        this.rowHeaderWidth += rowHeadersWidthSetting[i] || rowHeadersWidthSetting;\n      }\n    }\n    if (isNaN(this.rowHeaderWidth)) {\n      if (rowHeaders.length) {\n        let TH = this.wtTable.TABLE.querySelector('TH');\n        this.rowHeaderWidth = 0;\n        for (let i = 0, len = rowHeaders.length; i < len; i++) {\n          if (TH) {\n            this.rowHeaderWidth += outerWidth(TH);\n            TH = TH.nextSibling;\n          } else {\n            // yes this is a cheat but it worked like that before, just taking assumption from CSS instead of measuring.\n            // TODO: proper fix\n            this.rowHeaderWidth += 50;\n          }\n        }\n      } else {\n        this.rowHeaderWidth = 0;\n      }\n    }\n    this.rowHeaderWidth = this.wtSettings.getSetting('onModifyRowHeaderWidth', this.rowHeaderWidth) || this.rowHeaderWidth;\n    return this.rowHeaderWidth;\n  }\n\n  /**\r\n   * @returns {number}\r\n   */\n  getViewportWidth() {\n    const containerWidth = this.getWorkspaceWidth();\n    if (containerWidth === Infinity) {\n      return containerWidth;\n    }\n    const rowHeaderWidth = this.getRowHeaderWidth();\n    if (rowHeaderWidth > 0) {\n      return containerWidth - rowHeaderWidth;\n    }\n    return containerWidth;\n  }\n\n  /**\r\n   * Creates rows calculators. The type of the calculations can be chosen from the list:\r\n   *  - 'rendered' Calculates rows that should be rendered within the current table's viewport;\r\n   *  - 'fullyVisible' Calculates rows that are fully visible (used mostly for scrolling purposes);\r\n   *  - 'partiallyVisible' Calculates rows that are partially visible (used mostly for scrolling purposes).\r\n   *\r\n   * @param {'rendered' | 'fullyVisible' | 'partiallyVisible'} calculatorTypes The list of the calculation types.\r\n   * @returns {ViewportRowsCalculator}\r\n   */\n  createRowsCalculator() {\n    let calculatorTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['rendered', 'fullyVisible', 'partiallyVisible'];\n    const {\n      wtSettings,\n      wtTable\n    } = this;\n    let height = this.getViewportHeight();\n    let scrollbarHeight;\n    let fixedRowsHeight;\n    this.rowHeaderWidth = NaN;\n    let pos = this.dataAccessObject.topScrollPosition - this.dataAccessObject.topParentOffset;\n    const fixedRowsTop = wtSettings.getSetting('fixedRowsTop');\n    const fixedRowsBottom = wtSettings.getSetting('fixedRowsBottom');\n    const totalRows = wtSettings.getSetting('totalRows');\n    if (fixedRowsTop && pos >= 0) {\n      fixedRowsHeight = this.dataAccessObject.topOverlay.sumCellSizes(0, fixedRowsTop);\n      pos += fixedRowsHeight;\n      height -= fixedRowsHeight;\n    }\n    if (fixedRowsBottom && this.dataAccessObject.bottomOverlay.clone) {\n      fixedRowsHeight = this.dataAccessObject.bottomOverlay.sumCellSizes(totalRows - fixedRowsBottom, totalRows);\n      height -= fixedRowsHeight;\n    }\n    if (wtTable.holder.clientHeight === wtTable.holder.offsetHeight) {\n      scrollbarHeight = 0;\n    } else {\n      scrollbarHeight = getScrollbarWidth(this.domBindings.rootDocument);\n    }\n    return new ViewportRowsCalculator({\n      calculationTypes: calculatorTypes.map(type => [type, this.rowsCalculatorTypes.get(type)()]),\n      viewportHeight: height,\n      scrollOffset: pos,\n      totalRows: wtSettings.getSetting('totalRows'),\n      rowHeightFn: sourceRow => wtTable.getRowHeight(sourceRow),\n      overrideFn: wtSettings.getSettingPure('viewportRowCalculatorOverride'),\n      horizontalScrollbarHeight: scrollbarHeight\n    });\n  }\n\n  /**\r\n   * Creates columns calculators. The type of the calculations can be chosen from the list:\r\n   *  - 'rendered' Calculates columns that should be rendered within the current table's viewport;\r\n   *  - 'fullyVisible' Calculates columns that are fully visible (used mostly for scrolling purposes);\r\n   *  - 'partiallyVisible' Calculates columns that are partially visible (used mostly for scrolling purposes).\r\n   *\r\n   * @param {'rendered' | 'fullyVisible' | 'partiallyVisible'} calculatorTypes The list of the calculation types.\r\n   * @returns {ViewportColumnsCalculator}\r\n   */\n  createColumnsCalculator() {\n    let calculatorTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['rendered', 'fullyVisible', 'partiallyVisible'];\n    const {\n      wtSettings,\n      wtTable\n    } = this;\n    let width = this.getViewportWidth();\n    let pos = Math.abs(this.dataAccessObject.inlineStartScrollPosition) - this.dataAccessObject.inlineStartParentOffset;\n    this.columnHeaderHeight = NaN;\n    const fixedColumnsStart = wtSettings.getSetting('fixedColumnsStart');\n    if (fixedColumnsStart && pos >= 0) {\n      const fixedColumnsWidth = this.dataAccessObject.inlineStartOverlay.sumCellSizes(0, fixedColumnsStart);\n      pos += fixedColumnsWidth;\n      width -= fixedColumnsWidth;\n    }\n    if (wtTable.holder.clientWidth !== wtTable.holder.offsetWidth) {\n      width -= getScrollbarWidth(this.domBindings.rootDocument);\n    }\n    return new ViewportColumnsCalculator({\n      calculationTypes: calculatorTypes.map(type => [type, this.columnsCalculatorTypes.get(type)()]),\n      viewportWidth: width,\n      scrollOffset: pos,\n      totalColumns: wtSettings.getSetting('totalColumns'),\n      columnWidthFn: sourceCol => wtTable.getColumnWidth(sourceCol),\n      overrideFn: wtSettings.getSettingPure('viewportColumnCalculatorOverride'),\n      inlineStartOffset: this.dataAccessObject.inlineStartParentOffset\n    });\n  }\n\n  /**\r\n   * Creates rowsRenderCalculator and columnsRenderCalculator (before draw, to determine what rows and\r\n   * cols should be rendered).\r\n   *\r\n   * @param {boolean} fastDraw If `true`, will try to avoid full redraw and only update the border positions.\r\n   *                           If `false` or `undefined`, will perform a full redraw.\r\n   * @returns {boolean} The fastDraw value, possibly modified.\r\n   */\n  createCalculators() {\n    let fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const {\n      wtSettings\n    } = this;\n    const rowsCalculator = this.createRowsCalculator();\n    const columnsCalculator = this.createColumnsCalculator();\n    if (fastDraw && !wtSettings.getSetting('renderAllRows')) {\n      const proposedRowsVisibleCalculator = rowsCalculator.getResultsFor('fullyVisible');\n      fastDraw = this.areAllProposedVisibleRowsAlreadyRendered(proposedRowsVisibleCalculator);\n    }\n    if (fastDraw && !wtSettings.getSetting('renderAllColumns')) {\n      const proposedColumnsVisibleCalculator = columnsCalculator.getResultsFor('fullyVisible');\n      fastDraw = this.areAllProposedVisibleColumnsAlreadyRendered(proposedColumnsVisibleCalculator);\n    }\n    if (!fastDraw) {\n      this.rowsRenderCalculator = rowsCalculator.getResultsFor('rendered');\n      this.columnsRenderCalculator = columnsCalculator.getResultsFor('rendered');\n    }\n    this.rowsVisibleCalculator = rowsCalculator.getResultsFor('fullyVisible');\n    this.columnsVisibleCalculator = columnsCalculator.getResultsFor('fullyVisible');\n    this.rowsPartiallyVisibleCalculator = rowsCalculator.getResultsFor('partiallyVisible');\n    this.columnsPartiallyVisibleCalculator = columnsCalculator.getResultsFor('partiallyVisible');\n    return fastDraw;\n  }\n\n  /**\r\n   * Creates rows and columns calculators (after draw, to determine what are\r\n   * the actually fully visible and partially visible rows and columns).\r\n   */\n  createVisibleCalculators() {\n    const rowsCalculator = this.createRowsCalculator(['fullyVisible', 'partiallyVisible']);\n    const columnsCalculator = this.createColumnsCalculator(['fullyVisible', 'partiallyVisible']);\n    this.rowsVisibleCalculator = rowsCalculator.getResultsFor('fullyVisible');\n    this.columnsVisibleCalculator = columnsCalculator.getResultsFor('fullyVisible');\n    this.rowsPartiallyVisibleCalculator = rowsCalculator.getResultsFor('partiallyVisible');\n    this.columnsPartiallyVisibleCalculator = columnsCalculator.getResultsFor('partiallyVisible');\n  }\n\n  /**\r\n   * Returns information whether proposedRowsVisibleCalculator viewport\r\n   * is contained inside rows rendered in previous draw (cached in rowsRenderCalculator).\r\n   *\r\n   * @param {ViewportRowsCalculator} proposedRowsVisibleCalculator The instance of the viewport calculator to compare with.\r\n   * @returns {boolean} Returns `true` if all proposed visible rows are already rendered (meaning: redraw is not needed).\r\n   *                    Returns `false` if at least one proposed visible row is not already rendered (meaning: redraw is needed).\r\n   */\n  areAllProposedVisibleRowsAlreadyRendered(proposedRowsVisibleCalculator) {\n    if (!this.rowsVisibleCalculator) {\n      return false;\n    }\n    let {\n      startRow,\n      endRow\n    } = proposedRowsVisibleCalculator;\n\n    // if there are no fully visible rows at all...\n    if (startRow === null && endRow === null) {\n      if (!proposedRowsVisibleCalculator.isVisibleInTrimmingContainer) {\n        return true;\n      }\n      // ...use partially visible rows calculator to determine what render type is needed\n      startRow = this.rowsPartiallyVisibleCalculator.startRow;\n      endRow = this.rowsPartiallyVisibleCalculator.endRow;\n    }\n    const {\n      startRow: renderedStartRow,\n      endRow: renderedEndRow\n    } = this.rowsRenderCalculator;\n    if (startRow < renderedStartRow || startRow === renderedStartRow && startRow > 0) {\n      return false;\n    } else if (endRow > renderedEndRow || endRow === renderedEndRow && endRow < this.wtSettings.getSetting('totalRows') - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\r\n   * Returns information whether proposedColumnsVisibleCalculator viewport\r\n   * is contained inside column rendered in previous draw (cached in columnsRenderCalculator).\r\n   *\r\n   * @param {ViewportRowsCalculator} proposedColumnsVisibleCalculator The instance of the viewport calculator to compare with.\r\n   * @returns {boolean} Returns `true` if all proposed visible columns are already rendered (meaning: redraw is not needed).\r\n   *                    Returns `false` if at least one proposed visible column is not already rendered (meaning: redraw is needed).\r\n   */\n  areAllProposedVisibleColumnsAlreadyRendered(proposedColumnsVisibleCalculator) {\n    if (!this.columnsVisibleCalculator) {\n      return false;\n    }\n    let {\n      startColumn,\n      endColumn\n    } = proposedColumnsVisibleCalculator;\n\n    // if there are no fully visible columns at all...\n    if (startColumn === null && endColumn === null) {\n      if (!proposedColumnsVisibleCalculator.isVisibleInTrimmingContainer) {\n        return true;\n      }\n      // ...use partially visible columns calculator to determine what render type is needed\n      startColumn = this.columnsPartiallyVisibleCalculator.startColumn;\n      endColumn = this.columnsPartiallyVisibleCalculator.endColumn;\n    }\n    const {\n      startColumn: renderedStartColumn,\n      endColumn: renderedEndColumn\n    } = this.columnsRenderCalculator;\n    if (startColumn < renderedStartColumn || startColumn === renderedStartColumn && startColumn > 0) {\n      return false;\n    } else if (endColumn > renderedEndColumn || endColumn === renderedEndColumn && endColumn < this.wtSettings.getSetting('totalColumns') - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\r\n   * Resets values in keys of the hasOversizedColumnHeadersMarked object after updateSettings.\r\n   */\n  resetHasOversizedColumnHeadersMarked() {\n    objectEach(this.hasOversizedColumnHeadersMarked, (value, key, object) => {\n      object[key] = undefined;\n    });\n  }\n}\nexport default Viewport;", "import \"core-js/modules/es.array.push.js\";\nimport Event from \"../event.mjs\";\nimport Overlays from \"../overlays.mjs\";\nimport { CLONE_TYPES } from \"../overlay/index.mjs\";\nimport Settings from \"../settings.mjs\";\nimport MasterTable from \"../table/master.mjs\";\nimport Viewport from \"../viewport.mjs\";\nimport CoreAbstract from \"./_base.mjs\";\nimport { SelectionManager } from \"../selection/manager.mjs\";\nimport { objectEach } from \"../../../../helpers/object.mjs\";\nimport { addClass, removeClass } from \"../../../../helpers/dom/element.mjs\";\n/**\r\n * @class Walkontable\r\n */\nexport default class Walkontable extends CoreAbstract {\n  /**\r\n   * @param {HTMLTableElement} table Main table.\r\n   * @param {SettingsPure} settings The Walkontable settings.\r\n   */\n  constructor(table, settings) {\n    super(table, new Settings(settings));\n    const facadeGetter = this.wtSettings.getSetting('facade', this); // todo rethink. I would like to have no access to facade from the internal scope.\n\n    this.wtTable = new MasterTable(this.getTableDao(), facadeGetter, this.domBindings, this.wtSettings);\n    this.wtViewport = new Viewport(this.getViewportDao(), this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.selectionManager = new SelectionManager(this.wtSettings.getSetting('selections'));\n    this.wtEvent = new Event(facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable, this.selectionManager);\n    this.wtOverlays = new Overlays(\n    // TODO create DAO and remove reference to the Walkontable instance.\n    this, facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.exportSettingsAsClassNames();\n    this.findOriginalHeaders();\n  }\n\n  /**\r\n   * Export settings as class names added to the parent element of the table.\r\n   */\n  exportSettingsAsClassNames() {\n    const toExport = {\n      rowHeaders: 'htRowHeaders',\n      columnHeaders: 'htColumnHeaders'\n    };\n    const allClassNames = [];\n    const newClassNames = [];\n    objectEach(toExport, (className, key) => {\n      if (this.wtSettings.getSetting(key).length) {\n        newClassNames.push(className);\n      }\n      allClassNames.push(className);\n    });\n    removeClass(this.wtTable.wtRootElement.parentNode, allClassNames);\n    addClass(this.wtTable.wtRootElement.parentNode, newClassNames);\n  }\n\n  /**\r\n   * Gets the overlay instance by its name.\r\n   *\r\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'} overlayName The overlay name.\r\n   * @returns {Overlay | null}\r\n   */\n  getOverlayByName(overlayName) {\n    var _this$wtOverlays;\n    if (!CLONE_TYPES.includes(overlayName)) {\n      return null;\n    }\n    const camelCaseOverlay = overlayName.replace(/_([a-z])/g, match => match[1].toUpperCase());\n    return (_this$wtOverlays = this.wtOverlays[`${camelCaseOverlay}Overlay`]) !== null && _this$wtOverlays !== void 0 ? _this$wtOverlays : null;\n  }\n\n  /**\r\n   * @returns {ViewportDao}\r\n   */\n  getViewportDao() {\n    const wot = this;\n    return {\n      get wot() {\n        return wot;\n      },\n      get topOverlayTrimmingContainer() {\n        return wot.wtOverlays.topOverlay.trimmingContainer;\n      },\n      get inlineStartOverlayTrimmingContainer() {\n        return wot.wtOverlays.inlineStartOverlay.trimmingContainer;\n      },\n      get topScrollPosition() {\n        return wot.wtOverlays.topOverlay.getScrollPosition();\n      },\n      get topParentOffset() {\n        return wot.wtOverlays.topOverlay.getTableParentOffset();\n      },\n      get inlineStartScrollPosition() {\n        return wot.wtOverlays.inlineStartOverlay.getScrollPosition();\n      },\n      get inlineStartParentOffset() {\n        return wot.wtOverlays.inlineStartOverlay.getTableParentOffset();\n      },\n      get topOverlay() {\n        return wot.wtOverlays.topOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get inlineStartOverlay() {\n        return wot.wtOverlays.inlineStartOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get bottomOverlay() {\n        return wot.wtOverlays.bottomOverlay; // TODO refactoring: move outside dao, use IOC\n      }\n    };\n  }\n}", "import Walkontable from \"../core/core.mjs\";\nimport CoreAbstract from \"../core/_base.mjs\";\n/**\r\n * This layer cares about backward compatibility.\r\n *\r\n * @class WalkontableFacade\r\n * @augments Walkontable\r\n * @inheritDoc\r\n */\nexport default class WalkontableFacade {\n  /**\r\n   * @param {SettingsPure|Walkontable} settingsOrInstance The Walkontable settings.\r\n   */\n  constructor(settingsOrInstance) {\n    if (settingsOrInstance instanceof CoreAbstract) {\n      this._wot = settingsOrInstance;\n    } else {\n      this._initFromSettings(settingsOrInstance);\n    }\n  }\n  _initFromSettings(settings) {\n    settings.facade = instance => {\n      const facade = new WalkontableFacade(instance);\n      return () => facade;\n    };\n    this._wot = new Walkontable(settings.table, settings);\n  }\n  get guid() {\n    return this._wot.guid;\n  }\n  get rootDocument() {\n    return this._wot.domBindings.rootDocument;\n  }\n  get rootWindow() {\n    return this._wot.domBindings.rootWindow;\n  }\n  get wtSettings() {\n    return this._wot.wtSettings; // todo create facade\n  }\n  get cloneSource() {\n    return this._wot.cloneSource; // todo create facade\n  }\n  get cloneOverlay() {\n    return this._wot.cloneOverlay; // todo create facade\n  }\n  get selectionManager() {\n    return this._wot.selectionManager; // todo create facade\n  }\n  get wtViewport() {\n    return this._wot.wtViewport; // todo create facade\n  }\n  get wtOverlays() {\n    return this._wot.wtOverlays; // todo create facade\n  }\n  get wtTable() {\n    return this._wot.wtTable; // todo create facade\n  }\n  get wtEvent() {\n    return this._wot.wtEvent; // todo create facade\n  }\n  get wtScroll() {\n    return this._wot.wtScroll; // todo create facade\n  }\n  get drawn() {\n    return this._wot.drawn;\n  }\n  set drawn(value) {\n    this._wot.drawn = value;\n  }\n  get drawInterrupted() {\n    return this._wot.drawInterrupted;\n  }\n  set drawInterrupted(value) {\n    this._wot.drawInterrupted = value;\n  }\n  get lastMouseOver() {\n    return this._wot.lastMouseOver;\n  }\n  set lastMouseOver(value) {\n    this._wot.lastMouseOver = value;\n  }\n  get momentumScrolling() {\n    return this._wot.momentumScrolling;\n  }\n  set momentumScrolling(value) {\n    this._wot.momentumScrolling = value;\n  }\n  get touchApplied() {\n    return this._wot.touchApplied;\n  }\n  set touchApplied(value) {\n    this._wot.touchApplied = value;\n  }\n  get domBindings() {\n    return this._wot.domBindings;\n  }\n  get eventListeners() {\n    return this._wot.eventListeners;\n  }\n  set eventListeners(value) {\n    this._wot.eventListeners = value;\n  }\n  get eventManager() {\n    return this._wot.eventManager;\n  }\n  createCellCoords(row, column) {\n    return this._wot.createCellCoords(row, column);\n  }\n  createCellRange(highlight, from, to) {\n    return this._wot.createCellRange(highlight, from, to);\n  }\n  draw() {\n    let fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this._wot.draw(fastDraw);\n    return this;\n  }\n  getCell(coords) {\n    let topmost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return this._wot.getCell(coords, topmost);\n  }\n  scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n    return this._wot.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n  }\n  scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n    return this._wot.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n  }\n  scrollViewportVertically(row, snapToTop, snapToBottom) {\n    return this._wot.scrollViewportVertically(row, snapToTop, snapToBottom);\n  }\n  getViewport() {\n    return this._wot.getViewport();\n  }\n  getOverlayName() {\n    return this._wot.cloneOverlay ? this._wot.cloneOverlay.type : 'master';\n  }\n  getOverlayByName(overlayName) {\n    return this._wot.getOverlayByName(overlayName);\n  }\n  exportSettingsAsClassNames() {\n    return this._wot.exportSettingsAsClassNames();\n  }\n  update(settings, value) {\n    this._wot.wtSettings.update(settings, value);\n    return this;\n  }\n  getSetting(key, param1, param2, param3, param4) {\n    return this._wot.wtSettings.getSetting(key, param1, param2, param3, param4);\n  }\n  hasSetting(key) {\n    return this._wot.wtSettings.hasSetting(key);\n  }\n  destroy() {\n    this._wot.destroy();\n  }\n}", "import { isRightClick as isRightClickEvent, isLeftClick as isLeftClickEvent } from \"./../helpers/dom/event.mjs\";\n/**\r\n * MouseDown handler.\r\n *\r\n * @param {object} options The handler options.\r\n * @param {boolean} options.isShiftKey The flag which indicates if the shift key is pressed.\r\n * @param {boolean} options.isLeftClick The flag which indicates if the left mouse button is pressed.\r\n * @param {boolean} options.isRightClick The flag which indicates if the right mouse button is pressed.\r\n * @param {CellRange} options.coords The CellCoords object with defined visual coordinates.\r\n * @param {Selection} options.selection The Selection class instance.\r\n * @param {object} options.controller An object with keys `row`, `column`, `cell` which indicate what\r\n *                                    operation will be performed in later selection stages.\r\n * @param {Function} options.cellCoordsFactory The function factory for CellCoords objects.\r\n */\nexport function mouseDown(_ref) {\n  let {\n    isShiftKey,\n    isLeftClick,\n    isRightClick,\n    coords,\n    selection,\n    controller,\n    cellCoordsFactory\n  } = _ref;\n  const currentSelection = selection.isSelected() ? selection.getSelectedRange().current() : null;\n  const selectedCorner = selection.isSelectedByCorner();\n  const selectedRow = selection.isSelectedByRowHeader();\n  selection.markSource('mouse');\n  if (isShiftKey && currentSelection) {\n    if (coords.row >= 0 && coords.col >= 0 && !controller.cell) {\n      selection.setRangeEnd(coords);\n    } else if ((selectedCorner || selectedRow) && coords.row >= 0 && coords.col >= 0 && !controller.cell) {\n      selection.setRangeEnd(cellCoordsFactory(coords.row, coords.col));\n    } else if (selectedCorner && coords.row < 0 && !controller.column) {\n      selection.setRangeEnd(cellCoordsFactory(currentSelection.to.row, coords.col));\n    } else if (selectedRow && coords.col < 0 && !controller.row) {\n      selection.setRangeEnd(cellCoordsFactory(coords.row, currentSelection.to.col));\n    } else if ((!selectedCorner && !selectedRow && coords.col < 0 || selectedCorner && coords.col < 0) && !controller.row) {\n      selection.selectRows(Math.max(currentSelection.from.row, 0), coords.row, coords.col);\n    } else if ((!selectedCorner && !selectedRow && coords.row < 0 || selectedRow && coords.row < 0) && !controller.column) {\n      selection.selectColumns(Math.max(currentSelection.from.col, 0), coords.col, coords.row);\n    }\n  } else {\n    const allowRightClickSelection = !selection.inInSelection(coords);\n    const performSelection = isLeftClick || isRightClick && allowRightClickSelection;\n\n    // clicked row header and when some column was selected\n    if (coords.row < 0 && coords.col >= 0 && !controller.column) {\n      if (performSelection) {\n        selection.selectColumns(coords.col, coords.col, coords.row);\n      }\n\n      // clicked column header and when some row was selected\n    } else if (coords.col < 0 && coords.row >= 0 && !controller.row) {\n      if (performSelection) {\n        selection.selectRows(coords.row, coords.row, coords.col);\n      }\n    } else if (coords.col >= 0 && coords.row >= 0 && !controller.cell) {\n      if (performSelection) {\n        selection.setRangeStart(coords);\n      }\n    } else if (coords.col < 0 && coords.row < 0) {\n      selection.selectAll(true, true, {\n        disableHeadersHighlight: true,\n        focusPosition: {\n          row: 0,\n          col: 0\n        }\n      });\n    }\n  }\n  selection.markEndSource();\n}\n\n/**\r\n * MouseOver handler.\r\n *\r\n * @param {object} options The handler options.\r\n * @param {boolean} options.isLeftClick Indicates that event was fired using the left mouse button.\r\n * @param {CellRange} options.coords The CellCoords object with defined visual coordinates.\r\n * @param {Selection} options.selection The Selection class instance.\r\n * @param {object} options.controller An object with keys `row`, `column`, `cell` which indicate what\r\n *                                    operation will be performed in later selection stages.\r\n * @param {Function} options.cellCoordsFactory The function factory for CellCoords objects.\r\n */\nexport function mouseOver(_ref2) {\n  let {\n    isLeftClick,\n    coords,\n    selection,\n    controller,\n    cellCoordsFactory\n  } = _ref2;\n  if (!isLeftClick) {\n    return;\n  }\n  const selectedRow = selection.isSelectedByRowHeader();\n  const selectedColumn = selection.isSelectedByColumnHeader();\n  const countCols = selection.tableProps.countCols();\n  const countRows = selection.tableProps.countRows();\n  selection.markSource('mouse');\n  if (selectedColumn && !controller.column) {\n    selection.setRangeEnd(cellCoordsFactory(countRows - 1, coords.col));\n  } else if (selectedRow && !controller.row) {\n    selection.setRangeEnd(cellCoordsFactory(coords.row, countCols - 1));\n  } else if (!controller.cell) {\n    selection.setRangeEnd(coords);\n  }\n  selection.markEndSource();\n}\nconst handlers = new Map([['mousedown', mouseDown], ['mouseover', mouseOver], ['touchstart', mouseDown]]);\n\n/**\r\n * Mouse handler for selection functionality.\r\n *\r\n * @param {Event} event An native event to handle.\r\n * @param {object} options The handler options.\r\n * @param {CellRange} options.coords The CellCoords object with defined visual coordinates.\r\n * @param {Selection} options.selection The Selection class instance.\r\n * @param {object} options.controller An object with keys `row`, `column`, `cell` which indicate what\r\n *                                    operation will be performed in later selection stages.\r\n * @param {Function} options.cellCoordsFactory The function factory for CellCoords objects.\r\n */\nexport function handleMouseEvent(event, _ref3) {\n  let {\n    coords,\n    selection,\n    controller,\n    cellCoordsFactory\n  } = _ref3;\n  handlers.get(event.type)({\n    coords,\n    selection,\n    controller,\n    cellCoordsFactory,\n    isShiftKey: event.shiftKey,\n    isLeftClick: isLeftClickEvent(event) || event.type === 'touchstart',\n    isRightClick: isRightClickEvent(event)\n  });\n}", "export const holder = new WeakMap();\nexport const rootInstanceSymbol = Symbol('rootInstance');\n\n/**\r\n * Register an object as a root instance.\r\n *\r\n * @param  {object} object An object to associate with root instance flag.\r\n */\nexport function registerAsRootInstance(object) {\n  holder.set(object, true);\n}\n\n/**\r\n * Check if the source of the root indication call is valid.\r\n *\r\n * @param  {symbol} rootSymbol A symbol as a source of truth.\r\n * @returns {boolean}\r\n */\nexport function hasValidParameter(rootSymbol) {\n  return rootSymbol === rootInstanceSymbol;\n}\n\n/**\r\n * Check if passed an object was flagged as a root instance.\r\n *\r\n * @param  {object} object An object to check.\r\n * @returns {boolean}\r\n */\nexport function isRootInstance(object) {\n  return holder.has(object);\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput, isVisible, setAttribute, getParentWindow } from \"./helpers/dom/element.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { isImmediatePropagationStopped, isRightClick, isLeftClick } from \"./helpers/dom/event.mjs\";\nimport Walkontable from \"./3rdparty/walkontable/src/index.mjs\";\nimport { handleMouseEvent } from \"./selection/mouseEventHandler.mjs\";\nimport { isRootInstance } from \"./utils/rootInstance.mjs\";\nimport { A11Y_COLCOUNT, A11Y_MULTISELECTABLE, A11Y_PRESENTATION, A11Y_ROWCOUNT, A11Y_TREEGRID } from \"./helpers/a11y.mjs\";\n/**\r\n * @class TableView\r\n * @private\r\n */\nvar _columnHeadersCount = /*#__PURE__*/new WeakMap();\nvar _rowHeadersCount = /*#__PURE__*/new WeakMap();\nvar _selectionMouseDown = /*#__PURE__*/new WeakMap();\nvar _mouseDown = /*#__PURE__*/new WeakMap();\nvar _table = /*#__PURE__*/new WeakMap();\nvar _lastWidth = /*#__PURE__*/new WeakMap();\nvar _lastHeight = /*#__PURE__*/new WeakMap();\nvar _TableView_brand = /*#__PURE__*/new WeakSet();\nclass TableView {\n  /**\r\n   * @param {Hanstontable} hotInstance Instance of {@link Handsontable}.\r\n   */\n  constructor(hotInstance) {\n    /**\r\n     * Return the value of the `aria-colcount` attribute.\r\n     *\r\n     * @returns {number} The value of the `aria-colcount` attribute.\r\n     */\n    _classPrivateMethodInitSpec(this, _TableView_brand);\n    /**\r\n     * Instance of {@link Handsontable}.\r\n     *\r\n     * @private\r\n     * @type {Handsontable}\r\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\r\n     * Instance of {@link EventManager}.\r\n     *\r\n     * @private\r\n     * @type {EventManager}\r\n     */\n    _defineProperty(this, \"eventManager\", void 0);\n    /**\r\n     * Current Handsontable's GridSettings object.\r\n     *\r\n     * @private\r\n     * @type {GridSettings}\r\n     */\n    _defineProperty(this, \"settings\", void 0);\n    /**\r\n     * Main <THEAD> element.\r\n     *\r\n     * @private\r\n     * @type {HTMLTableSectionElement}\r\n     */\n    _defineProperty(this, \"THEAD\", void 0);\n    /**\r\n     * Main <TBODY> element.\r\n     *\r\n     * @private\r\n     * @type {HTMLTableSectionElement}\r\n     */\n    _defineProperty(this, \"TBODY\", void 0);\n    /**\r\n     * Main Walkontable instance.\r\n     *\r\n     * @private\r\n     * @type {Walkontable}\r\n     */\n    _defineProperty(this, \"_wt\", void 0);\n    /**\r\n     * Main Walkontable instance.\r\n     *\r\n     * @type {Walkontable}\r\n     */\n    _defineProperty(this, \"activeWt\", void 0);\n    /**\r\n     * The total number of the column header renderers applied to the table through the\r\n     * `afterGetColumnHeaderRenderers` hook.\r\n     *\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _columnHeadersCount, 0);\n    /**\r\n     * The total number of the row header renderers applied to the table through the\r\n     * `afterGetRowHeaderRenderers` hook.\r\n     *\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _rowHeadersCount, 0);\n    /**\r\n     * The flag determines if the `adjustElementsSize` method call was made during\r\n     * the render suspending. If true, the method has to be triggered once after render\r\n     * resuming.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"postponedAdjustElementsSize\", false);\n    /**\r\n     * Defines if the text should be selected during mousemove.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _selectionMouseDown, false);\n    /**\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _mouseDown, void 0);\n    /**\r\n     * Main <TABLE> element.\r\n     *\r\n     * @type {HTMLTableElement}\r\n     */\n    _classPrivateFieldInitSpec(this, _table, void 0);\n    /**\r\n     * Cached width of the rootElement.\r\n     *\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _lastWidth, 0);\n    /**\r\n     * Cached height of the rootElement.\r\n     *\r\n     * @type {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _lastHeight, 0);\n    this.hot = hotInstance;\n    this.eventManager = new EventManager(this.hot);\n    this.settings = this.hot.getSettings();\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n\n  /**\r\n   * Renders WalkontableUI.\r\n   */\n  render() {\n    if (!this.hot.isRenderSuspended()) {\n      this.hot.runHooks('beforeRender', this.hot.forceFullRender);\n      if (this.postponedAdjustElementsSize) {\n        this.postponedAdjustElementsSize = false;\n        this.adjustElementsSize(true);\n      }\n      this._wt.draw(!this.hot.forceFullRender);\n      this.hot.runHooks('afterRender', this.hot.forceFullRender);\n      this.hot.forceFullRender = false;\n      this.hot.renderCall = false;\n    }\n  }\n\n  /**\r\n   * Adjust overlays elements size and master table size.\r\n   */\n  adjustElementsSize() {\n    if (this.hot.isRenderSuspended()) {\n      this.postponedAdjustElementsSize = true;\n    } else {\n      this._wt.wtOverlays.adjustElementsSize();\n    }\n  }\n\n  /**\r\n   * Returns td object given coordinates.\r\n   *\r\n   * @param {CellCoords} coords Renderable cell coordinates.\r\n   * @param {boolean} topmost Indicates whether the cell should be calculated from the topmost.\r\n   * @returns {HTMLTableCellElement|null}\r\n   */\n  getCellAtCoords(coords, topmost) {\n    const td = this._wt.getCell(coords, topmost);\n    if (td < 0) {\n      // there was an exit code (cell is out of bounds)\n      return null;\n    }\n    return td;\n  }\n\n  /**\r\n   * Scroll viewport to a cell.\r\n   *\r\n   * @param {CellCoords} coords Renderable cell coordinates.\r\n   * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\r\n   * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\r\n   * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\r\n   * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n    return this._wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n  }\n\n  /**\r\n   * Scroll viewport to a column.\r\n   *\r\n   * @param {number} column Renderable column index.\r\n   * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\r\n   * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n    return this._wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n  }\n\n  /**\r\n   * Scroll viewport to a row.\r\n   *\r\n   * @param {number} row Renderable row index.\r\n   * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\r\n   * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\r\n   * @returns {boolean}\r\n   */\n  scrollViewportVertically(row, snapToTop, snapToBottom) {\n    return this._wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n  }\n\n  /**\r\n   * Prepares DOMElements and adds correct className to the root element.\r\n   *\r\n   * @private\r\n   */\n  createElements() {\n    const {\n      rootElement,\n      rootDocument\n    } = this.hot;\n    const originalStyle = rootElement.getAttribute('style');\n    if (originalStyle) {\n      rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n    }\n    addClass(rootElement, 'handsontable');\n    _classPrivateFieldSet(_table, this, rootDocument.createElement('TABLE'));\n    addClass(_classPrivateFieldGet(_table, this), 'htCore');\n    if (this.hot.getSettings().tableClassName) {\n      addClass(_classPrivateFieldGet(_table, this), this.hot.getSettings().tableClassName);\n    }\n    if (this.settings.ariaTags) {\n      setAttribute(_classPrivateFieldGet(_table, this), [A11Y_PRESENTATION()]);\n      setAttribute(rootElement, [A11Y_TREEGRID(), A11Y_ROWCOUNT(-1), A11Y_COLCOUNT(this.hot.countCols()), A11Y_MULTISELECTABLE()]);\n    }\n    this.THEAD = rootDocument.createElement('THEAD');\n    _classPrivateFieldGet(_table, this).appendChild(this.THEAD);\n    this.TBODY = rootDocument.createElement('TBODY');\n    _classPrivateFieldGet(_table, this).appendChild(this.TBODY);\n    this.hot.table = _classPrivateFieldGet(_table, this);\n    this.hot.container.insertBefore(_classPrivateFieldGet(_table, this), this.hot.container.firstChild);\n  }\n\n  /**\r\n   * Attaches necessary listeners.\r\n   *\r\n   * @private\r\n   */\n  registerEvents() {\n    const {\n      rootElement,\n      rootDocument,\n      selection,\n      rootWindow\n    } = this.hot;\n    const documentElement = rootDocument.documentElement;\n    this.eventManager.addEventListener(rootElement, 'mousedown', event => {\n      _classPrivateFieldSet(_selectionMouseDown, this, true);\n      if (!this.isTextSelectionAllowed(event.target)) {\n        clearTextSelection(rootWindow);\n        event.preventDefault();\n        rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n      }\n    });\n    this.eventManager.addEventListener(rootElement, 'mouseup', () => {\n      _classPrivateFieldSet(_selectionMouseDown, this, false);\n    });\n    this.eventManager.addEventListener(rootElement, 'mousemove', event => {\n      if (_classPrivateFieldGet(_selectionMouseDown, this) && !this.isTextSelectionAllowed(event.target)) {\n        // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breaks the IME editor.\n        if (this.settings.fragmentSelection) {\n          clearTextSelection(rootWindow);\n        }\n        event.preventDefault();\n      }\n    });\n    this.eventManager.addEventListener(documentElement, 'keyup', event => {\n      // TODO: is it the best place and way to finish cell selection?\n      if (selection.isInProgress() && !event.shiftKey) {\n        selection.finish();\n      }\n    });\n    this.eventManager.addEventListener(documentElement, 'mouseup', event => {\n      if (selection.isInProgress() && isLeftClick(event)) {\n        selection.finish();\n      }\n      _classPrivateFieldSet(_mouseDown, this, false);\n      const isOutsideInputElement = isOutsideInput(rootDocument.activeElement);\n      if (isInput(rootDocument.activeElement) && !isOutsideInputElement) {\n        return;\n      }\n      if (isOutsideInputElement || !selection.isSelected() && !selection.isSelectedByAnyHeader() && !rootElement.contains(event.target) && !isRightClick(event)) {\n        this.hot.unlisten();\n      }\n    });\n    this.eventManager.addEventListener(documentElement, 'contextmenu', event => {\n      if (selection.isInProgress() && isRightClick(event)) {\n        selection.finish();\n        _classPrivateFieldSet(_mouseDown, this, false);\n      }\n    });\n    this.eventManager.addEventListener(documentElement, 'touchend', () => {\n      if (selection.isInProgress()) {\n        selection.finish();\n      }\n      _classPrivateFieldSet(_mouseDown, this, false);\n    });\n    this.eventManager.addEventListener(documentElement, 'mousedown', event => {\n      const originalTarget = event.target;\n      const eventX = event.x || event.clientX;\n      const eventY = event.y || event.clientY;\n      let next = event.target;\n      if (_classPrivateFieldGet(_mouseDown, this) || !rootElement || !this.hot.view) {\n        return; // it must have been started in a cell\n      }\n\n      // immediate click on \"holder\" means click on the right side of vertical scrollbar\n      const {\n        holder\n      } = this._wt.wtTable;\n      if (next === holder) {\n        const scrollbarWidth = getScrollbarWidth(rootDocument);\n        if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n          return;\n        }\n      } else {\n        while (next !== documentElement) {\n          if (next === null) {\n            if (event.isTargetWebComponent) {\n              break;\n            }\n\n            // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n            return;\n          }\n          if (next === rootElement) {\n            // click inside container\n            return;\n          }\n          next = next.parentNode;\n        }\n      }\n\n      // function did not return until here, we have an outside click!\n      const outsideClickDeselects = typeof this.settings.outsideClickDeselects === 'function' ? this.settings.outsideClickDeselects(originalTarget) : this.settings.outsideClickDeselects;\n      if (outsideClickDeselects) {\n        this.hot.deselectCell();\n      } else {\n        this.hot.destroyEditor(false, false);\n      }\n    });\n    let parentWindow = getParentWindow(rootWindow);\n    while (parentWindow !== null) {\n      this.eventManager.addEventListener(parentWindow.document.documentElement, 'click', () => {\n        this.hot.unlisten();\n      });\n      parentWindow = getParentWindow(parentWindow);\n    }\n    this.eventManager.addEventListener(_classPrivateFieldGet(_table, this), 'selectstart', event => {\n      if (this.settings.fragmentSelection || isInput(event.target)) {\n        return;\n      }\n      // https://github.com/handsontable/handsontable/issues/160\n      // Prevent text from being selected when performing drag down.\n      event.preventDefault();\n    });\n  }\n\n  /**\r\n   * Translate renderable cell coordinates to visual coordinates.\r\n   *\r\n   * @param {CellCoords} coords The cell coordinates.\r\n   * @returns {CellCoords}\r\n   */\n  translateFromRenderableToVisualCoords(_ref) {\n    let {\n      row,\n      col\n    } = _ref;\n    // TODO: To consider an idea to reusing the CellCoords instance instead creating new one.\n    return this.hot._createCellCoords(...this.translateFromRenderableToVisualIndex(row, col));\n  }\n\n  /**\r\n   * Translate renderable row and column indexes to visual row and column indexes.\r\n   *\r\n   * @param {number} renderableRow Renderable row index.\r\n   * @param {number} renderableColumn Renderable columnIndex.\r\n   * @returns {number[]}\r\n   */\n  translateFromRenderableToVisualIndex(renderableRow, renderableColumn) {\n    // TODO: Some helper may be needed.\n    // We perform translation for indexes (without headers).\n    let visualRow = renderableRow >= 0 ? this.hot.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow;\n    let visualColumn = renderableColumn >= 0 ? this.hot.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn;\n    if (visualRow === null) {\n      visualRow = renderableRow;\n    }\n    if (visualColumn === null) {\n      visualColumn = renderableColumn;\n    }\n    return [visualRow, visualColumn];\n  }\n\n  /**\r\n   * Returns the number of renderable indexes.\r\n   *\r\n   * @private\r\n   * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\r\n   * @param {number} maxElements Maximum number of elements (rows or columns).\r\n   *\r\n   * @returns {number|*}\r\n   */\n  countRenderableIndexes(indexMapper, maxElements) {\n    const consideredElements = Math.min(indexMapper.getNotTrimmedIndexesLength(), maxElements);\n    // Don't take hidden indexes into account. We are looking just for renderable indexes.\n    const firstNotHiddenIndex = indexMapper.getNearestNotHiddenIndex(consideredElements - 1, -1);\n\n    // There are no renderable indexes.\n    if (firstNotHiddenIndex === null) {\n      return 0;\n    }\n    return indexMapper.getRenderableFromVisualIndex(firstNotHiddenIndex) + 1;\n  }\n\n  /**\r\n   * Returns the number of renderable columns.\r\n   *\r\n   * @returns {number}\r\n   */\n  countRenderableColumns() {\n    return this.countRenderableIndexes(this.hot.columnIndexMapper, this.settings.maxCols);\n  }\n\n  /**\r\n   * Returns the number of renderable rows.\r\n   *\r\n   * @returns {number}\r\n   */\n  countRenderableRows() {\n    return this.countRenderableIndexes(this.hot.rowIndexMapper, this.settings.maxRows);\n  }\n\n  /**\r\n   * Returns number of not hidden row indexes counting from the passed starting index.\r\n   * The counting direction can be controlled by `incrementBy` argument.\r\n   *\r\n   * @param {number} visualIndex The visual index from which the counting begins.\r\n   * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\r\n   * @returns {number}\r\n   */\n  countNotHiddenRowIndexes(visualIndex, incrementBy) {\n    return this.countNotHiddenIndexes(visualIndex, incrementBy, this.hot.rowIndexMapper, this.countRenderableRows());\n  }\n\n  /**\r\n   * Returns number of not hidden column indexes counting from the passed starting index.\r\n   * The counting direction can be controlled by `incrementBy` argument.\r\n   *\r\n   * @param {number} visualIndex The visual index from which the counting begins.\r\n   * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\r\n   * @returns {number}\r\n   */\n  countNotHiddenColumnIndexes(visualIndex, incrementBy) {\n    return this.countNotHiddenIndexes(visualIndex, incrementBy, this.hot.columnIndexMapper, this.countRenderableColumns());\n  }\n\n  /**\r\n   * Returns number of not hidden indexes counting from the passed starting index.\r\n   * The counting direction can be controlled by `incrementBy` argument.\r\n   *\r\n   * @param {number} visualIndex The visual index from which the counting begins.\r\n   * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\r\n   * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\r\n   * @param {number} renderableIndexesCount Total count of renderable indexes for specific axis.\r\n   * @returns {number}\r\n   */\n  countNotHiddenIndexes(visualIndex, incrementBy, indexMapper, renderableIndexesCount) {\n    if (isNaN(visualIndex) || visualIndex < 0) {\n      return 0;\n    }\n    const firstVisibleIndex = indexMapper.getNearestNotHiddenIndex(visualIndex, incrementBy);\n    const renderableIndex = indexMapper.getRenderableFromVisualIndex(firstVisibleIndex);\n    if (!Number.isInteger(renderableIndex)) {\n      return 0;\n    }\n    let notHiddenIndexes = 0;\n    if (incrementBy < 0) {\n      // Zero-based numbering for renderable indexes corresponds to a number of not hidden indexes.\n      notHiddenIndexes = renderableIndex + 1;\n    } else if (incrementBy > 0) {\n      notHiddenIndexes = renderableIndexesCount - renderableIndex;\n    }\n    return notHiddenIndexes;\n  }\n\n  /**\r\n   * The function returns the number of not hidden column indexes that fit between the first and\r\n   * last fixed column in the left (or right in RTL mode) overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  countNotHiddenFixedColumnsStart() {\n    const countCols = this.hot.countCols();\n    const visualFixedColumnsStart = Math.min(parseInt(this.settings.fixedColumnsStart, 10), countCols) - 1;\n    return this.countNotHiddenColumnIndexes(visualFixedColumnsStart, -1);\n  }\n\n  /**\r\n   * The function returns the number of not hidden row indexes that fit between the first and\r\n   * last fixed row in the top overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  countNotHiddenFixedRowsTop() {\n    const countRows = this.hot.countRows();\n    const visualFixedRowsTop = Math.min(parseInt(this.settings.fixedRowsTop, 10), countRows) - 1;\n    return this.countNotHiddenRowIndexes(visualFixedRowsTop, -1);\n  }\n\n  /**\r\n   * The function returns the number of not hidden row indexes that fit between the first and\r\n   * last fixed row in the bottom overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  countNotHiddenFixedRowsBottom() {\n    const countRows = this.hot.countRows();\n    const visualFixedRowsBottom = Math.max(countRows - parseInt(this.settings.fixedRowsBottom, 10), 0);\n    return this.countNotHiddenRowIndexes(visualFixedRowsBottom, 1);\n  }\n\n  /**\r\n   * The function returns the number of renderable column indexes within the passed range of the visual indexes.\r\n   *\r\n   * @param {number} columnStart The column visual start index.\r\n   * @param {number} columnEnd The column visual end index.\r\n   * @returns {number}\r\n   */\n  countRenderableColumnsInRange(columnStart, columnEnd) {\n    let count = 0;\n    for (let column = columnStart; column <= columnEnd; column++) {\n      if (this.hot.columnIndexMapper.getRenderableFromVisualIndex(column) !== null) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  /**\r\n   * The function returns the number of renderable row indexes within the passed range of the visual indexes.\r\n   *\r\n   * @param {number} rowStart The row visual start index.\r\n   * @param {number} rowEnd The row visual end index.\r\n   * @returns {number}\r\n   */\n  countRenderableRowsInRange(rowStart, rowEnd) {\n    let count = 0;\n    for (let row = rowStart; row <= rowEnd; row++) {\n      if (this.hot.rowIndexMapper.getRenderableFromVisualIndex(row) !== null) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  /**\r\n   * Checks if at least one cell than belongs to the main table is not covered by the top, left or\r\n   * bottom overlay.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isMainTableNotFullyCoveredByOverlays() {\n    const fixedAllRows = this.countNotHiddenFixedRowsTop() + this.countNotHiddenFixedRowsBottom();\n    const fixedAllColumns = this.countNotHiddenFixedColumnsStart();\n    return this.hot.countRenderedRows() > fixedAllRows && this.hot.countRenderedCols() > fixedAllColumns;\n  }\n\n  /**\r\n   * Defines default configuration and initializes WalkOnTable instance.\r\n   *\r\n   * @private\r\n   */\n  initializeWalkontable() {\n    const walkontableConfig = {\n      ariaTags: this.settings.ariaTags,\n      rtlMode: this.hot.isRtl(),\n      externalRowCalculator: this.hot.getPlugin('autoRowSize') && this.hot.getPlugin('autoRowSize').isEnabled(),\n      table: _classPrivateFieldGet(_table, this),\n      isDataViewInstance: () => isRootInstance(this.hot),\n      preventOverflow: () => this.settings.preventOverflow,\n      preventWheel: () => this.settings.preventWheel,\n      stretchH: () => this.settings.stretchH,\n      data: (renderableRow, renderableColumn) => {\n        return this.hot.getDataAtCell(...this.translateFromRenderableToVisualIndex(renderableRow, renderableColumn));\n      },\n      totalRows: () => this.countRenderableRows(),\n      totalColumns: () => this.countRenderableColumns(),\n      // Number of renderable columns for the left overlay.\n      fixedColumnsStart: () => this.countNotHiddenFixedColumnsStart(),\n      // Number of renderable rows for the top overlay.\n      fixedRowsTop: () => this.countNotHiddenFixedRowsTop(),\n      // Number of renderable rows for the bottom overlay.\n      fixedRowsBottom: () => this.countNotHiddenFixedRowsBottom(),\n      // Enable the inline start overlay when conditions are met.\n      shouldRenderInlineStartOverlay: () => {\n        return this.settings.fixedColumnsStart > 0 || walkontableConfig.rowHeaders().length > 0;\n      },\n      // Enable the top overlay when conditions are met.\n      shouldRenderTopOverlay: () => {\n        return this.settings.fixedRowsTop > 0 || walkontableConfig.columnHeaders().length > 0;\n      },\n      // Enable the bottom overlay when conditions are met.\n      shouldRenderBottomOverlay: () => {\n        return this.settings.fixedRowsBottom > 0;\n      },\n      minSpareRows: () => this.settings.minSpareRows,\n      renderAllRows: this.settings.renderAllRows,\n      renderAllColumns: this.settings.renderAllColumns,\n      rowHeaders: () => {\n        const headerRenderers = [];\n        if (this.hot.hasRowHeaders()) {\n          headerRenderers.push((renderableRowIndex, TH) => {\n            // TODO: Some helper may be needed.\n            // We perform translation for row indexes (without row headers).\n            const visualRowIndex = renderableRowIndex >= 0 ? this.hot.rowIndexMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n            this.appendRowHeader(visualRowIndex, TH);\n          });\n        }\n        this.hot.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n        _classPrivateFieldSet(_rowHeadersCount, this, headerRenderers.length);\n        if (this.hot.getSettings().ariaTags) {\n          // Update the aria-colcount attribute.\n          // Only needs to be done once after initialization/data update.\n          if (_assertClassBrand(_TableView_brand, this, _getAriaColcount).call(this) === this.hot.countCols()) {\n            _assertClassBrand(_TableView_brand, this, _updateAriaColcount).call(this, _classPrivateFieldGet(_rowHeadersCount, this));\n          }\n        }\n        return headerRenderers;\n      },\n      columnHeaders: () => {\n        const headerRenderers = [];\n        if (this.hot.hasColHeaders()) {\n          headerRenderers.push((renderedColumnIndex, TH) => {\n            // TODO: Some helper may be needed.\n            // We perform translation for columns indexes (without column headers).\n            const visualColumnsIndex = renderedColumnIndex >= 0 ? this.hot.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex) : renderedColumnIndex;\n            this.appendColHeader(visualColumnsIndex, TH);\n          });\n        }\n        this.hot.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n        _classPrivateFieldSet(_columnHeadersCount, this, headerRenderers.length);\n        return headerRenderers;\n      },\n      columnWidth: renderedColumnIndex => {\n        const visualIndex = this.hot.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n\n        // It's not a bug that we can't find visual index for some handled by method indexes. The function is called also\n        // for indexes that are not displayed (indexes that are beyond the grid's boundaries), i.e. when `fixedColumnsStart` > `startCols` (wrong config?) or\n        // scrolling and dataset is empty (scroll should handle that?).\n        return this.hot.getColWidth(visualIndex === null ? renderedColumnIndex : visualIndex);\n      },\n      rowHeight: renderedRowIndex => {\n        const visualIndex = this.hot.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n        return this.hot.getRowHeight(visualIndex === null ? renderedRowIndex : visualIndex);\n      },\n      rowHeightByOverlayName: (renderedRowIndex, overlayType) => {\n        const visualIndex = this.hot.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n        const visualRowIndex = visualIndex === null ? renderedRowIndex : visualIndex;\n        return this.hot.runHooks('modifyRowHeightByOverlayName', this.hot.getRowHeight(visualRowIndex), visualRowIndex, overlayType);\n      },\n      cellRenderer: (renderedRowIndex, renderedColumnIndex, TD) => {\n        const [visualRowIndex, visualColumnIndex] = this.translateFromRenderableToVisualIndex(renderedRowIndex, renderedColumnIndex);\n\n        // Coords may be modified. For example, by the `MergeCells` plugin. It should affect cell value and cell meta.\n        const modifiedCellCoords = this.hot.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex);\n        let visualRowToCheck = visualRowIndex;\n        let visualColumnToCheck = visualColumnIndex;\n        if (Array.isArray(modifiedCellCoords)) {\n          [visualRowToCheck, visualColumnToCheck] = modifiedCellCoords;\n        }\n        const cellProperties = this.hot.getCellMeta(visualRowToCheck, visualColumnToCheck);\n        const prop = this.hot.colToProp(visualColumnToCheck);\n        let value = this.hot.getDataAtRowProp(visualRowToCheck, prop);\n        if (this.hot.hasHook('beforeValueRender')) {\n          value = this.hot.runHooks('beforeValueRender', value, cellProperties);\n        }\n        this.hot.runHooks('beforeRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        this.hot.getCellRenderer(cellProperties)(this.hot, TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        this.hot.runHooks('afterRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n      },\n      selections: this.hot.selection.highlight,\n      hideBorderOnMouseDownOver: () => this.settings.fragmentSelection,\n      onWindowResize: () => {\n        if (this.hot && !this.hot.isDestroyed) {\n          this.hot.refreshDimensions();\n        }\n      },\n      onContainerElementResize: () => {\n        if (this.hot && !this.hot.isDestroyed && isVisible(this.hot.rootElement)) {\n          this.hot.refreshDimensions();\n        }\n      },\n      onCellMouseDown: (event, coords, TD, wt) => {\n        const visualCoords = this.translateFromRenderableToVisualCoords(coords);\n        const controller = {\n          row: false,\n          column: false,\n          cell: false\n        };\n        this.hot.listen();\n        this.activeWt = wt;\n        _classPrivateFieldSet(_mouseDown, this, true);\n        this.hot.runHooks('beforeOnCellMouseDown', event, visualCoords, TD, controller);\n        if (isImmediatePropagationStopped(event)) {\n          return;\n        }\n        handleMouseEvent(event, {\n          coords: visualCoords,\n          selection: this.hot.selection,\n          controller,\n          cellCoordsFactory: (row, column) => this.hot._createCellCoords(row, column)\n        });\n        this.hot.runHooks('afterOnCellMouseDown', event, visualCoords, TD);\n        this.activeWt = this._wt;\n      },\n      onCellContextMenu: (event, coords, TD, wt) => {\n        const visualCoords = this.translateFromRenderableToVisualCoords(coords);\n        this.activeWt = wt;\n        _classPrivateFieldSet(_mouseDown, this, false);\n        if (this.hot.selection.isInProgress()) {\n          this.hot.selection.finish();\n        }\n        this.hot.runHooks('beforeOnCellContextMenu', event, visualCoords, TD);\n        if (isImmediatePropagationStopped(event)) {\n          return;\n        }\n        this.hot.runHooks('afterOnCellContextMenu', event, visualCoords, TD);\n        this.activeWt = this._wt;\n      },\n      onCellMouseOut: (event, coords, TD, wt) => {\n        const visualCoords = this.translateFromRenderableToVisualCoords(coords);\n        this.activeWt = wt;\n        this.hot.runHooks('beforeOnCellMouseOut', event, visualCoords, TD);\n        if (isImmediatePropagationStopped(event)) {\n          return;\n        }\n        this.hot.runHooks('afterOnCellMouseOut', event, visualCoords, TD);\n        this.activeWt = this._wt;\n      },\n      onCellMouseOver: (event, coords, TD, wt) => {\n        const visualCoords = this.translateFromRenderableToVisualCoords(coords);\n        const controller = {\n          row: false,\n          column: false,\n          cell: false\n        };\n        this.activeWt = wt;\n        this.hot.runHooks('beforeOnCellMouseOver', event, visualCoords, TD, controller);\n        if (isImmediatePropagationStopped(event)) {\n          return;\n        }\n        if (_classPrivateFieldGet(_mouseDown, this)) {\n          handleMouseEvent(event, {\n            coords: visualCoords,\n            selection: this.hot.selection,\n            controller,\n            cellCoordsFactory: (row, column) => this.hot._createCellCoords(row, column)\n          });\n        }\n        this.hot.runHooks('afterOnCellMouseOver', event, visualCoords, TD);\n        this.activeWt = this._wt;\n      },\n      onCellMouseUp: (event, coords, TD, wt) => {\n        const visualCoords = this.translateFromRenderableToVisualCoords(coords);\n        this.activeWt = wt;\n        this.hot.runHooks('beforeOnCellMouseUp', event, visualCoords, TD);\n\n        // TODO: The second condition check is a workaround. Callback corresponding the method `updateSettings`\n        // disable plugin and enable it again. Disabling plugin closes the menu. Thus, calling the\n        // `updateSettings` in a body of any callback executed right after some context-menu action\n        // breaks the table (#7231).\n        if (isImmediatePropagationStopped(event) || this.hot.isDestroyed) {\n          return;\n        }\n        this.hot.runHooks('afterOnCellMouseUp', event, visualCoords, TD);\n        this.activeWt = this._wt;\n      },\n      onCellCornerMouseDown: event => {\n        event.preventDefault();\n        this.hot.runHooks('afterOnCellCornerMouseDown', event);\n      },\n      onCellCornerDblClick: event => {\n        event.preventDefault();\n        this.hot.runHooks('afterOnCellCornerDblClick', event);\n      },\n      beforeDraw: (force, skipRender) => this.beforeRender(force, skipRender),\n      onDraw: force => this.afterRender(force),\n      onBeforeViewportScrollVertically: renderableRow => {\n        const rowMapper = this.hot.rowIndexMapper;\n        const areColumnHeadersSelected = renderableRow < 0;\n        let visualRow = renderableRow;\n        if (!areColumnHeadersSelected) {\n          visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n\n          // for an empty data return index as is\n          if (visualRow === null) {\n            return renderableRow;\n          }\n        }\n        visualRow = this.hot.runHooks('beforeViewportScrollVertically', visualRow);\n        this.hot.runHooks('beforeViewportScroll');\n        if (!areColumnHeadersSelected) {\n          return rowMapper.getRenderableFromVisualIndex(visualRow);\n        }\n        return visualRow;\n      },\n      onBeforeViewportScrollHorizontally: renderableColumn => {\n        const columnMapper = this.hot.columnIndexMapper;\n        const areRowHeadersSelected = renderableColumn < 0;\n        let visualColumn = renderableColumn;\n        if (!areRowHeadersSelected) {\n          visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n\n          // for an empty data return index as is\n          if (visualColumn === null) {\n            return renderableColumn;\n          }\n        }\n        visualColumn = this.hot.runHooks('beforeViewportScrollHorizontally', visualColumn);\n        this.hot.runHooks('beforeViewportScroll');\n        if (!areRowHeadersSelected) {\n          return columnMapper.getRenderableFromVisualIndex(visualColumn);\n        }\n        return visualColumn;\n      },\n      onScrollVertically: () => {\n        this.hot.runHooks('afterScrollVertically');\n        this.hot.runHooks('afterScroll');\n      },\n      onScrollHorizontally: () => {\n        this.hot.runHooks('afterScrollHorizontally');\n        this.hot.runHooks('afterScroll');\n      },\n      onBeforeRemoveCellClassNames: () => this.hot.runHooks('beforeRemoveCellClassNames'),\n      onBeforeHighlightingRowHeader: (renderableRow, headerLevel, highlightMeta) => {\n        const rowMapper = this.hot.rowIndexMapper;\n        const areColumnHeadersSelected = renderableRow < 0;\n        let visualRow = renderableRow;\n        if (!areColumnHeadersSelected) {\n          visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n        }\n        const newVisualRow = this.hot.runHooks('beforeHighlightingRowHeader', visualRow, headerLevel, highlightMeta);\n        if (!areColumnHeadersSelected) {\n          return rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(newVisualRow, 1));\n        }\n        return newVisualRow;\n      },\n      onBeforeHighlightingColumnHeader: (renderableColumn, headerLevel, highlightMeta) => {\n        const columnMapper = this.hot.columnIndexMapper;\n        const areRowHeadersSelected = renderableColumn < 0;\n        let visualColumn = renderableColumn;\n        if (!areRowHeadersSelected) {\n          visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n        }\n        const newVisualColumn = this.hot.runHooks('beforeHighlightingColumnHeader', visualColumn, headerLevel, highlightMeta);\n        if (!areRowHeadersSelected) {\n          return columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(newVisualColumn, 1));\n        }\n        return newVisualColumn;\n      },\n      onAfterDrawSelection: (currentRow, currentColumn, layerLevel) => {\n        let cornersOfSelection;\n        const [visualRowIndex, visualColumnIndex] = this.translateFromRenderableToVisualIndex(currentRow, currentColumn);\n        const selectedRange = this.hot.selection.getSelectedRange();\n        const selectionRangeSize = selectedRange.size();\n        if (selectionRangeSize > 0) {\n          const selectionForLayer = selectedRange.peekByIndex(layerLevel !== null && layerLevel !== void 0 ? layerLevel : 0);\n          cornersOfSelection = [selectionForLayer.from.row, selectionForLayer.from.col, selectionForLayer.to.row, selectionForLayer.to.col];\n        }\n        return this.hot.runHooks('afterDrawSelection', visualRowIndex, visualColumnIndex, cornersOfSelection, layerLevel);\n      },\n      onBeforeDrawBorders: (corners, borderClassName) => {\n        const [startRenderableRow, startRenderableColumn, endRenderableRow, endRenderableColumn] = corners;\n        const visualCorners = [this.hot.rowIndexMapper.getVisualFromRenderableIndex(startRenderableRow), this.hot.columnIndexMapper.getVisualFromRenderableIndex(startRenderableColumn), this.hot.rowIndexMapper.getVisualFromRenderableIndex(endRenderableRow), this.hot.columnIndexMapper.getVisualFromRenderableIndex(endRenderableColumn)];\n        return this.hot.runHooks('beforeDrawBorders', visualCorners, borderClassName);\n      },\n      onBeforeTouchScroll: () => this.hot.runHooks('beforeTouchScroll'),\n      onAfterMomentumScroll: () => this.hot.runHooks('afterMomentumScroll'),\n      onBeforeStretchingColumnWidth: (stretchedWidth, renderedColumnIndex) => {\n        const visualColumnIndex = this.hot.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n        return this.hot.runHooks('beforeStretchingColumnWidth', stretchedWidth, visualColumnIndex);\n      },\n      onModifyRowHeaderWidth: rowHeaderWidth => this.hot.runHooks('modifyRowHeaderWidth', rowHeaderWidth),\n      onModifyGetCellCoords: (renderableRowIndex, renderableColumnIndex, topmost) => {\n        const rowMapper = this.hot.rowIndexMapper;\n        const columnMapper = this.hot.columnIndexMapper;\n\n        // Callback handle also headers. We shouldn't translate them.\n        const visualColumnIndex = renderableColumnIndex >= 0 ? columnMapper.getVisualFromRenderableIndex(renderableColumnIndex) : renderableColumnIndex;\n        const visualRowIndex = renderableRowIndex >= 0 ? rowMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n        const visualIndexes = this.hot.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex, topmost);\n        if (Array.isArray(visualIndexes)) {\n          const [visualRowFrom, visualColumnFrom, visualRowTo, visualColumnTo] = visualIndexes;\n\n          // Result of the hook is handled by the Walkontable (renderable indexes).\n          return [visualRowFrom >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(visualRowFrom, 1)) : visualRowFrom, visualColumnFrom >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(visualColumnFrom, 1)) : visualColumnFrom, visualRowTo >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(visualRowTo, -1)) : visualRowTo, visualColumnTo >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(visualColumnTo, -1)) : visualColumnTo];\n        }\n      },\n      viewportRowCalculatorOverride: calc => {\n        let viewportOffset = this.settings.viewportRowRenderingOffset;\n        if (viewportOffset === 'auto' && this.settings.fixedRowsTop) {\n          viewportOffset = 10;\n        }\n        if (viewportOffset > 0 || viewportOffset === 'auto') {\n          const renderableRows = this.countRenderableRows();\n          const firstRenderedRow = calc.startRow;\n          const lastRenderedRow = calc.endRow;\n          if (typeof viewportOffset === 'number') {\n            calc.startRow = Math.max(firstRenderedRow - viewportOffset, 0);\n            calc.endRow = Math.min(lastRenderedRow + viewportOffset, renderableRows - 1);\n          } else if (viewportOffset === 'auto') {\n            const offset = Math.ceil(lastRenderedRow / renderableRows * 12);\n            calc.startRow = Math.max(firstRenderedRow - offset, 0);\n            calc.endRow = Math.min(lastRenderedRow + offset, renderableRows - 1);\n          }\n        }\n        this.hot.runHooks('afterViewportRowCalculatorOverride', calc);\n      },\n      viewportColumnCalculatorOverride: calc => {\n        let viewportOffset = this.settings.viewportColumnRenderingOffset;\n        if (viewportOffset === 'auto' && this.settings.fixedColumnsStart) {\n          viewportOffset = 10;\n        }\n        if (viewportOffset > 0 || viewportOffset === 'auto') {\n          const renderableColumns = this.countRenderableColumns();\n          const firstRenderedColumn = calc.startColumn;\n          const lastRenderedColumn = calc.endColumn;\n          if (typeof viewportOffset === 'number') {\n            calc.startColumn = Math.max(firstRenderedColumn - viewportOffset, 0);\n            calc.endColumn = Math.min(lastRenderedColumn + viewportOffset, renderableColumns - 1);\n          }\n          if (viewportOffset === 'auto') {\n            const offset = Math.ceil(lastRenderedColumn / renderableColumns * 6);\n            calc.startColumn = Math.max(firstRenderedColumn - offset, 0);\n            calc.endColumn = Math.min(lastRenderedColumn + offset, renderableColumns - 1);\n          }\n        }\n        this.hot.runHooks('afterViewportColumnCalculatorOverride', calc);\n      },\n      rowHeaderWidth: () => this.settings.rowHeaderWidth,\n      columnHeaderHeight: () => {\n        const columnHeaderHeight = this.hot.runHooks('modifyColumnHeaderHeight');\n        return this.settings.columnHeaderHeight || columnHeaderHeight;\n      }\n    };\n    this.hot.runHooks('beforeInitWalkontable', walkontableConfig);\n    this._wt = new Walkontable(walkontableConfig);\n    this.activeWt = this._wt;\n    const spreader = this._wt.wtTable.spreader;\n    // We have to cache width and height after Walkontable initialization.\n    const {\n      width,\n      height\n    } = this.hot.rootElement.getBoundingClientRect();\n    this.setLastSize(width, height);\n    this.eventManager.addEventListener(spreader, 'mousedown', event => {\n      // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n      if (event.target === spreader && event.which === 3) {\n        event.stopPropagation();\n      }\n    });\n    this.eventManager.addEventListener(spreader, 'contextmenu', event => {\n      // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n      if (event.target === spreader && event.which === 3) {\n        event.stopPropagation();\n      }\n    });\n    this.eventManager.addEventListener(this.hot.rootDocument.documentElement, 'click', () => {\n      if (this.settings.observeDOMVisibility) {\n        if (this._wt.drawInterrupted) {\n          this.hot.forceFullRender = true;\n          this.render();\n        }\n      }\n    });\n  }\n\n  /**\r\n   * Checks if it's possible to create text selection in element.\r\n   *\r\n   * @private\r\n   * @param {HTMLElement} el The element to check.\r\n   * @returns {boolean}\r\n   */\n  isTextSelectionAllowed(el) {\n    if (isInput(el)) {\n      return true;\n    }\n    const isChildOfTableBody = isChildOf(el, this._wt.wtTable.spreader);\n    if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n      return true;\n    }\n    if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n      return true;\n    }\n    if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\r\n   * Checks if user's been called mousedown.\r\n   *\r\n   * @private\r\n   * @returns {boolean}\r\n   */\n  isMouseDown() {\n    return _classPrivateFieldGet(_mouseDown, this);\n  }\n\n  /**\r\n   * Check if selected only one cell.\r\n   *\r\n   * @private\r\n   * @returns {boolean}\r\n   */\n  isSelectedOnlyCell() {\n    var _this$hot$getSelected, _this$hot$getSelected2;\n    return (_this$hot$getSelected = (_this$hot$getSelected2 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected2 === void 0 ? void 0 : _this$hot$getSelected2.isSingleCell()) !== null && _this$hot$getSelected !== void 0 ? _this$hot$getSelected : false;\n  }\n\n  /**\r\n   * Checks if active cell is editing.\r\n   *\r\n   * @private\r\n   * @returns {boolean}\r\n   */\n  isCellEdited() {\n    const activeEditor = this.hot.getActiveEditor();\n    return activeEditor && activeEditor.isOpened();\n  }\n\n  /**\r\n   * `beforeDraw` callback.\r\n   *\r\n   * @private\r\n   * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\r\n   *                        rendering was triggered by scrolling or moving selection.\r\n   * @param {object} skipRender Object with `skipRender` property, if it is set to `true ` the next rendering\r\n   *                            cycle will be skipped.\r\n   */\n  beforeRender(force, skipRender) {\n    if (force) {\n      // this.hot.forceFullRender = did Handsontable request full render?\n      this.hot.runHooks('beforeViewRender', this.hot.forceFullRender, skipRender);\n    }\n  }\n\n  /**\r\n   * `afterRender` callback.\r\n   *\r\n   * @private\r\n   * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\r\n   *                        rendering was triggered by scrolling or moving selection.\r\n   */\n  afterRender(force) {\n    if (force) {\n      // this.hot.forceFullRender = did Handsontable request full render?\n      this.hot.runHooks('afterViewRender', this.hot.forceFullRender);\n    }\n  }\n\n  /**\r\n   * Append row header to a TH element.\r\n   *\r\n   * @private\r\n   * @param {number} visualRowIndex The visual row index.\r\n   * @param {HTMLTableHeaderCellElement} TH The table header element.\r\n   */\n  appendRowHeader(visualRowIndex, TH) {\n    if (TH.firstChild) {\n      const container = TH.firstChild;\n      if (!hasClass(container, 'relative')) {\n        empty(TH);\n        this.appendRowHeader(visualRowIndex, TH);\n        return;\n      }\n      this.updateCellHeader(container.querySelector('.rowHeader'), visualRowIndex, this.hot.getRowHeader);\n    } else {\n      const {\n        rootDocument,\n        getRowHeader\n      } = this.hot;\n      const div = rootDocument.createElement('div');\n      const span = rootDocument.createElement('span');\n      div.className = 'relative';\n      span.className = 'rowHeader';\n      this.updateCellHeader(span, visualRowIndex, getRowHeader);\n      div.appendChild(span);\n      TH.appendChild(div);\n    }\n    this.hot.runHooks('afterGetRowHeader', visualRowIndex, TH);\n  }\n\n  /**\r\n   * Append column header to a TH element.\r\n   *\r\n   * @private\r\n   * @param {number} visualColumnIndex Visual column index.\r\n   * @param {HTMLTableCellElement} TH The table header element.\r\n   * @param {Function} [label] The function that returns the header label.\r\n   * @param {number} [headerLevel=0] The index of header level counting from the top (positive\r\n   *                                 values counting from 0 to N).\r\n   */\n  appendColHeader(visualColumnIndex, TH) {\n    let label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.hot.getColHeader;\n    let headerLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    const getColumnHeaderClassNames = () => {\n      const metaHeaderClassNames = visualColumnIndex >= 0 ? this.hot.getColumnMeta(visualColumnIndex).headerClassName : null;\n      return metaHeaderClassNames ? metaHeaderClassNames.split(' ') : [];\n    };\n    if (TH.firstChild) {\n      const container = TH.firstChild;\n      if (hasClass(container, 'relative')) {\n        this.updateCellHeader(container.querySelector('.colHeader'), visualColumnIndex, label, headerLevel);\n        container.className = '';\n        addClass(container, ['relative', ...getColumnHeaderClassNames()]);\n      } else {\n        empty(TH);\n        this.appendColHeader(visualColumnIndex, TH, label, headerLevel);\n      }\n    } else {\n      const {\n        rootDocument\n      } = this.hot;\n      const div = rootDocument.createElement('div');\n      const span = rootDocument.createElement('span');\n      const classNames = getColumnHeaderClassNames();\n      div.classList.add('relative', ...classNames);\n      span.className = 'colHeader';\n      if (this.settings.ariaTags) {\n        setAttribute(div, ...A11Y_PRESENTATION());\n        setAttribute(span, ...A11Y_PRESENTATION());\n      }\n      this.updateCellHeader(span, visualColumnIndex, label, headerLevel);\n      div.appendChild(span);\n      TH.appendChild(div);\n    }\n    this.hot.runHooks('afterGetColHeader', visualColumnIndex, TH, headerLevel);\n  }\n\n  /**\r\n   * Updates header cell content.\r\n   *\r\n   * @private\r\n   * @param {HTMLElement} element Element to update.\r\n   * @param {number} index Row index or column index.\r\n   * @param {Function} content Function which should be returns content for this cell.\r\n   * @param {number} [headerLevel=0] The index of header level counting from the top (positive\r\n   *                                 values counting from 0 to N).\r\n   */\n  updateCellHeader(element, index, content) {\n    let headerLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let renderedIndex = index;\n    const parentOverlay = this._wt.wtOverlays.getParentOverlay(element) || this._wt;\n\n    // prevent wrong calculations from SampleGenerator\n    if (element.parentNode) {\n      if (hasClass(element, 'colHeader')) {\n        renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n      } else if (hasClass(element, 'rowHeader')) {\n        renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n      }\n    }\n    if (renderedIndex > -1) {\n      fastInnerHTML(element, content(index, headerLevel));\n    } else {\n      // workaround for https://github.com/handsontable/handsontable/issues/1946\n      fastInnerText(element, String.fromCharCode(160));\n      addClass(element, 'cornerHeader');\n    }\n  }\n\n  /**\r\n   * Given a element's left (or right in RTL mode) position relative to the viewport, returns maximum\r\n   * element width until the right (or left) edge of the viewport (before scrollbar).\r\n   *\r\n   * @private\r\n   * @param {number} inlineOffset The left (or right in RTL mode) offset.\r\n   * @returns {number}\r\n   */\n  maximumVisibleElementWidth(inlineOffset) {\n    const workspaceWidth = this._wt.wtViewport.getWorkspaceWidth();\n    const maxWidth = workspaceWidth - inlineOffset;\n    return maxWidth > 0 ? maxWidth : 0;\n  }\n\n  /**\r\n   * Given a element's top position relative to the viewport, returns maximum element height until the bottom\r\n   * edge of the viewport (before scrollbar).\r\n   *\r\n   * @private\r\n   * @param {number} topOffset The top offset.\r\n   * @returns {number}\r\n   */\n  maximumVisibleElementHeight(topOffset) {\n    const workspaceHeight = this._wt.wtViewport.getWorkspaceHeight();\n    const maxHeight = workspaceHeight - topOffset;\n    return maxHeight > 0 ? maxHeight : 0;\n  }\n\n  /**\r\n   * Sets new dimensions of the container.\r\n   *\r\n   * @param {number} width The table width.\r\n   * @param {number} height The table height.\r\n   */\n  setLastSize(width, height) {\n    _classPrivateFieldSet(_lastWidth, this, width);\n    _classPrivateFieldSet(_lastHeight, this, height);\n  }\n\n  /**\r\n   * Returns cached dimensions.\r\n   *\r\n   * @returns {object}\r\n   */\n  getLastSize() {\n    return {\n      width: _classPrivateFieldGet(_lastWidth, this),\n      height: _classPrivateFieldGet(_lastHeight, this)\n    };\n  }\n\n  /**\r\n   * Returns the first rendered row in the DOM (usually is not visible in the table's viewport).\r\n   *\r\n   * @returns {number | null}\r\n   */\n  getFirstRenderedVisibleRow() {\n    if (!this._wt.wtViewport.rowsRenderCalculator) {\n      return null;\n    }\n    return this.hot.rowIndexMapper.getNearestNotHiddenIndex(this._wt.wtTable.getFirstRenderedRow(), 1);\n  }\n\n  /**\r\n   * Returns the last rendered row in the DOM (usually is not visible in the table's viewport).\r\n   *\r\n   * @returns {number | null}\r\n   */\n  getLastRenderedVisibleRow() {\n    if (!this._wt.wtViewport.rowsRenderCalculator) {\n      return null;\n    }\n    return this.hot.rowIndexMapper.getNearestNotHiddenIndex(this._wt.wtTable.getLastRenderedRow(), -1);\n  }\n\n  /**\r\n   * Returns the first rendered column in the DOM (usually is not visible in the table's viewport).\r\n   *\r\n   * @returns {number | null}\r\n   */\n  getFirstRenderedVisibleColumn() {\n    if (!this._wt.wtViewport.columnsRenderCalculator) {\n      return null;\n    }\n    return this.hot.columnIndexMapper.getNearestNotHiddenIndex(this._wt.wtTable.getFirstRenderedColumn(), 1);\n  }\n\n  /**\r\n   * Returns the last rendered column in the DOM (usually is not visible in the table's viewport).\r\n   *\r\n   * @returns {number | null}\r\n   */\n  getLastRenderedVisibleColumn() {\n    if (!this._wt.wtViewport.columnsRenderCalculator) {\n      return null;\n    }\n    return this.hot.columnIndexMapper.getNearestNotHiddenIndex(this._wt.wtTable.getLastRenderedColumn(), -1);\n  }\n\n  /**\r\n   * Returns the first fully visible row in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstFullyVisibleRow() {\n    return this.hot.rowIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getFirstVisibleRow());\n  }\n\n  /**\r\n   * Returns the last fully visible row in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastFullyVisibleRow() {\n    return this.hot.rowIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getLastVisibleRow());\n  }\n\n  /**\r\n   * Returns the first fully visible column in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstFullyVisibleColumn() {\n    return this.hot.columnIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getFirstVisibleColumn());\n  }\n\n  /**\r\n   * Returns the last fully visible column in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastFullyVisibleColumn() {\n    return this.hot.columnIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getLastVisibleColumn());\n  }\n\n  /**\r\n   * Returns the first partially visible row in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstPartiallyVisibleRow() {\n    return this.hot.rowIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getFirstPartiallyVisibleRow());\n  }\n\n  /**\r\n   * Returns the last partially visible row in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastPartiallyVisibleRow() {\n    return this.hot.rowIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getLastPartiallyVisibleRow());\n  }\n\n  /**\r\n   * Returns the first partially visible column in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstPartiallyVisibleColumn() {\n    return this.hot.columnIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getFirstPartiallyVisibleColumn());\n  }\n\n  /**\r\n   * Returns the last partially visible column in the table viewport. When the table has overlays the method returns\r\n   * the first row of the master table that is not overlapped by overlay.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastPartiallyVisibleColumn() {\n    return this.hot.columnIndexMapper.getVisualFromRenderableIndex(this._wt.wtScroll.getLastPartiallyVisibleColumn());\n  }\n\n  /**\r\n   * Returns the total count of the rendered column headers.\r\n   *\r\n   * @returns {number}\r\n   */\n  getColumnHeadersCount() {\n    return _classPrivateFieldGet(_columnHeadersCount, this);\n  }\n\n  /**\r\n   * Returns the total count of the rendered row headers.\r\n   *\r\n   * @returns {number}\r\n   */\n  getRowHeadersCount() {\n    return _classPrivateFieldGet(_rowHeadersCount, this);\n  }\n\n  /**\r\n   * Returns the table's viewport width. When the table has defined the size of the container,\r\n   * and the columns do not fill the entire viewport, the viewport width is equal to the sum of\r\n   * the columns' widths.\r\n   *\r\n   * @returns {number}\r\n   */\n  getViewportWidth() {\n    return this._wt.wtViewport.getViewportWidth();\n  }\n\n  /**\r\n   * Returns the table's total width including the scrollbar width.\r\n   *\r\n   * @returns {number}\r\n   */\n  getWorkspaceWidth() {\n    return this._wt.wtViewport.getWorkspaceWidth();\n  }\n\n  /**\r\n   * Returns the table's viewport height. When the table has defined the size of the container,\r\n   * and the rows do not fill the entire viewport, the viewport height is equal to the sum of\r\n   * the rows' heights.\r\n   *\r\n   * @returns {number}\r\n   */\n  getViewportHeight() {\n    return this._wt.wtViewport.getViewportHeight();\n  }\n\n  /**\r\n   * Returns the table's total height including the scrollbar height.\r\n   *\r\n   * @returns {number}\r\n   */\n  getWorkspaceHeight() {\n    return this._wt.wtViewport.getWorkspaceHeight();\n  }\n\n  /**\r\n   * Checks to what overlay the provided element belongs.\r\n   *\r\n   * @param {HTMLElement} element The DOM element to check.\r\n   * @returns {'master'|'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'}\r\n   */\n  getElementOverlayName(element) {\n    var _this$_wt$wtOverlays$;\n    return ((_this$_wt$wtOverlays$ = this._wt.wtOverlays.getParentOverlay(element)) !== null && _this$_wt$wtOverlays$ !== void 0 ? _this$_wt$wtOverlays$ : this._wt).wtTable.name;\n  }\n\n  /**\r\n   * Gets the overlay instance by its name.\r\n   *\r\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'} overlayName The overlay name.\r\n   * @returns {Overlay | null}\r\n   */\n  getOverlayByName(overlayName) {\n    return this._wt.getOverlayByName(overlayName);\n  }\n\n  /**\r\n   * Checks if the table is visible or not.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isVisible() {\n    return this._wt.wtTable.isVisible();\n  }\n  /**\r\n   * Destroys internal WalkOnTable's instance. Detaches all of the bonded listeners.\r\n   *\r\n   * @private\r\n   */\n  destroy() {\n    this._wt.destroy();\n    this.eventManager.destroy();\n  }\n}\nfunction _getAriaColcount() {\n  return parseInt(this.hot.rootElement.getAttribute(A11Y_COLCOUNT()[0]), 10);\n}\n/**\r\n * Update the `aria-colcount` attribute by the provided value.\r\n *\r\n * @param {number} delta The number of columns to add or remove to the aria tag.\r\n */\nfunction _updateAriaColcount(delta) {\n  const colCount = _assertClassBrand(_TableView_brand, this, _getAriaColcount).call(this) + delta;\n  setAttribute(this.hot.rootElement, ...A11Y_COLCOUNT(colCount));\n}\nexport default TableView;", "import \"core-js/modules/es.array.push.js\";\nimport { deepObjectSize, isObject } from \"./object.mjs\";\nconst COLUMN_LABEL_BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst COLUMN_LABEL_BASE_LENGTH = COLUMN_LABEL_BASE.length;\n\n/**\r\n * Generates spreadsheet-like column names: A, B, C, ..., Z, AA, AB, etc.\r\n *\r\n * @param {number} index Column index.\r\n * @returns {string}\r\n */\nexport function spreadsheetColumnLabel(index) {\n  let dividend = index + 1;\n  let columnLabel = '';\n  let modulo;\n  while (dividend > 0) {\n    modulo = (dividend - 1) % COLUMN_LABEL_BASE_LENGTH;\n    columnLabel = String.fromCharCode(65 + modulo) + columnLabel;\n    dividend = parseInt((dividend - modulo) / COLUMN_LABEL_BASE_LENGTH, 10);\n  }\n  return columnLabel;\n}\n\n/**\r\n * Generates spreadsheet-like column index from theirs labels: A, B, C ...., Z, AA, AB, etc.\r\n *\r\n * @param {string} label Column label.\r\n * @returns {number}\r\n */\nexport function spreadsheetColumnIndex(label) {\n  let result = 0;\n  if (label) {\n    for (let i = 0, j = label.length - 1; i < label.length; i += 1, j -= 1) {\n      result += COLUMN_LABEL_BASE_LENGTH ** j * (COLUMN_LABEL_BASE.indexOf(label[i]) + 1);\n    }\n  }\n  result -= 1;\n  return result;\n}\n\n/**\r\n * Creates 2D array of Excel-like values \"A1\", \"A2\", ...\r\n *\r\n * @param {number} rows Number of rows to generate.\r\n * @param {number} columns Number of columns to generate.\r\n * @returns {Array}\r\n */\nexport function createSpreadsheetData() {\n  let rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n  let columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  const _rows = [];\n  let i;\n  let j;\n  for (i = 0; i < rows; i++) {\n    const row = [];\n    for (j = 0; j < columns; j++) {\n      row.push(spreadsheetColumnLabel(j) + (i + 1));\n    }\n    _rows.push(row);\n  }\n  return _rows;\n}\n\n/**\r\n * Creates 2D array of Excel-like values \"A1\", \"A2\", as an array of objects.\r\n *\r\n * @param {number} rows Number of rows to generate.\r\n * @param {number} colCount Number of columns to generate.\r\n * @returns {Array}\r\n */\nexport function createSpreadsheetObjectData() {\n  let rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n  let colCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  const _rows = [];\n  let i;\n  let j;\n  for (i = 0; i < rows; i++) {\n    const row = {};\n    for (j = 0; j < colCount; j++) {\n      row[`prop${j}`] = spreadsheetColumnLabel(j) + (i + 1);\n    }\n    _rows.push(row);\n  }\n  return _rows;\n}\n\n/**\r\n * Generates an empty data object.\r\n *\r\n * @param {number} rows Number of rows to generate.\r\n * @param {number} columns Number of columns to generate.\r\n * @returns {Array}\r\n */\nexport function createEmptySpreadsheetData(rows, columns) {\n  const data = [];\n  let row;\n  for (let i = 0; i < rows; i++) {\n    row = [];\n    for (let j = 0; j < columns; j++) {\n      row.push('');\n    }\n    data.push(row);\n  }\n  return data;\n}\n\n/**\r\n * Transform a data row (either an array or an object) or an array of data rows to array of changes in a form of `[row,\r\n * prop/col, value]`. Convenient to use with `setDataAtRowProp` and `setSourceDataAtCell` methods.\r\n *\r\n * @param {Array|object} dataRow Object of row data, array of row data or an array of either.\r\n * @param {number} rowOffset Row offset to be passed to the resulting change list. Defaults to `0`.\r\n * @returns {Array} Array of changes (in a form of an array).\r\n */\nexport function dataRowToChangesArray(dataRow) {\n  let rowOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let dataRows = dataRow;\n  const changesArray = [];\n  if (!Array.isArray(dataRow) || !Array.isArray(dataRow[0])) {\n    dataRows = [dataRow];\n  }\n  dataRows.forEach((row, rowIndex) => {\n    if (Array.isArray(row)) {\n      row.forEach((value, column) => {\n        changesArray.push([rowIndex + rowOffset, column, value]);\n      });\n    } else {\n      Object.keys(row).forEach(propName => {\n        changesArray.push([rowIndex + rowOffset, propName, row[propName]]);\n      });\n    }\n  });\n  return changesArray;\n}\n\n/**\r\n * Count the number of keys (or, basically, columns when the data is an array or arrays) in the first row of the\r\n * provided dataset.\r\n *\r\n * @param {Array} data The dataset.\r\n * @returns {number} Number of keys in the first row of the dataset.\r\n */\nexport function countFirstRowKeys(data) {\n  let result = 0;\n  if (Array.isArray(data)) {\n    if (data[0] && Array.isArray(data[0])) {\n      result = data[0].length;\n    } else if (data[0] && isObject(data[0])) {\n      result = deepObjectSize(data[0]);\n    }\n  }\n  return result;\n}\n\n/**\r\n * Check whether the provided dataset is a *non-empty* array of arrays.\r\n *\r\n * @param {Array} data Dataset to be checked.\r\n * @returns {boolean} `true` if data is an array of arrays, `false` otherwise.\r\n */\nexport function isArrayOfArrays(data) {\n  return !!(Array.isArray(data) && data.length && data.every(el => Array.isArray(el)));\n}\n\n/**\r\n * Check whether the provided dataset is a *non-empty* array of objects.\r\n *\r\n * @param {Array} data Dataset to be checked.\r\n * @returns {boolean} `true` if data is an array of objects, `false` otherwise.\r\n */\nexport function isArrayOfObjects(data) {\n  return !!(Array.isArray(data) && data.length && data.every(el => typeof el === 'object' && !Array.isArray(el) && el !== null));\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { createObjectPropListener, getProperty, isObject, objectEach, setProperty } from \"../helpers/object.mjs\";\nimport { countFirstRowKeys } from \"../helpers/data.mjs\";\nimport { arrayEach } from \"../helpers/array.mjs\";\nimport { rangeEach } from \"../helpers/number.mjs\";\nimport { isFunction } from \"../helpers/function.mjs\";\n/**\r\n * @class DataSource\r\n * @private\r\n */\nclass DataSource {\n  constructor(hotInstance) {\n    let dataSource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    /**\r\n     * Instance of Handsontable.\r\n     *\r\n     * @type {Handsontable}\r\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\r\n     * Data source.\r\n     *\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"data\", void 0);\n    /**\r\n     * Type of data source.\r\n     *\r\n     * @type {string}\r\n     * @default 'array'\r\n     */\n    _defineProperty(this, \"dataType\", 'array');\n    _defineProperty(this, \"colToProp\", () => {});\n    _defineProperty(this, \"propToCol\", () => {});\n    this.hot = hotInstance;\n    this.data = dataSource;\n  }\n\n  /**\r\n   * Run the `modifyRowData` hook and return either the modified or the source data for the provided row.\r\n   *\r\n   * @private\r\n   * @param {number} rowIndex Row index.\r\n   * @returns {Array|object} Source or modified row of data.\r\n   */\n  modifyRowData(rowIndex) {\n    let modifyRowData;\n    if (this.hot.hasHook('modifyRowData')) {\n      modifyRowData = this.hot.runHooks('modifyRowData', rowIndex);\n    }\n    return modifyRowData !== undefined && !Number.isInteger(modifyRowData) ? modifyRowData : this.data[rowIndex];\n  }\n\n  /**\r\n   * Get all data.\r\n   *\r\n   * @param {boolean} [toArray=false] If `true` return source data as an array of arrays even when source data was provided\r\n   *                                  in another format.\r\n   * @returns {Array}\r\n   */\n  getData() {\n    let toArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!this.data || this.data.length === 0) {\n      return this.data;\n    }\n    return this.getByRange(null, null, toArray);\n  }\n\n  /**\r\n   * Set new data source.\r\n   *\r\n   * @param {Array} data The new data.\r\n   */\n  setData(data) {\n    this.data = data;\n  }\n\n  /**\r\n   * Returns array of column values from the data source. `column` is the index of the row in the data source.\r\n   *\r\n   * @param {number} column Visual column index.\r\n   * @returns {Array}\r\n   */\n  getAtColumn(column) {\n    const result = [];\n    arrayEach(this.data, (row, rowIndex) => {\n      const value = this.getAtCell(rowIndex, column);\n      result.push(value);\n    });\n    return result;\n  }\n\n  /**\r\n   * Returns a single row of the data or a subset of its columns. If a column range or `toArray` arguments are provided, it\r\n   * operates only on the columns declared by the `columns` setting or the data schema.\r\n   *\r\n   * @param {number} row Physical row index.\r\n   * @param {number} [startColumn] Starting index for the column range (optional).\r\n   * @param {number} [endColumn] Ending index for the column range (optional).\r\n   * @param {boolean} [toArray=false] `true` if the returned value should be forced to be presented as an array.\r\n   * @returns {Array|object}\r\n   */\n  getAtRow(row, startColumn, endColumn) {\n    let toArray = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    const getAllProps = startColumn === undefined && endColumn === undefined;\n    const {\n      dataDotNotation\n    } = this.hot.getSettings();\n    let dataRow = null;\n    let newDataRow = null;\n    dataRow = this.modifyRowData(row);\n    if (Array.isArray(dataRow)) {\n      newDataRow = [];\n      if (getAllProps) {\n        dataRow.forEach((cell, column) => {\n          newDataRow[column] = this.getAtPhysicalCell(row, column, dataRow);\n        });\n      } else {\n        // Only the columns from the provided range\n        rangeEach(startColumn, endColumn, column => {\n          newDataRow[column - startColumn] = this.getAtPhysicalCell(row, column, dataRow);\n        });\n      }\n    } else if (isObject(dataRow) || isFunction(dataRow)) {\n      if (toArray) {\n        newDataRow = [];\n      } else {\n        newDataRow = {};\n      }\n      if (!getAllProps || toArray) {\n        const rangeStart = 0;\n        const rangeEnd = this.countFirstRowKeys() - 1;\n        rangeEach(rangeStart, rangeEnd, column => {\n          const prop = this.colToProp(column);\n          if (column >= (startColumn || rangeStart) && column <= (endColumn || rangeEnd) && !Number.isInteger(prop)) {\n            const cellValue = this.getAtPhysicalCell(row, prop, dataRow);\n            if (toArray) {\n              newDataRow.push(cellValue);\n            } else if (dataDotNotation) {\n              setProperty(newDataRow, prop, cellValue);\n            } else {\n              newDataRow[prop] = cellValue;\n            }\n          }\n        });\n      } else {\n        objectEach(dataRow, (value, prop) => {\n          const cellValue = this.getAtPhysicalCell(row, prop, dataRow);\n          if (dataDotNotation) {\n            setProperty(newDataRow, prop, cellValue);\n          } else {\n            newDataRow[prop] = cellValue;\n          }\n        });\n      }\n    }\n    return newDataRow;\n  }\n\n  /**\r\n   * Set the provided value in the source data set at the provided coordinates.\r\n   *\r\n   * @param {number} row Physical row index.\r\n   * @param {number|string} column Property name / physical column index.\r\n   * @param {*} value The value to be set at the provided coordinates.\r\n   */\n  setAtCell(row, column, value) {\n    if (row >= this.countRows() || column >= this.countFirstRowKeys()) {\n      // Not enough rows and/or columns.\n      return;\n    }\n    if (this.hot.hasHook('modifySourceData')) {\n      const valueHolder = createObjectPropListener(value);\n      this.hot.runHooks('modifySourceData', row, column, valueHolder, 'set');\n      if (valueHolder.isTouched()) {\n        value = valueHolder.value;\n      }\n    }\n    if (!Number.isInteger(column)) {\n      // column argument is the prop name\n      setProperty(this.data[row], column, value);\n    } else {\n      this.data[row][column] = value;\n    }\n  }\n\n  /**\r\n   * Get data from the source data set using the physical indexes.\r\n   *\r\n   * @private\r\n   * @param {number} row Physical row index.\r\n   * @param {string|number|Function} column Physical column index / property / function.\r\n   * @param {Array|object} dataRow A representation of a data row.\r\n   * @returns {*} Value at the provided coordinates.\r\n   */\n  getAtPhysicalCell(row, column, dataRow) {\n    let result = null;\n    if (dataRow) {\n      if (typeof column === 'string') {\n        const {\n          dataDotNotation\n        } = this.hot.getSettings();\n        result = dataDotNotation ? getProperty(dataRow, column) : dataRow[column];\n      } else if (typeof column === 'function') {\n        result = column(dataRow);\n      } else {\n        result = dataRow[column];\n      }\n    }\n    if (this.hot.hasHook('modifySourceData')) {\n      const valueHolder = createObjectPropListener(result);\n      this.hot.runHooks('modifySourceData', row, column, valueHolder, 'get');\n      if (valueHolder.isTouched()) {\n        result = valueHolder.value;\n      }\n    }\n    return result;\n  }\n\n  /**\r\n   * Returns a single value from the data.\r\n   *\r\n   * @param {number} row Physical row index.\r\n   * @param {number} columnOrProp Visual column index or property.\r\n   * @returns {*}\r\n   */\n  getAtCell(row, columnOrProp) {\n    const dataRow = this.modifyRowData(row);\n    return this.getAtPhysicalCell(row, this.colToProp(columnOrProp), dataRow);\n  }\n\n  /**\r\n   * Returns source data by passed range.\r\n   *\r\n   * @param {object} [start] Object with physical `row` and `col` keys (or visual column index, if data type is an array of objects).\r\n   * @param {object} [end] Object with physical `row` and `col` keys (or visual column index, if data type is an array of objects).\r\n   * @param {boolean} [toArray=false] If `true` return source data as an array of arrays even when source data was provided\r\n   *                                  in another format.\r\n   * @returns {Array}\r\n   */\n  getByRange() {\n    let start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let toArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let getAllProps = false;\n    let startRow = null;\n    let startCol = null;\n    let endRow = null;\n    let endCol = null;\n    if (start === null || end === null) {\n      getAllProps = true;\n      startRow = 0;\n      endRow = this.countRows() - 1;\n    } else {\n      startRow = Math.min(start.row, end.row);\n      startCol = Math.min(start.col, end.col);\n      endRow = Math.max(start.row, end.row);\n      endCol = Math.max(start.col, end.col);\n    }\n    const result = [];\n    rangeEach(startRow, endRow, currentRow => {\n      result.push(getAllProps ? this.getAtRow(currentRow, undefined, undefined, toArray) : this.getAtRow(currentRow, startCol, endCol, toArray));\n    });\n    return result;\n  }\n\n  /**\r\n   * Count number of rows.\r\n   *\r\n   * @returns {number}\r\n   */\n  countRows() {\n    if (this.hot.hasHook('modifySourceLength')) {\n      const modifiedSourceLength = this.hot.runHooks('modifySourceLength');\n      if (Number.isInteger(modifiedSourceLength)) {\n        return modifiedSourceLength;\n      }\n    }\n    return this.data.length;\n  }\n\n  /**\r\n   * Count number of columns.\r\n   *\r\n   * @returns {number}\r\n   */\n  countFirstRowKeys() {\n    return countFirstRowKeys(this.data);\n  }\n\n  /**\r\n   * Destroy instance.\r\n   */\n  destroy() {\n    this.data = null;\n    this.hot = null;\n  }\n}\nexport default DataSource;", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\r\n * Map for storing mappings from an index to a value.\r\n *\r\n * @class IndexMap\r\n */\nexport class IndexMap {\n  constructor() {\n    let initValueOrFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    /**\r\n     * List of values for particular indexes.\r\n     *\r\n     * @private\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"indexedValues\", []);\n    /**\r\n     * Initial value or function for each existing index.\r\n     *\r\n     * @private\r\n     * @type {*}\r\n     */\n    _defineProperty(this, \"initValueOrFn\", void 0);\n    this.initValueOrFn = initValueOrFn;\n  }\n\n  /**\r\n   * Get full list of values for particular indexes.\r\n   *\r\n   * @returns {Array}\r\n   */\n  getValues() {\n    return this.indexedValues;\n  }\n\n  /**\r\n   * Get value for the particular index.\r\n   *\r\n   * @param {number} index Index for which value is got.\r\n   * @returns {*}\r\n   */\n  getValueAtIndex(index) {\n    const values = this.indexedValues;\n    if (index < values.length) {\n      return values[index];\n    }\n  }\n\n  /**\r\n   * Set new values for particular indexes.\r\n   *\r\n   * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\r\n   *\r\n   * @param {Array} values List of set values.\r\n   */\n  setValues(values) {\n    this.indexedValues = values.slice();\n    this.runLocalHooks('change');\n  }\n\n  /**\r\n   * Set new value for the particular index.\r\n   *\r\n   * @param {number} index The index.\r\n   * @param {*} value The value to save.\r\n   *\r\n   * Note: Please keep in mind that it is not possible to set value beyond the map (not respecting already set\r\n   * map's size). Please use the `setValues` method when you would like to extend the map.\r\n   * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  setValueAtIndex(index, value) {\n    if (index < this.indexedValues.length) {\n      this.indexedValues[index] = value;\n      this.runLocalHooks('change');\n      return true;\n    }\n    return false;\n  }\n\n  /**\r\n   * Clear all values to the defaults.\r\n   */\n  clear() {\n    this.setDefaultValues();\n  }\n\n  /**\r\n   * Get length of the index map.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLength() {\n    return this.getValues().length;\n  }\n\n  /**\r\n   * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\r\n   *\r\n   * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\r\n   *\r\n   * @private\r\n   * @param {number} [length] Length of list.\r\n   */\n  setDefaultValues() {\n    let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n    this.indexedValues.length = 0;\n    if (isFunction(this.initValueOrFn)) {\n      rangeEach(length - 1, index => this.indexedValues.push(this.initValueOrFn(index)));\n    } else {\n      rangeEach(length - 1, () => this.indexedValues.push(this.initValueOrFn));\n    }\n    this.runLocalHooks('change');\n  }\n\n  /**\r\n   * Initialize list with default values for particular indexes.\r\n   *\r\n   * @private\r\n   * @param {number} length New length of indexed list.\r\n   * @returns {IndexMap}\r\n   */\n  init(length) {\n    this.setDefaultValues(length);\n    this.runLocalHooks('init');\n    return this;\n  }\n\n  /**\r\n   * Add values to the list.\r\n   *\r\n   * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\r\n   *\r\n   * @private\r\n   */\n  insert() {\n    this.runLocalHooks('change');\n  }\n\n  /**\r\n   * Remove values from the list.\r\n   *\r\n   * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\r\n   *\r\n   * @private\r\n   */\n  remove() {\n    this.runLocalHooks('change');\n  }\n\n  /**\r\n   * Destroys the Map instance.\r\n   */\n  destroy() {\n    this.clearLocalHooks();\n    this.indexedValues = null;\n    this.initValueOrFn = null;\n  }\n}\nmixin(IndexMap, localHooks);", "import { isFunction } from \"../../../helpers/function.mjs\";\nimport { arrayFilter } from \"../../../helpers/array.mjs\";\n/**\r\n * Insert new items to the list.\r\n *\r\n * @private\r\n * @param {Array} indexedValues List of values for particular indexes.\r\n * @param {number} insertionIndex Position inside the actual list.\r\n * @param {Array} insertedIndexes List of inserted indexes.\r\n * @param {*} insertedValuesMapping Mapping which may provide value or function returning value for the specific parameters.\r\n * @returns {Array} List with new mappings.\r\n */\nexport function getListWithInsertedItems(indexedValues, insertionIndex, insertedIndexes, insertedValuesMapping) {\n  const firstInsertedIndex = insertedIndexes.length ? insertedIndexes[0] : undefined;\n  return [...indexedValues.slice(0, firstInsertedIndex), ...insertedIndexes.map((insertedIndex, ordinalNumber) => {\n    if (isFunction(insertedValuesMapping)) {\n      return insertedValuesMapping(insertedIndex, ordinalNumber);\n    }\n    return insertedValuesMapping;\n  }), ...(firstInsertedIndex === undefined ? [] : indexedValues.slice(firstInsertedIndex))];\n}\n\n/**\r\n * Filter items from the list.\r\n *\r\n * @private\r\n * @param {Array} indexedValues List of values for particular indexes.\r\n * @param {Array} removedIndexes List of removed indexes.\r\n * @returns {Array} Reduced list of mappings.\r\n */\nexport function getListWithRemovedItems(indexedValues, removedIndexes) {\n  return arrayFilter(indexedValues, (_, index) => removedIndexes.includes(index) === false);\n}", "import { IndexMap } from \"./indexMap.mjs\";\nimport { getListWithRemovedItems, getListWithInsertedItems } from \"./utils/physicallyIndexed.mjs\";\n/**\r\n * Map for storing mappings from an physical index to a value.\r\n *\r\n * Does not update stored values on remove/add row or column action.\r\n *\r\n * @class PhysicalIndexToValueMap\r\n */\nexport class PhysicalIndexToValueMap extends IndexMap {\n  /**\r\n   * Add values to list and reorganize.\r\n   *\r\n   * @private\r\n   * @param {number} insertionIndex Position inside the list.\r\n   * @param {Array} insertedIndexes List of inserted indexes.\r\n   */\n  insert(insertionIndex, insertedIndexes) {\n    this.indexedValues = getListWithInsertedItems(this.indexedValues, insertionIndex, insertedIndexes, this.initValueOrFn);\n    super.insert(insertionIndex, insertedIndexes);\n  }\n\n  /**\r\n   * Remove values from the list and reorganize.\r\n   *\r\n   * @private\r\n   * @param {Array} removedIndexes List of removed indexes.\r\n   */\n  remove(removedIndexes) {\n    this.indexedValues = getListWithRemovedItems(this.indexedValues, removedIndexes);\n    super.remove(removedIndexes);\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport { PhysicalIndexToValueMap } from \"./physicalIndexToValueMap.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\n/**\r\n * Map for storing mappings from an physical index to a boolean value. It stores information whether physical index is\r\n * included in a dataset, but skipped in the process of rendering.\r\n *\r\n * @class HidingMap\r\n */\nexport class HidingMap extends PhysicalIndexToValueMap {\n  constructor() {\n    let initValueOrFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    super(initValueOrFn);\n  }\n\n  /**\r\n   * Get physical indexes which are hidden.\r\n   *\r\n   * Note: Indexes marked as hidden are included in a {@link DataMap}, but aren't rendered.\r\n   *\r\n   * @returns {Array}\r\n   */\n  getHiddenIndexes() {\n    return arrayReduce(this.getValues(), (indexesList, isHidden, physicalIndex) => {\n      if (isHidden) {\n        indexesList.push(physicalIndex);\n      }\n      return indexesList;\n    }, []);\n  }\n}", "import { arrayFilter } from \"../../../helpers/array.mjs\";\n/**\r\n * Insert new items to the list.\r\n *\r\n * @private\r\n * @param {Array} indexedValues List of values for particular indexes.\r\n * @param {number} insertionIndex Position inside the actual list.\r\n * @param {Array} insertedIndexes List of inserted indexes.\r\n * @returns {Array} List with new mappings.\r\n */\nexport function getListWithInsertedItems(indexedValues, insertionIndex, insertedIndexes) {\n  return [...indexedValues.slice(0, insertionIndex), ...insertedIndexes, ...indexedValues.slice(insertionIndex)];\n}\n\n/**\r\n * Filter items from the list.\r\n *\r\n * @private\r\n * @param {Array} indexedValues List of values for particular indexes.\r\n * @param {Array} removedIndexes List of removed indexes.\r\n * @returns {Array} Reduced list of mappings.\r\n */\nexport function getListWithRemovedItems(indexedValues, removedIndexes) {\n  return arrayFilter(indexedValues, index => {\n    return removedIndexes.includes(index) === false;\n  });\n}", "import { arrayMap } from \"../../../helpers/array.mjs\";\n/**\r\n * Transform mappings after removal.\r\n *\r\n * @private\r\n * @param {Array} indexedValues List of values for particular indexes.\r\n * @param {Array} removedIndexes List of removed indexes.\r\n * @returns {Array} List with decreased indexes.\r\n */\nexport function getDecreasedIndexes(indexedValues, removedIndexes) {\n  return arrayMap(indexedValues, index => index - removedIndexes.filter(removedIndex => removedIndex < index).length);\n}\n\n/**\r\n * Transform mappings after insertion.\r\n *\r\n * @private\r\n * @param {Array} indexedValues List of values for particular indexes.\r\n * @param {Array} insertedIndexes List of inserted indexes.\r\n * @returns {Array} List with increased indexes.\r\n */\nexport function getIncreasedIndexes(indexedValues, insertedIndexes) {\n  const firstInsertedIndex = insertedIndexes[0];\n  const amountOfIndexes = insertedIndexes.length;\n  return arrayMap(indexedValues, index => {\n    if (index >= firstInsertedIndex) {\n      return index + amountOfIndexes;\n    }\n    return index;\n  });\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { IndexMap } from \"./indexMap.mjs\";\nimport { getListWithRemovedItems, getListWithInsertedItems } from \"./utils/physicallyIndexed.mjs\";\nimport { getListWithRemovedItems as getListWithoutIndexes } from \"./utils/indexesSequence.mjs\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./utils/actionsOnIndexes.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\n/**\r\n * Map for storing mappings from an physical index to a value. Those entries are linked and stored in a certain order.\r\n *\r\n * It does not update stored values on remove/add row or column action. Otherwise, order of entries is updated after\r\n * such changes.\r\n *\r\n * @class LinkedPhysicalIndexToValueMap\r\n */\nexport class LinkedPhysicalIndexToValueMap extends IndexMap {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * Indexes and values corresponding to them (entries) are stored in a certain order.\r\n     *\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\n    _defineProperty(this, \"orderOfIndexes\", []);\n  }\n  /**\r\n   * Get full list of ordered values for particular indexes.\r\n   *\r\n   * @returns {Array}\r\n   */\n  getValues() {\n    return this.orderOfIndexes.map(physicalIndex => this.indexedValues[physicalIndex]);\n  }\n\n  /**\r\n   * Set new values for particular indexes. Entries are linked and stored in a certain order.\r\n   *\r\n   * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\r\n   *\r\n   * @param {Array} values List of set values.\r\n   */\n  setValues(values) {\n    this.orderOfIndexes = [...Array(values.length).keys()];\n    super.setValues(values);\n  }\n\n  /**\r\n   * Set value at index and add it to the linked list of entries. Entries are stored in a certain order.\r\n   *\r\n   * Note: Value will be added at the end of the queue.\r\n   *\r\n   * @param {number} index The index.\r\n   * @param {*} value The value to save.\r\n   * @param {number} position Position to which entry will be added.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  setValueAtIndex(index, value) {\n    let position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.orderOfIndexes.length;\n    if (index < this.indexedValues.length) {\n      this.indexedValues[index] = value;\n      if (this.orderOfIndexes.includes(index) === false) {\n        this.orderOfIndexes.splice(position, 0, index);\n      }\n      this.runLocalHooks('change');\n      return true;\n    }\n    return false;\n  }\n\n  /**\r\n   * Clear value for particular index.\r\n   *\r\n   * @param {number} physicalIndex Physical index.\r\n   */\n  clearValue(physicalIndex) {\n    this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, [physicalIndex]);\n    if (isFunction(this.initValueOrFn)) {\n      super.setValueAtIndex(physicalIndex, this.initValueOrFn(physicalIndex));\n    } else {\n      super.setValueAtIndex(physicalIndex, this.initValueOrFn);\n    }\n  }\n\n  /**\r\n   * Get length of the index map.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLength() {\n    return this.orderOfIndexes.length;\n  }\n\n  /**\r\n   * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\r\n   *\r\n   * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\r\n   *\r\n   * @private\r\n   * @param {number} [length] Length of list.\r\n   */\n  setDefaultValues() {\n    let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n    this.orderOfIndexes.length = 0;\n    super.setDefaultValues(length);\n  }\n\n  /**\r\n   * Add values to list and reorganize. It updates list of indexes related to ordered values.\r\n   *\r\n   * @private\r\n   * @param {number} insertionIndex Position inside the list.\r\n   * @param {Array} insertedIndexes List of inserted indexes.\r\n   */\n  insert(insertionIndex, insertedIndexes) {\n    this.indexedValues = getListWithInsertedItems(this.indexedValues, insertionIndex, insertedIndexes, this.initValueOrFn);\n    this.orderOfIndexes = getIncreasedIndexes(this.orderOfIndexes, insertedIndexes);\n    super.insert(insertionIndex, insertedIndexes);\n  }\n\n  /**\r\n   * Remove values from the list and reorganize. It updates list of indexes related to ordered values.\r\n   *\r\n   * @private\r\n   * @param {Array} removedIndexes List of removed indexes.\r\n   */\n  remove(removedIndexes) {\n    this.indexedValues = getListWithRemovedItems(this.indexedValues, removedIndexes);\n    this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, removedIndexes);\n    this.orderOfIndexes = getDecreasedIndexes(this.orderOfIndexes, removedIndexes);\n    super.remove(removedIndexes);\n  }\n\n  /**\r\n   * Get every entry containing index and value, respecting order of indexes.\r\n   *\r\n   * @returns {Array}\r\n   */\n  getEntries() {\n    return this.orderOfIndexes.map(physicalIndex => [physicalIndex, this.getValueAtIndex(physicalIndex)]);\n  }\n}", "import \"core-js/modules/es.array.push.js\";\nimport { PhysicalIndexToValueMap } from \"./physicalIndexToValueMap.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\n/**\r\n * Map for storing mappings from an physical index to a boolean value. It stores information whether physical index is\r\n * NOT included in a dataset and skipped in the process of rendering.\r\n *\r\n * @class TrimmingMap\r\n */\nexport class TrimmingMap extends PhysicalIndexToValueMap {\n  constructor() {\n    let initValueOrFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    super(initValueOrFn);\n  }\n\n  /**\r\n   * Get physical indexes which are trimmed.\r\n   *\r\n   * Note: Indexes marked as trimmed aren't included in a {@link DataMap} and aren't rendered.\r\n   *\r\n   * @returns {Array}\r\n   */\n  getTrimmedIndexes() {\n    return arrayReduce(this.getValues(), (indexesList, isTrimmed, physicalIndex) => {\n      if (isTrimmed) {\n        indexesList.push(physicalIndex);\n      }\n      return indexesList;\n    }, []);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./actionsOnIndexes.mjs\";\nimport { getListWithInsertedItems as sequenceStrategyInsert, getListWithRemovedItems as sequenceStrategyRemove } from \"./indexesSequence.mjs\";\nimport { getListWithInsertedItems as physicalStrategyInsert, getListWithRemovedItems as physicalStrategyRemove } from \"./physicallyIndexed.mjs\";\nconst alterStrategies = new Map([['indexesSequence', {\n  getListWithInsertedItems: sequenceStrategyInsert,\n  getListWithRemovedItems: sequenceStrategyRemove\n}], ['physicallyIndexed', {\n  getListWithInsertedItems: physicalStrategyInsert,\n  getListWithRemovedItems: physicalStrategyRemove\n}]]);\nconst alterUtilsFactory = indexationStrategy => {\n  if (alterStrategies.has(indexationStrategy) === false) {\n    throw new Error(`Alter strategy with ID '${indexationStrategy}' does not exist.`);\n  }\n  return alterStrategies.get(indexationStrategy);\n};\nexport { getDecreasedIndexes, getIncreasedIndexes, alterUtilsFactory };", "import { IndexMap } from \"./indexMap.mjs\";\nimport { getListWithRemovedItems, getListWithInsertedItems } from \"./utils/indexesSequence.mjs\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./utils/index.mjs\";\n/**\r\n * Map for storing mappings from an index to a physical index.\r\n *\r\n * It also updates the physical indexes (remaining in the map) on remove/add row or column action.\r\n *\r\n * @class IndexesSequence\r\n */\nexport class IndexesSequence extends IndexMap {\n  constructor() {\n    // Not handling custom init function or init value.\n    super(index => index);\n  }\n\n  /**\r\n   * Add values to list and reorganize.\r\n   *\r\n   * @private\r\n   * @param {number} insertionIndex Position inside the list.\r\n   * @param {Array} insertedIndexes List of inserted indexes.\r\n   */\n  insert(insertionIndex, insertedIndexes) {\n    const listAfterUpdate = getIncreasedIndexes(this.indexedValues, insertedIndexes);\n    this.indexedValues = getListWithInsertedItems(listAfterUpdate, insertionIndex, insertedIndexes);\n    super.insert(insertionIndex, insertedIndexes);\n  }\n\n  /**\r\n   * Remove values from the list and reorganize.\r\n   *\r\n   * @private\r\n   * @param {Array} removedIndexes List of removed indexes.\r\n   */\n  remove(removedIndexes) {\n    const listAfterUpdate = getListWithRemovedItems(this.indexedValues, removedIndexes);\n    this.indexedValues = getDecreasedIndexes(listAfterUpdate, removedIndexes);\n    super.remove(removedIndexes);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { HidingMap } from \"./hidingMap.mjs\";\nimport { IndexMap } from \"./indexMap.mjs\";\nimport { LinkedPhysicalIndexToValueMap } from \"./linkedPhysicalIndexToValueMap.mjs\";\nimport { PhysicalIndexToValueMap } from \"./physicalIndexToValueMap.mjs\";\nimport { TrimmingMap } from \"./trimmingMap.mjs\";\nexport * from \"./indexesSequence.mjs\";\nexport * from \"./utils/indexesSequence.mjs\";\nexport { HidingMap, IndexMap, LinkedPhysicalIndexToValueMap, PhysicalIndexToValueMap, TrimmingMap };\nconst availableIndexMapTypes = new Map([['hiding', HidingMap], ['index', IndexMap], ['linkedPhysicalIndexToValue', LinkedPhysicalIndexToValueMap], ['physicalIndexToValue', PhysicalIndexToValueMap], ['trimming', TrimmingMap]]);\n\n/**\r\n * Creates and returns new IndexMap instance.\r\n *\r\n * @param {string} mapType The type of the map.\r\n * @param {*} [initValueOrFn=null] Initial value or function for index map.\r\n * @returns {IndexMap}\r\n */\nexport function createIndexMap(mapType) {\n  let initValueOrFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (!availableIndexMapTypes.has(mapType)) {\n    throw new Error(`The provided map type (\"${mapType}\") does not exist.`);\n  }\n  return new (availableIndexMapTypes.get(mapType))(initValueOrFn);\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { isUndefined, isDefined } from \"../../helpers/mixed.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\"; // Counter for checking if there is a memory leak.\nlet registeredMaps = 0;\n\n/**\r\n * Collection of index maps having unique names. It allow us to perform bulk operations such as init, remove, insert on all index maps that have been registered in the collection.\r\n */\nexport class MapCollection {\n  constructor() {\n    /**\r\n     * Collection of index maps.\r\n     *\r\n     * @type {Map<string, IndexMap>}\r\n     */\n    _defineProperty(this, \"collection\", new Map());\n  }\n  /**\r\n   * Register custom index map.\r\n   *\r\n   * @param {string} uniqueName Unique name of the index map.\r\n   * @param {IndexMap} indexMap Index map containing miscellaneous (i.e. Meta data, indexes sequence), updated after remove and insert data actions.\r\n   */\n  register(uniqueName, indexMap) {\n    if (this.collection.has(uniqueName) === false) {\n      this.collection.set(uniqueName, indexMap);\n      indexMap.addLocalHook('change', () => this.runLocalHooks('change', indexMap));\n      registeredMaps += 1;\n    }\n  }\n\n  /**\r\n   * Unregister custom index map.\r\n   *\r\n   * @param {string} name Name of the index map.\r\n   */\n  unregister(name) {\n    const indexMap = this.collection.get(name);\n    if (isDefined(indexMap)) {\n      indexMap.destroy();\n      this.collection.delete(name);\n      this.runLocalHooks('change', indexMap);\n      registeredMaps -= 1;\n    }\n  }\n\n  /**\r\n   * Unregisters and destroys all collected index map instances.\r\n   */\n  unregisterAll() {\n    this.collection.forEach((indexMap, name) => this.unregister(name));\n    this.collection.clear();\n  }\n\n  /**\r\n   * Get index map for the provided name.\r\n   *\r\n   * @param {string} [name] Name of the index map.\r\n   * @returns {Array|IndexMap}\r\n   */\n  get(name) {\n    if (isUndefined(name)) {\n      return Array.from(this.collection.values());\n    }\n    return this.collection.get(name);\n  }\n\n  /**\r\n   * Get collection size.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLength() {\n    return this.collection.size;\n  }\n\n  /**\r\n   * Remove some indexes and corresponding mappings and update values of the others within all collection's index maps.\r\n   *\r\n   * @private\r\n   * @param {Array} removedIndexes List of removed indexes.\r\n   */\n  removeFromEvery(removedIndexes) {\n    this.collection.forEach(indexMap => {\n      indexMap.remove(removedIndexes);\n    });\n  }\n\n  /**\r\n   * Insert new indexes and corresponding mapping and update values of the others all collection's index maps.\r\n   *\r\n   * @private\r\n   * @param {number} insertionIndex Position inside the actual list.\r\n   * @param {Array} insertedIndexes List of inserted indexes.\r\n   */\n  insertToEvery(insertionIndex, insertedIndexes) {\n    this.collection.forEach(indexMap => {\n      indexMap.insert(insertionIndex, insertedIndexes);\n    });\n  }\n\n  /**\r\n   * Set default values to index maps within collection.\r\n   *\r\n   * @param {number} length Destination length for all stored maps.\r\n   */\n  initEvery(length) {\n    this.collection.forEach(indexMap => {\n      indexMap.init(length);\n    });\n  }\n}\nmixin(MapCollection, localHooks);\n\n/**\r\n * @returns {number}\r\n */\nexport function getRegisteredMapsCounter() {\n  return registeredMaps;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { MapCollection } from \"./mapCollection.mjs\";\nimport { arrayMap } from \"../../helpers/array.mjs\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\n/**\r\n * Collection of maps. This collection aggregate maps with the same type of values. Values from the registered maps\r\n * can be used to calculate a single result for particular index.\r\n */\nexport class AggregatedCollection extends MapCollection {\n  constructor(aggregationFunction, fallbackValue) {\n    super();\n    /**\r\n     * List of merged values. Value for each index is calculated using values inside registered maps.\r\n     *\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"mergedValuesCache\", []);\n    /**\r\n     * Function which do aggregation on the values for particular index.\r\n     */\n    _defineProperty(this, \"aggregationFunction\", void 0);\n    /**\r\n     * Fallback value when there is no calculated value for particular index.\r\n     */\n    _defineProperty(this, \"fallbackValue\", void 0);\n    this.aggregationFunction = aggregationFunction;\n    this.fallbackValue = fallbackValue;\n  }\n\n  /**\r\n   * Get merged values for all indexes.\r\n   *\r\n   * @param {boolean} [readFromCache=true] Determine if read results from the cache.\r\n   * @returns {Array}\r\n   */\n  getMergedValues() {\n    let readFromCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (readFromCache === true) {\n      return this.mergedValuesCache;\n    }\n    if (this.getLength() === 0) {\n      return [];\n    }\n\n    // Below variable stores values for every particular map. Example describing situation when we have 2 registered maps,\n    // with length equal to 5.\n    //\n    // +---------+---------------------------------------------+\n    // |         |                  indexes                    |\n    // +---------+---------------------------------------------+\n    // |   maps  |     0    |   1   |    2  |   3   |    4     |\n    // +---------+----------+-------+-------+-------+----------+\n    // |    0    | [[ value,  value,  value,  value,  value ], |\n    // |    1    | [  value,  value,  value,  value,  value ]] |\n    // +---------+----------+-------+-------+-------+----------+\n    const mapsValuesMatrix = arrayMap(this.get(), map => map.getValues());\n    // Below variable stores values for every particular index. Example describing situation when we have 2 registered maps,\n    // with length equal to 5.\n    //\n    // +---------+---------------------+\n    // |         |         maps        |\n    // +---------+---------------------+\n    // | indexes |     0    |    1     |\n    // +---------+----------+----------+\n    // |    0    | [[ value,  value ], |\n    // |    1    | [  value,  value ], |\n    // |    2    | [  value,  value ], |\n    // |    3    | [  value,  value ], |\n    // |    4    | [  value,  value ]] |\n    // +---------+----------+----------+\n    const indexesValuesMatrix = [];\n    const mapsLength = isDefined(mapsValuesMatrix[0]) && mapsValuesMatrix[0].length || 0;\n    for (let index = 0; index < mapsLength; index += 1) {\n      const valuesForIndex = [];\n      for (let mapIndex = 0; mapIndex < this.getLength(); mapIndex += 1) {\n        valuesForIndex.push(mapsValuesMatrix[mapIndex][index]);\n      }\n      indexesValuesMatrix.push(valuesForIndex);\n    }\n    return arrayMap(indexesValuesMatrix, this.aggregationFunction);\n  }\n\n  /**\r\n   * Get merged value for particular index.\r\n   *\r\n   * @param {number} index Index for which we calculate single result.\r\n   * @param {boolean} [readFromCache=true] Determine if read results from the cache.\r\n   * @returns {*}\r\n   */\n  getMergedValueAtIndex(index, readFromCache) {\n    const valueAtIndex = this.getMergedValues(readFromCache)[index];\n    return isDefined(valueAtIndex) ? valueAtIndex : this.fallbackValue;\n  }\n\n  /**\r\n   * Rebuild cache for the collection.\r\n   */\n  updateCache() {\n    this.mergedValuesCache = this.getMergedValues(false);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\r\n * The ChangesObserver module is an object that represents a disposable resource\r\n * provided by the ChangesObservable module.\r\n *\r\n * @class ChangesObserver\r\n */\nvar _currentInitialChanges = /*#__PURE__*/new WeakMap();\nexport class ChangesObserver {\n  constructor() {\n    /**\r\n     * The field holds initial changes that will be used to notify the callbacks added using\r\n     * subscribe method. Regardless of the moment of listening for changes, the subscriber\r\n     * will be notified once with all changes made before subscribing.\r\n     *\r\n     * @type {Array}\r\n     */\n    _classPrivateFieldInitSpec(this, _currentInitialChanges, []);\n  }\n  /**\r\n   * Subscribes to the observer.\r\n   *\r\n   * @param {Function} callback A function that will be called when the new changes will appear.\r\n   * @returns {ChangesObserver}\r\n   */\n  subscribe(callback) {\n    this.addLocalHook('change', callback);\n    this._write(_classPrivateFieldGet(_currentInitialChanges, this));\n    return this;\n  }\n\n  /**\r\n   * Unsubscribes all subscriptions. After the method call, the observer would not produce\r\n   * any new events.\r\n   *\r\n   * @returns {ChangesObserver}\r\n   */\n  unsubscribe() {\n    this.runLocalHooks('unsubscribe');\n    this.clearLocalHooks();\n    return this;\n  }\n\n  /**\r\n   * The write method is executed by the ChangesObservable module. The module produces all\r\n   * changes events that are distributed further by the observer.\r\n   *\r\n   * @private\r\n   * @param {object} changes The chunk of changes produced by the ChangesObservable module.\r\n   * @returns {ChangesObserver}\r\n   */\n  _write(changes) {\n    if (changes.length > 0) {\n      this.runLocalHooks('change', changes);\n    }\n    return this;\n  }\n\n  /**\r\n   * The write method is executed by the ChangesObservable module. The module produces initial\r\n   * changes that will be used to notify new subscribers.\r\n   *\r\n   * @private\r\n   * @param {object} initialChanges The chunk of changes produced by the ChangesObservable module.\r\n   */\n  _writeInitialChanges(initialChanges) {\n    _classPrivateFieldSet(_currentInitialChanges, this, initialChanges);\n  }\n}\nmixin(ChangesObserver, localHooks);", "import \"core-js/modules/es.array.push.js\";\n/**\r\n * An array diff implementation. The function iterates through the arrays and depends\r\n * on the diff results, collect the changes as a list of the objects.\r\n *\r\n * Each object contains information about the differences in the indexes of the arrays.\r\n * The changes also contain data about the new and previous array values.\r\n *\r\n * @private\r\n * @param {Array} baseArray The base array to diff from.\r\n * @param {Array} newArray The new array to compare with.\r\n * @returns {Array}\r\n */\nexport function arrayDiff(baseArray, newArray) {\n  const changes = [];\n  let i = 0;\n  let j = 0;\n\n  /* eslint-disable no-plusplus */\n  for (; i < baseArray.length && j < newArray.length; i++, j++) {\n    if (baseArray[i] !== newArray[j]) {\n      changes.push({\n        op: 'replace',\n        index: j,\n        oldValue: baseArray[i],\n        newValue: newArray[j]\n      });\n    }\n  }\n  for (; i < newArray.length; i++) {\n    changes.push({\n      op: 'insert',\n      index: i,\n      oldValue: undefined,\n      newValue: newArray[i]\n    });\n  }\n  for (; j < baseArray.length; j++) {\n    changes.push({\n      op: 'remove',\n      index: j,\n      oldValue: baseArray[j],\n      newValue: undefined\n    });\n  }\n  return changes;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { ChangesObserver } from \"./observer.mjs\";\nimport { arrayDiff } from \"./utils.mjs\";\n/**\r\n * The ChangesObservable module is an object that represents a resource that provides\r\n * the ability to observe the changes that happened in the index map indexes during\r\n * the code running.\r\n *\r\n * @private\r\n * @class ChangesObservable\r\n */\nvar _observers = /*#__PURE__*/new WeakMap();\nvar _indexMatrix = /*#__PURE__*/new WeakMap();\nvar _currentIndexState = /*#__PURE__*/new WeakMap();\nvar _isMatrixIndexesInitialized = /*#__PURE__*/new WeakMap();\nvar _initialIndexValue = /*#__PURE__*/new WeakMap();\nexport class ChangesObservable {\n  constructor() {\n    let {\n      initialIndexValue\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    /**\r\n     * The list of registered ChangesObserver instances.\r\n     *\r\n     * @type {ChangesObserver[]}\r\n     */\n    _classPrivateFieldInitSpec(this, _observers, new Set());\n    /**\r\n     * An array with default values that act as a base array that will be compared with\r\n     * the last saved index state. The changes are generated and immediately send through\r\n     * the newly created ChangesObserver object. Thanks to that, the observer initially has\r\n     * all information about what indexes are currently changed.\r\n     *\r\n     * @type {Array}\r\n     */\n    _classPrivateFieldInitSpec(this, _indexMatrix, []);\n    /**\r\n     * An array that holds the indexes state that is currently valid. The value is changed on every\r\n     * index mapper cache update.\r\n     *\r\n     * @type {Array}\r\n     */\n    _classPrivateFieldInitSpec(this, _currentIndexState, []);\n    /**\r\n     * The flag determines if the observable is initialized or not. Not initialized object creates\r\n     * index matrix once while emitting new changes.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _isMatrixIndexesInitialized, false);\n    /**\r\n     * The initial index value allows control from what value the index matrix array will be created.\r\n     * Changing that value changes how the array diff generates the changes for the initial data\r\n     * sent to the subscribers. For example, the changes can be triggered by detecting the changes\r\n     * from `false` to `true` value or vice versa. Generally, it depends on which index map type\r\n     * the Observable will work with. For \"hiding\" or \"trimming\" index types, it will be boolean\r\n     * values. For various index maps, it can be anything, but I suspect that the most appropriate\r\n     * initial value will be \"undefined\" in that case.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _initialIndexValue, false);\n    _classPrivateFieldSet(_initialIndexValue, this, initialIndexValue !== null && initialIndexValue !== void 0 ? initialIndexValue : false);\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\r\n   * Creates and returns a new instance of the ChangesObserver object. The resource\r\n   * allows subscribing to the index changes that during the code running may change.\r\n   * Changes are emitted as an array of the index change. Each change is represented\r\n   * separately as an object with `op`, `index`, `oldValue`, and `newValue` props.\r\n   *\r\n   * For example:\r\n   * ```\r\n   * [\r\n   *   { op: 'replace', index: 1, oldValue: false, newValue: true },\r\n   *   { op: 'replace', index: 3, oldValue: false, newValue: true },\r\n   *   { op: 'insert', index: 4, oldValue: false, newValue: true },\r\n   * ]\r\n   * // or when the new index map changes have less indexes\r\n   * [\r\n   *   { op: 'replace', index: 1, oldValue: false, newValue: true },\r\n   *   { op: 'remove', index: 4, oldValue: false, newValue: true },\r\n   * ]\r\n   * ```\r\n   *\r\n   * @returns {ChangesObserver}\r\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  createObserver() {\n    const observer = new ChangesObserver();\n    _classPrivateFieldGet(_observers, this).add(observer);\n    observer.addLocalHook('unsubscribe', () => {\n      _classPrivateFieldGet(_observers, this).delete(observer);\n    });\n    observer._writeInitialChanges(arrayDiff(_classPrivateFieldGet(_indexMatrix, this), _classPrivateFieldGet(_currentIndexState, this)));\n    return observer;\n  }\n\n  /**\r\n   * The method is an entry point for triggering new index map changes. Emitting the\r\n   * changes triggers comparing algorithm which compares last saved state with a new\r\n   * state. When there are some differences, the changes are sent to all subscribers.\r\n   *\r\n   * @param {Array} indexesState An array with index map state.\r\n   */\n  emit(indexesState) {\n    let currentIndexState = _classPrivateFieldGet(_currentIndexState, this);\n    if (!_classPrivateFieldGet(_isMatrixIndexesInitialized, this) || _classPrivateFieldGet(_indexMatrix, this).length !== indexesState.length) {\n      if (indexesState.length === 0) {\n        indexesState = new Array(currentIndexState.length).fill(_classPrivateFieldGet(_initialIndexValue, this));\n      } else {\n        _classPrivateFieldSet(_indexMatrix, this, new Array(indexesState.length).fill(_classPrivateFieldGet(_initialIndexValue, this)));\n      }\n      if (!_classPrivateFieldGet(_isMatrixIndexesInitialized, this)) {\n        _classPrivateFieldSet(_isMatrixIndexesInitialized, this, true);\n        currentIndexState = _classPrivateFieldGet(_indexMatrix, this);\n      }\n    }\n    const changes = arrayDiff(currentIndexState, indexesState);\n    _classPrivateFieldGet(_observers, this).forEach(observer => observer._write(changes));\n    _classPrivateFieldSet(_currentIndexState, this, indexesState);\n  }\n}", "function _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { arrayMap } from \"../helpers/array.mjs\";\nimport { createIndexMap, getListWithInsertedItems, getListWithRemovedItems, HidingMap, IndexesSequence, TrimmingMap } from \"./maps/index.mjs\";\nimport { AggregatedCollection, MapCollection } from \"./mapCollections/index.mjs\";\nimport localHooks from \"../mixins/localHooks.mjs\";\nimport { mixin } from \"../helpers/object.mjs\";\nimport { isDefined } from \"../helpers/mixed.mjs\";\nimport { ChangesObservable } from \"./changesObservable/observable.mjs\";\n/**\r\n * A set of deprecated feature names.\r\n *\r\n * @type {Set<string>}\r\n */\n// eslint-disable-next-line no-unused-vars\nconst deprecationWarns = new Set();\n\n/**\r\n * @class IndexMapper\r\n * @description\r\n *\r\n * Index mapper stores, registers and manages the indexes on the basis of calculations collected from the subsidiary maps.\r\n * It should be seen as a single source of truth (regarding row and column indexes, for example, their sequence, information if they are skipped in the process of rendering (hidden or trimmed), values linked to them)\r\n * for any operation that considers CRUD actions such as **insertion**, **movement**, **removal** etc, and is used to properly calculate physical and visual indexes translations in both ways.\r\n * It has a built-in cache that is updated only when the data or structure changes.\r\n *\r\n * **Physical index** is a type of an index from the sequence of indexes assigned to the data source rows or columns\r\n *  (from 0 to n, where n is number of the cells on the axis of data set).\r\n * **Visual index** is a type of an index from the sequence of indexes assigned to rows or columns existing in {@link DataMap} (from 0 to n, where n is number of the cells on the axis of data set).\r\n * **Renderable index** is a type of an index from the sequence of indexes assigned to rows or columns whose may be rendered (when they are in a viewport; from 0 to n, where n is number of the cells renderable on the axis).\r\n *\r\n * There are different kinds of index maps which may be registered in the collections and can be used by a reference.\r\n * They also expose public API and trigger two local hooks such as `init` (on initialization) and `change` (on change).\r\n *\r\n * These are: {@link IndexesSequence}, {@link PhysicalIndexToValueMap}, {@link LinkedPhysicalIndexToValueMap}, {@link HidingMap}, and {@link TrimmingMap}.\r\n */\nexport class IndexMapper {\n  constructor() {\n    /**\r\n     * Map for storing the sequence of indexes.\r\n     *\r\n     * It is registered by default and may be used from API methods.\r\n     *\r\n     * @private\r\n     * @type {IndexesSequence}\r\n     */\n    _defineProperty(this, \"indexesSequence\", new IndexesSequence());\n    /**\r\n     * Collection for different trimming maps. Indexes marked as trimmed in any map WILL NOT be included in\r\n     * the {@link DataMap} and won't be rendered.\r\n     *\r\n     * @private\r\n     * @type {MapCollection}\r\n     */\n    _defineProperty(this, \"trimmingMapsCollection\", new AggregatedCollection(valuesForIndex => valuesForIndex.some(value => value === true), false));\n    /**\r\n     * Collection for different hiding maps. Indexes marked as hidden in any map WILL be included in the {@link DataMap},\r\n     * but won't be rendered.\r\n     *\r\n     * @private\r\n     * @type {MapCollection}\r\n     */\n    _defineProperty(this, \"hidingMapsCollection\", new AggregatedCollection(valuesForIndex => valuesForIndex.some(value => value === true), false));\n    /**\r\n     * Collection for another kind of maps. There are stored mappings from indexes (visual or physical) to values.\r\n     *\r\n     * @private\r\n     * @type {MapCollection}\r\n     */\n    _defineProperty(this, \"variousMapsCollection\", new MapCollection());\n    /**\r\n     * The class instance collects row and column index changes that happen while the Handsontable\r\n     * is running. The object allows creating observers that you can subscribe. Each event represents\r\n     * the index change (e.g., insert, removing, change index value), which can be consumed by a\r\n     * developer to update its logic.\r\n     *\r\n     * @private\r\n     * @type {ChangesObservable}\r\n     */\n    _defineProperty(this, \"hidingChangesObservable\", new ChangesObservable({\n      initialIndexValue: false\n    }));\n    /**\r\n     * Cache for list of not trimmed indexes, respecting the indexes sequence (physical indexes).\r\n     *\r\n     * Note: Please keep in mind that trimmed index can be also hidden.\r\n     *\r\n     * @private\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"notTrimmedIndexesCache\", []);\n    /**\r\n     * Cache for list of not hidden indexes, respecting the indexes sequence (physical indexes).\r\n     *\r\n     * Note: Please keep in mind that hidden index can be also trimmed.\r\n     *\r\n     * @private\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"notHiddenIndexesCache\", []);\n    /**\r\n     * Flag determining whether actions performed on index mapper have been batched. It's used for cache management.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"isBatched\", false);\n    /**\r\n     * Flag determining whether any action on indexes sequence has been performed. It's used for cache management.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"indexesSequenceChanged\", false);\n    /**\r\n     * Flag informing about source of the change.\r\n     *\r\n     * @type {undefined|string}\r\n     */\n    _defineProperty(this, \"indexesChangeSource\", undefined);\n    /**\r\n     * Flag determining whether any action on trimmed indexes has been performed. It's used for cache management.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"trimmedIndexesChanged\", false);\n    /**\r\n     * Flag determining whether any action on hidden indexes has been performed. It's used for cache management.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"hiddenIndexesChanged\", false);\n    /**\r\n     * Physical indexes (respecting the sequence of indexes) which may be rendered (when they are in a viewport).\r\n     *\r\n     * @private\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"renderablePhysicalIndexesCache\", []);\n    /**\r\n     * Visual indexes (native map's value) corresponding to physical indexes (native map's index).\r\n     *\r\n     * @private\r\n     * @type {Map}\r\n     */\n    _defineProperty(this, \"fromPhysicalToVisualIndexesCache\", new Map());\n    /**\r\n     * Visual indexes (native map's value) corresponding to physical indexes (native map's index).\r\n     *\r\n     * @private\r\n     * @type {Map}\r\n     */\n    _defineProperty(this, \"fromVisualToRenderableIndexesCache\", new Map());\n    this.indexesSequence.addLocalHook('change', () => {\n      this.indexesSequenceChanged = true;\n\n      // Sequence of stored indexes might change.\n      this.updateCache();\n      this.runLocalHooks('indexesSequenceChange', this.indexesChangeSource);\n      this.runLocalHooks('change', this.indexesSequence, null);\n    });\n    this.trimmingMapsCollection.addLocalHook('change', changedMap => {\n      this.trimmedIndexesChanged = true;\n\n      // Number of trimmed indexes might change.\n      this.updateCache();\n      this.runLocalHooks('change', changedMap, this.trimmingMapsCollection);\n    });\n    this.hidingMapsCollection.addLocalHook('change', changedMap => {\n      this.hiddenIndexesChanged = true;\n\n      // Number of hidden indexes might change.\n      this.updateCache();\n      this.runLocalHooks('change', changedMap, this.hidingMapsCollection);\n    });\n    this.variousMapsCollection.addLocalHook('change', changedMap => {\n      this.runLocalHooks('change', changedMap, this.variousMapsCollection);\n    });\n  }\n\n  /**\r\n   * Suspends the cache update for this map. The method is helpful to group multiple\r\n   * operations, which affects the cache. In this case, the cache will be updated once after\r\n   * calling the `resumeOperations` method.\r\n   */\n  suspendOperations() {\n    this.isBatched = true;\n  }\n\n  /**\r\n   * Resumes the cache update for this map. It recalculates the cache and restores the\r\n   * default behavior where each map modification updates the cache.\r\n   */\n  resumeOperations() {\n    this.isBatched = false;\n    this.updateCache();\n  }\n\n  /**\r\n   * It creates and returns the new instance of the ChangesObserver object. The object\r\n   * allows listening to the index changes that happen while the Handsontable is running.\r\n   *\r\n   * @param {string} indexMapType The index map type which we want to observe.\r\n   *                              Currently, only the 'hiding' index map types are observable.\r\n   * @returns {ChangesObserver}\r\n   */\n  createChangesObserver(indexMapType) {\n    if (indexMapType !== 'hiding') {\n      throw new Error(`Unsupported index map type \"${indexMapType}\".`);\n    }\n    return this.hidingChangesObservable.createObserver();\n  }\n\n  /**\r\n   * Creates and registers a new `IndexMap` for a specified `IndexMapper` instance.\r\n   *\r\n   * @param {string} indexName A unique index name.\r\n   * @param {string} mapType The index map type (e.g., \"hiding\", \"trimming\", \"physicalIndexToValue\").\r\n   * @param {*} [initValueOrFn] The initial value for the index map.\r\n   * @returns {IndexMap}\r\n   */\n  createAndRegisterIndexMap(indexName, mapType, initValueOrFn) {\n    return this.registerMap(indexName, createIndexMap(mapType, initValueOrFn));\n  }\n\n  /**\r\n   * Register map which provide some index mappings. Type of map determining to which collection it will be added.\r\n   *\r\n   * @param {string} uniqueName Name of the index map. It should be unique.\r\n   * @param {IndexMap} indexMap Registered index map updated on items removal and insertion.\r\n   * @returns {IndexMap}\r\n   */\n  registerMap(uniqueName, indexMap) {\n    if (this.trimmingMapsCollection.get(uniqueName) || this.hidingMapsCollection.get(uniqueName) || this.variousMapsCollection.get(uniqueName)) {\n      throw Error(`Map with name \"${uniqueName}\" has been already registered.`);\n    }\n    if (indexMap instanceof TrimmingMap) {\n      this.trimmingMapsCollection.register(uniqueName, indexMap);\n    } else if (indexMap instanceof HidingMap) {\n      this.hidingMapsCollection.register(uniqueName, indexMap);\n    } else {\n      this.variousMapsCollection.register(uniqueName, indexMap);\n    }\n    const numberOfIndexes = this.getNumberOfIndexes();\n\n    /*\r\n      We initialize map ony when we have full information about number of indexes and the dataset is not empty.\r\n      Otherwise it's unnecessary. Initialization of empty array would not give any positive changes. After initializing\r\n      it with number of indexes equal to 0 the map would be still empty. What's more there would be triggered\r\n      not needed hook (no real change have occurred). Number of indexes is known after loading data (the `loadData`\r\n      function from the `Core`).\r\n     */\n    if (numberOfIndexes > 0) {\n      indexMap.init(numberOfIndexes);\n    }\n    return indexMap;\n  }\n\n  /**\r\n   * Unregister a map with given name.\r\n   *\r\n   * @param {string} name Name of the index map.\r\n   */\n  unregisterMap(name) {\n    this.trimmingMapsCollection.unregister(name);\n    this.hidingMapsCollection.unregister(name);\n    this.variousMapsCollection.unregister(name);\n  }\n\n  /**\r\n   * Unregisters all collected index map instances from all map collection types.\r\n   */\n  unregisterAll() {\n    this.trimmingMapsCollection.unregisterAll();\n    this.hidingMapsCollection.unregisterAll();\n    this.variousMapsCollection.unregisterAll();\n  }\n\n  /**\r\n   * Get a physical index corresponding to the given visual index.\r\n   *\r\n   * @param {number} visualIndex Visual index.\r\n   * @returns {number|null} Returns translated index mapped by passed visual index.\r\n   */\n  getPhysicalFromVisualIndex(visualIndex) {\n    // Index in the table boundaries provided by the `DataMap`.\n    const physicalIndex = this.notTrimmedIndexesCache[visualIndex];\n    if (isDefined(physicalIndex)) {\n      return physicalIndex;\n    }\n    return null;\n  }\n\n  /**\r\n   * Get a physical index corresponding to the given renderable index.\r\n   *\r\n   * @param {number} renderableIndex Renderable index.\r\n   * @returns {null|number}\r\n   */\n  getPhysicalFromRenderableIndex(renderableIndex) {\n    const physicalIndex = this.renderablePhysicalIndexesCache[renderableIndex];\n\n    // Index in the renderable table boundaries.\n    if (isDefined(physicalIndex)) {\n      return physicalIndex;\n    }\n    return null;\n  }\n\n  /**\r\n   * Get a visual index corresponding to the given physical index.\r\n   *\r\n   * @param {number} physicalIndex Physical index to search.\r\n   * @returns {number|null} Returns a visual index of the index mapper.\r\n   */\n  getVisualFromPhysicalIndex(physicalIndex) {\n    const visualIndex = this.fromPhysicalToVisualIndexesCache.get(physicalIndex);\n\n    // Index in the table boundaries provided by the `DataMap`.\n    if (isDefined(visualIndex)) {\n      return visualIndex;\n    }\n    return null;\n  }\n\n  /**\r\n   * Get a visual index corresponding to the given renderable index.\r\n   *\r\n   * @param {number} renderableIndex Renderable index.\r\n   * @returns {null|number}\r\n   */\n  getVisualFromRenderableIndex(renderableIndex) {\n    return this.getVisualFromPhysicalIndex(this.getPhysicalFromRenderableIndex(renderableIndex));\n  }\n\n  /**\r\n   * Get a renderable index corresponding to the given visual index.\r\n   *\r\n   * @param {number} visualIndex Visual index.\r\n   * @returns {null|number}\r\n   */\n  getRenderableFromVisualIndex(visualIndex) {\n    const renderableIndex = this.fromVisualToRenderableIndexesCache.get(visualIndex);\n\n    // Index in the renderable table boundaries.\n    if (isDefined(renderableIndex)) {\n      return renderableIndex;\n    }\n    return null;\n  }\n\n  /**\r\n   * Search for the nearest not-hidden row or column.\r\n   *\r\n   * @param {number} fromVisualIndex The visual index of the row or column from which the search starts.<br><br>\r\n   * If the row or column from which the search starts is not hidden, the method simply returns the `fromVisualIndex` number.\r\n   * @param {number} searchDirection The search direction.<br><br>`1`: search from `fromVisualIndex` to the end of the dataset.<br><br>\r\n   * `-1`: search from `fromVisualIndex` to the beginning of the dataset (i.e., to the row or column at visual index `0`).\r\n   * @param {boolean} searchAlsoOtherWayAround `true`: if a search in a first direction failed, try the opposite direction.<br><br>\r\n   * `false`: search in one direction only.\r\n   *\r\n   * @returns {number|null} A visual index of a row or column, or `null`.\r\n   */\n  getNearestNotHiddenIndex(fromVisualIndex, searchDirection) {\n    let searchAlsoOtherWayAround = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const physicalIndex = this.getPhysicalFromVisualIndex(fromVisualIndex);\n    if (physicalIndex === null) {\n      return null;\n    }\n    if (this.fromVisualToRenderableIndexesCache.has(fromVisualIndex)) {\n      return fromVisualIndex;\n    }\n    const visibleIndexes = Array.from(this.fromVisualToRenderableIndexesCache.keys());\n    let index = -1;\n    if (searchDirection > 0) {\n      index = visibleIndexes.findIndex(visualIndex => visualIndex > fromVisualIndex);\n    } else {\n      index = visibleIndexes.reverse().findIndex(visualIndex => visualIndex < fromVisualIndex);\n    }\n    if (index === -1) {\n      if (searchAlsoOtherWayAround) {\n        return this.getNearestNotHiddenIndex(fromVisualIndex, -searchDirection, false);\n      }\n      return null;\n    }\n    return visibleIndexes[index];\n  }\n\n  /**\r\n   * Set default values for all indexes in registered index maps.\r\n   *\r\n   * @param {number} [length] Destination length for all stored index maps.\r\n   */\n  initToLength() {\n    let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getNumberOfIndexes();\n    this.notTrimmedIndexesCache = [...new Array(length).keys()];\n    this.notHiddenIndexesCache = [...new Array(length).keys()];\n    this.suspendOperations();\n    this.indexesChangeSource = 'init';\n    this.indexesSequence.init(length);\n    this.indexesChangeSource = undefined;\n    this.trimmingMapsCollection.initEvery(length);\n    this.resumeOperations();\n\n    // We move initialization of hidden collection to next batch for purpose of working on sequence of already trimmed indexes.\n    this.suspendOperations();\n    this.hidingMapsCollection.initEvery(length);\n\n    // It shouldn't reset the cache.\n    this.variousMapsCollection.initEvery(length);\n    this.resumeOperations();\n    this.runLocalHooks('init');\n  }\n\n  /**\r\n   * Trim/extend the mappers to fit the desired length.\r\n   *\r\n   * @param {number} length New mapper length.\r\n   */\n  fitToLength(length) {\n    const currentIndexCount = this.getNumberOfIndexes();\n    if (length < currentIndexCount) {\n      const indexesToBeRemoved = [...Array(this.getNumberOfIndexes() - length).keys()].map(i => i + length);\n      this.removeIndexes(indexesToBeRemoved);\n    } else {\n      this.insertIndexes(currentIndexCount, length - currentIndexCount);\n    }\n  }\n\n  /**\r\n   * Get sequence of indexes.\r\n   *\r\n   * @returns {Array} Physical indexes.\r\n   */\n  getIndexesSequence() {\n    return this.indexesSequence.getValues();\n  }\n\n  /**\r\n   * Set completely new indexes sequence.\r\n   *\r\n   * @param {Array} indexes Physical indexes.\r\n   */\n  setIndexesSequence(indexes) {\n    if (this.indexesChangeSource === undefined) {\n      this.indexesChangeSource = 'update';\n    }\n    this.indexesSequence.setValues(indexes);\n    if (this.indexesChangeSource === 'update') {\n      this.indexesChangeSource = undefined;\n    }\n  }\n\n  /**\r\n   * Get all NOT trimmed indexes.\r\n   *\r\n   * Note: Indexes marked as trimmed aren't included in a {@link DataMap} and aren't rendered.\r\n   *\r\n   * @param {boolean} [readFromCache=true] Determine if read indexes from cache.\r\n   * @returns {Array} List of physical indexes. Index of this native array is a \"visual index\",\r\n   * value of this native array is a \"physical index\".\r\n   */\n  getNotTrimmedIndexes() {\n    let readFromCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (readFromCache === true) {\n      return this.notTrimmedIndexesCache;\n    }\n    const indexesSequence = this.getIndexesSequence();\n    return indexesSequence.filter(physicalIndex => this.isTrimmed(physicalIndex) === false);\n  }\n\n  /**\r\n   * Get length of all NOT trimmed indexes.\r\n   *\r\n   * Note: Indexes marked as trimmed aren't included in a {@link DataMap} and aren't rendered.\r\n   *\r\n   * @returns {number}\r\n   */\n  getNotTrimmedIndexesLength() {\n    return this.getNotTrimmedIndexes().length;\n  }\n\n  /**\r\n   * Get all NOT hidden indexes.\r\n   *\r\n   * Note: Indexes marked as hidden are included in a {@link DataMap}, but aren't rendered.\r\n   *\r\n   * @param {boolean} [readFromCache=true] Determine if read indexes from cache.\r\n   * @returns {Array} List of physical indexes. Please keep in mind that index of this native array IS NOT a \"visual index\".\r\n   */\n  getNotHiddenIndexes() {\n    let readFromCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (readFromCache === true) {\n      return this.notHiddenIndexesCache;\n    }\n    const indexesSequence = this.getIndexesSequence();\n    return indexesSequence.filter(physicalIndex => this.isHidden(physicalIndex) === false);\n  }\n\n  /**\r\n   * Get length of all NOT hidden indexes.\r\n   *\r\n   * Note: Indexes marked as hidden are included in a {@link DataMap}, but aren't rendered.\r\n   *\r\n   * @returns {number}\r\n   */\n  getNotHiddenIndexesLength() {\n    return this.getNotHiddenIndexes().length;\n  }\n\n  /**\r\n   * Get list of physical indexes (respecting the sequence of indexes) which may be rendered (when they are in a viewport).\r\n   *\r\n   * @param {boolean} [readFromCache=true] Determine if read indexes from cache.\r\n   * @returns {Array} List of physical indexes. Index of this native array is a \"renderable index\",\r\n   * value of this native array is a \"physical index\".\r\n   */\n  getRenderableIndexes() {\n    let readFromCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (readFromCache === true) {\n      return this.renderablePhysicalIndexesCache;\n    }\n    const notTrimmedIndexes = this.getNotTrimmedIndexes();\n    return notTrimmedIndexes.filter(physicalIndex => this.isHidden(physicalIndex) === false);\n  }\n\n  /**\r\n   * Get length of all NOT trimmed and NOT hidden indexes.\r\n   *\r\n   * @returns {number}\r\n   */\n  getRenderableIndexesLength() {\n    return this.getRenderableIndexes().length;\n  }\n\n  /**\r\n   * Get number of all indexes.\r\n   *\r\n   * @returns {number}\r\n   */\n  getNumberOfIndexes() {\n    return this.getIndexesSequence().length;\n  }\n\n  /**\r\n   * Move indexes in the index mapper.\r\n   *\r\n   * @param {number|Array} movedIndexes Visual index(es) to move.\r\n   * @param {number} finalIndex Visual index being a start index for the moved elements.\r\n   */\n  moveIndexes(movedIndexes, finalIndex) {\n    if (typeof movedIndexes === 'number') {\n      movedIndexes = [movedIndexes];\n    }\n    const physicalMovedIndexes = arrayMap(movedIndexes, visualIndex => this.getPhysicalFromVisualIndex(visualIndex));\n    const notTrimmedIndexesLength = this.getNotTrimmedIndexesLength();\n    const movedIndexesLength = movedIndexes.length;\n\n    // Removing moved indexes without re-indexing.\n    const notMovedIndexes = getListWithRemovedItems(this.getIndexesSequence(), physicalMovedIndexes);\n    const notTrimmedNotMovedItems = notMovedIndexes.filter(index => this.isTrimmed(index) === false);\n\n    // When item(s) are moved after the last visible item we assign the last possible index.\n    let destinationPosition = notMovedIndexes.indexOf(notTrimmedNotMovedItems[notTrimmedNotMovedItems.length - 1]) + 1;\n\n    // Otherwise, we find proper index for inserted item(s).\n    if (finalIndex + movedIndexesLength < notTrimmedIndexesLength) {\n      // Physical index at final index position.\n      const physicalIndex = notTrimmedNotMovedItems[finalIndex];\n      destinationPosition = notMovedIndexes.indexOf(physicalIndex);\n    }\n    this.indexesChangeSource = 'move';\n\n    // Adding indexes without re-indexing.\n    this.setIndexesSequence(getListWithInsertedItems(notMovedIndexes, destinationPosition, physicalMovedIndexes));\n    this.indexesChangeSource = undefined;\n  }\n\n  /**\r\n   * Get whether index is trimmed. Index marked as trimmed isn't included in a {@link DataMap} and isn't rendered.\r\n   *\r\n   * @param {number} physicalIndex Physical index.\r\n   * @returns {boolean}\r\n   */\n  isTrimmed(physicalIndex) {\n    return this.trimmingMapsCollection.getMergedValueAtIndex(physicalIndex);\n  }\n\n  /**\r\n   * Get whether index is hidden. Index marked as hidden is included in a {@link DataMap}, but isn't rendered.\r\n   *\r\n   * @param {number} physicalIndex Physical index.\r\n   * @returns {boolean}\r\n   */\n  isHidden(physicalIndex) {\n    return this.hidingMapsCollection.getMergedValueAtIndex(physicalIndex);\n  }\n\n  /**\r\n   * Insert new indexes and corresponding mapping and update values of the others, for all stored index maps.\r\n   *\r\n   * @private\r\n   * @param {number} firstInsertedVisualIndex First inserted visual index.\r\n   * @param {number} amountOfIndexes Amount of inserted indexes.\r\n   */\n  insertIndexes(firstInsertedVisualIndex, amountOfIndexes) {\n    const nthVisibleIndex = this.getNotTrimmedIndexes()[firstInsertedVisualIndex];\n    const firstInsertedPhysicalIndex = isDefined(nthVisibleIndex) ? nthVisibleIndex : this.getNumberOfIndexes();\n    const insertionIndex = this.getIndexesSequence().includes(nthVisibleIndex) ? this.getIndexesSequence().indexOf(nthVisibleIndex) : this.getNumberOfIndexes();\n    const insertedIndexes = arrayMap(new Array(amountOfIndexes).fill(firstInsertedPhysicalIndex), (nextIndex, stepsFromStart) => nextIndex + stepsFromStart);\n    this.suspendOperations();\n    this.indexesChangeSource = 'insert';\n    this.indexesSequence.insert(insertionIndex, insertedIndexes);\n    this.indexesChangeSource = undefined;\n    this.trimmingMapsCollection.insertToEvery(insertionIndex, insertedIndexes);\n    this.hidingMapsCollection.insertToEvery(insertionIndex, insertedIndexes);\n    this.variousMapsCollection.insertToEvery(insertionIndex, insertedIndexes);\n    this.resumeOperations();\n  }\n\n  /**\r\n   * Remove some indexes and corresponding mappings and update values of the others, for all stored index maps.\r\n   *\r\n   * @private\r\n   * @param {Array} removedIndexes List of removed indexes.\r\n   */\n  removeIndexes(removedIndexes) {\n    this.suspendOperations();\n    this.indexesChangeSource = 'remove';\n    this.indexesSequence.remove(removedIndexes);\n    this.indexesChangeSource = undefined;\n    this.trimmingMapsCollection.removeFromEvery(removedIndexes);\n    this.hidingMapsCollection.removeFromEvery(removedIndexes);\n    this.variousMapsCollection.removeFromEvery(removedIndexes);\n    this.resumeOperations();\n  }\n\n  /**\r\n   * Rebuild cache for some indexes. Every action on indexes sequence or indexes skipped in the process of rendering\r\n   * by default reset cache, thus batching some index maps actions is recommended.\r\n   *\r\n   * @private\r\n   * @param {boolean} [force=false] Determine if force cache update.\r\n   */\n  updateCache() {\n    let force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const anyCachedIndexChanged = this.indexesSequenceChanged || this.trimmedIndexesChanged || this.hiddenIndexesChanged;\n    if (force === true || this.isBatched === false && anyCachedIndexChanged === true) {\n      this.trimmingMapsCollection.updateCache();\n      this.hidingMapsCollection.updateCache();\n      this.notTrimmedIndexesCache = this.getNotTrimmedIndexes(false);\n      this.notHiddenIndexesCache = this.getNotHiddenIndexes(false);\n      this.renderablePhysicalIndexesCache = this.getRenderableIndexes(false);\n      this.cacheFromPhysicalToVisualIndexes();\n      this.cacheFromVisualToRenderableIndexes();\n\n      // Currently there's support only for the \"hiding\" map type.\n      if (this.hiddenIndexesChanged) {\n        this.hidingChangesObservable.emit(this.hidingMapsCollection.getMergedValues());\n      }\n      this.runLocalHooks('cacheUpdated', {\n        indexesSequenceChanged: this.indexesSequenceChanged,\n        trimmedIndexesChanged: this.trimmedIndexesChanged,\n        hiddenIndexesChanged: this.hiddenIndexesChanged\n      });\n      this.indexesSequenceChanged = false;\n      this.trimmedIndexesChanged = false;\n      this.hiddenIndexesChanged = false;\n    }\n  }\n\n  /**\r\n   * Update cache for translations from physical to visual indexes.\r\n   *\r\n   * @private\r\n   */\n  cacheFromPhysicalToVisualIndexes() {\n    const nrOfNotTrimmedIndexes = this.getNotTrimmedIndexesLength();\n    this.fromPhysicalToVisualIndexesCache.clear();\n    for (let visualIndex = 0; visualIndex < nrOfNotTrimmedIndexes; visualIndex += 1) {\n      const physicalIndex = this.getPhysicalFromVisualIndex(visualIndex);\n\n      // Every visual index have corresponding physical index, but some physical indexes may don't have\n      // corresponding visual indexes (physical indexes may represent trimmed indexes, beyond the table boundaries)\n      this.fromPhysicalToVisualIndexesCache.set(physicalIndex, visualIndex);\n    }\n  }\n\n  /**\r\n   * Update cache for translations from visual to renderable indexes.\r\n   *\r\n   * @private\r\n   */\n  cacheFromVisualToRenderableIndexes() {\n    const nrOfRenderableIndexes = this.getRenderableIndexesLength();\n    this.fromVisualToRenderableIndexesCache.clear();\n    for (let renderableIndex = 0; renderableIndex < nrOfRenderableIndexes; renderableIndex += 1) {\n      // Can't use getRenderableFromVisualIndex here because we're building the cache here\n      const physicalIndex = this.getPhysicalFromRenderableIndex(renderableIndex);\n      const visualIndex = this.getVisualFromPhysicalIndex(physicalIndex);\n      this.fromVisualToRenderableIndexesCache.set(visualIndex, renderableIndex);\n    }\n  }\n}\nmixin(IndexMapper, localHooks);", "import { isUndefined, isDefined } from \"./../helpers/mixed.mjs\";\nimport { objectEach } from \"./../helpers/object.mjs\";\nimport { error } from \"./../helpers/console.mjs\";\nimport { toSingleLine } from \"./../helpers/templateLiteralTag.mjs\";\n/**\r\n * Perform shallow extend of a target object with only this extension's properties which doesn't exist in the target.\r\n *\r\n * TODO: Maybe it should be moved to global helpers? It's changed `extend` function.\r\n *\r\n * @param {object} target An object that will receive the new properties.\r\n * @param {object} extension An object containing additional properties to merge into the target.\r\n * @returns {object}\r\n */\nexport function extendNotExistingKeys(target, extension) {\n  objectEach(extension, (value, key) => {\n    if (isUndefined(target[key])) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n\n/**\r\n * Create range of values basing on cell indexes. For example, it will create below ranges for specified function arguments:\r\n *\r\n * createCellHeadersRange(2, 7) => `2-7`\r\n * createCellHeadersRange(7, 2) => `2-7`\r\n * createCellHeadersRange(0, 4, 'A', 'D') => `A-D`\r\n * createCellHeadersRange(4, 0, 'D', 'A') => `A-D`.\r\n *\r\n * @param {number} firstRowIndex Index of \"first\" cell.\r\n * @param {number} nextRowIndex Index of \"next\" cell.\r\n * @param {*} fromValue Value which will represent \"first\" cell.\r\n * @param {*} toValue Value which will represent \"next\" cell.\r\n * @returns {string} Value representing range i.e. A-Z, 11-15.\r\n */\nexport function createCellHeadersRange(firstRowIndex, nextRowIndex) {\n  let fromValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : firstRowIndex;\n  let toValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : nextRowIndex;\n  // Will swap `fromValue` with `toValue` if it's necessary.\n  let [from, to] = [fromValue, toValue];\n  if (firstRowIndex > nextRowIndex) {\n    [from, to] = [to, from];\n  }\n  return `${from}-${to}`;\n}\n\n/**\r\n * Normalize language code. It takes handled languageCode proposition and change it to proper languageCode.\r\n * For example, when it takes `eN-us` as parameter it return `en-US`.\r\n *\r\n * @param {string} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\r\n * @returns {string}\r\n */\nexport function normalizeLanguageCode(languageCode) {\n  const languageCodePattern = /^([a-zA-Z]{2})-([a-zA-Z]{2})$/;\n  const partsOfLanguageCode = languageCodePattern.exec(languageCode);\n  if (partsOfLanguageCode) {\n    return `${partsOfLanguageCode[1].toLowerCase()}-${partsOfLanguageCode[2].toUpperCase()}`;\n  }\n  return languageCode;\n}\n\n/**\r\n *\r\n * Warn user if there is no registered language.\r\n *\r\n * @param {string} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\r\n */\nexport function warnUserAboutLanguageRegistration(languageCode) {\n  if (isDefined(languageCode)) {\n    error(toSingleLine`Language with code \"${languageCode}\" was not found. You should register particular language\\x20\n    before using it. Read more about this issue at: https://docs.handsontable.com/i18n/missing-language-code.`);\n  }\n}", "/**\r\n * Try to choose plural form from available phrase propositions.\r\n *\r\n * @param {Array} phrasePropositions List of phrases propositions.\r\n * @param {number} pluralForm Number determining which phrase form should be used.\r\n *\r\n * @returns {string|Array} One particular phrase if it's possible, list of unchanged phrase propositions otherwise.\r\n */\nexport default function pluralize(phrasePropositions, pluralForm) {\n  const isPluralizable = Array.isArray(phrasePropositions) && Number.isInteger(pluralForm);\n  if (isPluralizable) {\n    return phrasePropositions[pluralForm];\n  }\n  return phrasePropositions;\n}", "import staticRegister from \"./../../utils/staticRegister.mjs\";\nimport pluralizeFn from \"./pluralize.mjs\";\nconst {\n  register: registerGloballyPhraseFormatter,\n  getValues: getGlobalPhraseFormatters\n} = staticRegister('phraseFormatters');\n\n/**\r\n * Register phrase formatter.\r\n *\r\n * @param {string} name Name of formatter.\r\n * @param {Function} formatterFn Function which will be applied on phrase propositions. It will transform them if it's possible.\r\n */\nexport function register(name, formatterFn) {\n  registerGloballyPhraseFormatter(name, formatterFn);\n}\n\n/**\r\n * Get all registered previously formatters.\r\n *\r\n * @returns {Array}\r\n */\nexport function getAll() {\n  return getGlobalPhraseFormatters();\n}\nexport { register as registerPhraseFormatter, getAll as getPhraseFormatters };\nregister('pluralize', pluralizeFn);", "/**\r\n * Constants for parts of translation.\r\n */\n\nexport const CONTEXT_MENU_ITEMS_NAMESPACE = 'ContextMenu:items';\nconst CM_ALIAS = CONTEXT_MENU_ITEMS_NAMESPACE;\nexport const CONTEXTMENU_ITEMS_NO_ITEMS = `${CM_ALIAS}.noItems`;\nexport const CONTEXTMENU_ITEMS_ROW_ABOVE = `${CM_ALIAS}.insertRowAbove`;\nexport const CONTEXTMENU_ITEMS_ROW_BELOW = `${CM_ALIAS}.insertRowBelow`;\nexport const CONTEXTMENU_ITEMS_INSERT_LEFT = `${CM_ALIAS}.insertColumnOnTheLeft`;\nexport const CONTEXTMENU_ITEMS_INSERT_RIGHT = `${CM_ALIAS}.insertColumnOnTheRight`;\nexport const CONTEXTMENU_ITEMS_REMOVE_ROW = `${CM_ALIAS}.removeRow`;\nexport const CONTEXTMENU_ITEMS_REMOVE_COLUMN = `${CM_ALIAS}.removeColumn`;\nexport const CONTEXTMENU_ITEMS_UNDO = `${CM_ALIAS}.undo`;\nexport const CONTEXTMENU_ITEMS_REDO = `${CM_ALIAS}.redo`;\nexport const CONTEXTMENU_ITEMS_READ_ONLY = `${CM_ALIAS}.readOnly`;\nexport const CONTEXTMENU_ITEMS_CLEAR_COLUMN = `${CM_ALIAS}.clearColumn`;\nexport const CONTEXTMENU_ITEMS_COPY = `${CM_ALIAS}.copy`;\nexport const CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_HEADERS = `${CM_ALIAS}.copyWithHeaders`;\nexport const CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_GROUP_HEADERS = `${CM_ALIAS}.copyWithGroupHeaders`;\nexport const CONTEXTMENU_ITEMS_COPY_COLUMN_HEADERS_ONLY = `${CM_ALIAS}.copyHeadersOnly`;\nexport const CONTEXTMENU_ITEMS_CUT = `${CM_ALIAS}.cut`;\nexport const CONTEXTMENU_ITEMS_FREEZE_COLUMN = `${CM_ALIAS}.freezeColumn`;\nexport const CONTEXTMENU_ITEMS_UNFREEZE_COLUMN = `${CM_ALIAS}.unfreezeColumn`;\nexport const CONTEXTMENU_ITEMS_MERGE_CELLS = `${CM_ALIAS}.mergeCells`;\nexport const CONTEXTMENU_ITEMS_UNMERGE_CELLS = `${CM_ALIAS}.unmergeCells`;\nexport const CONTEXTMENU_ITEMS_ADD_COMMENT = `${CM_ALIAS}.addComment`;\nexport const CONTEXTMENU_ITEMS_EDIT_COMMENT = `${CM_ALIAS}.editComment`;\nexport const CONTEXTMENU_ITEMS_REMOVE_COMMENT = `${CM_ALIAS}.removeComment`;\nexport const CONTEXTMENU_ITEMS_READ_ONLY_COMMENT = `${CM_ALIAS}.readOnlyComment`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT = `${CM_ALIAS}.align`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT_LEFT = `${CM_ALIAS}.align.left`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT_CENTER = `${CM_ALIAS}.align.center`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT_RIGHT = `${CM_ALIAS}.align.right`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT_JUSTIFY = `${CM_ALIAS}.align.justify`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT_TOP = `${CM_ALIAS}.align.top`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT_MIDDLE = `${CM_ALIAS}.align.middle`;\nexport const CONTEXTMENU_ITEMS_ALIGNMENT_BOTTOM = `${CM_ALIAS}.align.bottom`;\nexport const CONTEXTMENU_ITEMS_BORDERS = `${CM_ALIAS}.borders`;\nexport const CONTEXTMENU_ITEMS_BORDERS_TOP = `${CM_ALIAS}.borders.top`;\nexport const CONTEXTMENU_ITEMS_BORDERS_RIGHT = `${CM_ALIAS}.borders.right`;\nexport const CONTEXTMENU_ITEMS_BORDERS_BOTTOM = `${CM_ALIAS}.borders.bottom`;\nexport const CONTEXTMENU_ITEMS_BORDERS_LEFT = `${CM_ALIAS}.borders.left`;\nexport const CONTEXTMENU_ITEMS_REMOVE_BORDERS = `${CM_ALIAS}.borders.remove`;\nexport const CONTEXTMENU_ITEMS_NESTED_ROWS_INSERT_CHILD = `${CM_ALIAS}.nestedHeaders.insertChildRow`; // eslint-disable-line max-len\nexport const CONTEXTMENU_ITEMS_NESTED_ROWS_DETACH_CHILD = `${CM_ALIAS}.nestedHeaders.detachFromParent`; // eslint-disable-line max-len\n\nexport const CONTEXTMENU_ITEMS_HIDE_COLUMN = `${CM_ALIAS}.hideColumn`;\nexport const CONTEXTMENU_ITEMS_SHOW_COLUMN = `${CM_ALIAS}.showColumn`;\nexport const CONTEXTMENU_ITEMS_HIDE_ROW = `${CM_ALIAS}.hideRow`;\nexport const CONTEXTMENU_ITEMS_SHOW_ROW = `${CM_ALIAS}.showRow`;\nexport const FILTERS_NAMESPACE = 'Filters:';\nexport const FILTERS_CONDITIONS_NAMESPACE = `${FILTERS_NAMESPACE}conditions`;\nexport const FILTERS_CONDITIONS_NONE = `${FILTERS_CONDITIONS_NAMESPACE}.none`;\nexport const FILTERS_CONDITIONS_EMPTY = `${FILTERS_CONDITIONS_NAMESPACE}.isEmpty`;\nexport const FILTERS_CONDITIONS_NOT_EMPTY = `${FILTERS_CONDITIONS_NAMESPACE}.isNotEmpty`;\nexport const FILTERS_CONDITIONS_EQUAL = `${FILTERS_CONDITIONS_NAMESPACE}.isEqualTo`;\nexport const FILTERS_CONDITIONS_NOT_EQUAL = `${FILTERS_CONDITIONS_NAMESPACE}.isNotEqualTo`;\nexport const FILTERS_CONDITIONS_BEGINS_WITH = `${FILTERS_CONDITIONS_NAMESPACE}.beginsWith`;\nexport const FILTERS_CONDITIONS_ENDS_WITH = `${FILTERS_CONDITIONS_NAMESPACE}.endsWith`;\nexport const FILTERS_CONDITIONS_CONTAINS = `${FILTERS_CONDITIONS_NAMESPACE}.contains`;\nexport const FILTERS_CONDITIONS_NOT_CONTAIN = `${FILTERS_CONDITIONS_NAMESPACE}.doesNotContain`;\nexport const FILTERS_CONDITIONS_BY_VALUE = `${FILTERS_CONDITIONS_NAMESPACE}.byValue`;\nexport const FILTERS_CONDITIONS_GREATER_THAN = `${FILTERS_CONDITIONS_NAMESPACE}.greaterThan`;\nexport const FILTERS_CONDITIONS_GREATER_THAN_OR_EQUAL = `${FILTERS_CONDITIONS_NAMESPACE}.greaterThanOrEqualTo`;\nexport const FILTERS_CONDITIONS_LESS_THAN = `${FILTERS_CONDITIONS_NAMESPACE}.lessThan`;\nexport const FILTERS_CONDITIONS_LESS_THAN_OR_EQUAL = `${FILTERS_CONDITIONS_NAMESPACE}.lessThanOrEqualTo`;\nexport const FILTERS_CONDITIONS_BETWEEN = `${FILTERS_CONDITIONS_NAMESPACE}.isBetween`;\nexport const FILTERS_CONDITIONS_NOT_BETWEEN = `${FILTERS_CONDITIONS_NAMESPACE}.isNotBetween`;\nexport const FILTERS_CONDITIONS_AFTER = `${FILTERS_CONDITIONS_NAMESPACE}.after`;\nexport const FILTERS_CONDITIONS_BEFORE = `${FILTERS_CONDITIONS_NAMESPACE}.before`;\nexport const FILTERS_CONDITIONS_TODAY = `${FILTERS_CONDITIONS_NAMESPACE}.today`;\nexport const FILTERS_CONDITIONS_TOMORROW = `${FILTERS_CONDITIONS_NAMESPACE}.tomorrow`;\nexport const FILTERS_CONDITIONS_YESTERDAY = `${FILTERS_CONDITIONS_NAMESPACE}.yesterday`;\nexport const FILTERS_DIVS_FILTER_BY_CONDITION = `${FILTERS_NAMESPACE}labels.filterByCondition`;\nexport const FILTERS_DIVS_FILTER_BY_VALUE = `${FILTERS_NAMESPACE}labels.filterByValue`;\nexport const FILTERS_LABELS_CONJUNCTION = `${FILTERS_NAMESPACE}labels.conjunction`;\nexport const FILTERS_LABELS_DISJUNCTION = `${FILTERS_NAMESPACE}labels.disjunction`;\nexport const FILTERS_VALUES_BLANK_CELLS = `${FILTERS_NAMESPACE}values.blankCells`;\nexport const FILTERS_BUTTONS_SELECT_ALL = `${FILTERS_NAMESPACE}buttons.selectAll`;\nexport const FILTERS_BUTTONS_CLEAR = `${FILTERS_NAMESPACE}buttons.clear`;\nexport const FILTERS_BUTTONS_OK = `${FILTERS_NAMESPACE}buttons.ok`;\nexport const FILTERS_BUTTONS_CANCEL = `${FILTERS_NAMESPACE}buttons.cancel`;\nexport const FILTERS_BUTTONS_PLACEHOLDER_SEARCH = `${FILTERS_NAMESPACE}buttons.placeholder.search`;\nexport const FILTERS_BUTTONS_PLACEHOLDER_VALUE = `${FILTERS_NAMESPACE}buttons.placeholder.value`;\nexport const FILTERS_BUTTONS_PLACEHOLDER_SECOND_VALUE = `${FILTERS_NAMESPACE}buttons.placeholder.secondValue`;\nexport const CHECKBOX_RENDERER_NAMESPACE = 'CheckboxRenderer:';\nexport const CHECKBOX_CHECKED = `${CHECKBOX_RENDERER_NAMESPACE}checked`;\nexport const CHECKBOX_UNCHECKED = `${CHECKBOX_RENDERER_NAMESPACE}unchecked`;", "/**\r\n * @preserve\r\n * Authors: Handsoncode\r\n * Last updated: Nov 15, 2017\r\n *\r\n * Description: Definition file for English - United States language-country.\r\n */\nimport * as C from \"../constants.mjs\";\nconst dictionary = {\n  languageCode: 'en-US',\n  [C.CONTEXTMENU_ITEMS_NO_ITEMS]: 'No available options',\n  [C.CONTEXTMENU_ITEMS_ROW_ABOVE]: 'Insert row above',\n  [C.CONTEXTMENU_ITEMS_ROW_BELOW]: 'Insert row below',\n  [C.CONTEXTMENU_ITEMS_INSERT_LEFT]: 'Insert column left',\n  [C.CONTEXTMENU_ITEMS_INSERT_RIGHT]: 'Insert column right',\n  [C.CONTEXTMENU_ITEMS_REMOVE_ROW]: ['Remove row', 'Remove rows'],\n  [C.CONTEXTMENU_ITEMS_REMOVE_COLUMN]: ['Remove column', 'Remove columns'],\n  [C.CONTEXTMENU_ITEMS_UNDO]: 'Undo',\n  [C.CONTEXTMENU_ITEMS_REDO]: 'Redo',\n  [C.CONTEXTMENU_ITEMS_READ_ONLY]: 'Read only',\n  [C.CONTEXTMENU_ITEMS_CLEAR_COLUMN]: 'Clear column',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT]: 'Alignment',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT_LEFT]: 'Left',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT_CENTER]: 'Center',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT_RIGHT]: 'Right',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT_JUSTIFY]: 'Justify',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT_TOP]: 'Top',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT_MIDDLE]: 'Middle',\n  [C.CONTEXTMENU_ITEMS_ALIGNMENT_BOTTOM]: 'Bottom',\n  [C.CONTEXTMENU_ITEMS_FREEZE_COLUMN]: 'Freeze column',\n  [C.CONTEXTMENU_ITEMS_UNFREEZE_COLUMN]: 'Unfreeze column',\n  [C.CONTEXTMENU_ITEMS_BORDERS]: 'Borders',\n  [C.CONTEXTMENU_ITEMS_BORDERS_TOP]: 'Top',\n  [C.CONTEXTMENU_ITEMS_BORDERS_RIGHT]: 'Right',\n  [C.CONTEXTMENU_ITEMS_BORDERS_BOTTOM]: 'Bottom',\n  [C.CONTEXTMENU_ITEMS_BORDERS_LEFT]: 'Left',\n  [C.CONTEXTMENU_ITEMS_REMOVE_BORDERS]: 'Remove border(s)',\n  [C.CONTEXTMENU_ITEMS_ADD_COMMENT]: 'Add comment',\n  [C.CONTEXTMENU_ITEMS_EDIT_COMMENT]: 'Edit comment',\n  [C.CONTEXTMENU_ITEMS_REMOVE_COMMENT]: 'Delete comment',\n  [C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT]: 'Read-only comment',\n  [C.CONTEXTMENU_ITEMS_MERGE_CELLS]: 'Merge cells',\n  [C.CONTEXTMENU_ITEMS_UNMERGE_CELLS]: 'Unmerge cells',\n  [C.CONTEXTMENU_ITEMS_COPY]: 'Copy',\n  [C.CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_HEADERS]: ['Copy with header', 'Copy with headers'],\n  [C.CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_GROUP_HEADERS]: ['Copy with group header', 'Copy with group headers'],\n  [C.CONTEXTMENU_ITEMS_COPY_COLUMN_HEADERS_ONLY]: ['Copy header only', 'Copy headers only'],\n  [C.CONTEXTMENU_ITEMS_CUT]: 'Cut',\n  [C.CONTEXTMENU_ITEMS_NESTED_ROWS_INSERT_CHILD]: 'Insert child row',\n  [C.CONTEXTMENU_ITEMS_NESTED_ROWS_DETACH_CHILD]: 'Detach from parent',\n  [C.CONTEXTMENU_ITEMS_HIDE_COLUMN]: ['Hide column', 'Hide columns'],\n  [C.CONTEXTMENU_ITEMS_SHOW_COLUMN]: ['Show column', 'Show columns'],\n  [C.CONTEXTMENU_ITEMS_HIDE_ROW]: ['Hide row', 'Hide rows'],\n  [C.CONTEXTMENU_ITEMS_SHOW_ROW]: ['Show row', 'Show rows'],\n  [C.FILTERS_CONDITIONS_NONE]: 'None',\n  [C.FILTERS_CONDITIONS_EMPTY]: 'Is empty',\n  [C.FILTERS_CONDITIONS_NOT_EMPTY]: 'Is not empty',\n  [C.FILTERS_CONDITIONS_EQUAL]: 'Is equal to',\n  [C.FILTERS_CONDITIONS_NOT_EQUAL]: 'Is not equal to',\n  [C.FILTERS_CONDITIONS_BEGINS_WITH]: 'Begins with',\n  [C.FILTERS_CONDITIONS_ENDS_WITH]: 'Ends with',\n  [C.FILTERS_CONDITIONS_CONTAINS]: 'Contains',\n  [C.FILTERS_CONDITIONS_NOT_CONTAIN]: 'Does not contain',\n  [C.FILTERS_CONDITIONS_GREATER_THAN]: 'Greater than',\n  [C.FILTERS_CONDITIONS_GREATER_THAN_OR_EQUAL]: 'Greater than or equal to',\n  [C.FILTERS_CONDITIONS_LESS_THAN]: 'Less than',\n  [C.FILTERS_CONDITIONS_LESS_THAN_OR_EQUAL]: 'Less than or equal to',\n  [C.FILTERS_CONDITIONS_BETWEEN]: 'Is between',\n  [C.FILTERS_CONDITIONS_NOT_BETWEEN]: 'Is not between',\n  [C.FILTERS_CONDITIONS_AFTER]: 'After',\n  [C.FILTERS_CONDITIONS_BEFORE]: 'Before',\n  [C.FILTERS_CONDITIONS_TODAY]: 'Today',\n  [C.FILTERS_CONDITIONS_TOMORROW]: 'Tomorrow',\n  [C.FILTERS_CONDITIONS_YESTERDAY]: 'Yesterday',\n  [C.FILTERS_VALUES_BLANK_CELLS]: 'Blank cells',\n  [C.FILTERS_DIVS_FILTER_BY_CONDITION]: 'Filter by condition',\n  [C.FILTERS_DIVS_FILTER_BY_VALUE]: 'Filter by value',\n  [C.FILTERS_LABELS_CONJUNCTION]: 'And',\n  [C.FILTERS_LABELS_DISJUNCTION]: 'Or',\n  [C.FILTERS_BUTTONS_SELECT_ALL]: 'Select all',\n  [C.FILTERS_BUTTONS_CLEAR]: 'Clear',\n  [C.FILTERS_BUTTONS_OK]: 'OK',\n  [C.FILTERS_BUTTONS_CANCEL]: 'Cancel',\n  [C.FILTERS_BUTTONS_PLACEHOLDER_SEARCH]: 'Search',\n  [C.FILTERS_BUTTONS_PLACEHOLDER_VALUE]: 'Value',\n  [C.FILTERS_BUTTONS_PLACEHOLDER_SECOND_VALUE]: 'Second value',\n  [C.CHECKBOX_CHECKED]: 'Checked',\n  [C.CHECKBOX_UNCHECKED]: 'Unchecked'\n};\nexport default dictionary;", "import { isObject, deepClone } from \"../helpers/object.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\nimport { isUndefined } from \"../helpers/mixed.mjs\";\nimport { extendNotExistingKeys, normalizeLanguageCode, warnUserAboutLanguageRegistration } from \"./utils.mjs\";\nimport staticRegister from \"../utils/staticRegister.mjs\";\nimport { getPhraseFormatters } from \"./phraseFormatters/index.mjs\";\nimport DEFAULT_DICTIONARY from \"./languages/en-US.mjs\";\nimport * as _dictionaryKeys from \"./constants.mjs\";\nexport const dictionaryKeys = _dictionaryKeys;\nexport const DEFAULT_LANGUAGE_CODE = DEFAULT_DICTIONARY.languageCode;\nconst {\n  register: registerGloballyLanguageDictionary,\n  getItem: getGlobalLanguageDictionary,\n  hasItem: hasGlobalLanguageDictionary,\n  getValues: getGlobalLanguagesDictionaries\n} = staticRegister('languagesDictionaries');\n\n/**\r\n * Register automatically the default language dictionary.\r\n */\nregisterLanguageDictionary(DEFAULT_DICTIONARY);\n\n/**\r\n * Register language dictionary for specific language code.\r\n *\r\n * @param {string|object} languageCodeOrDictionary Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE' or object representing dictionary.\r\n * @param {object} dictionary Dictionary for specific language (optional if first parameter has already dictionary).\r\n * @returns {object}\r\n */\nexport function registerLanguageDictionary(languageCodeOrDictionary, dictionary) {\n  let languageCode = languageCodeOrDictionary;\n  let dictionaryObject = dictionary;\n\n  // Dictionary passed as first argument.\n  if (isObject(languageCodeOrDictionary)) {\n    dictionaryObject = languageCodeOrDictionary;\n    languageCode = dictionaryObject.languageCode;\n  }\n  extendLanguageDictionary(languageCode, dictionaryObject);\n  registerGloballyLanguageDictionary(languageCode, deepClone(dictionaryObject));\n\n  // We do not allow user to work with dictionary by reference, it can cause lot of bugs.\n  return deepClone(dictionaryObject);\n}\n\n/**\r\n * Extend handled dictionary by default language dictionary. As result, if any dictionary key isn't defined for specific language, it will be filled with default language value (\"dictionary gaps\" are supplemented).\r\n *\r\n * @private\r\n * @param {string} languageCode Language code.\r\n * @param {object} dictionary Dictionary which is extended.\r\n */\nfunction extendLanguageDictionary(languageCode, dictionary) {\n  if (languageCode !== DEFAULT_LANGUAGE_CODE) {\n    extendNotExistingKeys(dictionary, getGlobalLanguageDictionary(DEFAULT_LANGUAGE_CODE));\n  }\n}\n\n/**\r\n * Get language dictionary for specific language code.\r\n *\r\n * @param {string} languageCode Language code.\r\n * @returns {object} Object with constants representing identifiers for translation (as keys) and corresponding translation phrases (as values).\r\n */\nexport function getLanguageDictionary(languageCode) {\n  if (!hasLanguageDictionary(languageCode)) {\n    return null;\n  }\n  return deepClone(getGlobalLanguageDictionary(languageCode));\n}\n\n/**\r\n *\r\n * Get if language with specified language code was registered.\r\n *\r\n * @param {string} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\r\n * @returns {boolean}\r\n */\nexport function hasLanguageDictionary(languageCode) {\n  return hasGlobalLanguageDictionary(languageCode);\n}\n\n/**\r\n * Get default language dictionary.\r\n *\r\n * @returns {object} Object with constants representing identifiers for translation (as keys) and corresponding translation phrases (as values).\r\n */\nexport function getDefaultLanguageDictionary() {\n  return DEFAULT_DICTIONARY;\n}\n\n/**\r\n * Get registered language dictionaries.\r\n *\r\n * @returns {Array}\r\n */\nexport function getLanguagesDictionaries() {\n  return getGlobalLanguagesDictionaries();\n}\n\n/**\r\n * Get phrase for specified dictionary key.\r\n *\r\n * @param {string} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\r\n * @param {string} dictionaryKey Constant which is dictionary key.\r\n * @param {*} argumentsForFormatters Arguments which will be handled by formatters.\r\n *\r\n * @returns {string}\r\n */\nexport function getTranslatedPhrase(languageCode, dictionaryKey, argumentsForFormatters) {\n  const languageDictionary = getLanguageDictionary(languageCode);\n  if (languageDictionary === null) {\n    return null;\n  }\n  const phrasePropositions = languageDictionary[dictionaryKey];\n  if (isUndefined(phrasePropositions)) {\n    return null;\n  }\n  const formattedPhrase = getFormattedPhrase(phrasePropositions, argumentsForFormatters);\n  if (Array.isArray(formattedPhrase)) {\n    return formattedPhrase[0];\n  }\n  return formattedPhrase;\n}\n\n/**\r\n * Get formatted phrase from phrases propositions for specified dictionary key.\r\n *\r\n * @private\r\n * @param {Array|string} phrasePropositions List of phrase propositions.\r\n * @param {*} argumentsForFormatters Arguments which will be handled by formatters.\r\n *\r\n * @returns {Array|string}\r\n */\nfunction getFormattedPhrase(phrasePropositions, argumentsForFormatters) {\n  let formattedPhrasePropositions = phrasePropositions;\n  arrayEach(getPhraseFormatters(), formatter => {\n    formattedPhrasePropositions = formatter(phrasePropositions, argumentsForFormatters);\n  });\n  return formattedPhrasePropositions;\n}\n\n/**\r\n * Returns valid language code. If the passed language code doesn't exist default one will be used.\r\n *\r\n * @param {string} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\r\n * @returns {string}\r\n */\nexport function getValidLanguageCode(languageCode) {\n  let normalizedLanguageCode = normalizeLanguageCode(languageCode);\n  if (!hasLanguageDictionary(normalizedLanguageCode)) {\n    normalizedLanguageCode = DEFAULT_LANGUAGE_CODE;\n    warnUserAboutLanguageRegistration(languageCode);\n  }\n  return normalizedLanguageCode;\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { Selection } from \"./../../3rdparty/walkontable/src/index.mjs\";\nclass VisualSelection extends Selection {\n  constructor(settings, visualCellRange) {\n    super(settings, null);\n    /**\r\n     * Range of selection visually. Visual representation may have representation in a rendered selection.\r\n     *\r\n     * @type {null|CellRange}\r\n     */\n    _defineProperty(this, \"visualCellRange\", null);\n    this.visualCellRange = visualCellRange || null;\n    this.commit();\n  }\n  /**\r\n   * Adds a cell coords to the selection.\r\n   *\r\n   * @param {CellCoords} coords Visual coordinates of a cell.\r\n   * @returns {VisualSelection}\r\n   */\n  add(coords) {\n    if (this.visualCellRange === null) {\n      this.visualCellRange = this.settings.createCellRange(coords);\n    } else {\n      this.visualCellRange.expand(coords);\n    }\n    return this;\n  }\n\n  /**\r\n   * Clears visual and renderable selection.\r\n   *\r\n   * @returns {VisualSelection}\r\n   */\n  clear() {\n    this.visualCellRange = null;\n    return super.clear();\n  }\n\n  /**\r\n   * Trims the passed cell range object by removing all coordinates that points to the hidden rows\r\n   * or columns. The result is a new cell range object that points only to the visible indexes or `null`.\r\n   *\r\n   * @private\r\n   * @param {CellRange} cellRange Cells range object to be trimmed.\r\n   * @returns {CellRange} Visual non-hidden cells range coordinates.\r\n   */\n  trimToVisibleCellsRangeOnly(_ref) {\n    let {\n      from,\n      to\n    } = _ref;\n    let visibleFromCoords = this.getNearestNotHiddenCoords(from, 1);\n    let visibleToCoords = this.getNearestNotHiddenCoords(to, -1);\n    if (visibleFromCoords === null || visibleToCoords === null) {\n      return null;\n    }\n    if (visibleFromCoords.row > visibleToCoords.row || visibleFromCoords.col > visibleToCoords.col) {\n      visibleFromCoords = from;\n      visibleToCoords = to;\n    }\n    return this.settings.createCellRange(visibleFromCoords, visibleFromCoords, visibleToCoords);\n  }\n\n  /**\r\n   * Gets nearest coordinates that points to the visible row and column indexes. If there are no visible\r\n   * rows and/or columns the `null` value is returned.\r\n   *\r\n   * @private\r\n   * @param {CellCoords} coords The coords object as starting point for finding the nearest visible coordinates.\r\n   * @param {1|-1} rowSearchDirection The search direction. For value 1, it means searching from top to bottom for\r\n   *                                  rows and from left to right for columns. For -1, it is the other way around.\r\n   * @param {1|-1} columnSearchDirection The same as above but for rows.\r\n   * @returns {CellCoords|null} Visual cell coordinates.\r\n   */\n  getNearestNotHiddenCoords(coords, rowSearchDirection) {\n    let columnSearchDirection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : rowSearchDirection;\n    const nextVisibleRow = this.getNearestNotHiddenIndex(this.settings.rowIndexMapper, coords.row, rowSearchDirection);\n\n    // There are no more visual rows in the range.\n    if (nextVisibleRow === null) {\n      return null;\n    }\n    const nextVisibleColumn = this.getNearestNotHiddenIndex(this.settings.columnIndexMapper, coords.col, columnSearchDirection);\n\n    // There are no more visual columns in the range.\n    if (nextVisibleColumn === null) {\n      return null;\n    }\n    return this.settings.createCellCoords(nextVisibleRow, nextVisibleColumn);\n  }\n\n  /**\r\n   * Gets nearest visual index. If there are no visible rows or columns the `null` value is returned.\r\n   *\r\n   * @private\r\n   * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\r\n   * @param {number} visualIndex The index as starting point for finding the nearest visible index.\r\n   * @param {1|-1} searchDirection The search direction. For value 1, it means searching from top to bottom for\r\n   *                               rows and from left to right for columns. For -1, it is the other way around.\r\n   * @returns {number|null} Visual row/column index.\r\n   */\n  getNearestNotHiddenIndex(indexMapper, visualIndex, searchDirection) {\n    if (visualIndex < 0) {\n      return visualIndex;\n    }\n    return indexMapper.getNearestNotHiddenIndex(visualIndex, searchDirection);\n  }\n\n  /**\r\n   * Override internally stored visual indexes added by the Selection's `add` function. It should be executed\r\n   * at the end of process of adding visual selection coordinates.\r\n   *\r\n   * @returns {VisualSelection}\r\n   */\n  commit() {\n    // There is no information about visual ranges, thus no selection may be displayed.\n    if (this.visualCellRange === null) {\n      return this;\n    }\n    const trimmedCellRange = this.trimToVisibleCellsRangeOnly(this.visualCellRange);\n\n    // There is no visual start point (and also visual end point) in the range.\n    if (trimmedCellRange === null) {\n      this.cellRange = null;\n    } else {\n      this.cellRange = this.createRenderableCellRange(trimmedCellRange.from, trimmedCellRange.to);\n    }\n    return this;\n  }\n\n  /**\r\n   * Some selection may be a part of broader cell range. This function sync coordinates of current selection\r\n   * and the broader cell range when needed (current selection can't be presented visually).\r\n   *\r\n   * @param {CellRange} broaderCellRange Visual range. Actual cell range may be contained in the broader cell range.\r\n   * When there is no way to represent some cell range visually we try to find range containing just the first visible cell.\r\n   *\r\n   * Warn: Please keep in mind that this function may change coordinates of the handled broader range.\r\n   *\r\n   * @returns {VisualSelection}\r\n   */\n  syncWith(broaderCellRange) {\n    const coordsFrom = broaderCellRange.from.clone().normalize();\n    const rowDirection = broaderCellRange.getVerticalDirection() === 'N-S' ? 1 : -1;\n    const columnDirection = broaderCellRange.getHorizontalDirection() === 'W-E' ? 1 : -1;\n    const renderableHighlight = this.settings.visualToRenderableCoords(this.visualCellRange.highlight);\n    let cellCoordsVisual = null;\n    if (renderableHighlight === null || renderableHighlight.col === null || renderableHighlight.row === null) {\n      cellCoordsVisual = this.getNearestNotHiddenCoords(coordsFrom, rowDirection, columnDirection);\n    }\n    if (cellCoordsVisual !== null && broaderCellRange.overlaps(cellCoordsVisual)) {\n      const currentHighlight = broaderCellRange.highlight.clone();\n      if (currentHighlight.row >= 0) {\n        currentHighlight.row = cellCoordsVisual.row;\n      }\n      if (currentHighlight.col >= 0) {\n        currentHighlight.col = cellCoordsVisual.col;\n      }\n\n      // We can't show selection visually now, but we found first visible range in the broader cell range.\n      if (this.cellRange === null) {\n        const cellCoordsRenderable = this.settings.visualToRenderableCoords(currentHighlight);\n        this.cellRange = this.settings.createCellRange(cellCoordsRenderable);\n      }\n\n      // TODO\n      // We set new highlight as it might change (for example, when showing/hiding some cells from the broader selection range)\n      // TODO: It is also handled by the `MergeCells` plugin while adjusting already modified coordinates. Should it?\n      broaderCellRange.setHighlight(currentHighlight);\n    }\n\n    // TODO\n    // Sync the highlight coords from the visual selection layer with logical coords.\n    if (this.settings.selectionType === 'focus' && renderableHighlight !== null && cellCoordsVisual === null) {\n      broaderCellRange.setHighlight(this.visualCellRange.highlight);\n    }\n    return this;\n  }\n\n  /**\r\n   * Returns the top left (TL) and bottom right (BR) selection coordinates (renderable indexes).\r\n   * The method overwrites the original method to support header selection for hidden cells.\r\n   * To make the header selection working, the CellCoords and CellRange have to support not\r\n   * complete coordinates (`null` values for example, `row: null`, `col: 2`).\r\n   *\r\n   * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\r\n   */\n  getCorners() {\n    const {\n      from,\n      to\n    } = this.cellRange;\n    return [Math.min(from.row, to.row), Math.min(from.col, to.col), Math.max(from.row, to.row), Math.max(from.col, to.col)];\n  }\n\n  /**\r\n   * Returns the top left (or top right in RTL) and bottom right (or bottom left in RTL) selection\r\n   * coordinates (visual indexes).\r\n   *\r\n   * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\r\n   */\n  getVisualCorners() {\n    const topStart = this.settings.renderableToVisualCoords(this.cellRange.getTopStartCorner());\n    const bottomEnd = this.settings.renderableToVisualCoords(this.cellRange.getBottomEndCorner());\n    return [topStart.row, topStart.col, bottomEnd.row, bottomEnd.col];\n  }\n\n  /**\r\n   * Creates a new CellRange object based on visual coordinates which before object creation are\r\n   * translated to renderable indexes.\r\n   *\r\n   * @param {CellCoords} visualFromCoords The CellCoords object which contains coordinates that\r\n   *                                      points to the beginning of the selection.\r\n   * @param {CellCoords} visualToCoords The CellCoords object which contains coordinates that\r\n   *                                    points to the end of the selection.\r\n   * @returns {CellRange|null}\r\n   */\n  createRenderableCellRange(visualFromCoords, visualToCoords) {\n    const renderableFromCoords = this.settings.visualToRenderableCoords(visualFromCoords);\n    const renderableToCoords = this.settings.visualToRenderableCoords(visualToCoords);\n    if (renderableFromCoords.row === null || renderableFromCoords.col === null || renderableToCoords.row === null || renderableToCoords.col === null) {\n      return null;\n    }\n    return this.settings.createCellRange(renderableFromCoords, renderableFromCoords, renderableToCoords);\n  }\n}\nexport default VisualSelection;", "import { HIGHLIGHT_ACTIVE_HEADER_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection, responsible for highlighting column or row headers\r\n * only when the whole column or row is selected.\r\n * This type of selection can occur multiple times.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {string} highlightParams.activeHeaderClassName Highlighted headers' class name.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    activeHeaderClassName,\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: activeHeaderClassName,\n    ...restOptions,\n    selectionType: HIGHLIGHT_ACTIVE_HEADER_TYPE\n  });\n}", "import { HIGHLIGHT_AREA_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection responsible for highlighting area of the selected multiple cells.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {object} highlightParams.areaCornerVisible Function to determine if area's corner should be visible.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    areaCornerVisible,\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: 'area',\n    createLayers: true,\n    border: {\n      width: 1,\n      color: '#4b89ff',\n      cornerVisible: areaCornerVisible\n    },\n    ...restOptions,\n    selectionType: HIGHLIGHT_AREA_TYPE\n  });\n}", "import { HIGHLIGHT_AREA_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection responsible for highlighting area of the selected multiple cells.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {object} highlightParams.areaCornerVisible Function to determine if area's corner should be visible.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: 'highlight',\n    ...restOptions,\n    selectionType: HIGHLIGHT_AREA_TYPE\n  });\n}", "import { HIGHLIGHT_COLUMN_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection, responsible for highlighting cells in a columns and\r\n * column headers.\r\n * This type of selection can occur multiple times.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {string} highlightParams.columnClassName Highlighted column' class name.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    columnClassName,\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: columnClassName,\n    ...restOptions,\n    selectionType: HIGHLIGHT_COLUMN_TYPE\n  });\n}", "import { HIGHLIGHT_FOCUS_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\nimport { A11Y_SELECTED } from \"../../../helpers/a11y.mjs\";\n/**\r\n * Creates the new instance of Selection responsible for highlighting currently selected cell. This type of selection\r\n * can present on the table only one at the time.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {Function} highlightParams.cellCornerVisible Function to determine if cell's corner should be visible.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    cellCornerVisible,\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: 'current',\n    headerAttributes: [A11Y_SELECTED()],\n    border: {\n      width: 2,\n      color: '#4b89ff',\n      cornerVisible: cellCornerVisible\n    },\n    ...restOptions,\n    selectionType: HIGHLIGHT_FOCUS_TYPE\n  });\n}", "import { HIGHLIGHT_CUSTOM_SELECTION_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection responsible for highlighting currently selected cell.\r\n * This type of selection can present on the table only one at the time.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {object} highlightParams.border Border configuration.\r\n * @param {object} highlightParams.visualCellRange Function to translate visual to renderable coords.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    border,\n    visualCellRange,\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    ...border,\n    ...restOptions,\n    selectionType: HIGHLIGHT_CUSTOM_SELECTION_TYPE\n  }, visualCellRange);\n}", "import { HIGHLIGHT_FILL_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection, responsible for highlighting cells which are covered by fill handle\r\n * functionality. This type of selection can present on the table only one at the time.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: 'fill',\n    border: {\n      width: 1,\n      color: '#ff0000'\n    },\n    ...restOptions,\n    selectionType: HIGHLIGHT_FILL_TYPE\n  });\n}", "import { HIGHLIGHT_HEADER_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection, responsible for highlighting column or row headers when\r\n * any cell is selected.\r\n * This type of selection can occur multiple times.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {string} highlightParams.headerClassName Highlighted headers' class name.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    headerClassName,\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: headerClassName,\n    ...restOptions,\n    selectionType: HIGHLIGHT_HEADER_TYPE\n  });\n}", "import { HIGHLIGHT_ROW_TYPE } from \"../../../3rdparty/walkontable/src/index.mjs\";\nimport VisualSelection from \"../visualSelection.mjs\";\n/**\r\n * Creates the new instance of Selection, responsible for highlighting cells in a rows and\r\n * row headers.\r\n * This type of selection can occur multiple times.\r\n *\r\n * @param {object} highlightParams A configuration object to create a highlight.\r\n * @param {string} highlightParams.rowClassName Highlighted row' class name.\r\n * @returns {Selection}\r\n */\nexport function createHighlight(_ref) {\n  let {\n    rowClassName,\n    ...restOptions\n  } = _ref;\n  return new VisualSelection({\n    className: rowClassName,\n    ...restOptions,\n    selectionType: HIGHLIGHT_ROW_TYPE\n  });\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { createHighlight as createActiveHighlight } from \"./types/activeHeader.mjs\";\nimport { createHighlight as createAreaLayeredHighlight } from \"./types/areaLayered.mjs\";\nimport { createHighlight as createAreaHighlight } from \"./types/area.mjs\";\nimport { createHighlight as createColumnHighlight } from \"./types/column.mjs\";\nimport { createHighlight as createFocusHighlight } from \"./types/focus.mjs\";\nimport { createHighlight as createCustomHighlight } from \"./types/customSelection.mjs\";\nimport { createHighlight as createFillHighlight } from \"./types/fill.mjs\";\nimport { createHighlight as createHeaderHighlight } from \"./types/header.mjs\";\nimport { createHighlight as createRowHighlight } from \"./types/row.mjs\";\nimport { HIGHLIGHT_ACTIVE_HEADER_TYPE, HIGHLIGHT_AREA_TYPE, HIGHLIGHT_FOCUS_TYPE, HIGHLIGHT_CUSTOM_SELECTION_TYPE, HIGHLIGHT_FILL_TYPE, HIGHLIGHT_HEADER_TYPE, HIGHLIGHT_ROW_TYPE, HIGHLIGHT_COLUMN_TYPE } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { arrayEach } from \"./../../helpers/array.mjs\";\nexport { HIGHLIGHT_ACTIVE_HEADER_TYPE as ACTIVE_HEADER_TYPE, HIGHLIGHT_AREA_TYPE as AREA_TYPE, HIGHLIGHT_FOCUS_TYPE as FOCUS_TYPE, HIGHLIGHT_CUSTOM_SELECTION_TYPE as CUSTOM_SELECTION_TYPE, HIGHLIGHT_FILL_TYPE as FILL_TYPE, HIGHLIGHT_HEADER_TYPE as HEADER_TYPE, HIGHLIGHT_ROW_TYPE as ROW_TYPE, HIGHLIGHT_COLUMN_TYPE as COLUMN_TYPE };\n\n/**\r\n * Highlight class responsible for managing Walkontable Selection classes.\r\n *\r\n * With Highlight object you can manipulate four different highlight types:\r\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\r\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\r\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\r\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\r\n *    that type should be created to manage not-consecutive selection;\r\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\r\n *    can appear with multiple highlights (accessed under different level layers).\r\n *\r\n * @class Highlight\r\n * @util\r\n */\nvar _Highlight_brand = /*#__PURE__*/new WeakSet();\nclass Highlight {\n  constructor(options) {\n    /**\r\n     * Creates (if not exist in the cache) Walkontable Selection instance.\r\n     *\r\n     * @param {Map} cacheMap The map where the instance will be cached.\r\n     * @param {Function} highlightFactory The function factory.\r\n     * @returns {VisualSelection}\r\n     */\n    _classPrivateMethodInitSpec(this, _Highlight_brand);\n    /**\r\n     * Options consumed by Highlight class and Walkontable Selection classes.\r\n     *\r\n     * @type {object}\r\n     */\n    _defineProperty(this, \"options\", void 0);\n    /**\r\n     * The property which describes which layer level of the visual selection will be modified.\r\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\r\n     * the table (as a non-consecutive selection).\r\n     *\r\n     * An order of the layers is the same as the order of added new non-consecutive selections.\r\n     *\r\n     * @type {number}\r\n     * @default 0\r\n     */\n    _defineProperty(this, \"layerLevel\", 0);\n    /**\r\n     * `cell` highlight object which describes attributes for the currently selected cell.\r\n     * It can only occur only once on the table.\r\n     *\r\n     * @type {Selection}\r\n     */\n    _defineProperty(this, \"focus\", void 0);\n    /**\r\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\r\n     * It can only occur only once on the table.\r\n     *\r\n     * @type {Selection}\r\n     */\n    _defineProperty(this, \"fill\", void 0);\n    /**\r\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\r\n     * the multiple selected cells. It can occur multiple times on the table.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"layeredAreas\", new Map());\n    /**\r\n     * Collection of the `highlight` highlights. That objects describes attributes for the borders and selection of\r\n     * the multiple selected cells. It can occur multiple times on the table.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"areas\", new Map());\n    /**\r\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\r\n     * the multiple selected rows in the table header. It can occur multiple times on the table.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"rowHeaders\", new Map());\n    /**\r\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\r\n     * the multiple selected columns in the table header. It can occur multiple times on the table.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"columnHeaders\", new Map());\n    /**\r\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\r\n     * the multiple selected rows in the table header. The table headers which have selected all items in\r\n     * a row will be marked as `active-header`.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"activeRowHeaders\", new Map());\n    /**\r\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\r\n     * the multiple selected columns in the table header. The table headers which have selected all items in\r\n     * a row will be marked as `active-header`.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"activeColumnHeaders\", new Map());\n    /**\r\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\r\n     * the selected corner in the table header. The table headers which have selected all items in\r\n     * a row will be marked as `active-header`.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"activeCornerHeaders\", new Map());\n    /**\r\n     * Collection of the `rows` highlights. That objects describes attributes for the selection of\r\n     * the multiple selected cells in a row. It can occur multiple times on the table.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"rowHighlights\", new Map());\n    /**\r\n     * Collection of the `columns` highlights. That objects describes attributes for the selection of\r\n     * the multiple selected cells in a column. It can occur multiple times on the table.\r\n     *\r\n     * @type {Map.<number, Selection>}\r\n     */\n    _defineProperty(this, \"columnHighlights\", new Map());\n    /**\r\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\r\n     *\r\n     * @type {Selection[]}\r\n     */\n    _defineProperty(this, \"customSelections\", []);\n    this.options = options;\n    this.focus = createFocusHighlight(options);\n    this.fill = createFillHighlight(options);\n  }\n\n  /**\r\n   * Check if highlight cell rendering is disabled for specified highlight type.\r\n   *\r\n   * @param {string} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\r\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\r\n   * @returns {boolean}\r\n   */\n  isEnabledFor(highlightType, coords) {\n    let type = highlightType;\n\n    // Legacy compatibility.\n    if (highlightType === HIGHLIGHT_FOCUS_TYPE) {\n      type = 'current'; // One from settings for `disableVisualSelection` up to Handsontable 0.36/Handsontable Pro 1.16.0.\n    }\n    let disableHighlight = this.options.disabledCellSelection(coords.row, coords.col);\n    if (typeof disableHighlight === 'string') {\n      disableHighlight = [disableHighlight];\n    }\n    return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n  }\n\n  /**\r\n   * Set a new layer level to make access to the desire `area` and `header` highlights.\r\n   *\r\n   * @param {number} [level=0] Layer level to use.\r\n   * @returns {Highlight}\r\n   */\n  useLayerLevel() {\n    let level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    this.layerLevel = level;\n    return this;\n  }\n\n  /**\r\n   * Get Walkontable Selection instance created for controlling highlight of the currently\r\n   * focused cell (or header).\r\n   *\r\n   * @returns {Selection}\r\n   */\n  getFocus() {\n    return this.focus;\n  }\n\n  /**\r\n   * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  getFill() {\n    return this.fill;\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * `area` highlights.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createLayeredArea() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.layeredAreas, createAreaLayeredHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getLayeredAreas() {\n    return [...this.layeredAreas.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * `highlight` highlights.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createArea() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.areas, createAreaHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getAreas() {\n    return [...this.areas.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * header highlight for rows.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createRowHeader() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.rowHeaders, createHeaderHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getRowHeaders() {\n    return [...this.rowHeaders.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * header highlight for columns.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createColumnHeader() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.columnHeaders, createHeaderHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getColumnHeaders() {\n    return [...this.columnHeaders.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * highlight for active row headers.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createActiveRowHeader() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.activeRowHeaders, createActiveHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getActiveRowHeaders() {\n    return [...this.activeRowHeaders.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * highlight for active column headers.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createActiveColumnHeader() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.activeColumnHeaders, createActiveHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getActiveColumnHeaders() {\n    return [...this.activeColumnHeaders.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * highlight for the headers corner.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createActiveCornerHeader() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.activeCornerHeaders, createActiveHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers corner.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getActiveCornerHeaders() {\n    return [...this.activeCornerHeaders.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * highlight cells in a row.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createRowHighlight() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.rowHighlights, createRowHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the rows highlighting.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getRowHighlights() {\n    return [...this.rowHighlights.values()];\n  }\n\n  /**\r\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\r\n   * highlight cells in a column.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  createColumnHighlight() {\n    return _assertClassBrand(_Highlight_brand, this, _createHighlight).call(this, this.columnHighlights, createColumnHighlight);\n  }\n\n  /**\r\n   * Get all Walkontable Selection instances which describes the state of the columns highlighting.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  getColumnHighlights() {\n    return [...this.columnHighlights.values()];\n  }\n\n  /**\r\n   * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\r\n   *\r\n   * @returns {Selection}\r\n   */\n  getCustomSelections() {\n    return [...this.customSelections.values()];\n  }\n\n  /**\r\n   * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\r\n   *\r\n   * @param {object} selectionInstance The selection instance.\r\n   */\n  addCustomSelection(selectionInstance) {\n    this.customSelections.push(createCustomHighlight({\n      ...this.options,\n      ...selectionInstance\n    }));\n  }\n\n  /**\r\n   * Perform cleaning visual highlights for the whole table.\r\n   */\n  clear() {\n    this.focus.clear();\n    this.fill.clear();\n    arrayEach(this.areas.values(), highlight => void highlight.clear());\n    arrayEach(this.layeredAreas.values(), highlight => void highlight.clear());\n    arrayEach(this.rowHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.columnHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeRowHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeColumnHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeCornerHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.rowHighlights.values(), highlight => void highlight.clear());\n    arrayEach(this.columnHighlights.values(), highlight => void highlight.clear());\n  }\n  /**\r\n   * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\r\n   *\r\n   * @returns {Selection[]}\r\n   */\n  [Symbol.iterator]() {\n    return [this.focus, this.fill, ...this.areas.values(), ...this.layeredAreas.values(), ...this.rowHeaders.values(), ...this.columnHeaders.values(), ...this.activeRowHeaders.values(), ...this.activeColumnHeaders.values(), ...this.activeCornerHeaders.values(), ...this.rowHighlights.values(), ...this.columnHighlights.values(), ...this.customSelections][Symbol.iterator]();\n  }\n}\nfunction _createHighlight(cacheMap, highlightFactory) {\n  const layerLevel = this.layerLevel;\n  if (cacheMap.has(layerLevel)) {\n    return cacheMap.get(layerLevel);\n  }\n  const highlight = highlightFactory({\n    layerLevel,\n    ...this.options\n  });\n  cacheMap.set(layerLevel, highlight);\n  return highlight;\n}\nexport default Highlight;", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\r\n * The SelectionRange class is a simple CellRanges collection designed for easy manipulation of the multiple\r\n * consecutive and non-consecutive selections.\r\n *\r\n * @class SelectionRange\r\n * @util\r\n */\nclass SelectionRange {\n  constructor(createCellRange) {\n    /**\r\n     * List of all CellRanges added to the class instance.\r\n     *\r\n     * @type {CellRange[]}\r\n     */\n    _defineProperty(this, \"ranges\", []);\n    /**\r\n     * @type {function(CellCoords): CellRange}\r\n     */\n    _defineProperty(this, \"createCellRange\", void 0);\n    this.createCellRange = createCellRange;\n  }\n\n  /**\r\n   * Check if selected range is empty.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  /**\r\n   * Set coordinates to the class instance. It clears all previously added coordinates and push `coords`\r\n   * to the collection.\r\n   *\r\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\r\n   * @returns {SelectionRange}\r\n   */\n  set(coords) {\n    this.clear();\n    this.ranges.push(this.createCellRange(coords));\n    return this;\n  }\n\n  /**\r\n   * Add coordinates to the class instance. The new coordinates are added to the end of the range collection.\r\n   *\r\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\r\n   * @returns {SelectionRange}\r\n   */\n  add(coords) {\n    this.ranges.push(this.createCellRange(coords));\n    return this;\n  }\n\n  /**\r\n   * Removes from the stack the last added coordinates.\r\n   *\r\n   * @returns {SelectionRange}\r\n   */\n  pop() {\n    this.ranges.pop();\n    return this;\n  }\n\n  /**\r\n   * Get last added coordinates from ranges, it returns a CellRange instance.\r\n   *\r\n   * @returns {CellRange|undefined}\r\n   */\n  current() {\n    return this.peekByIndex(this.size() - 1);\n  }\n\n  /**\r\n   * Get previously added coordinates from ranges, it returns a CellRange instance.\r\n   *\r\n   * @returns {CellRange|undefined}\r\n   */\n  previous() {\n    return this.peekByIndex(this.size() - 2);\n  }\n\n  /**\r\n   * Returns `true` if coords is within selection coords. This method iterates through all selection layers to check if\r\n   * the coords object is within selection range.\r\n   *\r\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\r\n   * @returns {boolean}\r\n   */\n  includes(coords) {\n    return this.ranges.some(cellRange => cellRange.includes(coords));\n  }\n\n  /**\r\n   * Clear collection.\r\n   *\r\n   * @returns {SelectionRange}\r\n   */\n  clear() {\n    this.ranges.length = 0;\n    return this;\n  }\n\n  /**\r\n   * Get count of added all coordinates added to the selection.\r\n   *\r\n   * @returns {number}\r\n   */\n  size() {\n    return this.ranges.length;\n  }\n\n  /**\r\n   * Peek the coordinates based on the index where that coordinate resides in the collection.\r\n   *\r\n   * @param {number} [index=0] An index where the coordinate will be retrieved from. The index '0' gets the\r\n   * latest range.\r\n   * @returns {CellRange|undefined}\r\n   */\n  peekByIndex() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let cellRange;\n    if (index >= 0 && index < this.size()) {\n      cellRange = this.ranges[index];\n    }\n    return cellRange;\n  }\n  [Symbol.iterator]() {\n    return this.ranges[Symbol.iterator]();\n  }\n}\nexport default SelectionRange;", "import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { mixin, createObjectPropListener } from \"../helpers/object.mjs\";\nimport localHooks from \"./../mixins/localHooks.mjs\";\n/**\r\n * The Transformation class implements algorithms for transforming coordinates based on current settings\r\n * passed to the Handsontable. The class performs the calculations based on the renderable indexes.\r\n *\r\n * Transformation is always applied relative to the current selection.\r\n *\r\n * The class operates on a table size defined by the renderable indexes. If the `navigableHeaders`\r\n * option is enabled, the table size is increased by the number of row and/or column headers.\r\n * Because the headers are treated as cells as part of the table size (indexes always go from 0 to N),\r\n * the algorithm can be written as simply as possible (without new if's that distinguish the headers\r\n * logic).\r\n *\r\n * @class Transformation\r\n * @util\r\n */\nvar _range = /*#__PURE__*/new WeakMap();\nvar _options = /*#__PURE__*/new WeakMap();\nvar _offset = /*#__PURE__*/new WeakMap();\nvar _Transformation_brand = /*#__PURE__*/new WeakSet();\nclass Transformation {\n  constructor(range, options) {\n    /**\r\n     * Clamps the coords to make sure they points to the cell (or header) in the table range.\r\n     *\r\n     * @param {CellCoords} zeroBasedCoords The coords object to clamp.\r\n     * @returns {{rowDir: 1|0|-1, colDir: 1|0|-1}}\r\n     */\n    _classPrivateMethodInitSpec(this, _Transformation_brand);\n    /**\r\n     * Instance of the SelectionRange, holder for visual coordinates applied to the table.\r\n     *\r\n     * @type {SelectionRange}\r\n     */\n    _classPrivateFieldInitSpec(this, _range, void 0);\n    /**\r\n     * Additional options which define the state of the settings which can infer transformation and\r\n     * give the possibility to translate indexes.\r\n     *\r\n     * @type {object}\r\n     */\n    _classPrivateFieldInitSpec(this, _options, void 0);\n    /**\r\n     * Increases the table size by applying the offsets. The option is used by the `navigableHeaders`\r\n     * option.\r\n     *\r\n     * @type {{ x: number, y: number }}\r\n     */\n    _classPrivateFieldInitSpec(this, _offset, {\n      x: 0,\n      y: 0\n    });\n    _classPrivateFieldSet(_range, this, range);\n    _classPrivateFieldSet(_options, this, options);\n  }\n\n  /**\r\n   * Selects cell relative to the current cell (if possible).\r\n   *\r\n   * @param {number} rowDelta Rows number to move, value can be passed as negative number.\r\n   * @param {number} colDelta Columns number to move, value can be passed as negative number.\r\n   * @param {boolean} [createMissingRecords=false] If `true` the new rows/columns will be created if necessary. Otherwise, row/column will\r\n   *                        be created according to `minSpareRows/minSpareCols` settings of Handsontable.\r\n   * @returns {CellCoords} Visual coordinates after transformation.\r\n   */\n  transformStart(rowDelta, colDelta) {\n    let createMissingRecords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const delta = _classPrivateFieldGet(_options, this).createCellCoords(rowDelta, colDelta);\n    let visualCoords = _classPrivateFieldGet(_range, this).current().highlight;\n    const highlightRenderableCoords = _classPrivateFieldGet(_options, this).visualToRenderableCoords(visualCoords);\n    let rowTransformDir = 0;\n    let colTransformDir = 0;\n    this.runLocalHooks('beforeTransformStart', delta);\n    if (highlightRenderableCoords.row !== null && highlightRenderableCoords.col !== null) {\n      const {\n        width,\n        height\n      } = _assertClassBrand(_Transformation_brand, this, _getTableSize).call(this);\n      const {\n        row,\n        col\n      } = _assertClassBrand(_Transformation_brand, this, _visualToZeroBasedCoords).call(this, visualCoords);\n      const fixedRowsBottom = _classPrivateFieldGet(_options, this).fixedRowsBottom();\n      const minSpareRows = _classPrivateFieldGet(_options, this).minSpareRows();\n      const minSpareCols = _classPrivateFieldGet(_options, this).minSpareCols();\n      const autoWrapRow = _classPrivateFieldGet(_options, this).autoWrapRow();\n      const autoWrapCol = _classPrivateFieldGet(_options, this).autoWrapCol();\n      const zeroBasedCoords = _classPrivateFieldGet(_options, this).createCellCoords(row + delta.row, col + delta.col);\n      if (zeroBasedCoords.row >= height) {\n        const isActionInterrupted = createObjectPropListener(createMissingRecords && minSpareRows > 0 && fixedRowsBottom === 0);\n        const nextColumn = zeroBasedCoords.col + 1;\n        const newCoords = _classPrivateFieldGet(_options, this).createCellCoords(zeroBasedCoords.row - height, nextColumn >= width ? nextColumn - width : nextColumn);\n        this.runLocalHooks('beforeColumnWrap', isActionInterrupted, _assertClassBrand(_Transformation_brand, this, _zeroBasedToVisualCoords).call(this, newCoords), nextColumn >= width);\n        if (isActionInterrupted.value) {\n          this.runLocalHooks('insertRowRequire', _classPrivateFieldGet(_options, this).countRenderableRows());\n        } else if (autoWrapCol) {\n          zeroBasedCoords.assign(newCoords);\n        }\n      } else if (zeroBasedCoords.row < 0) {\n        const isActionInterrupted = createObjectPropListener(autoWrapCol);\n        const previousColumn = zeroBasedCoords.col - 1;\n        const newCoords = _classPrivateFieldGet(_options, this).createCellCoords(height + zeroBasedCoords.row, previousColumn < 0 ? width + previousColumn : previousColumn);\n        this.runLocalHooks('beforeColumnWrap', isActionInterrupted, _assertClassBrand(_Transformation_brand, this, _zeroBasedToVisualCoords).call(this, newCoords), previousColumn < 0);\n        if (autoWrapCol) {\n          zeroBasedCoords.assign(newCoords);\n        }\n      }\n      if (zeroBasedCoords.col >= width) {\n        const isActionInterrupted = createObjectPropListener(createMissingRecords && minSpareCols > 0);\n        const nextRow = zeroBasedCoords.row + 1;\n        const newCoords = _classPrivateFieldGet(_options, this).createCellCoords(nextRow >= height ? nextRow - height : nextRow, zeroBasedCoords.col - width);\n        this.runLocalHooks('beforeRowWrap', isActionInterrupted, _assertClassBrand(_Transformation_brand, this, _zeroBasedToVisualCoords).call(this, newCoords), nextRow >= height);\n        if (isActionInterrupted.value) {\n          this.runLocalHooks('insertColRequire', _classPrivateFieldGet(_options, this).countRenderableColumns());\n        } else if (autoWrapRow) {\n          zeroBasedCoords.assign(newCoords);\n        }\n      } else if (zeroBasedCoords.col < 0) {\n        const isActionInterrupted = createObjectPropListener(autoWrapRow);\n        const previousRow = zeroBasedCoords.row - 1;\n        const newCoords = _classPrivateFieldGet(_options, this).createCellCoords(previousRow < 0 ? height + previousRow : previousRow, width + zeroBasedCoords.col);\n        this.runLocalHooks('beforeRowWrap', isActionInterrupted, _assertClassBrand(_Transformation_brand, this, _zeroBasedToVisualCoords).call(this, newCoords), previousRow < 0);\n        if (autoWrapRow) {\n          zeroBasedCoords.assign(newCoords);\n        }\n      }\n      const {\n        rowDir,\n        colDir\n      } = _assertClassBrand(_Transformation_brand, this, _clampCoords).call(this, zeroBasedCoords);\n      rowTransformDir = rowDir;\n      colTransformDir = colDir;\n      visualCoords = _assertClassBrand(_Transformation_brand, this, _zeroBasedToVisualCoords).call(this, zeroBasedCoords);\n    }\n    this.runLocalHooks('afterTransformStart', visualCoords, rowTransformDir, colTransformDir);\n    return visualCoords;\n  }\n\n  /**\r\n   * Sets selection end cell relative to the current selection end cell (if possible).\r\n   *\r\n   * @param {number} rowDelta Rows number to move, value can be passed as negative number.\r\n   * @param {number} colDelta Columns number to move, value can be passed as negative number.\r\n   * @returns {CellCoords} Visual coordinates after transformation.\r\n   */\n  transformEnd(rowDelta, colDelta) {\n    const delta = _classPrivateFieldGet(_options, this).createCellCoords(rowDelta, colDelta);\n    const cellRange = _classPrivateFieldGet(_range, this).current();\n    const highlightRenderableCoords = _classPrivateFieldGet(_options, this).visualToRenderableCoords(cellRange.highlight);\n    const toRow = _assertClassBrand(_Transformation_brand, this, _findFirstNonHiddenZeroBasedRow).call(this, cellRange.to.row, cellRange.from.row);\n    const toColumn = _assertClassBrand(_Transformation_brand, this, _findFirstNonHiddenZeroBasedColumn).call(this, cellRange.to.col, cellRange.from.col);\n    const visualCoords = cellRange.to.clone();\n    let rowTransformDir = 0;\n    let colTransformDir = 0;\n    this.runLocalHooks('beforeTransformEnd', delta);\n    if (highlightRenderableCoords.row !== null && highlightRenderableCoords.col !== null && toRow !== null && toColumn !== null) {\n      const {\n        row: highlightRow,\n        col: highlightColumn\n      } = _assertClassBrand(_Transformation_brand, this, _visualToZeroBasedCoords).call(this, cellRange.highlight);\n      const coords = _classPrivateFieldGet(_options, this).createCellCoords(toRow + delta.row, toColumn + delta.col);\n      const topStartCorner = cellRange.getTopStartCorner();\n      const topEndCorner = cellRange.getTopEndCorner();\n      const bottomEndCorner = cellRange.getBottomEndCorner();\n      if (delta.col < 0 && toColumn >= highlightColumn && coords.col < highlightColumn) {\n        const columnRestDelta = coords.col - highlightColumn;\n        coords.col = _assertClassBrand(_Transformation_brand, this, _findFirstNonHiddenZeroBasedColumn).call(this, topStartCorner.col, topEndCorner.col) + columnRestDelta;\n      } else if (delta.col > 0 && toColumn <= highlightColumn && coords.col > highlightColumn) {\n        const endColumnIndex = _assertClassBrand(_Transformation_brand, this, _findFirstNonHiddenZeroBasedColumn).call(this, topEndCorner.col, topStartCorner.col);\n        const columnRestDelta = Math.max(coords.col - endColumnIndex, 1);\n        coords.col = endColumnIndex + columnRestDelta;\n      }\n      if (delta.row < 0 && toRow >= highlightRow && coords.row < highlightRow) {\n        const rowRestDelta = coords.row - highlightRow;\n        coords.row = _assertClassBrand(_Transformation_brand, this, _findFirstNonHiddenZeroBasedRow).call(this, topStartCorner.row, bottomEndCorner.row) + rowRestDelta;\n      } else if (delta.row > 0 && toRow <= highlightRow && coords.row > highlightRow) {\n        const bottomRowIndex = _assertClassBrand(_Transformation_brand, this, _findFirstNonHiddenZeroBasedRow).call(this, bottomEndCorner.row, topStartCorner.row);\n        const rowRestDelta = Math.max(coords.row - bottomRowIndex, 1);\n        coords.row = bottomRowIndex + rowRestDelta;\n      }\n      const {\n        rowDir,\n        colDir\n      } = _assertClassBrand(_Transformation_brand, this, _clampCoords).call(this, coords);\n      rowTransformDir = rowDir;\n      colTransformDir = colDir;\n      const newVisualCoords = _assertClassBrand(_Transformation_brand, this, _zeroBasedToVisualCoords).call(this, coords);\n      if (delta.row === 0 && delta.col !== 0) {\n        visualCoords.col = newVisualCoords.col;\n      } else if (delta.row !== 0 && delta.col === 0) {\n        visualCoords.row = newVisualCoords.row;\n      } else {\n        visualCoords.row = newVisualCoords.row;\n        visualCoords.col = newVisualCoords.col;\n      }\n    }\n    this.runLocalHooks('afterTransformEnd', visualCoords, rowTransformDir, colTransformDir);\n    return visualCoords;\n  }\n\n  /**\r\n   * Sets the additional offset in table size that may occur when the `navigableHeaders` option\r\n   * is enabled.\r\n   *\r\n   * @param {{x: number, y: number}} offset Offset as x and y properties.\r\n   */\n  setOffsetSize(_ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    _classPrivateFieldSet(_offset, this, {\n      x,\n      y\n    });\n  }\n\n  /**\r\n   * Resets the offset size to the default values.\r\n   */\n  resetOffsetSize() {\n    _classPrivateFieldSet(_offset, this, {\n      x: 0,\n      y: 0\n    });\n  }\n}\nfunction _clampCoords(zeroBasedCoords) {\n  const {\n    width,\n    height\n  } = _assertClassBrand(_Transformation_brand, this, _getTableSize).call(this);\n  let rowDir = 0;\n  let colDir = 0;\n  if (zeroBasedCoords.row < 0) {\n    rowDir = -1;\n    zeroBasedCoords.row = 0;\n  } else if (zeroBasedCoords.row > 0 && zeroBasedCoords.row >= height) {\n    rowDir = 1;\n    zeroBasedCoords.row = height - 1;\n  }\n  if (zeroBasedCoords.col < 0) {\n    colDir = -1;\n    zeroBasedCoords.col = 0;\n  } else if (zeroBasedCoords.col > 0 && zeroBasedCoords.col >= width) {\n    colDir = 1;\n    zeroBasedCoords.col = width - 1;\n  }\n  return {\n    rowDir,\n    colDir\n  };\n}\n/**\r\n * Gets the table size in number of rows with headers as \"height\" and number of columns with\r\n * headers as \"width\".\r\n *\r\n * @returns {{width: number, height: number}}\r\n */\nfunction _getTableSize() {\n  return {\n    width: _classPrivateFieldGet(_offset, this).x + _classPrivateFieldGet(_options, this).countRenderableColumns(),\n    height: _classPrivateFieldGet(_offset, this).y + _classPrivateFieldGet(_options, this).countRenderableRows()\n  };\n}\n/**\r\n * Finds the first non-hidden zero-based row in the table range.\r\n *\r\n * @param {number} visualRowFrom The visual row from which the search should start.\r\n * @param {number} visualRowTo The visual row to which the search should end.\r\n * @returns {number | null}\r\n */\nfunction _findFirstNonHiddenZeroBasedRow(visualRowFrom, visualRowTo) {\n  const row = _classPrivateFieldGet(_options, this).findFirstNonHiddenRenderableRow(visualRowFrom, visualRowTo);\n  if (row === null) {\n    return null;\n  }\n  return _classPrivateFieldGet(_offset, this).y + row;\n}\n/**\r\n * Finds the first non-hidden zero-based column in the table range.\r\n *\r\n * @param {number} visualColumnFrom The visual column from which the search should start.\r\n * @param {number} visualColumnTo The visual column to which the search should end.\r\n * @returns {number | null}\r\n */\nfunction _findFirstNonHiddenZeroBasedColumn(visualColumnFrom, visualColumnTo) {\n  const column = _classPrivateFieldGet(_options, this).findFirstNonHiddenRenderableColumn(visualColumnFrom, visualColumnTo);\n  if (column === null) {\n    return null;\n  }\n  return _classPrivateFieldGet(_offset, this).x + column;\n}\n/**\r\n * Translates the visual coordinates to zero-based ones.\r\n *\r\n * @param {CellCoords} visualCoords The visual coords to process.\r\n * @returns {CellCoords}\r\n */\nfunction _visualToZeroBasedCoords(visualCoords) {\n  const {\n    row,\n    col\n  } = _classPrivateFieldGet(_options, this).visualToRenderableCoords(visualCoords);\n  if (row === null || col === null) {\n    throw new Error('Renderable coords are not visible.');\n  }\n  return _classPrivateFieldGet(_options, this).createCellCoords(_classPrivateFieldGet(_offset, this).y + row, _classPrivateFieldGet(_offset, this).x + col);\n}\n/**\r\n * Translates the zero-based coordinates to visual ones.\r\n *\r\n * @param {CellCoords} zeroBasedCoords The coordinates to process.\r\n * @returns {CellCoords}\r\n */\nfunction _zeroBasedToVisualCoords(zeroBasedCoords) {\n  const coords = zeroBasedCoords.clone();\n  coords.col = zeroBasedCoords.col - _classPrivateFieldGet(_offset, this).x;\n  coords.row = zeroBasedCoords.row - _classPrivateFieldGet(_offset, this).y;\n  return _classPrivateFieldGet(_options, this).renderableToVisualCoords(coords);\n}\nmixin(Transformation, localHooks);\nexport default Transformation;", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { CellRange } from \"./../3rdparty/walkontable/src/index.mjs\";\nimport { arrayEach, arrayReduce } from \"./../helpers/array.mjs\";\nimport { isUndefined } from \"./../helpers/mixed.mjs\";\nexport const SELECTION_TYPE_UNRECOGNIZED = 0;\nexport const SELECTION_TYPE_EMPTY = 1;\nexport const SELECTION_TYPE_ARRAY = 2;\nexport const SELECTION_TYPE_OBJECT = 3;\nexport const SELECTION_TYPES = [SELECTION_TYPE_OBJECT, SELECTION_TYPE_ARRAY];\nconst ARRAY_TYPE_PATTERN = [['number'], ['number', 'string'], ['number', 'undefined'], ['number', 'string', 'undefined']];\nconst rootCall = Symbol('root');\nconst childCall = Symbol('child');\n\n/**\r\n * Detect selection schema structure.\r\n *\r\n * @param {*} selectionRanges The selected range or and array of selected ranges. This type of data is produced by\r\n * `hot.getSelected()`, `hot.getSelectedLast()`, `hot.getSelectedRange()`\r\n * and `hot.getSelectedRangeLast()` methods.\r\n * @param {symbol} _callSymbol The symbol object which indicates source of the helper invocation.\r\n * @returns {number} Returns a number that specifies the type of detected selection schema. If selection schema type\r\n * is unrecognized than it returns `0`.\r\n */\nexport function detectSelectionType(selectionRanges) {\n  let _callSymbol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : rootCall;\n  if (_callSymbol !== rootCall && _callSymbol !== childCall) {\n    throw new Error('The second argument is used internally only and cannot be overwritten.');\n  }\n  const isArray = Array.isArray(selectionRanges);\n  const isRootCall = _callSymbol === rootCall;\n  let result = SELECTION_TYPE_UNRECOGNIZED;\n  if (isArray) {\n    const firstItem = selectionRanges[0];\n    if (selectionRanges.length === 0) {\n      result = SELECTION_TYPE_EMPTY;\n    } else if (isRootCall && firstItem instanceof CellRange) {\n      result = SELECTION_TYPE_OBJECT;\n    } else if (isRootCall && Array.isArray(firstItem)) {\n      result = detectSelectionType(firstItem, childCall);\n    } else if (selectionRanges.length >= 2 && selectionRanges.length <= 4) {\n      const isArrayType = !selectionRanges.some((value, index) => !ARRAY_TYPE_PATTERN[index].includes(typeof value));\n      if (isArrayType) {\n        result = SELECTION_TYPE_ARRAY;\n      }\n    }\n  }\n  return result;\n}\n\n/**\r\n * Factory function designed for normalization data schema from different data structures of the selection ranges.\r\n *\r\n * @param {number} type Selection type which will be processed.\r\n * @param {object} options The normalization options.\r\n * @param {function(number, number): CellCoords} options.createCellCoords The factory function that returns an instance of the `CellCoords` class.\r\n * @param {function(CellCoords, CellCoords, CellCoords): CellRange} options.createCellRange The factory function that returns an instance of the `CellRange` class.\r\n * @param {boolean} [options.keepDirection=false] If `true`, the coordinates which contain the direction of the\r\n *                                                selected cells won't be changed. Otherwise, the selection will be\r\n *                                                normalized to values starting from top-left to bottom-right.\r\n * @param {Function} [options.propToCol] Pass the converting function (usually `datamap.propToCol`) if the column\r\n *                                       defined as props should be normalized to the numeric values.\r\n * @returns {number[]} Returns normalized data about selected range as an array (`[rowStart, columnStart, rowEnd, columnEnd]`).\r\n */\nexport function normalizeSelectionFactory(type) {\n  let {\n    createCellCoords,\n    createCellRange,\n    keepDirection = false,\n    propToCol\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!SELECTION_TYPES.includes(type)) {\n    throw new Error('Unsupported selection ranges schema type was provided.');\n  }\n  return function (selection) {\n    const isObjectType = type === SELECTION_TYPE_OBJECT;\n    let rowStart = isObjectType ? selection.from.row : selection[0];\n    let columnStart = isObjectType ? selection.from.col : selection[1];\n    let rowEnd = isObjectType ? selection.to.row : selection[2];\n    let columnEnd = isObjectType ? selection.to.col : selection[3];\n    if (typeof propToCol === 'function') {\n      if (typeof columnStart === 'string') {\n        columnStart = propToCol(columnStart);\n      }\n      if (typeof columnEnd === 'string') {\n        columnEnd = propToCol(columnEnd);\n      }\n    }\n    if (isUndefined(rowEnd)) {\n      rowEnd = rowStart;\n    }\n    if (isUndefined(columnEnd)) {\n      columnEnd = columnStart;\n    }\n    if (!keepDirection) {\n      const origRowStart = rowStart;\n      const origColumnStart = columnStart;\n      const origRowEnd = rowEnd;\n      const origColumnEnd = columnEnd;\n      rowStart = Math.min(origRowStart, origRowEnd);\n      columnStart = Math.min(origColumnStart, origColumnEnd);\n      rowEnd = Math.max(origRowStart, origRowEnd);\n      columnEnd = Math.max(origColumnStart, origColumnEnd);\n    }\n    const from = createCellCoords(rowStart, columnStart);\n    const to = createCellCoords(rowEnd, columnEnd);\n    return createCellRange(from, from, to);\n  };\n}\n\n/**\r\n * Function transform selection ranges (produced by `hot.getSelected()` and `hot.getSelectedRange()`) to normalized\r\n * data structure. It merges repeated ranges into consecutive coordinates. The returned structure\r\n * contains an array of arrays. The single item contains at index 0 visual column index from the selection was\r\n * started and at index 1 distance as a count of selected columns.\r\n *\r\n * @param {Core} hotInstance The Handsontable instance.\r\n * @returns {Array[]} Returns an array of arrays with ranges defines in that schema:\r\n *                   `[[visualColumnStart, distance], [visualColumnStart, distance], ...]`.\r\n *                   The column distances are always created starting from the left (zero index) to the\r\n *                   right (the latest column index).\r\n */\nexport function transformSelectionToColumnDistance(hotInstance) {\n  const selectionType = detectSelectionType(hotInstance.getSelected());\n  if (selectionType === SELECTION_TYPE_UNRECOGNIZED || selectionType === SELECTION_TYPE_EMPTY) {\n    return [];\n  }\n  const selectionSchemaNormalizer = normalizeSelectionFactory(selectionType, {\n    createCellCoords: hotInstance._createCellCoords.bind(hotInstance),\n    createCellRange: hotInstance._createCellRange.bind(hotInstance)\n  });\n  const unorderedIndexes = new Set();\n\n  // Iterate through all ranges and collect all column indexes which are not saved yet.\n  arrayEach(hotInstance.getSelected(), selection => {\n    const {\n      from,\n      to\n    } = selectionSchemaNormalizer(selection);\n    const columnNonHeaderStart = Math.max(from.col, 0);\n    const amount = to.col - columnNonHeaderStart + 1;\n    arrayEach(Array.from(new Array(amount), (_, i) => columnNonHeaderStart + i), index => {\n      if (!unorderedIndexes.has(index)) {\n        unorderedIndexes.add(index);\n      }\n    });\n  });\n\n  // Sort indexes in ascending order to easily detecting non-consecutive columns.\n  const orderedIndexes = Array.from(unorderedIndexes).sort((a, b) => a - b);\n  const normalizedColumnRanges = arrayReduce(orderedIndexes, (acc, visualColumnIndex, index, array) => {\n    if (index !== 0 && visualColumnIndex === array[index - 1] + 1) {\n      acc[acc.length - 1][1] += 1;\n    } else {\n      acc.push([visualColumnIndex, 1]);\n    }\n    return acc;\n  }, []);\n  return normalizedColumnRanges;\n}\n\n/**\r\n * Function transform selection ranges (produced by `hot.getSelected()` and `hot.getSelectedRange()`) to normalized\r\n * data structure. It merges repeated ranges into consecutive coordinates. The returned structure\r\n * contains an array of arrays. The single item contains at index 0 visual column index from the selection was\r\n * started and at index 1 distance as a count of selected columns.\r\n *\r\n * @param {Core} hotInstance The Handsontable instance.\r\n * @returns {Array[]} Returns an array of arrays with ranges defines in that schema:\r\n *                   `[[visualColumnStart, distance], [visualColumnStart, distance], ...]`.\r\n *                   The column distances are always created starting from the left (zero index) to the\r\n *                   right (the latest column index).\r\n */\nexport function transformSelectionToRowDistance(hotInstance) {\n  const selectionType = detectSelectionType(hotInstance.getSelected());\n  if (selectionType === SELECTION_TYPE_UNRECOGNIZED || selectionType === SELECTION_TYPE_EMPTY) {\n    return [];\n  }\n  const selectionSchemaNormalizer = normalizeSelectionFactory(selectionType, {\n    createCellCoords: hotInstance._createCellCoords.bind(hotInstance),\n    createCellRange: hotInstance._createCellRange.bind(hotInstance)\n  });\n  const unorderedIndexes = new Set();\n\n  // Iterate through all ranges and collect all column indexes which are not saved yet.\n  arrayEach(hotInstance.getSelected(), selection => {\n    const {\n      from,\n      to\n    } = selectionSchemaNormalizer(selection);\n    const rowNonHeaderStart = Math.max(from.row, 0);\n    const amount = to.row - rowNonHeaderStart + 1;\n    arrayEach(Array.from(new Array(amount), (_, i) => rowNonHeaderStart + i), index => {\n      if (!unorderedIndexes.has(index)) {\n        unorderedIndexes.add(index);\n      }\n    });\n  });\n\n  // Sort indexes in ascending order to easily detecting non-consecutive columns.\n  const orderedIndexes = Array.from(unorderedIndexes).sort((a, b) => a - b);\n  const normalizedRowRanges = arrayReduce(orderedIndexes, (acc, rowIndex, index, array) => {\n    if (index !== 0 && rowIndex === array[index - 1] + 1) {\n      acc[acc.length - 1][1] += 1;\n    } else {\n      acc.push([rowIndex, 1]);\n    }\n    return acc;\n  }, []);\n  return normalizedRowRanges;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport Highlight, { AREA_TYPE, HEADER_TYPE, FOCUS_TYPE } from \"./highlight/highlight.mjs\";\nimport SelectionRange from \"./range.mjs\";\nimport { createObjectPropListener, mixin } from \"./../helpers/object.mjs\";\nimport { isUndefined } from \"./../helpers/mixed.mjs\";\nimport { clamp } from \"./../helpers/number.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\nimport localHooks from \"./../mixins/localHooks.mjs\";\nimport Transformation from \"./transformation.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory, SELECTION_TYPE_EMPTY, SELECTION_TYPE_UNRECOGNIZED } from \"./utils.mjs\";\nimport { toSingleLine } from \"./../helpers/templateLiteralTag.mjs\";\nimport { A11Y_SELECTED } from \"../helpers/a11y.mjs\";\n/**\r\n * @class Selection\r\n * @util\r\n */\nvar _transformation = /*#__PURE__*/new WeakMap();\nvar _focusTransformation = /*#__PURE__*/new WeakMap();\nvar _isFocusSelectionChanged = /*#__PURE__*/new WeakMap();\nvar _disableHeadersHighlight = /*#__PURE__*/new WeakMap();\nvar _selectionSource = /*#__PURE__*/new WeakMap();\nvar _expectedLayersCount = /*#__PURE__*/new WeakMap();\nclass Selection {\n  constructor(settings, tableProps) {\n    var _this = this;\n    /**\r\n     * Handsontable settings instance.\r\n     *\r\n     * @type {GridSettings}\r\n     */\n    _defineProperty(this, \"settings\", void 0);\n    /**\r\n     * An additional object with dynamically defined properties which describes table state.\r\n     *\r\n     * @type {object}\r\n     */\n    _defineProperty(this, \"tableProps\", void 0);\n    /**\r\n     * The flag which determines if the selection is in progress.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"inProgress\", false);\n    /**\r\n     * Selection data layer (handle visual coordinates).\r\n     *\r\n     * @type {SelectionRange}\r\n     */\n    _defineProperty(this, \"selectedRange\", new SelectionRange((highlight, from, to) => {\n      return this.tableProps.createCellRange(highlight, from, to);\n    }));\n    /**\r\n     * Visualization layer.\r\n     *\r\n     * @type {Highlight}\r\n     */\n    _defineProperty(this, \"highlight\", void 0);\n    /**\r\n     * The module for modifying coordinates of the start and end selection.\r\n     *\r\n     * @type {Transformation}\r\n     */\n    _classPrivateFieldInitSpec(this, _transformation, void 0);\n    /**\r\n     * The module for modifying coordinates of the focus selection.\r\n     *\r\n     * @type {Transformation}\r\n     */\n    _classPrivateFieldInitSpec(this, _focusTransformation, void 0);\n    /**\r\n     * The collection of the selection layer levels where the whole row was selected using the row header or\r\n     * the corner header.\r\n     *\r\n     * @type {Set<number>}\r\n     */\n    _defineProperty(this, \"selectedByRowHeader\", new Set());\n    /**\r\n     * The collection of the selection layer levels where the whole column was selected using the column header or\r\n     * the corner header.\r\n     *\r\n     * @type {Set<number>}\r\n     */\n    _defineProperty(this, \"selectedByColumnHeader\", new Set());\n    /**\r\n     * The flag which determines if the focus selection was changed.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _isFocusSelectionChanged, false);\n    /**\r\n     * When sets disable highlighting the headers even when the logical coordinates points on them.\r\n     *\r\n     * @type {boolean}\r\n     */\n    _classPrivateFieldInitSpec(this, _disableHeadersHighlight, false);\n    /**\r\n     * The source of the selection. It can be one of the following values: `mouse`, `unknown` or any other string.\r\n     *\r\n     * @type {'mouse' | 'unknown' | string}\r\n     */\n    _classPrivateFieldInitSpec(this, _selectionSource, 'unknown');\n    /**\r\n     * The number of expected layers. It is used mostly to track when the last selection layer of non-contiguous\r\n     * selection is applied, thus the viewport scroll is triggered.\r\n     *\r\n     * @param {number}\r\n     */\n    _classPrivateFieldInitSpec(this, _expectedLayersCount, -1);\n    this.settings = settings;\n    this.tableProps = tableProps;\n    this.highlight = new Highlight({\n      headerClassName: settings.currentHeaderClassName,\n      activeHeaderClassName: settings.activeHeaderClassName,\n      rowClassName: settings.currentRowClassName,\n      columnClassName: settings.currentColClassName,\n      cellAttributes: [A11Y_SELECTED()],\n      rowIndexMapper: this.tableProps.rowIndexMapper,\n      columnIndexMapper: this.tableProps.columnIndexMapper,\n      disabledCellSelection: (row, column) => this.tableProps.isDisabledCellSelection(row, column),\n      cellCornerVisible: function () {\n        return _this.isCellCornerVisible(...arguments);\n      },\n      areaCornerVisible: function () {\n        return _this.isAreaCornerVisible(...arguments);\n      },\n      visualToRenderableCoords: coords => this.tableProps.visualToRenderableCoords(coords),\n      renderableToVisualCoords: coords => this.tableProps.renderableToVisualCoords(coords),\n      createCellCoords: (row, column) => this.tableProps.createCellCoords(row, column),\n      createCellRange: (highlight, from, to) => this.tableProps.createCellRange(highlight, from, to)\n    });\n    _classPrivateFieldSet(_transformation, this, new Transformation(this.selectedRange, {\n      rowIndexMapper: this.tableProps.rowIndexMapper,\n      columnIndexMapper: this.tableProps.columnIndexMapper,\n      countRenderableRows: () => this.tableProps.countRenderableRows(),\n      countRenderableColumns: () => this.tableProps.countRenderableColumns(),\n      visualToRenderableCoords: coords => this.tableProps.visualToRenderableCoords(coords),\n      renderableToVisualCoords: coords => this.tableProps.renderableToVisualCoords(coords),\n      findFirstNonHiddenRenderableRow: function () {\n        return _this.tableProps.findFirstNonHiddenRenderableRow(...arguments);\n      },\n      findFirstNonHiddenRenderableColumn: function () {\n        return _this.tableProps.findFirstNonHiddenRenderableColumn(...arguments);\n      },\n      createCellCoords: (row, column) => this.tableProps.createCellCoords(row, column),\n      fixedRowsBottom: () => settings.fixedRowsBottom,\n      minSpareRows: () => settings.minSpareRows,\n      minSpareCols: () => settings.minSpareCols,\n      autoWrapRow: () => settings.autoWrapRow,\n      autoWrapCol: () => settings.autoWrapCol\n    }));\n    _classPrivateFieldSet(_focusTransformation, this, new Transformation(this.selectedRange, {\n      rowIndexMapper: this.tableProps.rowIndexMapper,\n      columnIndexMapper: this.tableProps.columnIndexMapper,\n      countRenderableRows: () => {\n        const range = this.selectedRange.current();\n        return this.tableProps.countRenderableRowsInRange(0, range.getOuterBottomEndCorner().row);\n      },\n      countRenderableColumns: () => {\n        const range = this.selectedRange.current();\n        return this.tableProps.countRenderableColumnsInRange(0, range.getOuterBottomEndCorner().col);\n      },\n      visualToRenderableCoords: coords => this.tableProps.visualToRenderableCoords(coords),\n      renderableToVisualCoords: coords => this.tableProps.renderableToVisualCoords(coords),\n      findFirstNonHiddenRenderableRow: function () {\n        return _this.tableProps.findFirstNonHiddenRenderableRow(...arguments);\n      },\n      findFirstNonHiddenRenderableColumn: function () {\n        return _this.tableProps.findFirstNonHiddenRenderableColumn(...arguments);\n      },\n      createCellCoords: (row, column) => this.tableProps.createCellCoords(row, column),\n      fixedRowsBottom: () => 0,\n      minSpareRows: () => 0,\n      minSpareCols: () => 0,\n      autoWrapRow: () => true,\n      autoWrapCol: () => true\n    }));\n    _classPrivateFieldGet(_transformation, this).addLocalHook('beforeTransformStart', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _this.runLocalHooks('beforeModifyTransformStart', ...args);\n    });\n    _classPrivateFieldGet(_transformation, this).addLocalHook('afterTransformStart', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _this.runLocalHooks('afterModifyTransformStart', ...args);\n    });\n    _classPrivateFieldGet(_transformation, this).addLocalHook('beforeTransformEnd', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _this.runLocalHooks('beforeModifyTransformEnd', ...args);\n    });\n    _classPrivateFieldGet(_transformation, this).addLocalHook('afterTransformEnd', function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _this.runLocalHooks('afterModifyTransformEnd', ...args);\n    });\n    _classPrivateFieldGet(_transformation, this).addLocalHook('insertRowRequire', function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      return _this.runLocalHooks('insertRowRequire', ...args);\n    });\n    _classPrivateFieldGet(_transformation, this).addLocalHook('insertColRequire', function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      return _this.runLocalHooks('insertColRequire', ...args);\n    });\n    _classPrivateFieldGet(_transformation, this).addLocalHook('beforeRowWrap', function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      return _this.runLocalHooks('beforeRowWrap', ...args);\n    });\n    _classPrivateFieldGet(_transformation, this).addLocalHook('beforeColumnWrap', function () {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      return _this.runLocalHooks('beforeColumnWrap', ...args);\n    });\n    _classPrivateFieldGet(_focusTransformation, this).addLocalHook('beforeTransformStart', function () {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      return _this.runLocalHooks('beforeModifyTransformFocus', ...args);\n    });\n    _classPrivateFieldGet(_focusTransformation, this).addLocalHook('afterTransformStart', function () {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      return _this.runLocalHooks('afterModifyTransformFocus', ...args);\n    });\n  }\n\n  /**\r\n   * Get data layer for current selection.\r\n   *\r\n   * @returns {SelectionRange}\r\n   */\n  getSelectedRange() {\n    return this.selectedRange;\n  }\n\n  /**\r\n   * Marks the source of the selection. It can be one of the following values: `mouse`, or any other string.\r\n   *\r\n   * @param {'mouse' | 'unknown' | string} sourceName The source name.\r\n   */\n  markSource(sourceName) {\n    _classPrivateFieldSet(_selectionSource, this, sourceName);\n  }\n\n  /**\r\n   * Marks end of the selection source. It restores the selection source to default value which is 'unknown'.\r\n   */\n  markEndSource() {\n    _classPrivateFieldSet(_selectionSource, this, 'unknown');\n  }\n\n  /**\r\n   * Returns the source of the selection.\r\n   *\r\n   * @returns {'mouse' | 'unknown' | string}\r\n   */\n  getSelectionSource() {\n    return _classPrivateFieldGet(_selectionSource, this);\n  }\n\n  /**\r\n   * Set the number of expected layers. The method is not obligatory to call. It is used mostly internally\r\n   * to determine when the last selection layer of non-contiguous is applied, thus the viewport scroll is triggered.\r\n   *\r\n   * @param {number} layersCount The number of expected layers.\r\n   */\n  setExpectedLayers(layersCount) {\n    _classPrivateFieldSet(_expectedLayersCount, this, layersCount);\n  }\n\n  /**\r\n   * Indicate that selection process began. It sets internally `.inProgress` property to `true`.\r\n   */\n  begin() {\n    this.inProgress = true;\n  }\n\n  /**\r\n   * Indicate that selection process finished. It sets internally `.inProgress` property to `false`.\r\n   */\n  finish() {\n    this.runLocalHooks('afterSelectionFinished', Array.from(this.selectedRange));\n    this.inProgress = false;\n    _classPrivateFieldSet(_expectedLayersCount, this, -1);\n  }\n\n  /**\r\n   * Check if the process of selecting the cell/cells is in progress.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isInProgress() {\n    return this.inProgress;\n  }\n\n  /**\r\n   * Starts selection range on given coordinate object.\r\n   *\r\n   * @param {CellCoords} coords Visual coords.\r\n   * @param {boolean} [multipleSelection] If `true`, selection will be worked in 'multiple' mode. This option works\r\n   *                                      only when 'selectionMode' is set as 'multiple'. If the argument is not defined\r\n   *                                      the default trigger will be used.\r\n   * @param {boolean} [fragment=false] If `true`, the selection will be treated as a partial selection where the\r\n   *                                   `setRangeEnd` method won't be called on every `setRangeStart` call.\r\n   * @param {CellCoords} [highlightCoords] If set, allows changing the coordinates of the highlight/focus cell.\r\n   */\n  setRangeStart(coords, multipleSelection) {\n    let fragment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let highlightCoords = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : coords;\n    const isMultipleMode = this.settings.selectionMode === 'multiple';\n    const isMultipleSelection = isUndefined(multipleSelection) ? this.tableProps.getShortcutManager().isCtrlPressed() : multipleSelection;\n    // We are creating copy. We would like to modify just the start of the selection by below hook. Then original coords\n    // should be handled by next methods.\n    const coordsClone = coords.clone();\n    _classPrivateFieldSet(_isFocusSelectionChanged, this, false);\n    this.runLocalHooks(`beforeSetRangeStart${fragment ? 'Only' : ''}`, coordsClone);\n    if (!isMultipleMode || isMultipleMode && !isMultipleSelection && isUndefined(multipleSelection)) {\n      this.selectedRange.clear();\n    }\n    this.selectedRange.add(coordsClone).current().setHighlight(highlightCoords.clone());\n    if (this.getLayerLevel() === 0) {\n      this.selectedByRowHeader.clear();\n      this.selectedByColumnHeader.clear();\n    }\n    if (!fragment) {\n      this.setRangeEnd(coords);\n    }\n  }\n\n  /**\r\n   * Starts selection range on given coordinate object.\r\n   *\r\n   * @param {CellCoords} coords Visual coords.\r\n   * @param {boolean} [multipleSelection] If `true`, selection will be worked in 'multiple' mode. This option works\r\n   *                                      only when 'selectionMode' is set as 'multiple'. If the argument is not defined\r\n   *                                      the default trigger will be used.\r\n   * @param {CellCoords} [highlightCoords] If set, allows changing the coordinates of the highlight/focus cell.\r\n   */\n  setRangeStartOnly(coords, multipleSelection) {\n    let highlightCoords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : coords;\n    this.setRangeStart(coords, multipleSelection, true, highlightCoords);\n  }\n\n  /**\r\n   * Ends selection range on given coordinate object.\r\n   *\r\n   * @param {CellCoords} coords Visual coords.\r\n   */\n  setRangeEnd(coords) {\n    if (this.selectedRange.isEmpty()) {\n      return;\n    }\n    const coordsClone = coords.clone();\n    const countRows = this.tableProps.countRows();\n    const countCols = this.tableProps.countCols();\n    const isSingle = this.selectedRange.current().clone().setTo(coords).isSingleHeader();\n\n    // Ignore processing the end range when the header selection starts overlapping the corner and\n    // the selection is not a single header highlight.\n    if ((countRows > 0 || countCols > 0) && (countRows === 0 && coordsClone.col < 0 && !isSingle || countCols === 0 && coordsClone.row < 0 && !isSingle)) {\n      return;\n    }\n    this.runLocalHooks('beforeSetRangeEnd', coordsClone);\n    this.begin();\n    const cellRange = this.selectedRange.current();\n    if (!this.settings.navigableHeaders) {\n      cellRange.highlight.normalize();\n    }\n    if (this.settings.selectionMode === 'single') {\n      cellRange.setFrom(cellRange.highlight);\n      cellRange.setTo(cellRange.highlight);\n    } else {\n      const horizontalDir = cellRange.getHorizontalDirection();\n      const verticalDir = cellRange.getVerticalDirection();\n      const isMultiple = this.isMultiple();\n      cellRange.setTo(coordsClone);\n      if (isMultiple && (horizontalDir !== cellRange.getHorizontalDirection() || cellRange.getWidth() === 1 && !cellRange.includes(cellRange.highlight))) {\n        cellRange.from.assign({\n          col: cellRange.highlight.col\n        });\n      }\n      if (isMultiple && (verticalDir !== cellRange.getVerticalDirection() || cellRange.getHeight() === 1 && !cellRange.includes(cellRange.highlight))) {\n        cellRange.from.assign({\n          row: cellRange.highlight.row\n        });\n      }\n    }\n\n    // Prevent creating \"area\" selection that overlaps headers.\n    if (countRows > 0 && countCols > 0) {\n      if (!this.settings.navigableHeaders || this.settings.navigableHeaders && !cellRange.isSingleHeader()) {\n        cellRange.to.normalize();\n      }\n    }\n    this.runLocalHooks('beforeHighlightSet');\n    this.setRangeFocus(this.selectedRange.current().highlight);\n    this.applyAndCommit();\n    const isLastLayer = _classPrivateFieldGet(_expectedLayersCount, this) === -1 || this.selectedRange.size() === _classPrivateFieldGet(_expectedLayersCount, this);\n    this.runLocalHooks('afterSetRangeEnd', coords, isLastLayer);\n  }\n\n  /**\r\n   * Applies and commits the selection to all layers (using the Walkontable Selection API) based on the selection (CellRanges)\r\n   * collected in the `selectedRange` module.\r\n   *\r\n   * @param {CellRange} [cellRange] The cell range to apply. If not provided, the current selection is used.\r\n   * @param {number} [layerLevel] The layer level to apply. If not provided, the current layer level is used.\r\n   */\n  applyAndCommit() {\n    let cellRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.selectedRange.current();\n    let layerLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLayerLevel();\n    const countRows = this.tableProps.countRows();\n    const countCols = this.tableProps.countCols();\n\n    // If the next layer level is lower than previous then clear all area and header highlights. This is the\n    // indication that the new selection is performing.\n    if (layerLevel < this.highlight.layerLevel) {\n      arrayEach(this.highlight.getAreas(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getLayeredAreas(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getRowHeaders(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getColumnHeaders(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getActiveRowHeaders(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getActiveColumnHeaders(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getActiveCornerHeaders(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getRowHighlights(), highlight => void highlight.clear());\n      arrayEach(this.highlight.getColumnHighlights(), highlight => void highlight.clear());\n    }\n    this.highlight.useLayerLevel(layerLevel);\n    const areaHighlight = this.highlight.createArea();\n    const layeredAreaHighlight = this.highlight.createLayeredArea();\n    const rowHeaderHighlight = this.highlight.createRowHeader();\n    const columnHeaderHighlight = this.highlight.createColumnHeader();\n    const activeRowHeaderHighlight = this.highlight.createActiveRowHeader();\n    const activeColumnHeaderHighlight = this.highlight.createActiveColumnHeader();\n    const activeCornerHeaderHighlight = this.highlight.createActiveCornerHeader();\n    const rowHighlight = this.highlight.createRowHighlight();\n    const columnHighlight = this.highlight.createColumnHighlight();\n    areaHighlight.clear();\n    layeredAreaHighlight.clear();\n    rowHeaderHighlight.clear();\n    columnHeaderHighlight.clear();\n    activeRowHeaderHighlight.clear();\n    activeColumnHeaderHighlight.clear();\n    activeCornerHeaderHighlight.clear();\n    rowHighlight.clear();\n    columnHighlight.clear();\n    if (this.highlight.isEnabledFor(AREA_TYPE, cellRange.highlight) && (this.isMultiple() || layerLevel >= 1)) {\n      areaHighlight.add(cellRange.from).add(cellRange.to).commit();\n      layeredAreaHighlight.add(cellRange.from).add(cellRange.to).commit();\n      if (layerLevel === 1) {\n        // For single cell selection in the same layer, we do not create area selection to prevent blue background.\n        // When non-consecutive selection is performed we have to add that missing area selection to the previous layer\n        // based on previous coordinates. It only occurs when the previous selection wasn't select multiple cells.\n        const previousRange = this.selectedRange.previous();\n        this.highlight.useLayerLevel(layerLevel - 1);\n        this.highlight.createArea().add(previousRange.from).commit()\n        // Range may start with hidden indexes. Commit would not found start point (as we add just the `from` coords).\n        .syncWith(previousRange);\n        this.highlight.createLayeredArea().add(previousRange.from).commit()\n        // Range may start with hidden indexes. Commit would not found start point (as we add just the `from` coords).\n        .syncWith(previousRange);\n        this.highlight.useLayerLevel(layerLevel);\n      }\n    }\n    if (this.highlight.isEnabledFor(HEADER_TYPE, cellRange.highlight)) {\n      if (!cellRange.isSingleHeader()) {\n        const rowCoordsFrom = this.tableProps.createCellCoords(Math.max(cellRange.from.row, 0), -1);\n        const rowCoordsTo = this.tableProps.createCellCoords(cellRange.to.row, -1);\n        const columnCoordsFrom = this.tableProps.createCellCoords(-1, Math.max(cellRange.from.col, 0));\n        const columnCoordsTo = this.tableProps.createCellCoords(-1, cellRange.to.col);\n        if (this.settings.selectionMode === 'single') {\n          rowHeaderHighlight.add(rowCoordsFrom).commit();\n          columnHeaderHighlight.add(columnCoordsFrom).commit();\n          rowHighlight.add(rowCoordsFrom).commit();\n          columnHighlight.add(columnCoordsFrom).commit();\n        } else {\n          rowHeaderHighlight.add(rowCoordsFrom).add(rowCoordsTo).commit();\n          columnHeaderHighlight.add(columnCoordsFrom).add(columnCoordsTo).commit();\n          rowHighlight.add(rowCoordsFrom).add(rowCoordsTo).commit();\n          columnHighlight.add(columnCoordsFrom).add(columnCoordsTo).commit();\n        }\n      }\n      const highlightRowHeaders = !_classPrivateFieldGet(_disableHeadersHighlight, this) && this.isEntireRowSelected() && (countCols > 0 && countCols === cellRange.getWidth() || countCols === 0 && this.isSelectedByRowHeader());\n      const highlightColumnHeaders = !_classPrivateFieldGet(_disableHeadersHighlight, this) && this.isEntireColumnSelected() && (countRows > 0 && countRows === cellRange.getHeight() || countRows === 0 && this.isSelectedByColumnHeader());\n      if (highlightRowHeaders) {\n        activeRowHeaderHighlight.add(this.tableProps.createCellCoords(Math.max(cellRange.from.row, 0), Math.min(-this.tableProps.countRowHeaders(), -1))).add(this.tableProps.createCellCoords(Math.max(cellRange.to.row, 0), -1)).commit();\n      }\n      if (highlightColumnHeaders) {\n        activeColumnHeaderHighlight.add(this.tableProps.createCellCoords(Math.min(-this.tableProps.countColHeaders(), -1), Math.max(cellRange.from.col, 0))).add(this.tableProps.createCellCoords(-1, Math.max(cellRange.to.col, 0))).commit();\n      }\n      if (highlightRowHeaders && highlightColumnHeaders) {\n        activeCornerHeaderHighlight.add(this.tableProps.createCellCoords(-this.tableProps.countColHeaders(), -this.tableProps.countRowHeaders())).add(this.tableProps.createCellCoords(-1, -1)).commit();\n      }\n    }\n  }\n\n  /**\r\n   * Sets the selection focus position at the specified coordinates.\r\n   *\r\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\r\n   */\n  setRangeFocus(coords) {\n    if (this.selectedRange.isEmpty()) {\n      return;\n    }\n    const cellRange = this.selectedRange.current();\n    if (!this.inProgress) {\n      this.runLocalHooks('beforeSetFocus', coords);\n    }\n    const focusHighlight = this.highlight.getFocus();\n    focusHighlight.clear();\n    cellRange.setHighlight(coords);\n    if (!this.inProgress) {\n      this.runLocalHooks('beforeHighlightSet');\n    }\n    if (this.highlight.isEnabledFor(FOCUS_TYPE, cellRange.highlight)) {\n      focusHighlight.add(cellRange.highlight).commit().syncWith(cellRange);\n    }\n    if (!this.inProgress) {\n      _classPrivateFieldSet(_isFocusSelectionChanged, this, true);\n      this.runLocalHooks('afterSetFocus', cellRange.highlight);\n    }\n  }\n\n  /**\r\n   * Selects cell relative to the current cell (if possible).\r\n   *\r\n   * @param {number} rowDelta Rows number to move, value can be passed as negative number.\r\n   * @param {number} colDelta Columns number to move, value can be passed as negative number.\r\n   * @param {boolean} [createMissingRecords=false] If `true` the new rows/columns will be created if necessary.\r\n   * Otherwise, row/column will be created according to `minSpareRows/minSpareCols` settings of Handsontable.\r\n   */\n  transformStart(rowDelta, colDelta) {\n    let createMissingRecords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (this.settings.navigableHeaders) {\n      _classPrivateFieldGet(_transformation, this).setOffsetSize({\n        x: this.tableProps.countRowHeaders(),\n        y: this.tableProps.countColHeaders()\n      });\n    } else {\n      _classPrivateFieldGet(_transformation, this).resetOffsetSize();\n    }\n    this.setRangeStart(_classPrivateFieldGet(_transformation, this).transformStart(rowDelta, colDelta, createMissingRecords));\n  }\n\n  /**\r\n   * Sets selection end cell relative to the current selection end cell (if possible).\r\n   *\r\n   * @param {number} rowDelta Rows number to move, value can be passed as negative number.\r\n   * @param {number} colDelta Columns number to move, value can be passed as negative number.\r\n   */\n  transformEnd(rowDelta, colDelta) {\n    if (this.settings.navigableHeaders) {\n      _classPrivateFieldGet(_transformation, this).setOffsetSize({\n        x: this.tableProps.countRowHeaders(),\n        y: this.tableProps.countColHeaders()\n      });\n    } else {\n      _classPrivateFieldGet(_transformation, this).resetOffsetSize();\n    }\n    this.setRangeEnd(_classPrivateFieldGet(_transformation, this).transformEnd(rowDelta, colDelta));\n  }\n\n  /**\r\n   * Transforms the focus cell selection relative to the current focus position.\r\n   *\r\n   * @param {number} rowDelta Rows number to move, value can be passed as negative number.\r\n   * @param {number} colDelta Columns number to move, value can be passed as negative number.\r\n   */\n  transformFocus(rowDelta, colDelta) {\n    const range = this.selectedRange.current();\n    const {\n      row,\n      col\n    } = range.getOuterTopStartCorner();\n    const columnsInRange = this.tableProps.countRenderableColumnsInRange(0, col - 1);\n    const rowsInRange = this.tableProps.countRenderableRowsInRange(0, row - 1);\n    if (range.highlight.isHeader()) {\n      // for header focus selection calculate the new coords based on the selection including headers\n      _classPrivateFieldGet(_focusTransformation, this).setOffsetSize({\n        x: col < 0 ? Math.abs(col) : -columnsInRange,\n        y: row < 0 ? Math.abs(row) : -rowsInRange\n      });\n    } else {\n      // for focus selection in cells calculate the new coords only based on the selected cells\n      _classPrivateFieldGet(_focusTransformation, this).setOffsetSize({\n        x: col < 0 ? 0 : -columnsInRange,\n        y: row < 0 ? 0 : -rowsInRange\n      });\n    }\n    const focusCoords = _classPrivateFieldGet(_focusTransformation, this).transformStart(rowDelta, colDelta);\n    this.setRangeFocus(focusCoords.normalize());\n  }\n\n  /**\r\n   * Transforms the last selection layer down or up by the index count.\r\n   *\r\n   * @param {number} visualRowIndex Visual row index from which the selection will be shifted.\r\n   * @param {number} amount The number of rows to shift the selection.\r\n   */\n  shiftRows(visualRowIndex, amount) {\n    if (!this.isSelected()) {\n      return;\n    }\n    const range = this.selectedRange.current();\n    if (this.isSelectedByCorner()) {\n      this.selectAll(true, true, {\n        disableHeadersHighlight: true\n      });\n    } else if (this.isSelectedByColumnHeader() || range.getOuterTopStartCorner().row >= visualRowIndex) {\n      const {\n        from,\n        to,\n        highlight\n      } = range;\n      const countRows = this.tableProps.countRows();\n      const isSelectedByRowHeader = this.isSelectedByRowHeader();\n      const isSelectedByColumnHeader = this.isSelectedByColumnHeader();\n      const minRow = isSelectedByColumnHeader ? -1 : 0;\n      const coordsStartAmount = isSelectedByColumnHeader ? 0 : amount;\n\n      // Remove from the stack the last added selection as that selection below will be\n      // replaced by new transformed selection.\n      this.getSelectedRange().pop();\n      const coordsStart = this.tableProps.createCellCoords(clamp(from.row + coordsStartAmount, minRow, countRows - 1), from.col);\n      const coordsEnd = this.tableProps.createCellCoords(clamp(to.row + amount, minRow, countRows - 1), to.col);\n      this.markSource('shift');\n      if (highlight.row >= visualRowIndex) {\n        this.setRangeStartOnly(coordsStart, true, this.tableProps.createCellCoords(clamp(highlight.row + amount, 0, countRows - 1), highlight.col));\n      } else {\n        this.setRangeStartOnly(coordsStart, true);\n      }\n      if (isSelectedByRowHeader) {\n        this.selectedByRowHeader.add(this.getLayerLevel());\n      }\n      if (isSelectedByColumnHeader) {\n        this.selectedByColumnHeader.add(this.getLayerLevel());\n      }\n      this.setRangeEnd(coordsEnd);\n      this.markEndSource();\n    }\n  }\n\n  /**\r\n   * Transforms the last selection layer left or right by the index count.\r\n   *\r\n   * @param {number} visualColumnIndex Visual column index from which the selection will be shifted.\r\n   * @param {number} amount The number of columns to shift the selection.\r\n   */\n  shiftColumns(visualColumnIndex, amount) {\n    if (!this.isSelected()) {\n      return;\n    }\n    const range = this.selectedRange.current();\n    if (this.isSelectedByCorner()) {\n      this.selectAll(true, true, {\n        disableHeadersHighlight: true\n      });\n    } else if (this.isSelectedByRowHeader() || range.getOuterTopStartCorner().col >= visualColumnIndex) {\n      const {\n        from,\n        to,\n        highlight\n      } = range;\n      const countCols = this.tableProps.countCols();\n      const isSelectedByRowHeader = this.isSelectedByRowHeader();\n      const isSelectedByColumnHeader = this.isSelectedByColumnHeader();\n      const minColumn = isSelectedByRowHeader ? -1 : 0;\n      const coordsStartAmount = isSelectedByRowHeader ? 0 : amount;\n\n      // Remove from the stack the last added selection as that selection below will be\n      // replaced by new transformed selection.\n      this.getSelectedRange().pop();\n      const coordsStart = this.tableProps.createCellCoords(from.row, clamp(from.col + coordsStartAmount, minColumn, countCols - 1));\n      const coordsEnd = this.tableProps.createCellCoords(to.row, clamp(to.col + amount, minColumn, countCols - 1));\n      this.markSource('shift');\n      if (highlight.col >= visualColumnIndex) {\n        this.setRangeStartOnly(coordsStart, true, this.tableProps.createCellCoords(highlight.row, clamp(highlight.col + amount, 0, countCols - 1)));\n      } else {\n        this.setRangeStartOnly(coordsStart, true);\n      }\n      if (isSelectedByRowHeader) {\n        this.selectedByRowHeader.add(this.getLayerLevel());\n      }\n      if (isSelectedByColumnHeader) {\n        this.selectedByColumnHeader.add(this.getLayerLevel());\n      }\n      this.setRangeEnd(coordsEnd);\n      this.markEndSource();\n    }\n  }\n\n  /**\r\n   * Returns currently used layer level.\r\n   *\r\n   * @returns {number} Returns layer level starting from 0. If no selection was added to the table -1 is returned.\r\n   */\n  getLayerLevel() {\n    return this.selectedRange.size() - 1;\n  }\n\n  /**\r\n   * Returns `true` if currently there is a selection on the screen, `false` otherwise.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isSelected() {\n    return !this.selectedRange.isEmpty();\n  }\n\n  /**\r\n   * Returns information if we have a multi-selection. This method check multi-selection only on the latest layer of\r\n   * the selection.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isMultiple() {\n    if (!this.isSelected()) {\n      return false;\n    }\n    const isMultipleListener = createObjectPropListener(!this.selectedRange.current().isSingle());\n    this.runLocalHooks('afterIsMultipleSelection', isMultipleListener);\n    return isMultipleListener.value;\n  }\n\n  /**\r\n   * Checks if the last selection involves changing the focus cell position only.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isFocusSelectionChanged() {\n    return this.isSelected() && _classPrivateFieldGet(_isFocusSelectionChanged, this);\n  }\n\n  /**\r\n   * Returns `true` if the selection was applied by clicking to the row header. If the `layerLevel`\r\n   * argument is passed then only that layer will be checked. Otherwise, it checks if any row header\r\n   * was clicked on any selection layer level.\r\n   *\r\n   * @param {number} [layerLevel=this.getLayerLevel()] Selection layer level to check.\r\n   * @returns {boolean}\r\n   */\n  isSelectedByRowHeader() {\n    let layerLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getLayerLevel();\n    return !this.isSelectedByCorner(layerLevel) && (layerLevel === -1 ? this.selectedByRowHeader.size > 0 : this.selectedByRowHeader.has(layerLevel));\n  }\n\n  /**\r\n   * Returns `true` if the selection consists of entire rows (including their headers). If the `layerLevel`\r\n   * argument is passed then only that layer will be checked. Otherwise, it checks the selection for all layers.\r\n   *\r\n   * @param {number} [layerLevel=this.getLayerLevel()] Selection layer level to check.\r\n   * @returns {boolean}\r\n   */\n  isEntireRowSelected() {\n    let layerLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getLayerLevel();\n    const tester = range => {\n      const {\n        col\n      } = range.getOuterTopStartCorner();\n      const rowHeaders = this.tableProps.countRowHeaders();\n      const countCols = this.tableProps.countCols();\n      return (rowHeaders > 0 && col < 0 || rowHeaders === 0) && range.getWidth() === countCols;\n    };\n    if (layerLevel === -1) {\n      return Array.from(this.selectedRange).some(range => tester(range));\n    }\n    const range = this.selectedRange.peekByIndex(layerLevel);\n    return range ? tester(range) : false;\n  }\n\n  /**\r\n   * Returns `true` if the selection was applied by clicking to the column header. If the `layerLevel`\r\n   * argument is passed then only that layer will be checked. Otherwise, it checks if any column header\r\n   * was clicked on any selection layer level.\r\n   *\r\n   * @param {number} [layerLevel=this.getLayerLevel()] Selection layer level to check.\r\n   * @returns {boolean}\r\n   */\n  isSelectedByColumnHeader() {\n    let layerLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getLayerLevel();\n    return !this.isSelectedByCorner() && (layerLevel === -1 ? this.selectedByColumnHeader.size > 0 : this.selectedByColumnHeader.has(layerLevel));\n  }\n\n  /**\r\n   * Returns `true` if the selection consists of entire columns (including their headers). If the `layerLevel`\r\n   * argument is passed then only that layer will be checked. Otherwise, it checks the selection for all layers.\r\n   *\r\n   * @param {number} [layerLevel=this.getLayerLevel()] Selection layer level to check.\r\n   * @returns {boolean}\r\n   */\n  isEntireColumnSelected() {\n    let layerLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getLayerLevel();\n    const tester = range => {\n      const {\n        row\n      } = range.getOuterTopStartCorner();\n      const colHeaders = this.tableProps.countColHeaders();\n      const countRows = this.tableProps.countRows();\n      return (colHeaders > 0 && row < 0 || colHeaders === 0) && range.getHeight() === countRows;\n    };\n    if (layerLevel === -1) {\n      return Array.from(this.selectedRange).some(range => tester(range));\n    }\n    const range = this.selectedRange.peekByIndex(layerLevel);\n    return range ? tester(range) : false;\n  }\n\n  /**\r\n   * Returns `true` if the selection was applied by clicking on the row or column header on any layer level.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isSelectedByAnyHeader() {\n    return this.isSelectedByRowHeader(-1) || this.isSelectedByColumnHeader(-1) || this.isSelectedByCorner();\n  }\n\n  /**\r\n   * Returns `true` if the selection was applied by clicking on the left-top corner overlay.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isSelectedByCorner() {\n    return this.selectedByColumnHeader.has(this.getLayerLevel()) && this.selectedByRowHeader.has(this.getLayerLevel());\n  }\n\n  /**\r\n   * Returns `true` if coords is within selection coords. This method iterates through all selection layers to check if\r\n   * the coords object is within selection range.\r\n   *\r\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\r\n   * @returns {boolean}\r\n   */\n  inInSelection(coords) {\n    return this.selectedRange.includes(coords);\n  }\n\n  /**\r\n   * Returns `true` if the cell corner should be visible.\r\n   *\r\n   * @private\r\n   * @returns {boolean} `true` if the corner element has to be visible, `false` otherwise.\r\n   */\n  isCellCornerVisible() {\n    return this.settings.fillHandle && !this.tableProps.isEditorOpened() && !this.isMultiple();\n  }\n\n  /**\r\n   * Returns `true` if the cell coordinates are visible (renderable).\r\n   *\r\n   * @private\r\n   * @param {CellCoords} coords The cell coordinates to check.\r\n   * @returns {boolean}\r\n   */\n  isCellVisible(coords) {\n    const renderableCoords = this.tableProps.visualToRenderableCoords(coords);\n    return renderableCoords.row !== null && renderableCoords.col !== null;\n  }\n\n  /**\r\n   * Returns `true` if the area corner should be visible.\r\n   *\r\n   * @param {number} layerLevel The layer level.\r\n   * @returns {boolean} `true` if the corner element has to be visible, `false` otherwise.\r\n   */\n  isAreaCornerVisible(layerLevel) {\n    if (Number.isInteger(layerLevel) && layerLevel !== this.getLayerLevel()) {\n      return false;\n    }\n    return this.settings.fillHandle && !this.tableProps.isEditorOpened() && this.isMultiple();\n  }\n\n  /**\r\n   * Clear the selection by resetting the collected ranges and highlights.\r\n   */\n  clear() {\n    // TODO: collections selectedByColumnHeader and selectedByRowHeader should be clear too.\n    this.selectedRange.clear();\n    this.highlight.clear();\n  }\n\n  /**\r\n   * Deselects all selected cells.\r\n   */\n  deselect() {\n    if (!this.isSelected()) {\n      return;\n    }\n    this.inProgress = false;\n    this.clear();\n    this.runLocalHooks('afterDeselect');\n  }\n\n  /**\r\n   * Selects all cells and headers.\r\n   *\r\n   * @param {boolean} [includeRowHeaders=false] `true` If the selection should include the row headers,\r\n   * `false` otherwise.\r\n   * @param {boolean} [includeColumnHeaders=false] `true` If the selection should include the column\r\n   * headers, `false` otherwise.\r\n   * @param {object} [options] Additional object with options.\r\n   * @param {{row: number, col: number} | boolean} [options.focusPosition] The argument allows changing the cell/header\r\n   * focus position. The value takes an object with a `row` and `col` properties from -N to N, where\r\n   * negative values point to the headers and positive values point to the cell range. If `false`, the focus\r\n   * position won't be changed.\r\n   * @param {boolean} [options.disableHeadersHighlight] If `true`, disables highlighting the headers even when\r\n   * the logical coordinates points on them.\r\n   */\n  selectAll() {\n    var _this$getSelectedRang;\n    let includeRowHeaders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let includeColumnHeaders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      focusPosition: false,\n      disableHeadersHighlight: false\n    };\n    const nrOfRows = this.tableProps.countRows();\n    const nrOfColumns = this.tableProps.countCols();\n    const countRowHeaders = this.tableProps.countRowHeaders();\n    const countColHeaders = this.tableProps.countColHeaders();\n    const rowFrom = includeColumnHeaders ? -countColHeaders : 0;\n    const columnFrom = includeRowHeaders ? -countRowHeaders : 0;\n\n    // We can't select cells when there is no data.\n    if (rowFrom === 0 && columnFrom === 0 && (nrOfRows === 0 || nrOfColumns === 0)) {\n      return;\n    }\n    let highlight = (_this$getSelectedRang = this.getSelectedRange().current()) === null || _this$getSelectedRang === void 0 ? void 0 : _this$getSelectedRang.highlight;\n    const {\n      focusPosition,\n      disableHeadersHighlight\n    } = options;\n    _classPrivateFieldSet(_disableHeadersHighlight, this, disableHeadersHighlight);\n    if (focusPosition && Number.isInteger(focusPosition === null || focusPosition === void 0 ? void 0 : focusPosition.row) && Number.isInteger(focusPosition === null || focusPosition === void 0 ? void 0 : focusPosition.col)) {\n      highlight = this.tableProps.createCellCoords(clamp(focusPosition.row, rowFrom, nrOfRows - 1), clamp(focusPosition.col, columnFrom, nrOfColumns - 1));\n    }\n    const startCoords = this.tableProps.createCellCoords(rowFrom, columnFrom);\n    const endCoords = this.tableProps.createCellCoords(nrOfRows - 1, nrOfColumns - 1);\n    this.clear();\n    this.setRangeStartOnly(startCoords, undefined, highlight);\n    if (columnFrom < 0) {\n      this.selectedByRowHeader.add(this.getLayerLevel());\n    }\n    if (rowFrom < 0) {\n      this.selectedByColumnHeader.add(this.getLayerLevel());\n    }\n    this.setRangeEnd(endCoords);\n    this.finish();\n    _classPrivateFieldSet(_disableHeadersHighlight, this, false);\n  }\n\n  /**\r\n   * Make multiple, non-contiguous selection specified by `row` and `column` values or a range of cells\r\n   * finishing at `endRow`, `endColumn`. The method supports two input formats, first as an array of arrays such\r\n   * as `[[rowStart, columnStart, rowEnd, columnEnd]]` and second format as an array of CellRange objects.\r\n   * If the passed ranges have another format the exception will be thrown.\r\n   *\r\n   * @param {Array[]|CellRange[]} selectionRanges The coordinates which define what the cells should be selected.\r\n   * @returns {boolean} Returns `true` if selection was successful, `false` otherwise.\r\n   */\n  selectCells(selectionRanges) {\n    var _this2 = this;\n    const selectionType = detectSelectionType(selectionRanges);\n    if (selectionType === SELECTION_TYPE_EMPTY) {\n      return false;\n    } else if (selectionType === SELECTION_TYPE_UNRECOGNIZED) {\n      throw new Error(toSingleLine`Unsupported format of the selection ranges was passed. To select cells pass\\x20\n        the coordinates as an array of arrays ([[rowStart, columnStart/columnPropStart, rowEnd,\\x20\n        columnEnd/columnPropEnd]]) or as an array of CellRange objects.`);\n    }\n    const selectionSchemaNormalizer = normalizeSelectionFactory(selectionType, {\n      createCellCoords: function () {\n        return _this2.tableProps.createCellCoords(...arguments);\n      },\n      createCellRange: function () {\n        return _this2.tableProps.createCellRange(...arguments);\n      },\n      propToCol: prop => this.tableProps.propToCol(prop),\n      keepDirection: true\n    });\n    const navigableHeaders = this.settings.navigableHeaders;\n    const tableParams = {\n      countRows: this.tableProps.countRows(),\n      countCols: this.tableProps.countCols(),\n      countRowHeaders: navigableHeaders ? this.tableProps.countRowHeaders() : 0,\n      countColHeaders: navigableHeaders ? this.tableProps.countColHeaders() : 0\n    };\n\n    // Check if every layer of the coordinates are valid.\n    const isValid = !selectionRanges.some(selection => {\n      const cellRange = selectionSchemaNormalizer(selection);\n      const rangeValidity = cellRange.isValid(tableParams);\n      return !(rangeValidity && !cellRange.containsHeaders() || rangeValidity && cellRange.containsHeaders() && cellRange.isSingleHeader());\n    });\n    if (isValid) {\n      this.clear();\n      this.setExpectedLayers(selectionRanges.length);\n      arrayEach(selectionRanges, selection => {\n        const {\n          from,\n          to\n        } = selectionSchemaNormalizer(selection);\n        this.setRangeStartOnly(from.clone(), false);\n        this.setRangeEnd(to.clone());\n      });\n      this.finish();\n    }\n    return isValid;\n  }\n\n  /**\r\n   * Select column specified by `startColumn` visual index or column property or a range of columns finishing at\r\n   * `endColumn`.\r\n   *\r\n   * @param {number|string} startColumn Visual column index or column property from which the selection starts.\r\n   * @param {number|string} [endColumn] Visual column index or column property from to the selection finishes.\r\n   * @param {number | { row: number, col: number }} [focusPosition=0] The argument allows changing the cell/header focus\r\n   * position. The value can take visual row index from -N to N, where negative values point to the headers and positive\r\n   * values point to the cell range. An object with `row` and `col` properties also can be passed to change the focus\r\n   * position horizontally.\r\n   * @returns {boolean} Returns `true` if selection was successful, `false` otherwise.\r\n   */\n  selectColumns(startColumn) {\n    let endColumn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startColumn;\n    let focusPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const start = typeof startColumn === 'string' ? this.tableProps.propToCol(startColumn) : startColumn;\n    const end = typeof endColumn === 'string' ? this.tableProps.propToCol(endColumn) : endColumn;\n    const countRows = this.tableProps.countRows();\n    const countCols = this.tableProps.countCols();\n    const countColHeaders = this.tableProps.countColHeaders();\n    const columnHeaderLastIndex = countColHeaders === 0 ? 0 : -countColHeaders;\n    const fromCoords = this.tableProps.createCellCoords(columnHeaderLastIndex, start);\n    const toCoords = this.tableProps.createCellCoords(countRows - 1, end);\n    const isValid = this.tableProps.createCellRange(fromCoords, fromCoords, toCoords).isValid({\n      countRows,\n      countCols,\n      countRowHeaders: 0,\n      countColHeaders\n    });\n    if (isValid) {\n      let highlightRow = 0;\n      let highlightColumn = 0;\n      if (Number.isInteger(focusPosition === null || focusPosition === void 0 ? void 0 : focusPosition.row) && Number.isInteger(focusPosition === null || focusPosition === void 0 ? void 0 : focusPosition.col)) {\n        highlightRow = clamp(focusPosition.row, columnHeaderLastIndex, countRows - 1);\n        highlightColumn = clamp(focusPosition.col, Math.min(start, end), Math.max(start, end));\n      } else {\n        highlightRow = clamp(focusPosition, columnHeaderLastIndex, countRows - 1);\n        highlightColumn = start;\n      }\n      const highlight = this.tableProps.createCellCoords(highlightRow, highlightColumn);\n      const fromRow = countColHeaders === 0 ? 0 : clamp(highlight.row, columnHeaderLastIndex, -1);\n      const toRow = countRows - 1;\n      const from = this.tableProps.createCellCoords(fromRow, start);\n      const to = this.tableProps.createCellCoords(toRow, end);\n      this.runLocalHooks('beforeSelectColumns', from, to, highlight);\n\n      // disallow modifying row axis for that hooks\n      from.row = fromRow;\n      to.row = toRow;\n      this.setRangeStartOnly(from, undefined, highlight);\n      this.selectedByColumnHeader.add(this.getLayerLevel());\n      this.setRangeEnd(to);\n      this.runLocalHooks('afterSelectColumns', from, to, highlight);\n      this.finish();\n    }\n    return isValid;\n  }\n\n  /**\r\n   * Select row specified by `startRow` visual index or a range of rows finishing at `endRow`.\r\n   *\r\n   * @param {number} startRow Visual row index from which the selection starts.\r\n   * @param {number} [endRow] Visual row index from to the selection finishes.\r\n   * @param {number | { row: number, col: number }} [focusPosition=0] The argument allows changing the cell/header focus\r\n   * position. The value can take visual row index from -N to N, where negative values point to the headers and positive\r\n   * values point to the cell range. An object with `row` and `col` properties also can be passed to change the focus\r\n   * position horizontally.\r\n   * @returns {boolean} Returns `true` if selection was successful, `false` otherwise.\r\n   */\n  selectRows(startRow) {\n    let endRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startRow;\n    let focusPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const countRows = this.tableProps.countRows();\n    const countCols = this.tableProps.countCols();\n    const countRowHeaders = this.tableProps.countRowHeaders();\n    const rowHeaderLastIndex = countRowHeaders === 0 ? 0 : -countRowHeaders;\n    const fromCoords = this.tableProps.createCellCoords(startRow, rowHeaderLastIndex);\n    const toCoords = this.tableProps.createCellCoords(endRow, countCols - 1);\n    const isValid = this.tableProps.createCellRange(fromCoords, fromCoords, toCoords).isValid({\n      countRows,\n      countCols,\n      countRowHeaders,\n      countColHeaders: 0\n    });\n    if (isValid) {\n      let highlightRow = 0;\n      let highlightColumn = 0;\n      if (Number.isInteger(focusPosition === null || focusPosition === void 0 ? void 0 : focusPosition.row) && Number.isInteger(focusPosition === null || focusPosition === void 0 ? void 0 : focusPosition.col)) {\n        highlightRow = clamp(focusPosition.row, Math.min(startRow, endRow), Math.max(startRow, endRow));\n        highlightColumn = clamp(focusPosition.col, rowHeaderLastIndex, countCols - 1);\n      } else {\n        highlightRow = startRow;\n        highlightColumn = clamp(focusPosition, rowHeaderLastIndex, countCols - 1);\n      }\n      const highlight = this.tableProps.createCellCoords(highlightRow, highlightColumn);\n      const fromColumn = countRowHeaders === 0 ? 0 : clamp(highlight.col, rowHeaderLastIndex, -1);\n      const toColumn = countCols - 1;\n      const from = this.tableProps.createCellCoords(startRow, fromColumn);\n      const to = this.tableProps.createCellCoords(endRow, toColumn);\n      this.runLocalHooks('beforeSelectRows', from, to, highlight);\n\n      // disallow modifying column axis for that hooks\n      from.col = fromColumn;\n      to.col = toColumn;\n      this.setRangeStartOnly(from, undefined, highlight);\n      this.selectedByRowHeader.add(this.getLayerLevel());\n      this.setRangeEnd(to);\n      this.runLocalHooks('afterSelectRows', from, to, highlight);\n      this.finish();\n    }\n    return isValid;\n  }\n\n  /**\r\n   * Refreshes the whole selection by clearing, reapplying and committing the renderable selection (Walkontable Selection API)\r\n   * by using already added visual ranges.\r\n   */\n  refresh() {\n    if (!this.isSelected()) {\n      return;\n    }\n    const countRows = this.tableProps.countRows();\n    const countColumns = this.tableProps.countCols();\n    if (countRows === 0 || countColumns === 0) {\n      this.deselect();\n      return;\n    }\n    const range = this.selectedRange.peekByIndex(this.selectedRange.size() - 1);\n    const {\n      from,\n      to,\n      highlight\n    } = range;\n    this.clear();\n    highlight.assign({\n      row: clamp(highlight.row, -Infinity, countRows - 1),\n      col: clamp(highlight.col, -Infinity, countColumns - 1)\n    });\n    from.assign({\n      row: clamp(from.row, -Infinity, countRows - 1),\n      col: clamp(from.col, -Infinity, countColumns - 1)\n    });\n    to.assign({\n      row: clamp(to.row, 0, countRows - 1),\n      col: clamp(to.col, 0, countColumns - 1)\n    });\n    this.selectedRange.ranges.push(range);\n    this.highlight.getFocus().add(highlight).commit().syncWith(range);\n    this.applyAndCommit(range);\n  }\n\n  /**\r\n   * Refreshes the whole selection by recommitting (recalculating visual indexes to renderable ones) the renderable selection\r\n   * that was already added.\r\n   */\n  commit() {\n    const customSelections = this.highlight.getCustomSelections();\n    customSelections.forEach(customSelection => {\n      customSelection.commit();\n    });\n    if (!this.isSelected()) {\n      return;\n    }\n    const focusHighlight = this.highlight.getFocus();\n    const currentLayer = this.getLayerLevel();\n    focusHighlight.commit().syncWith(this.selectedRange.current());\n\n    // Rewriting rendered ranges going through all layers.\n    for (let layerLevel = 0; layerLevel < this.selectedRange.size(); layerLevel += 1) {\n      this.highlight.useLayerLevel(layerLevel);\n      const areaHighlight = this.highlight.createArea();\n      const areaLayeredHighlight = this.highlight.createLayeredArea();\n      const rowHeaderHighlight = this.highlight.createRowHeader();\n      const columnHeaderHighlight = this.highlight.createColumnHeader();\n      const activeRowHeaderHighlight = this.highlight.createActiveRowHeader();\n      const activeColumnHeaderHighlight = this.highlight.createActiveColumnHeader();\n      const activeCornerHeaderHighlight = this.highlight.createActiveCornerHeader();\n      const rowHighlight = this.highlight.createRowHighlight();\n      const columnHighlight = this.highlight.createColumnHighlight();\n      areaHighlight.commit();\n      areaLayeredHighlight.commit();\n      rowHeaderHighlight.commit();\n      columnHeaderHighlight.commit();\n      activeRowHeaderHighlight.commit();\n      activeColumnHeaderHighlight.commit();\n      activeCornerHeaderHighlight.commit();\n      rowHighlight.commit();\n      columnHighlight.commit();\n    }\n\n    // Reverting starting layer for the Highlight.\n    this.highlight.useLayerLevel(currentLayer);\n  }\n}\nmixin(Selection, localHooks);\nexport default Selection;", "/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * SheetClip - Spreadsheet Clipboard Parser.\r\n * version 0.2\r\n *\r\n * This tiny library transforms JavaScript arrays to strings that are pasteable by LibreOffice, OpenOffice,\r\n * Google Docs and Microsoft Excel.\r\n *\r\n * Copyright 2012, Marcin Warpechowski\r\n * Licensed under the MIT license.\r\n * http://github.com/warpech/sheetclip/\r\n */\n\nconst regUniversalNewLine = /^(\\r\\n|\\n\\r|\\r|\\n)/;\nconst regNextCellNoQuotes = /^[^\\t\\r\\n]+/;\nconst regNextEmptyCell = /^\\t/;\n\n/**\r\n * Decode spreadsheet string into array.\r\n *\r\n * @param {string} str The string to parse.\r\n * @returns {Array}\r\n */\nexport function parse(str) {\n  const arr = [['']];\n  if (str.length === 0) {\n    return arr;\n  }\n  let column = 0;\n  let row = 0;\n  let lastLength;\n  while (str.length > 0) {\n    if (lastLength === str.length) {\n      // In the case If in last cycle we didn't match anything, we have to leave the infinite loop\n      break;\n    }\n    lastLength = str.length;\n    if (str.match(regNextEmptyCell)) {\n      str = str.replace(regNextEmptyCell, '');\n      column += 1;\n      arr[row][column] = '';\n    } else if (str.match(regUniversalNewLine)) {\n      str = str.replace(regUniversalNewLine, '');\n      column = 0;\n      row += 1;\n      arr[row] = [''];\n    } else {\n      let nextCell = '';\n      if (str.startsWith('\"')) {\n        let quoteNo = 0;\n        let isStillCell = true;\n        while (isStillCell) {\n          const nextChar = str.slice(0, 1);\n          if (nextChar === '\"') {\n            quoteNo += 1;\n          }\n          nextCell += nextChar;\n          str = str.slice(1);\n          if (str.length === 0 || str.match(/^[\\t\\r\\n]/) && quoteNo % 2 === 0) {\n            isStillCell = false;\n          }\n        }\n        nextCell = nextCell.replace(/^\"/, '').replace(/\"$/, '').replace(/[\"]*/g, match => new Array(Math.floor(match.length / 2)).fill('\"').join(''));\n      } else {\n        const matchedText = str.match(regNextCellNoQuotes);\n        nextCell = matchedText ? matchedText[0] : '';\n        str = str.slice(nextCell.length);\n      }\n      arr[row][column] = nextCell;\n    }\n  }\n  return arr;\n}\n\n/**\r\n * Encode array into valid spreadsheet string.\r\n *\r\n * @param {Array} arr An array of arrays to stringify.\r\n * @returns {string}\r\n */\nexport function stringify(arr) {\n  let r;\n  let rLen;\n  let c;\n  let cLen;\n  let str = '';\n  let val;\n  for (r = 0, rLen = arr.length; r < rLen; r += 1) {\n    cLen = arr[r].length;\n    for (c = 0; c < cLen; c += 1) {\n      if (c > 0) {\n        str += '\\t';\n      }\n      val = arr[r][c];\n      if (typeof val === 'string') {\n        if (val.indexOf('\\n') > -1) {\n          str += `\"${val.replace(/\"/g, '\"\"')}\"`;\n        } else {\n          str += val;\n        }\n      } else if (val === null || val === undefined) {\n        // undefined resolves to undefined\n        str += '';\n      } else {\n        str += val;\n      }\n    }\n    if (r !== rLen - 1) {\n      str += '\\n';\n    }\n  }\n  return str;\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { stringify } from \"../3rdparty/SheetClip/index.mjs\";\nimport { countFirstRowKeys } from \"../helpers/data.mjs\";\nimport { createObjectPropListener, deepClone, deepExtend, deepObjectSize, duckSchema, hasOwnProperty, isObject, objectEach } from \"../helpers/object.mjs\";\nimport { extendArray, to2dArray } from \"../helpers/array.mjs\";\nimport { rangeEach } from \"../helpers/number.mjs\";\nimport { isDefined } from \"../helpers/mixed.mjs\";\n/*\r\nThis class contains open-source contributions covered by the MIT license.\r\n\r\n1) In the `createRow` method: Row creation using functional `dataSchema` value\r\n2) In the `set` method: Data setting using functional `prop` value\r\n3) in the `get` method: Data getting using functional `prop` value\r\n\r\nThe remaining part of this code comment contains the full license text of these contributions.\r\n\r\n======\r\n\r\nThe MIT License\r\n\r\nCopyright 2013 Nicholas Bollweg\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\n/**\r\n * Utility class that gets and saves data from/to the data source using mapping of columns numbers to object property names.\r\n *\r\n * @todo Refactor arguments of methods getRange, getText to be numbers (not objects).\r\n * @todo Remove priv, GridSettings from object constructor.\r\n *\r\n * @class DataMap\r\n * @private\r\n */\nclass DataMap {\n  /**\r\n   * @type {number}\r\n   */\n  static get DESTINATION_RENDERER() {\n    return 1;\n  }\n\n  /**\r\n   * @type {number}\r\n   */\n  static get DESTINATION_CLIPBOARD_GENERATOR() {\n    return 2;\n  }\n\n  /**\r\n   * Instance of {@link Handsontable}.\r\n   *\r\n   * @private\r\n   * @type {Handsontable}\r\n   */\n\n  /**\r\n   * @param {object} hotInstance Instance of Handsontable.\r\n   * @param {Array} data Array of arrays or array of objects containing data.\r\n   * @param {MetaManager} metaManager The meta manager instance.\r\n   */\n  constructor(hotInstance, data, metaManager) {\n    _defineProperty(this, \"hot\", void 0);\n    /**\r\n     * Instance of {@link MetaManager}.\r\n     *\r\n     * @private\r\n     * @type {MetaManager}\r\n     */\n    _defineProperty(this, \"metaManager\", void 0);\n    /**\r\n     * Instance of {@link TableMeta}.\r\n     *\r\n     * @private\r\n     * @type {TableMeta}\r\n     */\n    _defineProperty(this, \"tableMeta\", void 0);\n    /**\r\n     * Reference to the original dataset.\r\n     *\r\n     * @type {*}\r\n     */\n    _defineProperty(this, \"dataSource\", void 0);\n    /**\r\n     * Generated schema based on the first row from the source data.\r\n     *\r\n     * @type {object}\r\n     */\n    _defineProperty(this, \"duckSchema\", void 0);\n    /**\r\n     * Cached array of properties to columns.\r\n     *\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"colToPropCache\", void 0);\n    /**\r\n     * Cached map of properties to columns.\r\n     *\r\n     * @type {Map}\r\n     */\n    _defineProperty(this, \"propToColCache\", void 0);\n    this.hot = hotInstance;\n    this.metaManager = metaManager;\n    this.tableMeta = metaManager.getTableMeta();\n    this.dataSource = data;\n    this.duckSchema = this.createDuckSchema();\n    this.createMap();\n  }\n\n  /**\r\n   * Generates cache for property to and from column addressation.\r\n   */\n  createMap() {\n    const schema = this.getSchema();\n    if (typeof schema === 'undefined') {\n      throw new Error('trying to create `columns` definition but you didn\\'t provide `schema` nor `data`');\n    }\n    const columns = this.tableMeta.columns;\n    let i;\n    this.colToPropCache = [];\n    this.propToColCache = new Map();\n    if (columns) {\n      let columnsLen = 0;\n      let filteredIndex = 0;\n      let columnsAsFunc = false;\n      if (typeof columns === 'function') {\n        const schemaLen = deepObjectSize(schema);\n        columnsLen = schemaLen > 0 ? schemaLen : this.countFirstRowKeys();\n        columnsAsFunc = true;\n      } else {\n        const maxCols = this.tableMeta.maxCols;\n        columnsLen = Math.min(maxCols, columns.length);\n      }\n      for (i = 0; i < columnsLen; i++) {\n        const column = columnsAsFunc ? columns(i) : columns[i];\n        if (isObject(column)) {\n          if (typeof column.data !== 'undefined') {\n            const index = columnsAsFunc ? filteredIndex : i;\n            this.colToPropCache[index] = column.data;\n            this.propToColCache.set(column.data, index);\n          }\n          filteredIndex += 1;\n        }\n      }\n    } else {\n      this.recursiveDuckColumns(schema);\n    }\n  }\n\n  /**\r\n   * Get the amount of physical columns in the first data row.\r\n   *\r\n   * @returns {number} Amount of physical columns in the first data row.\r\n   */\n  countFirstRowKeys() {\n    return countFirstRowKeys(this.dataSource);\n  }\n\n  /**\r\n   * Generates columns' translation cache.\r\n   *\r\n   * @param {object} schema An object to generate schema from.\r\n   * @param {number} lastCol The column index.\r\n   * @param {number} parent The property cache for recursive calls.\r\n   * @returns {number}\r\n   */\n  recursiveDuckColumns(schema, lastCol, parent) {\n    let lastColumn = lastCol;\n    let propertyParent = parent;\n    let prop;\n    if (typeof lastColumn === 'undefined') {\n      lastColumn = 0;\n      propertyParent = '';\n    }\n    if (typeof schema === 'object' && !Array.isArray(schema)) {\n      objectEach(schema, (value, key) => {\n        if (value === null) {\n          prop = propertyParent + key;\n          this.colToPropCache.push(prop);\n          this.propToColCache.set(prop, lastColumn);\n          lastColumn += 1;\n        } else {\n          lastColumn = this.recursiveDuckColumns(value, lastColumn, `${key}.`);\n        }\n      });\n    }\n    return lastColumn;\n  }\n\n  /**\r\n   * Returns property name that corresponds with the given column index.\r\n   *\r\n   * @param {string|number} column Visual column index or another passed argument.\r\n   * @returns {string|number} Column property, physical column index or passed argument.\r\n   */\n  colToProp(column) {\n    // TODO: Should it work? Please, look at the test:\n    // \"it should return the provided property name, when the user passes a property name as a column number\".\n    if (Number.isInteger(column) === false) {\n      return column;\n    }\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n\n    // Out of range, not visible column index.\n    if (physicalColumn === null) {\n      return column;\n    }\n\n    // Cached property.\n    if (this.colToPropCache && isDefined(this.colToPropCache[physicalColumn])) {\n      return this.colToPropCache[physicalColumn];\n    }\n    return physicalColumn;\n  }\n\n  /**\r\n   * Translates property into visual column index.\r\n   *\r\n   * @param {string|number} prop Column property which may be also a physical column index.\r\n   * @returns {string|number} Visual column index or passed argument.\r\n   */\n  propToCol(prop) {\n    const cachedPhysicalIndex = this.propToColCache.get(prop);\n    if (isDefined(cachedPhysicalIndex)) {\n      return this.hot.toVisualColumn(cachedPhysicalIndex);\n    }\n\n    // Property may be a physical column index.\n    const visualColumn = this.hot.toVisualColumn(prop);\n    if (visualColumn === null) {\n      return prop;\n    }\n    return visualColumn;\n  }\n\n  /**\r\n   * Returns data's schema.\r\n   *\r\n   * @returns {object}\r\n   */\n  getSchema() {\n    const schema = this.tableMeta.dataSchema;\n    if (schema) {\n      if (typeof schema === 'function') {\n        return schema();\n      }\n      return schema;\n    }\n    return this.duckSchema;\n  }\n\n  /**\r\n   * Creates the duck schema based on the current dataset.\r\n   *\r\n   * @returns {Array|object}\r\n   */\n  createDuckSchema() {\n    return this.dataSource && this.dataSource[0] ? duckSchema(this.dataSource[0]) : {};\n  }\n\n  /**\r\n   * Refresh the data schema.\r\n   */\n  refreshDuckSchema() {\n    this.duckSchema = this.createDuckSchema();\n  }\n\n  /**\r\n   * Creates row at the bottom of the data array.\r\n   *\r\n   * @param {number} [index] Physical index of the row before which the new row will be inserted.\r\n   * @param {number} [amount=1] An amount of rows to add.\r\n   * @param {object} [options] Additional options for created rows.\r\n   * @param {string} [options.source] Source of method call.\r\n   * @param {'above'|'below'} [options.mode] Sets where the row is inserted: above or below the passed index.\r\n   * @fires Hooks#afterCreateRow\r\n   * @returns {number} Returns number of created rows.\r\n   */\n  createRow(index) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let {\n      source,\n      mode = 'above'\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const sourceRowsCount = this.hot.countSourceRows();\n    let physicalRowIndex = sourceRowsCount;\n    let numberOfCreatedRows = 0;\n    let rowIndex = index;\n    if (typeof rowIndex !== 'number' || rowIndex >= sourceRowsCount) {\n      rowIndex = sourceRowsCount;\n    }\n    if (rowIndex < this.hot.countRows()) {\n      physicalRowIndex = this.hot.toPhysicalRow(rowIndex);\n    }\n    const continueProcess = this.hot.runHooks('beforeCreateRow', rowIndex, amount, source);\n    if (continueProcess === false || physicalRowIndex === null) {\n      return {\n        delta: 0\n      };\n    }\n    const maxRows = this.tableMeta.maxRows;\n    const columnCount = this.getSchema().length;\n    const rowsToAdd = [];\n    while (numberOfCreatedRows < amount && sourceRowsCount + numberOfCreatedRows < maxRows) {\n      let row = null;\n      if (this.hot.dataType === 'array') {\n        if (this.tableMeta.dataSchema) {\n          // Clone template array\n          row = deepClone(this.getSchema());\n        } else {\n          row = [];\n          /* eslint-disable no-loop-func */\n          rangeEach(columnCount - 1, () => row.push(null));\n        }\n      } else if (this.hot.dataType === 'function') {\n        row = this.tableMeta.dataSchema(rowIndex + numberOfCreatedRows);\n      } else {\n        row = {};\n        deepExtend(row, this.getSchema());\n      }\n      rowsToAdd.push(row);\n      numberOfCreatedRows += 1;\n    }\n    this.hot.rowIndexMapper.insertIndexes(rowIndex, numberOfCreatedRows);\n    if (mode === 'below') {\n      physicalRowIndex = Math.min(physicalRowIndex + 1, sourceRowsCount);\n    }\n    this.spliceData(physicalRowIndex, 0, rowsToAdd);\n    const newVisualRowIndex = this.hot.toVisualRow(physicalRowIndex);\n\n    // In case the created rows are the only ones in the table, the column index mappers need to be rebuilt based on\n    // the number of columns created in the row or the schema.\n    if (this.hot.countSourceRows() === rowsToAdd.length) {\n      this.hot.columnIndexMapper.initToLength(this.hot.getInitialColumnCount());\n    }\n    if (numberOfCreatedRows > 0) {\n      if (index === undefined || index === null) {\n        // Creates the meta rows at the end of the rows collection without shifting the cells\n        // that were defined out of the range of the dataset.\n        this.metaManager.createRow(null, numberOfCreatedRows);\n      } else if (source !== 'auto') {\n        this.metaManager.createRow(physicalRowIndex, amount);\n      }\n    }\n    this.hot.runHooks('afterCreateRow', newVisualRowIndex, numberOfCreatedRows, source);\n    this.hot.forceFullRender = true; // used when data was changed\n\n    return {\n      delta: numberOfCreatedRows,\n      startPhysicalIndex: physicalRowIndex\n    };\n  }\n\n  /**\r\n   * Creates column at the right of the data array.\r\n   *\r\n   * @param {number} [index] Visual index of the column before which the new column will be inserted.\r\n   * @param {number} [amount=1] An amount of columns to add.\r\n   * @param {object} [options] Additional options for created columns.\r\n   * @param {string} [options.source] Source of method call.\r\n   * @param {'start'|'end'} [options.mode] Sets where the column is inserted: at the start (left in [LTR](@/api/options.md#layoutdirection), right in [RTL](@/api/options.md#layoutdirection)) or at the end (right in LTR, left in LTR)\r\n   * the passed index.\r\n   * @fires Hooks#afterCreateCol\r\n   * @returns {number} Returns number of created columns.\r\n   */\n  createCol(index) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let {\n      source,\n      mode = 'start'\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!this.hot.isColumnModificationAllowed()) {\n      throw new Error('Cannot create new column. When data source in an object, ' + 'you can only have as much columns as defined in first data row, data schema or in the \\'columns\\' setting.' + 'If you want to be able to add new columns, you have to use array datasource.');\n    }\n    const dataSource = this.dataSource;\n    const maxCols = this.tableMeta.maxCols;\n    const countSourceCols = this.hot.countSourceCols();\n    let columnIndex = index;\n    if (typeof columnIndex !== 'number' || columnIndex >= countSourceCols) {\n      columnIndex = countSourceCols;\n    }\n    const continueProcess = this.hot.runHooks('beforeCreateCol', columnIndex, amount, source);\n    if (continueProcess === false) {\n      return {\n        delta: 0\n      };\n    }\n    let physicalColumnIndex = countSourceCols;\n    if (columnIndex < this.hot.countCols()) {\n      physicalColumnIndex = this.hot.toPhysicalColumn(columnIndex);\n    }\n    const numberOfSourceRows = this.hot.countSourceRows();\n    let nrOfColumns = this.hot.countCols();\n    let numberOfCreatedCols = 0;\n    let currentIndex = physicalColumnIndex;\n    if (mode === 'end') {\n      currentIndex = Math.min(currentIndex + 1, countSourceCols);\n    }\n    const startPhysicalIndex = currentIndex;\n    while (numberOfCreatedCols < amount && nrOfColumns < maxCols) {\n      if (typeof columnIndex !== 'number' || columnIndex >= nrOfColumns) {\n        if (numberOfSourceRows > 0) {\n          for (let row = 0; row < numberOfSourceRows; row += 1) {\n            if (typeof dataSource[row] === 'undefined') {\n              dataSource[row] = [];\n            }\n            dataSource[row].push(null);\n          }\n        } else {\n          dataSource.push([null]);\n        }\n      } else {\n        for (let row = 0; row < numberOfSourceRows; row++) {\n          dataSource[row].splice(currentIndex, 0, null);\n        }\n      }\n      numberOfCreatedCols += 1;\n      currentIndex += 1;\n      nrOfColumns += 1;\n    }\n    this.hot.columnIndexMapper.insertIndexes(columnIndex, numberOfCreatedCols);\n    if (numberOfCreatedCols > 0) {\n      if (index === undefined || index === null) {\n        // Creates the meta columns at the end of the columns collection without shifting the cells\n        // that were defined out of the range of the dataset.\n        this.metaManager.createColumn(null, numberOfCreatedCols);\n      } else if (source !== 'auto') {\n        this.metaManager.createColumn(startPhysicalIndex, amount);\n      }\n    }\n    const newVisualColumnIndex = this.hot.toVisualColumn(startPhysicalIndex);\n    this.hot.runHooks('afterCreateCol', newVisualColumnIndex, numberOfCreatedCols, source);\n    this.hot.forceFullRender = true; // used when data was changed\n\n    this.refreshDuckSchema();\n    return {\n      delta: numberOfCreatedCols,\n      startPhysicalIndex\n    };\n  }\n\n  /**\r\n   * Removes row from the data array.\r\n   *\r\n   * @fires Hooks#beforeRemoveRow\r\n   * @fires Hooks#afterRemoveRow\r\n   * @param {number} [index] Visual index of the row to be removed. If not provided, the last row will be removed.\r\n   * @param {number} [amount=1] Amount of the rows to be removed. If not provided, one row will be removed.\r\n   * @param {string} [source] Source of method call.\r\n   * @returns {boolean} Returns `false` when action was cancelled, otherwise `true`.\r\n   */\n  removeRow(index) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let source = arguments.length > 2 ? arguments[2] : undefined;\n    let rowIndex = Number.isInteger(index) ? index : -amount; // -amount = taking indexes from the end.\n    const removedPhysicalIndexes = this.visualRowsToPhysical(rowIndex, amount);\n    const sourceRowsLength = this.hot.countSourceRows();\n    rowIndex = (sourceRowsLength + rowIndex) % sourceRowsLength;\n\n    // It handle also callback from the `NestedRows` plugin. Removing parent node has effect in removing children nodes.\n    const actionWasNotCancelled = this.hot.runHooks('beforeRemoveRow', rowIndex, removedPhysicalIndexes.length, removedPhysicalIndexes, source);\n    if (actionWasNotCancelled === false) {\n      return false;\n    }\n\n    // List of removed indexes might be changed in the `beforeRemoveRow` hook. There may be new values.\n    const numberOfRemovedIndexes = removedPhysicalIndexes.length;\n    this.filterData(rowIndex, numberOfRemovedIndexes, removedPhysicalIndexes);\n\n    // TODO: Function `removeRow` should validate fully, probably above.\n    if (rowIndex < this.hot.countRows()) {\n      this.hot.rowIndexMapper.removeIndexes(removedPhysicalIndexes);\n      const customDefinedColumns = isDefined(this.tableMeta.columns) || isDefined(this.tableMeta.dataSchema);\n\n      // All rows have been removed. There shouldn't be any columns.\n      if (this.hot.rowIndexMapper.getNotTrimmedIndexesLength() === 0 && customDefinedColumns === false) {\n        this.hot.columnIndexMapper.setIndexesSequence([]);\n      }\n    }\n    const descendingPhysicalRows = removedPhysicalIndexes.slice(0).sort((a, b) => b - a);\n    descendingPhysicalRows.forEach(rowPhysicalIndex => {\n      this.metaManager.removeRow(rowPhysicalIndex, 1);\n    });\n    this.hot.runHooks('afterRemoveRow', rowIndex, numberOfRemovedIndexes, removedPhysicalIndexes, source);\n    this.hot.forceFullRender = true; // used when data was changed\n\n    return true;\n  }\n\n  /**\r\n   * Removes column from the data array.\r\n   *\r\n   * @fires Hooks#beforeRemoveCol\r\n   * @fires Hooks#afterRemoveCol\r\n   * @param {number} [index] Visual index of the column to be removed. If not provided, the last column will be removed.\r\n   * @param {number} [amount=1] Amount of the columns to be removed. If not provided, one column will be removed.\r\n   * @param {string} [source] Source of method call.\r\n   * @returns {boolean} Returns `false` when action was cancelled, otherwise `true`.\r\n   */\n  removeCol(index) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let source = arguments.length > 2 ? arguments[2] : undefined;\n    if (this.hot.dataType === 'object' || this.tableMeta.columns) {\n      throw new Error('cannot remove column with object data source or columns option specified');\n    }\n    let columnIndex = typeof index !== 'number' ? -amount : index;\n    columnIndex = (this.hot.countCols() + columnIndex) % this.hot.countCols();\n    const removedPhysicalIndexes = this.visualColumnsToPhysical(columnIndex, amount);\n    const descendingPhysicalColumns = removedPhysicalIndexes.slice(0).sort((a, b) => b - a);\n    const actionWasNotCancelled = this.hot.runHooks('beforeRemoveCol', columnIndex, amount, removedPhysicalIndexes, source);\n    if (actionWasNotCancelled === false) {\n      return false;\n    }\n    let isTableUniform = true;\n    const removedColumnsCount = descendingPhysicalColumns.length;\n    const data = this.dataSource;\n    for (let c = 0; c < removedColumnsCount; c++) {\n      if (isTableUniform && removedPhysicalIndexes[0] !== removedPhysicalIndexes[c] - c) {\n        isTableUniform = false;\n      }\n    }\n    if (isTableUniform) {\n      for (let r = 0, rlen = this.hot.countSourceRows(); r < rlen; r++) {\n        data[r].splice(removedPhysicalIndexes[0], amount);\n        if (r === 0) {\n          this.metaManager.removeColumn(removedPhysicalIndexes[0], amount);\n        }\n      }\n    } else {\n      for (let r = 0, rlen = this.hot.countSourceRows(); r < rlen; r++) {\n        for (let c = 0; c < removedColumnsCount; c++) {\n          data[r].splice(descendingPhysicalColumns[c], 1);\n          if (r === 0) {\n            this.metaManager.removeColumn(descendingPhysicalColumns[c], 1);\n          }\n        }\n      }\n    }\n\n    // TODO: Function `removeCol` should validate fully, probably above.\n    if (columnIndex < this.hot.countCols()) {\n      this.hot.columnIndexMapper.removeIndexes(removedPhysicalIndexes);\n\n      // All columns have been removed. There shouldn't be any rows.\n      if (this.hot.columnIndexMapper.getNotTrimmedIndexesLength() === 0) {\n        this.hot.rowIndexMapper.setIndexesSequence([]);\n      }\n    }\n    this.hot.runHooks('afterRemoveCol', columnIndex, amount, removedPhysicalIndexes, source);\n    this.hot.forceFullRender = true; // used when data was changed\n    this.refreshDuckSchema();\n    return true;\n  }\n\n  /**\r\n   * Add/Removes data from the column.\r\n   *\r\n   * @param {number} col Physical index of column in which do you want to do splice.\r\n   * @param {number} index Index at which to start changing the array. If negative, will begin that many elements from the end.\r\n   * @param {number} amount An integer indicating the number of old array elements to remove. If amount is 0, no elements are removed.\r\n   * @param {Array} [elements] The new columns to add.\r\n   * @returns {Array} Returns removed portion of columns.\r\n   */\n  spliceCol(col, index, amount) {\n    const colData = this.hot.getDataAtCol(col);\n    const removed = colData.slice(index, index + amount);\n    const after = colData.slice(index + amount);\n    for (var _len = arguments.length, elements = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      elements[_key - 3] = arguments[_key];\n    }\n    extendArray(elements, after);\n    let i = 0;\n    while (i < amount) {\n      elements.push(null); // add null in place of removed elements\n      i += 1;\n    }\n    to2dArray(elements);\n    this.hot.populateFromArray(index, col, elements, null, null, 'spliceCol');\n    return removed;\n  }\n\n  /**\r\n   * Add/Removes data from the row.\r\n   *\r\n   * @param {number} row Physical index of row in which do you want to do splice.\r\n   * @param {number} index Index at which to start changing the array. If negative, will begin that many elements from the end.\r\n   * @param {number} amount An integer indicating the number of old array elements to remove. If amount is 0, no elements are removed.\r\n   * @param {Array} [elements] The new rows to add.\r\n   * @returns {Array} Returns removed portion of rows.\r\n   */\n  spliceRow(row, index, amount) {\n    const rowData = this.hot.getSourceDataAtRow(row);\n    const removed = rowData.slice(index, index + amount);\n    const after = rowData.slice(index + amount);\n    for (var _len2 = arguments.length, elements = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      elements[_key2 - 3] = arguments[_key2];\n    }\n    extendArray(elements, after);\n    let i = 0;\n    while (i < amount) {\n      elements.push(null); // add null in place of removed elements\n      i += 1;\n    }\n    this.hot.populateFromArray(row, index, [elements], null, null, 'spliceRow');\n    return removed;\n  }\n\n  /**\r\n   * Add/remove row(s) to/from the data source.\r\n   *\r\n   * @param {number} index Physical index of the element to add/remove.\r\n   * @param {number} deleteCount Number of rows to remove.\r\n   * @param {Array<object>} elements Row elements to be added.\r\n   */\n  spliceData(index, deleteCount, elements) {\n    const continueSplicing = this.hot.runHooks('beforeDataSplice', index, deleteCount, elements);\n    if (continueSplicing !== false) {\n      const newData = [...this.dataSource.slice(0, index), ...elements, ...this.dataSource.slice(index)];\n\n      // We try not to change the reference.\n      this.dataSource.length = 0;\n\n      // Pushing to array instead of using `splice`, because Babel changes the code to one that uses the `apply` method.\n      // The used method was cause of the problem described within #7840.\n      newData.forEach(row => this.dataSource.push(row));\n    }\n  }\n\n  /**\r\n   * Filter unwanted data elements from the data source.\r\n   *\r\n   * @param {number} index Visual index of the element to remove.\r\n   * @param {number} amount Number of rows to add/remove.\r\n   * @param {number} physicalRows Physical row indexes.\r\n   */\n  filterData(index, amount, physicalRows) {\n    // Custom data filtering (run as a consequence of calling the below hook) provide an array containing new data.\n    let data = this.hot.runHooks('filterData', index, amount, physicalRows);\n\n    // Hooks by default returns first argument (when there is no callback changing execution result).\n    if (Array.isArray(data) === false) {\n      data = this.dataSource.filter((row, rowIndex) => physicalRows.indexOf(rowIndex) === -1);\n    }\n    this.dataSource.length = 0;\n    Array.prototype.push.apply(this.dataSource, data);\n  }\n\n  /**\r\n   * Returns single value from the data array.\r\n   *\r\n   * @param {number} row Visual row index.\r\n   * @param {number} prop The column property.\r\n   * @returns {*}\r\n   */\n  get(row, prop) {\n    const physicalRow = this.hot.toPhysicalRow(row);\n    let dataRow = this.dataSource[physicalRow];\n    // TODO: To remove, use 'modifyData' hook instead (see below)\n    const modifiedRowData = this.hot.runHooks('modifyRowData', physicalRow);\n    dataRow = isNaN(modifiedRowData) ? modifiedRowData : dataRow;\n    //\n\n    const {\n      dataDotNotation\n    } = this.hot.getSettings();\n    let value = null;\n\n    // try to get value under property `prop` (includes dot)\n    if (dataRow && dataRow.hasOwnProperty && hasOwnProperty(dataRow, prop)) {\n      value = dataRow[prop];\n    } else if (dataDotNotation && typeof prop === 'string' && prop.indexOf('.') > -1) {\n      let out = dataRow;\n      if (!out) {\n        return null;\n      }\n      const sliced = prop.split('.');\n      for (let i = 0, ilen = sliced.length; i < ilen; i++) {\n        out = out[sliced[i]];\n        if (typeof out === 'undefined') {\n          return null;\n        }\n      }\n      value = out;\n    } else if (typeof prop === 'function') {\n      value = prop(this.dataSource.slice(physicalRow, physicalRow + 1)[0]);\n    }\n    if (this.hot.hasHook('modifyData')) {\n      const valueHolder = createObjectPropListener(value);\n      this.hot.runHooks('modifyData', physicalRow, this.propToCol(prop), valueHolder, 'get');\n      if (valueHolder.isTouched()) {\n        value = valueHolder.value;\n      }\n    }\n    return value;\n  }\n\n  /**\r\n   * Returns single value from the data array (intended for clipboard copy to an external application).\r\n   *\r\n   * @param {number} row Physical row index.\r\n   * @param {number} prop The column property.\r\n   * @returns {string}\r\n   */\n  getCopyable(row, prop) {\n    if (this.hot.getCellMeta(row, this.propToCol(prop)).copyable) {\n      return this.get(row, prop);\n    }\n    return '';\n  }\n\n  /**\r\n   * Saves single value to the data array.\r\n   *\r\n   * @param {number} row Visual row index.\r\n   * @param {number} prop The column property.\r\n   * @param {string} value The value to set.\r\n   */\n  set(row, prop, value) {\n    const physicalRow = this.hot.toPhysicalRow(row);\n    let newValue = value;\n    let dataRow = this.dataSource[physicalRow];\n    // TODO: To remove, use 'modifyData' hook instead (see below)\n    const modifiedRowData = this.hot.runHooks('modifyRowData', physicalRow);\n    dataRow = isNaN(modifiedRowData) ? modifiedRowData : dataRow;\n    //\n\n    if (this.hot.hasHook('modifyData')) {\n      const valueHolder = createObjectPropListener(newValue);\n      this.hot.runHooks('modifyData', physicalRow, this.propToCol(prop), valueHolder, 'set');\n      if (valueHolder.isTouched()) {\n        newValue = valueHolder.value;\n      }\n    }\n    const {\n      dataDotNotation\n    } = this.hot.getSettings();\n\n    // try to set value under property `prop` (includes dot)\n    if (dataRow && dataRow.hasOwnProperty && hasOwnProperty(dataRow, prop)) {\n      dataRow[prop] = newValue;\n    } else if (dataDotNotation && typeof prop === 'string' && prop.indexOf('.') > -1) {\n      let out = dataRow;\n      let i = 0;\n      let ilen;\n      const sliced = prop.split('.');\n      for (i = 0, ilen = sliced.length - 1; i < ilen; i++) {\n        if (typeof out[sliced[i]] === 'undefined') {\n          out[sliced[i]] = {};\n        }\n        out = out[sliced[i]];\n      }\n      out[sliced[i]] = newValue;\n    } else if (typeof prop === 'function') {\n      prop(this.dataSource.slice(physicalRow, physicalRow + 1)[0], newValue);\n    } else {\n      dataRow[prop] = newValue;\n    }\n  }\n\n  /**\r\n   * This ridiculous piece of code maps rows Id that are present in table data to those displayed for user.\r\n   * The trick is, the physical row id (stored in settings.data) is not necessary the same\r\n   * as the visual (displayed) row id (e.g. When sorting is applied).\r\n   *\r\n   * @param {number} index Visual row index.\r\n   * @param {number} amount An amount of rows to translate.\r\n   * @returns {number}\r\n   */\n  visualRowsToPhysical(index, amount) {\n    const totalRows = this.hot.countSourceRows();\n    const logicRows = [];\n    let physicRow = (totalRows + index) % totalRows;\n    let rowsToRemove = amount;\n    let row;\n    while (physicRow < totalRows && rowsToRemove) {\n      row = this.hot.toPhysicalRow(physicRow);\n      logicRows.push(row);\n      rowsToRemove -= 1;\n      physicRow += 1;\n    }\n    return logicRows;\n  }\n\n  /**\r\n   *\r\n   * @param {number} index Visual column index.\r\n   * @param {number} amount An amount of rows to translate.\r\n   * @returns {Array}\r\n   */\n  visualColumnsToPhysical(index, amount) {\n    const totalCols = this.hot.countCols();\n    const visualCols = [];\n    let physicalCol = (totalCols + index) % totalCols;\n    let colsToRemove = amount;\n    while (physicalCol < totalCols && colsToRemove) {\n      const col = this.hot.toPhysicalColumn(physicalCol);\n      visualCols.push(col);\n      colsToRemove -= 1;\n      physicalCol += 1;\n    }\n    return visualCols;\n  }\n\n  /**\r\n   * Clears the data array.\r\n   */\n  clear() {\n    for (let r = 0; r < this.hot.countSourceRows(); r++) {\n      for (let c = 0; c < this.hot.countCols(); c++) {\n        this.set(r, this.colToProp(c), '');\n      }\n    }\n  }\n\n  /**\r\n   * Get data length.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLength() {\n    const maxRowsFromSettings = this.tableMeta.maxRows;\n    let maxRows;\n    if (maxRowsFromSettings < 0 || maxRowsFromSettings === 0) {\n      maxRows = 0;\n    } else {\n      maxRows = maxRowsFromSettings || Infinity;\n    }\n    const length = this.hot.rowIndexMapper.getNotTrimmedIndexesLength();\n    return Math.min(length, maxRows);\n  }\n\n  /**\r\n   * Returns the data array.\r\n   *\r\n   * @returns {Array}\r\n   */\n  getAll() {\n    const start = {\n      row: 0,\n      col: 0\n    };\n    const end = {\n      row: Math.max(this.hot.countRows() - 1, 0),\n      col: Math.max(this.hot.countCols() - 1, 0)\n    };\n    if (start.row - end.row === 0 && !this.hot.countSourceRows()) {\n      return [];\n    }\n    return this.getRange(start, end, DataMap.DESTINATION_RENDERER);\n  }\n\n  /**\r\n   * Count the number of columns cached in the `colToProp` cache.\r\n   *\r\n   * @returns {number} Amount of cached columns.\r\n   */\n  countCachedColumns() {\n    return this.colToPropCache.length;\n  }\n\n  /**\r\n   * Returns data range as array.\r\n   *\r\n   * @param {object} [start] Start selection position. Visual indexes.\r\n   * @param {object} [end] End selection position. Visual indexes.\r\n   * @param {number} destination Destination of datamap.get.\r\n   * @returns {Array}\r\n   */\n  getRange(start, end, destination) {\n    const output = [];\n    let r;\n    let c;\n    let row;\n    const maxRows = this.tableMeta.maxRows;\n    const maxCols = this.tableMeta.maxCols;\n    if (maxRows === 0 || maxCols === 0) {\n      return [];\n    }\n    const getFn = destination === DataMap.DESTINATION_CLIPBOARD_GENERATOR ? this.getCopyable : this.get;\n    const rlen = Math.min(Math.max(maxRows - 1, 0), Math.max(start.row, end.row));\n    const clen = Math.min(Math.max(maxCols - 1, 0), Math.max(start.col, end.col));\n    for (r = Math.min(start.row, end.row); r <= rlen; r++) {\n      row = [];\n      // We just store indexes for rows without headers.\n      const physicalRow = r >= 0 ? this.hot.toPhysicalRow(r) : r;\n      for (c = Math.min(start.col, end.col); c <= clen; c++) {\n        if (physicalRow === null) {\n          break;\n        }\n        row.push(getFn.call(this, r, this.colToProp(c)));\n      }\n      if (physicalRow !== null) {\n        output.push(row);\n      }\n    }\n    return output;\n  }\n\n  /**\r\n   * Return data as text (tab separated columns).\r\n   *\r\n   * @param {object} [start] Start selection position. Visual indexes.\r\n   * @param {object} [end] End selection position. Visual indexes.\r\n   * @returns {string}\r\n   */\n  getText(start, end) {\n    return stringify(this.getRange(start, end, DataMap.DESTINATION_RENDERER));\n  }\n\n  /**\r\n   * Return data as copyable text (tab separated columns intended for clipboard copy to an external application).\r\n   *\r\n   * @param {object} [start] Start selection position. Visual indexes.\r\n   * @param {object} [end] End selection position. Visual indexes.\r\n   * @returns {string}\r\n   */\n  getCopyableText(start, end) {\n    return stringify(this.getRange(start, end, DataMap.DESTINATION_CLIPBOARD_GENERATOR));\n  }\n\n  /**\r\n   * Destroy instance.\r\n   */\n  destroy() {\n    this.hot = null;\n    this.metaManager = null;\n    this.dataSource = null;\n    this.duckSchema = null;\n    this.colToPropCache.length = 0;\n    this.propToColCache.clear();\n    this.propToColCache = undefined;\n  }\n}\nexport default DataMap;", "import \"core-js/modules/es.error.cause.js\";\nimport staticRegister from \"../utils/staticRegister.mjs\";\nimport { registerEditor } from \"../editors/registry.mjs\";\nimport { registerRenderer } from \"../renderers/registry.mjs\";\nimport { registerValidator } from \"../validators/registry.mjs\";\nconst {\n  register,\n  getItem,\n  hasItem,\n  getNames,\n  getValues\n} = staticRegister('cellTypes');\n\n/**\r\n * Retrieve cell type object.\r\n *\r\n * @param {string} name Cell type identification.\r\n * @returns {object} Returns cell type object.\r\n */\nfunction _getItem(name) {\n  if (!hasItem(name)) {\n    throw Error(`You declared cell type \"${name}\" as a string that is not mapped to a known object.\n                 Cell type must be an object or a string mapped to an object registered by\n                 \"Handsontable.cellTypes.registerCellType\" method`);\n  }\n  return getItem(name);\n}\n\n/**\r\n * Register cell type under specified name.\r\n *\r\n * @param {string} name Cell type identification.\r\n * @param {object} type An object with contains keys (eq: `editor`, `renderer`, `validator`) which describes specified behaviour of the cell.\r\n */\nfunction _register(name, type) {\n  if (typeof name !== 'string') {\n    type = name;\n    name = type.CELL_TYPE;\n  }\n  const {\n    editor,\n    renderer,\n    validator\n  } = type;\n  if (editor) {\n    registerEditor(name, editor);\n  }\n  if (renderer) {\n    registerRenderer(name, renderer);\n  }\n  if (validator) {\n    registerValidator(name, validator);\n  }\n  register(name, type);\n}\nexport { _register as registerCellType, _getItem as getCellType, hasItem as hasCellType, getNames as getRegisteredCellTypeNames, getValues as getRegisteredCellTypes };", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { hasOwnProperty, isObject, objectEach, inherit, extend } from \"../../helpers/object.mjs\";\nimport { getCellType } from \"../../cellTypes/registry.mjs\";\n/**\r\n * Checks if the given property can be overwritten.\r\n *\r\n * @param {string} propertyName The property name to check.\r\n * @param {object} metaObject The current object meta settings.\r\n * @returns {boolean}\r\n */\nfunction canBeOverwritten(propertyName, metaObject) {\n  var _metaObject$_automati;\n  if (propertyName === 'CELL_TYPE') {\n    return false;\n  }\n  return ((_metaObject$_automati = metaObject._automaticallyAssignedMetaProps) === null || _metaObject$_automati === void 0 ? void 0 : _metaObject$_automati.has(propertyName)) || !hasOwnProperty(metaObject, propertyName);\n}\n\n/**\r\n * Expands \"type\" property of the meta object to single values. For example `type: 'numeric'` sets\r\n * \"renderer\", \"editor\", \"validator\" properties to specific functions designed for numeric values.\r\n * If \"type\" is passed as an object that object will be returned, excluding properties that\r\n * already exist in the \"metaObject\".\r\n *\r\n * The function utilizes `_automaticallyAssignedMetaProps` meta property that allows tracking what\r\n * properties are changed by the \"type\" expanding feature. That properties can be always overwritten by\r\n * the user.\r\n *\r\n * @param {object} metaObject The meta object.\r\n * @param {object} settings The settings object with the \"type\" setting.\r\n * @param {object} settingsToCompareWith The object to compare which properties need to be updated.\r\n */\nexport function extendByMetaType(metaObject, settings) {\n  let settingsToCompareWith = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : metaObject;\n  const validType = typeof settings.type === 'string' ? getCellType(settings.type) : settings.type;\n  if (metaObject._automaticallyAssignedMetaProps) {\n    objectEach(settings, (value, key) => void metaObject._automaticallyAssignedMetaProps.delete(key));\n  }\n  if (!isObject(validType)) {\n    return;\n  }\n  if (settingsToCompareWith === metaObject && !metaObject._automaticallyAssignedMetaProps) {\n    metaObject._automaticallyAssignedMetaProps = new Set();\n  }\n  const expandedType = {};\n  objectEach(validType, (value, property) => {\n    if (canBeOverwritten(property, settingsToCompareWith)) {\n      var _metaObject$_automati2;\n      expandedType[property] = value;\n      (_metaObject$_automati2 = metaObject._automaticallyAssignedMetaProps) === null || _metaObject$_automati2 === void 0 || _metaObject$_automati2.add(property);\n    }\n  });\n  extend(metaObject, expandedType);\n}\n\n/**\r\n * Creates new class which extends properties from TableMeta layer class.\r\n *\r\n * @param {TableMeta} TableMeta The TableMeta which the new ColumnMeta is created from.\r\n * @param {string[]} [conflictList] List of the properties which are conflicted with the column meta layer.\r\n *                                  Conflicted properties are overwritten by `undefined` value, to separate them\r\n *                                  from the TableMeta layer.\r\n * @returns {ColumnMeta} Returns constructor ready to initialize with `new` operator.\r\n */\nexport function columnFactory(TableMeta) {\n  let conflictList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  // Do not use ES6 \"class extends\" syntax here. It seems that the babel produces code\n  // which drastically decreases the performance of the ColumnMeta class creation.\n\n  /**\r\n   * Base \"class\" for column meta.\r\n   */\n  function ColumnMeta() {}\n  inherit(ColumnMeta, TableMeta);\n\n  // Clear conflict settings\n  for (let i = 0; i < conflictList.length; i++) {\n    ColumnMeta.prototype[conflictList[i]] = undefined;\n  }\n  return ColumnMeta;\n}\n\n/**\r\n * Helper which checks if the provided argument is an unsigned number.\r\n *\r\n * @param {*} value Value to check.\r\n * @returns {boolean}\r\n */\nexport function isUnsignedNumber(value) {\n  return Number.isInteger(value) && value >= 0;\n}\n\n/**\r\n * Function which makes assertion by custom condition. Function throws an error when assertion doesn't meet the spec.\r\n *\r\n * @param {Function} condition Function with custom logic. The condition has to return boolean values.\r\n * @param {string} errorMessage String which describes assertion error.\r\n */\nexport function assert(condition, errorMessage) {\n  if (!condition()) {\n    throw new Error(`Assertion failed: ${errorMessage}`);\n  }\n}\n\n/**\r\n * Check if given variable is null or undefined.\r\n *\r\n * @param {*} variable Variable to check.\r\n * @returns {boolean}\r\n */\nexport function isNullish(variable) {\n  return variable === null || variable === undefined;\n}", "import { isEmpty } from \"../../helpers/mixed.mjs\";\nimport { isObjectEqual } from \"../../helpers/object.mjs\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * @alias Options\r\n * @class Options\r\n * @description\r\n *\r\n * [Configuration options](@/guides/getting-started/configuration-options/configuration-options.md) let you heavily customize your Handsontable instance. For example, you can:\r\n *\r\n * - Enable and disable built-in features\r\n * - Enable and configure additional [plugins](@/api/plugins.md)\r\n * - Personalize Handsontable's look\r\n * - Adjust Handsontable's behavior\r\n * - Implement your own custom features\r\n *\r\n * ::: only-for javascript\r\n *\r\n * To apply [configuration options](@/guides/getting-started/configuration-options/configuration-options.md), pass them as\r\n * a second argument of the [Handsontable constructor](@/guides/getting-started/installation/installation.md#initialize-handsontable),\r\n * using the [object literal notation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer):\r\n *\r\n * Read more on the [Configuration options](@/guides/getting-started/configuration-options/configuration-options.md) page.\r\n *\r\n * ```js\r\n * const container = document.getElementById('example');\r\n *\r\n * const hot = new Handsontable(container, {\r\n *   // configuration options, in the object literal notation\r\n *   licenseKey: 'non-commercial-and-evaluation',\r\n *   data: [\r\n *     ['A1', 'B1', 'C1', 'D1', 'E1'],\r\n *     ['A2', 'B2', 'C2', 'D2', 'E2'],\r\n *     ['A3', 'B3', 'C3', 'D3', 'E3'],\r\n *     ['A4', 'B4', 'C4', 'D4', 'E4'],\r\n *     ['A5', 'B5', 'C5', 'D5', 'E5'],\r\n *   ],\r\n *   width: 400,\r\n *   height: 300,\r\n *   colHeaders: true,\r\n *   rowHeaders: true,\r\n *   customBorders: true,\r\n *   dropdownMenu: true,\r\n *   multiColumnSorting: true,\r\n *   filters: true,\r\n *   manualRowMove: true,\r\n * });\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n *\r\n * To apply configuration options, pass them as individual props\r\n * of the [`HotTable`](@/guides/getting-started/installation/installation.md#_4-use-the-hottable-component)\r\n * or [`HotColumn`](@/guides/columns/react-hot-column/react-hot-column.md) components.\r\n *\r\n * Read more on the [Configuration options](@/guides/getting-started/configuration-options/configuration-options.md) page.\r\n *\r\n * ```jsx\r\n * <HotTable\r\n *   // configuration options, in the object literal notation\r\n *   licenseKey='non-commercial-and-evaluation'\r\n *   data={[\r\n *     ['A1', 'B1', 'C1', 'D1', 'E1'],\r\n *     ['A2', 'B2', 'C2', 'D2', 'E2'],\r\n *     ['A3', 'B3', 'C3', 'D3', 'E3'],\r\n *     ['A4', 'B4', 'C4', 'D4', 'E4'],\r\n *     ['A5', 'B5', 'C5', 'D5', 'E5'],\r\n *   ]}\r\n *   width={400}\r\n *   height={300}\r\n *   colHeaders={true}\r\n *   rowHeaders={true}\r\n *   customBorders={true}\r\n *   dropdownMenu={true}\r\n *   multiColumnSorting={true}\r\n *   filters={true}\r\n *   manualRowMove={true}\r\n * />\r\n * ```\r\n * :::\r\n *\r\n * Depending on your needs, you can apply [configuration options](@/api/options.md) to different elements of your grid:\r\n * - [The entire grid](@/guides/getting-started/configuration-options/configuration-options.md#set-grid-options)\r\n * - [Individual columns](@/guides/getting-started/configuration-options/configuration-options.md#set-column-options)\r\n * - [Individual rows](@/guides/getting-started/configuration-options/configuration-options.md#set-row-options)\r\n * - [Individual cells](@/guides/getting-started/configuration-options/configuration-options.md#set-cell-options)\r\n * - [Individual grid elements, based on any logic you implement](@/guides/getting-started/configuration-options/configuration-options.md#implementing-custom-logic)\r\n *\r\n * Read more:\r\n * - [Configuration options](@/guides/getting-started/configuration-options/configuration-options.md)\r\n */\nexport default (() => {\n  return {\n    /* eslint-disable jsdoc/require-description-complete-sentence */\n\n    /**\r\n     * Information on which of the meta properties were added automatically.\r\n     * For example: setting the `renderer` property directly won't extend the `_automaticallyAssignedMetaProps`\r\n     * entry, but setting a `type` will modify it to `Set(3) {'renderer', 'editor', 'validator', ...}`.\r\n     *\r\n     * @private\r\n     * @type {Set}\r\n     * @default undefined\r\n     */\n    _automaticallyAssignedMetaProps: undefined,\n    /**\r\n     * The `activeHeaderClassName` option lets you add a CSS class name\r\n     * to every currently-active, currently-selected header (when a whole column or row is selected).\r\n     *\r\n     * Read more:\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @since 0.38.2\r\n     * @default 'ht__active_highlight'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add an `ht__active_highlight` CSS class name\r\n     * // to every currently-active, currently-selected header\r\n     * activeHeaderClassName: 'ht__active_highlight',\r\n     * ```\r\n     */\n    activeHeaderClassName: 'ht__active_highlight',\n    /**\r\n     * The `allowEmpty` option determines whether Handsontable accepts the following values:\r\n     * - `null`\r\n     * - `undefined`\r\n     * - `''`\r\n     *\r\n     * You can set the `allowEmpty` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                                                                          |\r\n     * | ---------------- | ------------------------------------------------------------------------------------------------------------------------------------ |\r\n     * | `true` (default) | - Accept `null`, `undefined` and `''` values<br>- Mark cells that contain `null`, `undefined` or `''` values as `valid`              |\r\n     * | `false`          | - Don't accept `null`, `undefined` and `''` values<br>- Mark cells that contain `null`, `undefined` or `''` values with as `invalid` |\r\n     *\r\n     * ::: tip\r\n     * To use the [`allowEmpty`](#allowempty) option, you need to set the [`validator`](#validator) option (or the [`type`](#type) option).\r\n     * :::\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // allow empty values in each cell of the entire grid\r\n     * allowEmpty: true,\r\n     *\r\n     * // or\r\n     * columns: [\r\n     *   {\r\n     *     type: 'date',\r\n     *     dateFormat: 'DD/MM/YYYY',\r\n     *     // allow empty values in each cell of the 'date' column\r\n     *     allowEmpty: true\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    allowEmpty: true,\n    /**\r\n     * The `allowHtml` option configures whether [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * and [`dropdown`](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md) cells' [`source`](#source) data\r\n     * is treated as HTML.\r\n     *\r\n     * You can set the `allowHtml` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                         |\r\n     * | ----------------- | --------------------------------------------------- |\r\n     * | `false` (default) | The [`source`](#source) data is not treated as HTML |\r\n     * | `true`            | The [`source`](#source) data is treated as HTML     |\r\n     *\r\n     * __Warning:__ Setting the `allowHtml` option to `true` can cause serious XSS vulnerabilities.\r\n     *\r\n     * Read more:\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * - [Dropdown cell type](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md)\r\n     * - [`source`](#source)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *   // set the `type` of each cell in this column to `autocomplete`\r\n     *   type: 'autocomplete',\r\n     *   // set options available in every `autocomplete` cell of this column\r\n     *   source: ['<strong>foo</strong>', '<strong>bar</strong>']\r\n     *   // use HTML in the `source` list\r\n     *   allowHtml: true,\r\n     *   },\r\n     * ],\r\n     * ```\r\n     */\n    allowHtml: false,\n    /**\r\n     * If set to `true`, the `allowInsertColumn` option adds the following menu items to the [context menu](@/guides/accessories-and-menus/context-menu/context-menu.md):\r\n     * - **Insert column left**\r\n     * - **Insert column right**\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // hide the 'Insert column left' and 'Insert column right' menu items from the context menu\r\n     * allowInsertColumn: false,\r\n     * ```\r\n     */\n    allowInsertColumn: true,\n    /**\r\n     * If set to `true`, the `allowInsertRow` option adds the following menu items to the [context menu](@/guides/accessories-and-menus/context-menu/context-menu.md):\r\n     * - **Insert row above**\r\n     * - **Insert row below**\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // hide the 'Insert row above' and 'Insert row below' menu items from the context menu\r\n     * allowInsertRow: false,\r\n     * ```\r\n     */\n    allowInsertRow: true,\n    /**\r\n     * The `allowInvalid` option determines whether Handsontable accepts values\r\n     * that were marked as `invalid` by the [cell validator](@/guides/cell-functions/cell-validator/cell-validator.md).\r\n     *\r\n     * You can set the `allowInvalid` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                                                                                                                        |\r\n     * | ---------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true` (default) | - Accept `invalid` values<br>- Allow the user to close the [cell editor](@/guides/cell-functions/cell-editor/cell-editor.md) with `invalid` values<br>- Save `invalid` values into the data source                   |\r\n     * | `false`          | - Don't accept `invalid` values<br>- Don't allow the user to close the [cell editor](@/guides/cell-functions/cell-editor/cell-editor.md) with `invalid` values<br>- Don't save `invalid` values into the data source |\r\n     *\r\n     * Setting the `allowInvalid` option to `false` can be useful when used with the [Autocomplete strict mode](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md#autocomplete-strict-mode).\r\n     *\r\n     * Read more:\r\n     * - [Cell validator](@/guides/cell-functions/cell-validator/cell-validator.md)\r\n     * - [Cell editor](@/guides/cell-functions/cell-editor/cell-editor.md)\r\n     * - [Autocomplete strict mode](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md#autocomplete-strict-mode)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // don't accept `invalid` values\r\n     * // don't allow the user to close the cell editor\r\n     * // don't save `invalid` values into the data source\r\n     * allowInvalid: false,\r\n     * ```\r\n     */\n    allowInvalid: true,\n    /**\r\n     * If set to `true`, the `allowRemoveColumn` option adds the following menu items to the [context menu](@/guides/accessories-and-menus/context-menu/context-menu.md):\r\n     * - **Remove column**\r\n     *\r\n     * Read more:\r\n     * - [Context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // hide the 'Remove column' menu item from the context menu\r\n     * allowRemoveColumn: false,\r\n     * ```\r\n     */\n    allowRemoveColumn: true,\n    /**\r\n     * If set to `true`, the `allowRemoveRow` option adds the following menu items to the [context menu](@/guides/accessories-and-menus/context-menu/context-menu.md):\r\n     * - **Remove row**\r\n     *\r\n     * Read more:\r\n     * - [Context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // hide the 'Remove row' menu item from the context menu\r\n     * allowRemoveRow: false,\r\n     * ```\r\n     */\n    allowRemoveRow: true,\n    /**\r\n     * If set to `true`, the accessibility-related ARIA tags will be added to the table. If set to `false`, they\r\n     * will be omitted.\r\n     * Defaults to `true`.\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     * @since 14.0.0\r\n     */\n    ariaTags: true,\n    /**\r\n     * The `autoColumnSize` option configures the [`AutoColumnSize`](@/api/autoColumnSize.md) plugin.\r\n     *\r\n     * You can set the `autoColumnSize` option to one of the following:\r\n     *\r\n     * | Setting   | Description                                                                                  |\r\n     * | --------- | -------------------------------------------------------------------------------------------- |\r\n     * | `false`   | Disable the [`AutoColumnSize`](@/api/autoColumnSize.md) plugin                               |\r\n     * | `true`    | Enable the [`AutoColumnSize`](@/api/autoColumnSize.md) plugin with the default configuration |\r\n     * | An object | Enable the [`AutoColumnSize`](@/api/autoColumnSize.md) plugin and modify the plugin options  |\r\n     *\r\n     * If you set the `autoColumnSize` option to an object, you can set the following [`AutoColumnSize`](@/api/autoColumnSize.md) plugin options:\r\n     *\r\n     * | Property                | Possible values                 | Description                                                                                                    |\r\n     * | ----------------------- | ------------------------------- | -------------------------------------------------------------------------------------------------------------- |\r\n     * | `syncLimit`             | A number \\| A percentage string | The number/percentage of columns to keep in sync<br>(default: `50`)                                            |\r\n     * | `useHeaders`            | `true` \\| `false`               | When calculating column widths:<br>`true`: use column headers<br>`false`: don't use column headers          |\r\n     * | `samplingRatio`         | A number                        | The number of samples of the same length to be used in column width calculations                               |\r\n     * | `allowSampleDuplicates` | `true` \\| `false`               | When calculating column widths:<br>`true`: Allow duplicate samples<br>`false`: Don't allow duplicate samples |\r\n     *\r\n     * By default, the `autoColumnSize` option is set to `undefined`,\r\n     * but the [`AutoColumnSize`](@/api/autoColumnSize.md) plugin acts as enabled.\r\n     * To disable the [`AutoColumnSize`](@/api/autoColumnSize.md) plugin completely,\r\n     * set the `autoColumnSize` option to `false`.\r\n     *\r\n     * Using the [`colWidths`](#colWidths) option forcibly disables the [`AutoColumnSize`](@/api/autoColumnSize.md) plugin.\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `AutoColumnSize`](@/api/autoColumnSize.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object|boolean}\r\n     * @default undefined\r\n     * @category AutoColumnSize\r\n     *\r\n     * @example\r\n     * ```js\r\n     * autoColumnSize: {\r\n     *   // keep 40% of columns in sync (the rest of columns: async)\r\n     *   syncLimit: '40%',\r\n     *   // when calculating column widths, use column headers\r\n     *   useHeaders: true,\r\n     *   // when calculating column widths, use 10 samples of the same length\r\n     *   samplingRatio: 10,\r\n     *   // when calculating column widths, allow duplicate samples\r\n     *   allowSampleDuplicates: true\r\n     * },\r\n     * ```\r\n     */\n    autoColumnSize: undefined,\n    /**\r\n     * The `autoRowSize` option configures the [`AutoRowSize`](@/api/autoRowSize.md) plugin.\r\n     *\r\n     * You can set the `autoRowSize` option to one of the following:\r\n     *\r\n     * | Setting   | Description                                                                            |\r\n     * | --------- | -------------------------------------------------------------------------------------- |\r\n     * | `false`   | Disable the [`AutoRowSize`](@/api/autoRowSize.md) plugin                               |\r\n     * | `true`    | Enable the [`AutoRowSize`](@/api/autoRowSize.md) plugin with the default configuration |\r\n     * | An object | Enable the [`AutoRowSize`](@/api/autoRowSize.md) plugin and modify the plugin options  |\r\n     *\r\n     * To give Handsontable's [scrollbar](https://handsontable.com/docs/8.0.0/demo-scrolling.html)\r\n     * a proper size, set the `autoRowSize` option to `true`.\r\n     *\r\n     * If you set the `autoRowSize` option to an object, you can set the following [`AutoRowSize`](@/api/autoRowSize.md) plugin options:\r\n     *\r\n     * | Property    | Possible values                 | Description                                                       |\r\n     * | ----------- | ------------------------------- | ----------------------------------------------------------------- |\r\n     * | `syncLimit` | A number \\| A percentage string | The number/percentage of rows to keep in sync<br>(default: `500`) |\r\n     *\r\n     * Using the [`rowHeights`](#rowHeights) option forcibly disables the [`AutoRowSize`](@/api/autoRowSize.md) plugin.\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `AutoRowSize`](@/api/autoRowSize.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object|boolean}\r\n     * @default undefined\r\n     * @category AutoRowSize\r\n     *\r\n     * @example\r\n     * ```js\r\n     * autoRowSize: {\r\n     *   // keep 40% of rows in sync (the rest of rows: async)\r\n     *   syncLimit: '40%'\r\n     * },\r\n     * ```\r\n     */\n    autoRowSize: undefined,\n    /**\r\n     * | Setting           | Description                                                                                                                                                                                                                                  |\r\n     * | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | When you select a bottom-most cell, pressing <kbd>**↓**</kbd> doesn't do anything.<br><br>When you select a top-most cell, pressing <kbd>**↑**</kbd> doesn't do anything.                                                                    |\r\n     * | `true`            | When you select a bottom-most cell, pressing <kbd>**↓**</kbd> takes you to the top-most cell of the next column.<br><br>When you select a top-most cell, pressing <kbd>**↑**</kbd> takes you to the bottom-most cell of the previous column. |\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // when you select a bottom-most cell, pressing ⬇ doesn't do anything\r\n     * // when you select a top-most cell, pressing ⬆ doesn't do anything\r\n     * autoWrapCol: false, // default setting\r\n     *\r\n     * // when you select a bottom-most cell, pressing ⬇ takes you to the top-most cell of the next column\r\n     * // when you select a top-most cell, pressing ⬆ takes you to the bottom-most cell of the previous column\r\n     * autoWrapCol: true,\r\n     * ```\r\n     */\n    autoWrapCol: false,\n    /**\r\n     * | Setting           | Description                                                                                                                                                                                                                                                                                                        |\r\n     * | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n     * | `false` (default) | When you select the first cell of a row, pressing <kbd>**←**</kbd>* (or <kbd>**Shift**</kbd>+<kbd>**Tab**</kbd>\\*\\*) doesn't do anything.<br><br>When you select the last cell of a row, pressing <kbd>**→**</kbd>* (or <kbd>**Tab**</kbd>**) doesn't do anything.                                                  |\r\n     * | `true`            | When you select the first cell of a row, pressing <kbd>**←**</kbd>* (or <kbd>**Shift**</kbd>+<kbd>**Tab**</kbd>\\*\\*) takes you to the last cell of the row above.<br><br>When you select the last cell of a row, pressing <kbd>**→**</kbd>* (or <kbd>**Tab**</kbd>**) takes you to the first cell of the row below. |\r\n     *\r\n     * \\* The exact key depends on your [`layoutDirection`](#layoutdirection) configuration.<br>\r\n     * \\*\\* Unless [`tabNavigation`](#tabnavigation) is set to `false`.\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // when you select the first cell of a row, pressing ⬅ (or Shift+Tab) doesn't do anything\r\n     * // when you select the last cell of a row, pressing ➡ (or Tab) doesn't do anything\r\n     * autoWrapRow: false, // default setting\r\n     *\r\n     * // when you select the first cell of a row, pressing ⬅ (or Shift+Tab) takes you to the last cell of the row above\r\n     * // when you select the last cell of a row, pressing ➡ (or Tab) takes you to the first cell of the row below\r\n     * autoWrapRow: true,\r\n     * ```\r\n     */\n    autoWrapRow: false,\n    /**\r\n     * @description\r\n     * The `bindRowsWithHeaders` option configures the [`BindRowsWithHeaders`](@/api/bindRowsWithHeaders.md) plugin.\r\n     *\r\n     * You can set the `bindRowsWithHeaders` option to one of the following:\r\n     *\r\n     * | Setting | Description                                                                  |\r\n     * | ------- | ---------------------------------------------------------------------------- |\r\n     * | `false` | Disable the the [`BindRowsWithHeaders`](@/api/bindRowsWithHeaders.md) plugin |\r\n     * | `true`  | Enable the the [`BindRowsWithHeaders`](@/api/bindRowsWithHeaders.md) plugin  |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `BindRowsWithHeaders`](@/api/bindRowsWithHeaders.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string}\r\n     * @default undefined\r\n     * @category BindRowsWithHeaders\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `BindRowsWithHeaders` plugin\r\n     * bindRowsWithHeaders: true\r\n     * ```\r\n     */\n    bindRowsWithHeaders: undefined,\n    /**\r\n     * The `cell` option lets you apply [configuration options](@/guides/getting-started/configuration-options/configuration-options.md) to individual cells.\r\n     *\r\n     * The `cell` option overwrites the [top-level grid options](@/guides/getting-started/configuration-options/configuration-options.md#set-grid-options),\r\n     * and the [`columns`](#columns) options.\r\n     *\r\n     * Read more:\r\n     * - [Configuration options: Setting cell options](@/guides/getting-started/configuration-options/configuration-options.md#set-cell-options)\r\n     * - [`columns`](#columns)\r\n     *\r\n     * @memberof Options#\r\n     * @type {Array[]}\r\n     * @default []\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the `cell` option to an array of objects\r\n     * cell: [\r\n     *   // make the cell with coordinates (0, 0) read-only\r\n     *   {\r\n     *     row: 0,\r\n     *     col: 0,\r\n     *     readOnly: true\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    cell: [],\n    /**\r\n     * @description\r\n     * The `cells` option lets you apply any other [configuration options](@/guides/getting-started/configuration-options/configuration-options.md) to\r\n     * individual grid elements (columns, rows, cells), based on any logic you implement.\r\n     *\r\n     * The `cells` option overwrites all other options (including options set by [`columns`](#columns) and [`cell`](#cell)).\r\n     * It takes the following parameters:\r\n     *\r\n     * | Parameter | Required | Type             | Description                                                                                                                                                                                                                                                                                                                             |\r\n     * | --------- | -------- | ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `row`     | Yes      | Number           | A physical row index                                                                                                                                                                                                                                                                                                                    |\r\n     * | `column`  | Yes      | Number           | A physical column index                                                                                                                                                                                                                                                                                                                 |\r\n     * | `prop`    | No       | String \\| Number | If [`data`](#data) is set to an [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays), `prop` is the same number as `column`.<br><br>If [`data`](#data) is set to an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects), `prop` is a property name for the column's data object. |\r\n     *\r\n     * Read more:\r\n     * - [Configuration options: Implementing custom logic](@/guides/getting-started/configuration-options/configuration-options.md#implement-custom-logic)\r\n     * - [Configuration options: Setting row options](@/guides/getting-started/configuration-options/configuration-options.md#set-row-options)\r\n     * - [`columns`](#columns)\r\n     * - [`cell`](#cell)\r\n     *\r\n     * @memberof Options#\r\n     * @type {Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the `cells` option to your custom function\r\n     * cells(row, column, prop) {\r\n     *   const cellProperties = { readOnly: false };\r\n     *   const visualRowIndex = this.instance.toVisualRow(row);\r\n     *   const visualColIndex = this.instance.toVisualColumn(column);\r\n     *\r\n     *   if (visualRowIndex === 0 && visualColIndex === 0) {\r\n     *     cellProperties.readOnly = true;\r\n     *   }\r\n     *\r\n     *   return cellProperties;\r\n     * },\r\n     * ```\r\n     */\n    cells: undefined,\n    /**\r\n     * The `checkedTemplate` option lets you configure what value\r\n     * a checked [`checkbox`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md) cell has.\r\n     *\r\n     * You can set the `checkedTemplate` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                                                                                                                              |\r\n     * | ---------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true` (default) | If a [`checkbox`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md) cell is checked,<br>the [`getDataAtCell`](@/api/core.md#getDataAtCell) method for this cell returns `true`                  |\r\n     * | A string         | If a [`checkbox`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md) cell is checked,<br>the [`getDataAtCell`](@/api/core.md#getDataAtCell) method for this cell returns a string of your choice |\r\n     *\r\n     * Read more:\r\n     * - [Checkbox cell type: Checkbox template](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md#checkbox-template)\r\n     * - [`getDataAtCell()`](@/api/core.md#getDataAtCell)\r\n     * - [`uncheckedTemplate`](#uncheckedTemplate)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string|number}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `checkbox`\r\n     *     // when checked, the cell's value is `true`\r\n     *     // when unchecked, the cell's value is `false`\r\n     *     type: 'checkbox',\r\n     *   },\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `checkbox`\r\n     *     type: 'checkbox',\r\n     *     // when checked, the cell's value is `'Yes'`\r\n     *     checkedTemplate: 'Yes',\r\n     *     // when unchecked, the cell's value is `'No'`\r\n     *     uncheckedTemplate: 'No'\r\n     *  }\r\n     * ],\r\n     * ```\r\n     */\n    checkedTemplate: undefined,\n    /**\r\n     * The `className` option lets you add CSS class names to every currently-selected element.\r\n     *\r\n     * You can set the `className` option to one of the following:\r\n     *\r\n     * | Setting             | Description                                                      |\r\n     * | ------------------- | ---------------------------------------------------------------- |\r\n     * | A string            | Add a single CSS class name to every currently-selected element  |\r\n     * | An array of strings | Add multiple CSS class names to every currently-selected element |\r\n     *\r\n     * ::: tip\r\n     * Don't change the `className` metadata of the [column summary](@/guides/columns/column-summary/column-summary.md) row.\r\n     * To style the summary row, use the class name assigned automatically by the [`ColumnSummary`](@/api/columnSummary.md) plugin: `columnSummaryResult`.\r\n     * :::\r\n     *\r\n     * To apply different CSS class names on different levels, use Handsontable's [cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration).\r\n     *\r\n     * Read more:\r\n     * - [Configuration options: Cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration)\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`placeholderCellClassName`](#placeholderCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string|string[]}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `your-class-name` CSS class name\r\n     * // to every currently-selected element\r\n     * className: 'your-class-name',\r\n     *\r\n     * // add `first-class-name` and `second-class-name` CSS class names\r\n     * // to every currently-selected element\r\n     * className: ['first-class-name', 'second-class-name'],\r\n     * ```\r\n     */\n    className: undefined,\n    /**\r\n     * The `colHeaders` option configures your grid's column headers.\r\n     *\r\n     * You can set the `colHeaders` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                                          |\r\n     * | -------- | -------------------------------------------------------------------- |\r\n     * | `true`   | Enable the default column headers ('A', 'B', 'C', ...)               |\r\n     * | `false`  | Disable column headers                                               |\r\n     * | An array | Define your own column headers (e.g. `['One', 'Two', 'Three', ...]`) |\r\n     * | A function | Define your own column headers, using a function                     |\r\n     *\r\n     * Read more:\r\n     * - [Column header](@/guides/columns/column-header/column-header.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string[]|Function}\r\n     * @default null\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the default column headers\r\n     * colHeaders: true,\r\n     *\r\n     * // set your own column headers\r\n     * colHeaders: ['One', 'Two', 'Three'],\r\n     *\r\n     * // set your own column headers, using a function\r\n     * colHeaders: function(visualColumnIndex) {\r\n     *   return `${visualColumnIndex} + : AB`;\r\n     * },\r\n     * ```\r\n     */\n    colHeaders: null,\n    /**\r\n     * @description\r\n     * The `collapsibleColumns` option configures the [`CollapsibleColumns`](@/api/collapsibleColumns.md) plugin.\r\n     *\r\n     * You can set the `collapsibleColumns` option to one of the following:\r\n     *\r\n     * | Setting              | Description                                                                                       |\r\n     * | -------------------- | ------------------------------------------------------------------------------------------------- |\r\n     * | `false`              | Disable the [`CollapsibleColumns`](@/api/collapsibleColumns.md) plugin                            |\r\n     * | `true`               | Enable the [`CollapsibleColumns`](@/api/collapsibleColumns.md) plugin                             |\r\n     * | An array of objects  | Enable the [`CollapsibleColumns`](@/api/collapsibleColumns.md) plugin for selected column headers |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `CollapsibleColumns`](@/api/collapsibleColumns.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object[]}\r\n     * @default undefined\r\n     * @category CollapsibleColumns\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable column collapsing for all headers\r\n     * collapsibleColumns: true,\r\n     *\r\n     * // enable column collapsing for selected headers\r\n     * collapsibleColumns: [\r\n     *   {row: -4, col: 1, collapsible: true},\r\n     *   {row: -3, col: 5, collapsible: true}\r\n     * ],\r\n     * ```\r\n     */\n    collapsibleColumns: undefined,\n    /**\r\n     * @description\r\n     * The `columnHeaderHeight` option configures the height of column headers.\r\n     *\r\n     * You can set the `columnHeaderHeight` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                         |\r\n     * | -------- | --------------------------------------------------- |\r\n     * | A number | Set the same height for every column header         |\r\n     * | An array | Set different heights for individual column headers |\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|number[]}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the same height for every column header\r\n     * columnHeaderHeight: 25,\r\n     *\r\n     * // set different heights for individual column headers\r\n     * columnHeaderHeight: [25, 30, 55],\r\n     * ```\r\n     */\n    columnHeaderHeight: undefined,\n    /**\r\n     * @description\r\n     * The `columns` option lets you apply any other [configuration options](@/guides/getting-started/configuration-options/configuration-options.md) to individual columns (or ranges of columns).\r\n     *\r\n     * You can set the `columns` option to one of the following:\r\n     * - An array of objects (each object represents one column)\r\n     * - A function that returns an array of objects\r\n     *\r\n     * The `columns` option overwrites the [top-level grid options](@/guides/getting-started/configuration-options/configuration-options.md#set-grid-options).\r\n     *\r\n     * When you use `columns`, the [`startCols`](#startCols), [`minCols`](#minCols), and [`maxCols`](#maxCols) options are ignored.\r\n     *\r\n     * Read more:\r\n     * - [Configuration options: Setting column options](@/guides/getting-started/configuration-options/configuration-options.md#set-column-options)\r\n     * - [`startCols`](#startCols)\r\n     * - [`minCols`](#minCols)\r\n     * - [`maxCols`](#maxCols)\r\n     * - [`data`](#data)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object[]|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the `columns` option to an array of objects\r\n     * // each object represents one column\r\n     * columns: [\r\n     *   {\r\n     *     // column options for the first (by physical index) column\r\n     *     type: 'numeric',\r\n     *     numericFormat: {\r\n     *       pattern: '0,0.00 $'\r\n     *     }\r\n     *   },\r\n     *   {\r\n     *     // column options for the second (by physical index) column\r\n     *     type: 'text',\r\n     *     readOnly: true\r\n     *   }\r\n     * ],\r\n     *\r\n     * // or set the `columns` option to a function, based on physical indexes\r\n     * columns(index) {\r\n     *   return {\r\n     *     type: index > 0 ? 'numeric' : 'text',\r\n     *     readOnly: index < 1\r\n     *   }\r\n     * }\r\n     * ```\r\n     */\n    columns: undefined,\n    /**\r\n     * @description\r\n     * The `columnSorting` option configures the [`ColumnSorting`](@/api/columnSorting.md) plugin.\r\n     *\r\n     * You can set the `columnSorting` option to one of the following:\r\n     *\r\n     * | Setting    | Description                                                                                                                            |\r\n     * | ---------- | -------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true`     | Enable the [`ColumnSorting`](@/api/columnSorting.md) plugin with the default configuration                                             |\r\n     * | `false`    | Disable the [`ColumnSorting`](@/api/columnSorting.md) plugin                                                                           |\r\n     * | An object  | - Enable the [`ColumnSorting`](@/api/columnSorting.md) plugin<br>- Modify the [`ColumnSorting`](@/api/columnSorting.md) plugin options |\r\n     *\r\n     * If you set the `columnSorting` option to an object,\r\n     * you can set the following [`ColumnSorting`](@/api/columnSorting.md) plugin options:\r\n     *\r\n     * | Option                   | Possible settings                                                                                                                                |\r\n     * | ------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n     * | `indicator`              | `true`: Display the arrow icon in the column header, to indicate a sortable column<br>`false`: Don't display the arrow icon in the column header  |\r\n     * | `headerAction`           | `true`: Enable clicking on the column header to sort the column<br>`false`: Disable clicking on the column header to sort the column             |\r\n     * | `sortEmptyCells`         | `true`: Sort empty cells as well<br>`false`: Place empty cells at the end                                                                        |\r\n     * | `compareFunctionFactory` | A [custom compare function](@/guides/rows/rows-sorting/rows-sorting.md#add-a-custom-comparator)                                                                |\r\n     *\r\n     * If you set the `columnSorting` option to an object,\r\n     * you can also sort individual columns at Handsontable's initialization.\r\n     * In the `columnSorting` object, add an object named `initialConfig`,\r\n     * with the following properties:\r\n     *\r\n     * | Option      | Possible settings   | Description                                                      |\r\n     * | ----------- | ------------------- | ---------------------------------------------------------------- |\r\n     * | `column`    | A number            | The index of the column that you want to sort at initialization  |\r\n     * | `sortOrder` | `'asc'` \\| `'desc'` | The sorting order:<br>`'asc'`: ascending<br>`'desc'`: descending |\r\n     *\r\n     * Read more:\r\n     * - [Rows sorting](@/guides/rows/rows-sorting/rows-sorting.md)\r\n     * - [Rows sorting: Custom compare functions](@/guides/rows/rows-sorting/rows-sorting.md#add-a-custom-comparator)\r\n     * - [`multiColumnSorting`](#multiColumnSorting)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object}\r\n     * @default undefined\r\n     * @category ColumnSorting\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `ColumnSorting` plugin\r\n     * columnSorting: true\r\n     *\r\n     * // enable the `ColumnSorting` plugin with custom configuration\r\n     * columnSorting: {\r\n     *   // sort empty cells as well\r\n     *   sortEmptyCells: true,\r\n     *   // display the arrow icon in the column header\r\n     *   indicator: true,\r\n     *   // disable clicking on the column header to sort the column\r\n     *   headerAction: false,\r\n     *   // add a custom compare function\r\n     *   compareFunctionFactory(sortOrder, columnMeta) {\r\n     *     return function(value, nextValue) {\r\n     *       // some value comparisons which will return -1, 0 or 1...\r\n     *     }\r\n     *   }\r\n     * }\r\n     *\r\n     * // enable the `ColumnSorting` plugin\r\n     * columnSorting: {\r\n     *   // at initialization, sort column 1 in ascending order\r\n     *   initialConfig: {\r\n     *     column: 1,\r\n     *     sortOrder: 'asc'\r\n     *   },\r\n     *   // at initialization, sort column 2 in descending order\r\n     *   initialConfig: {\r\n     *     column: 2,\r\n     *     sortOrder: 'desc'\r\n     *   }\r\n     * }\r\n     * ```\r\n     */\n    columnSorting: undefined,\n    /**\r\n     * @description\r\n     * The `columnSummary` option configures the [`ColumnSummary`](@/api/columnSummary.md) plugin.\r\n     *\r\n     * You can set the `columnSummary` option to an array of objects.\r\n     * Each object configures a single column summary, using the following properties:\r\n     *\r\n     * | Property                 | Possible values                                                         | Description                                                                                                                  |\r\n     * | ------------------------ | ----------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `sourceColumn`           | A number                                                                | [Column to summarize](@/guides/columns/column-summary/column-summary.md#step-2-select-cells-that-you-want-to-summarize)                     |\r\n     * | `ranges`                 | An array                                                                | [Ranges of rows to summarize](@/guides/columns/column-summary/column-summary.md#step-2-select-cells-that-you-want-to-summarize)             |\r\n     * | `type`                   | `'sum'` \\| `'min'` \\| `'max'` \\| `'count'` \\| `'average'` \\| `'custom'` | [Summary function](@/guides/columns/column-summary/column-summary.md#step-3-calculate-your-summary)                                         |\r\n     * | `destinationRow`         | A number                                                                | [Destination cell's row coordinate](@/guides/columns/column-summary/column-summary.md#step-4-provide-the-destination-cell-s-coordinates)    |\r\n     * | `destinationColumn`      | A number                                                                | [Destination cell's column coordinate](@/guides/columns/column-summary/column-summary.md#step-4-provide-the-destination-cell-s-coordinates) |\r\n     * | `forceNumeric`           | `true`  \\| `false`                                                      | [Treat non-numerics as numerics](@/guides/columns/column-summary/column-summary.md#force-numeric-values)                                  |\r\n     * | `reversedRowCoords`      | `true`  \\| `false`                                                      | [Reverse row coordinates](@/guides/columns/column-summary/column-summary.md#step-5-make-room-for-the-destination-cell)                      |\r\n     * | `suppressDataTypeErrors` | `true`  \\| `false`                                                      | [Suppress data type errors](@/guides/columns/column-summary/column-summary.md#throw-data-type-errors)                                    |\r\n     * | `readOnly`               | `true`  \\| `false`                                                      | Make summary cell read-only                                                                                                  |\r\n     * | `roundFloat`             | `true`  \\| `false`  \\| A number                                         | [Round summary result](@/guides/columns/column-summary/column-summary.md#round-a-column-summary-result)                                  |\r\n     * | `customFunction`         | A function                                                              | [Custom summary function](@/guides/columns/column-summary/column-summary.md#implement-a-custom-summary-function)                         |\r\n     *\r\n     * Read more:\r\n     * - [Column summary](@/guides/columns/column-summary/column-summary.md)\r\n     * - [Plugins: `ColumnSummary`](@/api/columnSummary.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object[]|Function}\r\n     * @default undefined\r\n     * @category ColumnSummary\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columnSummary: [\r\n     *   {\r\n     *     sourceColumn: 0,\r\n     *     ranges: [\r\n     *       [0, 2], [4], [6, 8]\r\n     *     ],\r\n     *     type: 'custom',\r\n     *     destinationRow: 4,\r\n     *     destinationColumn: 1,\r\n     *     forceNumeric: true,\r\n     *     reversedRowCoords: true,\r\n     *     suppressDataTypeErrors: false,\r\n     *     readOnly: true,\r\n     *     roundFloat: false,\r\n     *     customFunction(endpoint) {\r\n     *        return 100;\r\n     *     }\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    columnSummary: undefined,\n    /**\r\n     * The `colWidths` option sets columns' widths, in pixels.\r\n     *\r\n     * The default column width is 50px. To change it, set the `colWidths` option to one of the following:\r\n     *\r\n     * | Setting     | Description                                                                                          | Example                                                           |\r\n     * | ----------- | ---------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------- |\r\n     * | A number    | Set the same width for every column                                                                  | `colWidths: 100`                                                  |\r\n     * | A string    | Set the same width for every column                                                                  | `colWidths: '100px'`                                              |\r\n     * | An array    | Set widths separately for each column                                                                | `colWidths: [100, 120, undefined]`                                |\r\n     * | A function  | Set column widths dynamically,<br>on each render                                                     | `colWidths(visualColumnIndex) { return visualColumnIndex * 10; }` |\r\n     * | `undefined` | Used by the [modifyColWidth](@/api/hooks.md#modifyColWidth) hook,<br>to detect column width changes. | `colWidths: undefined`                                            |\r\n     *\r\n     * Setting `colWidths` even for a single column disables the {@link AutoColumnSize} plugin\r\n     * for all columns. For this reason, if you use `colWidths`, we recommend you set a width for each one\r\n     * of your columns. Otherwise, every column with an undefined width defaults back to 50px,\r\n     * which may cut longer columns names.\r\n     *\r\n     * Read more:\r\n     * - [Column width](@/guides/columns/column-width/column-width.md)\r\n     * - [Hooks: `modifyColWidth`](@/api/hooks.md#modifyColWidth)\r\n     * - [`autoColumnSize`](#autoColumnSize)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|number[]|string|string[]|Array<undefined>|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set every column's width to 100px\r\n     * colWidths: 100,\r\n     *\r\n     * // set every column's width to 100px\r\n     * colWidths: '100px',\r\n     *\r\n     * // set the first (by visual index) column's width to 100\r\n     * // set the second (by visual index) column's width to 120\r\n     * // set the third (by visual index) column's width to `undefined`, so that it defaults to 50px\r\n     * // set any other column's width to the default 50px (note that longer cell values and column names can get cut)\r\n     * colWidths: [100, 120, undefined],\r\n     *\r\n     * // set each column's width individually, using a function\r\n     * colWidths(visualColumnIndex) {\r\n     *   return visualColumnIndex * 10;\r\n     * },\r\n     * ```\r\n     */\n    colWidths: undefined,\n    /**\r\n     * The `commentedCellClassName` option lets you add a CSS class name to cells\r\n     * that have comments.\r\n     *\r\n     * Read more:\r\n     * - [Comments](@/guides/cell-features/comments/comments.md)\r\n     * - [`comments`](#comments)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`placeholderCellClassName`](#placeholderCellClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'htCommentCell'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `has-comment` CSS class name\r\n     * // to each cell that has a comment\r\n     * commentedCellClassName: 'has-comment',\r\n     * ```\r\n     */\n    commentedCellClassName: 'htCommentCell',\n    /**\r\n     * @description\r\n     * The `comments` option configures the [`Comments`](@/api/comments.md) plugin.\r\n     *\r\n     * You can set the `comments` option to one of the following:\r\n     *\r\n     * | Setting   | Description                                                                                                                                                                           |\r\n     * | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true`    | - Enable the [`Comments`](@/api/comments.md) plugin<br>- Add comment menu items to the [context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)                                 |\r\n     * | `false`   | Disable the [`Comments`](@/api/comments.md) plugin                                                                                                                                    |\r\n     * | An object | - Enable the [`Comments`](@/api/comments.md) plugin<br>- Add comment menu items to the [context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)<br>- Configure comment settings |\r\n     *\r\n     * If you set the `comments` option to an object, you can configure the following comment options:\r\n     *\r\n     * | Option         | Possible settings           | Description                                         |\r\n     * | -------------- | --------------------------- | --------------------------------------------------- |\r\n     * | `displayDelay` | A number (default: `250`)   | Display comments after a delay (in milliseconds)    |\r\n     * | `readOnly`     | `true` \\| `false` (default) | `true`: Make comments read-only                     |\r\n     * | `style`        | An object                   | Set comment boxes' `width` and `height` (in pixels) |\r\n     *\r\n     * Read more:\r\n     * - [Comments](@/guides/cell-features/comments/comments.md)\r\n     * - [Context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)\r\n     * - [`width`](#width)\r\n     * - [`height`](#height)\r\n     * - [`readOnly`](#readOnly)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object[]}\r\n     * @default false\r\n     * @category Comments\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `Comments` plugin\r\n     * comments: true,\r\n     *\r\n     * // enable the `Comments` plugin\r\n     * // and configure its settings\r\n     * comments: {\r\n     *   // display all comments with a 1-second delay\r\n     *   displayDelay: 1000,\r\n     *   // make all comments read-only\r\n     *   readOnly: true,\r\n     *   // set the default size of all comment boxes\r\n     *   style: {\r\n     *     width: 300,\r\n     *     height: 100\r\n     *   }\r\n     * }\r\n     * ```\r\n     */\n    comments: false,\n    /**\r\n     * @description\r\n     * The `contextMenu` option configures the [`ContextMenu`](@/api/contextMenu.md) plugin.\r\n     *\r\n     * You can set the `contextMenu` option to one of the following:\r\n     *\r\n     * | Setting   | Description                                                                                                                                                                                             |\r\n     * | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false`   | Disable the [`ContextMenu`](@/api/contextMenu.md) plugin                                                                                                                                                |\r\n     * | `true`    | - Enable the [`ContextMenu`](@/api/contextMenu.md) plugin<br>- Use the [default context menu options](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-default-options)                 |\r\n     * | An array  | - Enable the [`ContextMenu`](@/api/contextMenu.md) plugin<br>- Modify [individual context menu options](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options)              |\r\n     * | An object | - Enable the [`ContextMenu`](@/api/contextMenu.md) plugin<br>- Apply a [custom context menu configuration](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-a-fully-custom-configuration) |\r\n     *\r\n     * Read more:\r\n     * - [Context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)\r\n     * - [Context menu: Context menu with default options](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-default-options)\r\n     * - [Context menu: Context menu with specific options](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options)\r\n     * - [Context menu: Context menu with fully custom configuration options](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-a-fully-custom-configuration)\r\n     * - [Plugins: `ContextMenu`](@/api/contextMenu.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string[]|object}\r\n     * @default undefined\r\n     * @category ContextMenu\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `ContextMenu` plugin\r\n     * // use the default context menu options\r\n     * contextMenu: true,\r\n     *\r\n     * // enable the `ContextMenu` plugin\r\n     * // and modify individual context menu options\r\n     * contextMenu: ['row_above', 'row_below', '---------', 'undo', 'redo'],\r\n     *\r\n     * // enable the `ContextMenu` plugin\r\n     * // and apply a custom context menu configuration\r\n     * contextMenu: {\r\n     *   items: {\r\n     *     'option1': {\r\n     *       name: 'Option 1'\r\n     *     },\r\n     *     'option2': {\r\n     *       name: 'Option 2',\r\n     *       submenu: {\r\n     *         items: [\r\n     *           {\r\n     *             key: 'option2:suboption1',\r\n     *             name: 'Suboption 1',\r\n     *             callback: function(key, options) {\r\n     *               ...\r\n     *             }\r\n     *           },\r\n     *           ...\r\n     *         ]\r\n     *       }\r\n     *     }\r\n     *   }\r\n     * },\r\n     * ```\r\n     */\n    contextMenu: undefined,\n    /**\r\n     * @description\r\n     * The `copyable` option determines whether a cell's value can be copied to the clipboard or not.\r\n     *\r\n     * You can set the `copyable` option to one of the following:\r\n     *\r\n     * | Setting                                                                                                        | Description                                                                                                            |\r\n     * | -------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true` (default)                                                                                               | - On pressing <kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd>+<kbd>**C**</kbd>, add the cell's value to the clipboard         |\r\n     * | `false`<br>(default for the [`password`](@/guides/cell-types/password-cell-type/password-cell-type.md) [cell type](#type))        | - On pressing <kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd>+<kbd>**C**</kbd>, add an empty string (`\"\"`) to the clipboard   |\r\n     *\r\n     * Read more:\r\n     * - [Clipboard](@/guides/cell-features/clipboard/clipboard.md)\r\n     * - [Configuration options: Cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration)\r\n     * - [Password cell type](@/guides/cell-types/password-cell-type/password-cell-type.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable copying for each cell of the entire grid\r\n     * copyable: true,\r\n     *\r\n     * // enable copying for individual columns\r\n     * columns: [\r\n     *   {\r\n     *     // enable copying for each cell of this column\r\n     *     copyable: true\r\n     *   },\r\n     *   {\r\n     *     // disable copying for each cell of this column\r\n     *     copyable: false\r\n     *   }\r\n     * ]\r\n     *\r\n     * // enable copying for specific cells\r\n     * cell: [\r\n     *   {\r\n     *     col: 0,\r\n     *     row: 0,\r\n     *     // disable copying for cell (0, 0)\r\n     *     copyable: false,\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    copyable: true,\n    /**\r\n     * The `copyPaste` option configures the [`CopyPaste`](@/api/copyPaste.md) plugin.\r\n     *\r\n     * You can set the `copyPaste` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                                            |\r\n     * | ----------------- | ---------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true` (default)  | Enable the [`CopyPaste`](@/api/copyPaste.md) plugin with the default configuration                                     |\r\n     * | `false`           | Disable the [`CopyPaste`](@/api/copyPaste.md) plugin                                                                   |\r\n     * | An object         | - Enable the [`CopyPaste`](@/api/copyPaste.md) plugin<br>- Modify the [`CopyPaste`](@/api/copyPaste.md) plugin options |\r\n     *\r\n     * ##### copyPaste: Additional options\r\n     *\r\n     * If you set the `copyPaste` option to an object, you can set the following `CopyPaste` plugin options:\r\n     *\r\n     * | Option                   | Possible settings                                  | Description                                                                                                                                                                                         |\r\n     * | ------------------------ | -------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `columnsLimit`           | A number (default: `Infinity`)                     | The maximum number of columns that can be copied                                                                                                                                                    |\r\n     * | `rowsLimit`              | A number (default: `Infinity`)                     | The maximum number of columns that can be copied                                                                                                                                                    |\r\n     * | `pasteMode`              | `'overwrite'` \\| `'shift_down'` \\| `'shift_right'` | When pasting:<br>`'overwrite'`: overwrite the currently-selected cells<br>`'shift_down'`: move the currently-selected cells down<br>`'shift_right'`: move the currently-selected cells to the right |\r\n     * | `copyColumnHeaders`      | Boolean (default: `false`)                         | `true`: add a context menu option for copying cells along with their nearest column headers                                                                                                         |\r\n     * | `copyColumnGroupHeaders` | Boolean (default: `false`)                         | `true`: add a context menu option for copying cells along with all their related columns headers                                                                                                    |\r\n     * | `copyColumnHeadersOnly`  | Boolean (default: `false`)                         | `true`: add a context menu option for copying column headers nearest to the selected cells (without copying cells)                                                                    |\r\n     * | `uiContainer`            | An HTML element                                    | The UI container for the secondary focusable element                                                                                                                                                |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `CopyPaste`](@/api/copyPaste.md)\r\n     * - [Guides: Clipboard](@/guides/cell-features/clipboard/clipboard.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object|boolean}\r\n     * @default true\r\n     * @category CopyPaste\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the plugin with the default configuration\r\n     * copyPaste: true // set by default\r\n     *\r\n     * // disable the plugin\r\n     * copyPaste: false,\r\n     *\r\n     * // enable the plugin with a custom configuration\r\n     * copyPaste: {\r\n     *   // set a maximum number of columns that can be copied\r\n     *   columnsLimit: 25,\r\n     *\r\n     *   // set a maximum number of rows that can be copied\r\n     *   rowsLimit: 50,\r\n     *\r\n     *   // set the paste behavior\r\n     *   pasteMode: 'shift_down',\r\n     *\r\n     *   // add the option to copy cells along with their nearest column headers\r\n     *   copyColumnHeaders: true,\r\n     *\r\n     *   // add the option to copy cells along with all their related columns headers\r\n     *   copyColumnGroupHeaders: true,\r\n     *\r\n     *   // add the option to copy just column headers (without copying cells)\r\n     *   copyColumnHeadersOnly: true,\r\n     *\r\n     *   // set a UI container\r\n     *   uiContainer: document.body,\r\n     * },\r\n     * ```\r\n     */\n    copyPaste: true,\n    /**\r\n     * The `correctFormat` option configures whether incorrectly-formatted times and dates are amended or not.\r\n     *\r\n     * When the user enters dates and times, Handsontable can automatically adjust their format\r\n     * to match the [`dateFormat`](#dateFormat) and [`timeFormat`](@/guides/cell-types/time-cell-type/time-cell-type.md) settings.\r\n     *\r\n     * You can set the `correctFormat` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                                                                               |\r\n     * | ----------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | Don't correct the format of the entered date or time (treat the entered date or time as invalid)                                                          |\r\n     * | `true`            | Correct the format of the entered date or time to match the [`dateFormat`](#dateFormat) or [`timeFormat`](@/guides/cell-types/time-cell-type/time-cell-type.md) settings |\r\n     *\r\n     * Read more:\r\n     * - [Date cell type](@/guides/cell-types/date-cell-type/date-cell-type.md)\r\n     * - [Time cell type](@/guides/cell-types/time-cell-type/time-cell-type.md)\r\n     * - [`dateFormat`](#dateFormat)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *   // set the `type` of each cell in this column to `date`\r\n     *   type: 'date',\r\n     *   // for every `date` cell of this column, set the date format to `YYYY-MM-DD`\r\n     *   dateFormat: 'YYYY-MM-DD',\r\n     *   // enforce the `YYYY-MM-DD` date format\r\n     *   correctFormat: true\r\n     *   },\r\n     *\r\n     *   {\r\n     *   // set the `type` of each cell in this column to `time`\r\n     *   type: 'time',\r\n     *   // for every `time` cell of this column, set the time format to `h:mm:ss a`\r\n     *   timeFormat: 'h:mm:ss a',\r\n     *   // enforce the `h:mm:ss a` time format\r\n     *   correctFormat: true\r\n     *   },\r\n     * ],\r\n     * ```\r\n     */\n    correctFormat: false,\n    /**\r\n     * The `currentColClassName` option lets you add a CSS class name\r\n     * to each cell of the currently-visible, currently-selected columns.\r\n     *\r\n     * Read more:\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`placeholderCellClassName`](#placeholderCellClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `your-class-name` CSS class name\r\n     * // to each cell of the currently-visible, currently-selected columns\r\n     * currentColClassName: 'your-class-name',\r\n     * ```\r\n     */\n    currentColClassName: undefined,\n    /**\r\n     * The `currentHeaderClassName` option lets you add a CSS class name\r\n     * to every currently-visible, currently-selected header.\r\n     *\r\n     * Read more:\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'ht__highlight'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add an `ht__highlight` CSS class name\r\n     * // to every currently-visible, currently-selected header\r\n     * currentHeaderClassName: 'ht__highlight',\r\n     * ```\r\n     */\n    currentHeaderClassName: 'ht__highlight',\n    /**\r\n     * The `currentRowClassName` option lets you add a CSS class name\r\n     * to each cell of the currently-visible, currently-selected rows.\r\n     *\r\n     * Read more:\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`placeholderCellClassName`](#placeholderCellClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `your-class-name` CSS class name\r\n     * // to each cell of the currently-visible, currently-selected rows\r\n     * currentRowClassName: 'your-class-name',\r\n     * ```\r\n     */\n    currentRowClassName: undefined,\n    /**\r\n     * @description\r\n     * The `customBorders` option configures the [`CustomBorders`](@/api/customBorders.md) plugin.\r\n     *\r\n     * To enable the [`CustomBorders`](@/api/customBorders.md) plugin\r\n     * (and add its menu items to the [context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)),\r\n     * set the `customBorders` option to `true`.\r\n     *\r\n     * To enable the [`CustomBorders`](@/api/customBorders.md) plugin\r\n     * and add a predefined border around a particular cell,\r\n     * set the `customBorders` option to an array of objects.\r\n     * Each object represents a border configuration for one cell, and has the following properties:\r\n     *\r\n     * | Property | Sub-properties     | Types                              | Description                                                       |\r\n     * | -------- | ------------------ | ---------------------------------- | ----------------------------------------------------------------- |\r\n     * | `row`    | -                  | `row`: Number                      | The cell's row coordinate.                                        |\r\n     * | `col`    | -                  | `col`: Number                      | The cell's column coordinate.                                     |\r\n     * | `start`  | `width`<br>`color` | `width`: Number<br>`color`: String | If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is LTR (default): `start` sets the width (`width`) and color (`color`) of the left-hand border.<br><br>If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is RTL: `start` sets the width (`width`) and color (`color`) of the right-hand border. |\r\n     * | `end`    | `width`<br>`color` | `width`: Number<br>`color`: String | If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is LTR (default): `end` sets the width (`width`) and color (`color`) of the right-hand border.<br><br>If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is RTL: `end` sets the width (`width`) and color (`color`) of the left-hand border. |\r\n     * | `top`    | `width`<br>`color` | `width`: Number<br>`color`: String | Sets the width (`width`) and color (`color`) of the top border. |\r\n     * | `bottom` | `width`<br>`color` | `width`: Number<br>`color`: String | Sets the width (`width`) and color (`color`) of the bottom border. |\r\n     *\r\n     * To enable the [`CustomBorders`](@/api/customBorders.md) plugin\r\n     * and add a predefined border around a range of cells,\r\n     * set the `customBorders` option to an array of objects.\r\n     * Each object represents a border configuration for a single range of cells, and has the following properties:\r\n     *\r\n     * | Property | Sub-properties                               | Types                                                            | Description                                                                                  |\r\n     * | -------- | -------------------------------------------- | ---------------------------------------------------------------- | -------------------------------------------------------------------------------------------- |\r\n     * | `range`  | `from` {`row`, `col`}<br>`to` {`row`, `col`} | `from`: Object<br>`to`: Object<br>`row`: Number<br>`col`: Number | If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is LTR (default):<br>- `from` selects the range's top-left corner.<br>- `to` selects the range's bottom-right corner.<br><br>If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is RTL: <br>- `from` selects the range's top-right corner.<br>- `to` selects the range's bottom-left corner. |\r\n     * | `start`  | `width`<br>`color` | `width`: Number<br>`color`: String | If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is LTR (default): `start` sets the width (`width`) and color (`color`) of the left-hand border.<br><br>If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is RTL: `start` sets the width (`width`) and color (`color`) of the right-hand border. |\r\n     * | `end`    | `width`<br>`color` | `width`: Number<br>`color`: String | If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is LTR (default): `end` sets the width (`width`) and color (`color`) of the right-hand border.<br><br>If the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is RTL: `end` sets the width (`width`) and color (`color`) of the left-hand border. |\r\n     * | `top`    | `width`<br>`color`                           | `width`: Number<br>`color`: String                               | Sets the width (`width`) and color (`color`) of the top border. |\r\n     * | `bottom` | `width`<br>`color`                           | `width`: Number<br>`color`: String                               | Sets the width (`width`) and color (`color`) of the bottom border. |\r\n     *\r\n     * Read more:\r\n     * - [Formatting cells: Custom cell borders](@/guides/cell-features/formatting-cells/formatting-cells.md#custom-cell-borders)\r\n     * - [Context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)\r\n     * - [Plugins: `CustomBorders`](@/api/customBorders.md)\r\n     * - [Layout direction](@/guides/internationalization/layout-direction/layout-direction.md)\r\n     * - [`layoutDirection`](#layoutDirection)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object[]}\r\n     * @default false\r\n     * @category CustomBorders\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `CustomBorders` plugin\r\n     * customBorders: true,\r\n     *\r\n     * // enable the `CustomBorders` plugin\r\n     * // and add a predefined border for a particular cell\r\n     * customBorders: [\r\n     *   // add an object with a border configuration for one cell\r\n     *   {\r\n     *     // set the cell's row coordinate\r\n     *     row: 2,\r\n     *     // set the cell's column coordinate\r\n     *     col: 2,\r\n     *     // set the left/right border's width and color\r\n     *     start: {\r\n     *       width: 2,\r\n     *       color: 'red'\r\n     *     },\r\n     *     // set the right/left border's width and color\r\n     *     end: {\r\n     *       width: 1,\r\n     *       color: 'green'\r\n     *     },\r\n     *     // set the top border's width and color\r\n     *     top: '',\r\n     *     // set the bottom border's width and color\r\n     *     bottom: ''\r\n     *   }\r\n     * ],\r\n     *\r\n     * // enable the `CustomBorders` plugin\r\n     * // and add a predefined border for a range of cells\r\n     * customBorders: [\r\n     *   // add an object with a border configuration for one range of cells\r\n     *   {\r\n     *     // select a range of cells\r\n     *     range: {\r\n     *       // set the range's top-left corner\r\n     *       from: {\r\n     *         row: 1,\r\n     *         col: 1\r\n     *       },\r\n     *       // set the range's bottom-right corner\r\n     *       to: {\r\n     *         row: 3,\r\n     *         col: 4\r\n     *       }\r\n     *     },\r\n     *     // set the left/right border's width and color\r\n     *     start: {\r\n     *       width: 2,\r\n     *       color: 'red'\r\n     *     },\r\n     *     // set the right/left border's width and color\r\n     *     end: {},\r\n     *     // set the top border's width and color\r\n     *     top: {},\r\n     *     // set the bottom border's width and color\r\n     *     bottom: {}\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    customBorders: false,\n    /**\r\n     * @description\r\n     * The `data` option sets the initial [data](@/guides/getting-started/binding-to-data/binding-to-data.md) of your Handsontable instance.\r\n     *\r\n     * Handsontable's data is bound to your source data by reference (i.e. when you edit Handsontable's data, your source data alters as well).\r\n     *\r\n     * You can set the `data` option:\r\n     * - Either to an [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays).\r\n     * - Or to an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects).\r\n     *\r\n     * If you don't set the `data` option (or set it to `null`), Handsontable renders as an empty 5x5 grid by default.\r\n     *\r\n     * Read more:\r\n     * - [Binding to data](@/guides/getting-started/binding-to-data/binding-to-data.md)\r\n     * - [`dataSchema`](#dataSchema)\r\n     * - [`startRows`](#startRows)\r\n     * - [`startCols`](#startCols)\r\n     *\r\n     * @memberof Options#\r\n     * @type {Array[]|object[]}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // as an array of arrays\r\n     * data: [\r\n     *   ['A', 'B', 'C'],\r\n     *   ['D', 'E', 'F'],\r\n     *   ['G', 'H', 'J']\r\n     * ]\r\n     *\r\n     * // as an array of objects\r\n     * data: [\r\n     *   {id: 1, name: 'Ted Right'},\r\n     *   {id: 2, name: 'Frank Honest'},\r\n     *   {id: 3, name: 'Joan Well'},\r\n     *   {id: 4, name: 'Gail Polite'},\r\n     *   {id: 5, name: 'Michael Fair'},\r\n     * ]\r\n     * ```\r\n     */\n    data: undefined,\n    /**\r\n     * @description\r\n     * If `true`, Handsontable will interpret the dots in the columns mapping as a nested object path. If your dataset contains\r\n     * the dots in the object keys and you don't want Handsontable to interpret them as a nested object path, set this option to `false`.\r\n     *\r\n     * The option only works when defined in the global table settings.\r\n     *\r\n     * @since 14.4.0\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // All dots are interpreted as nested object paths\r\n     * dataDotNotation: true,\r\n     * data: [\r\n     *   { id: 1, name: { first: 'Ted', last: 'Right' }, user: { address: '1234 Any Street' } },\r\n     * ],\r\n     * columns={[\r\n     *   { data: 'name.first' },\r\n     *   { data: 'user.address' },\r\n     * ]},\r\n     * ```\r\n     * ```js\r\n     * // All dots are interpreted as simple object keys\r\n     * dataDotNotation: false,\r\n     * data: [\r\n     *   { id: 1, 'name.first': 'Ted', 'user.address': '1234 Any Street' },\r\n     * ],\r\n     * columns={[\r\n     *   { data: 'name.first' },\r\n     *   { data: 'user.address' },\r\n     * ]},\r\n     * ```\r\n     */\n    dataDotNotation: true,\n    /**\r\n     * @description\r\n     * When the [`data`](#data) option is set to an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects)\r\n     * (or is empty), the `dataSchema` option defines the structure of new rows.\r\n     *\r\n     * Using the `dataSchema` option, you can start out with an empty grid.\r\n     *\r\n     * You can set the `dataSchema` option to one of the following:\r\n     * - An object\r\n     * - A function\r\n     *\r\n     * Read more:\r\n     * - [Binding to data: Array of objects with custom data schema](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects-with-custom-data-schema)\r\n     * - [Binding to data: Function data source and schema](@/guides/getting-started/binding-to-data/binding-to-data.md#function-data-source-and-schema)\r\n     * - [`data`](#data)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // with `dataSchema`, you can start with an empty grid\r\n     * data: null,\r\n     * dataSchema: {id: null, name: {first: null, last: null}, address: null},\r\n     * colHeaders: ['ID', 'First Name', 'Last Name', 'Address'],\r\n     * columns: [\r\n     *   {data: 'id'},\r\n     *   {data: 'name.first'},\r\n     *   {data: 'name.last'},\r\n     *   {data: 'address'}\r\n     * ],\r\n     * startRows: 5,\r\n     * minSpareRows: 1\r\n     * ```\r\n     */\n    dataSchema: undefined,\n    /**\r\n     * The `dateFormat` option configures the date format accepted by [`date`](@/guides/cell-types/date-cell-type/date-cell-type.md) cells.\r\n     *\r\n     * You can set the `dateFormat` option to a string with a proper date format. The default value is: `'DD/MM/YYYY'`.\r\n     *\r\n     * To automatically correct dates whose format doesn't match the `dateFormat` setting, use the [`correctFormat`](#correctFormat) option.\r\n     *\r\n     * Read more:\r\n     * - [Date cell type](@/guides/cell-types/date-cell-type/date-cell-type.md)\r\n     * - [`correctFormat`](#correctFormat)\r\n     * - [`defaultDate`](#defaultDate)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'DD/MM/YYYY'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *   // set the `type` of each cell in this column to `date`\r\n     *   type: 'date',\r\n     *   // for every `date` cell of this column, set the date format to `YYYY-MM-DD`\r\n     *   dateFormat: 'YYYY-MM-DD',\r\n     *   },\r\n     * ],\r\n     * ```\r\n     */\n    dateFormat: 'DD/MM/YYYY',\n    /**\r\n     * The `timeFormat` option configures the time format accepted by [`time`](@/guides/cell-types/time-cell-type/time-cell-type.md) cells.\r\n     *\r\n     * You can set the `timeFormat` option to a string with a proper time format. The default value is: `'h:mm:ss a'`.\r\n     *\r\n     * To automatically correct times whose format doesn't match the `timeFormat` setting, use the [`correctFormat`](#correctFormat) option.\r\n     *\r\n     * Read more:\r\n     * - [Time cell type](@/guides/cell-types/time-cell-type/time-cell-type.md)\r\n     * - [`correctFormat`](#correctFormat)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'h:mm:ss a'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *   // set the `type` of each cell in this column to `time`\r\n     *   type: 'time',\r\n     *   // for every `time` cell of this column, set the time format to `h:mm:ss a`\r\n     *   timeFormat: 'h:mm:ss a',\r\n     *   },\r\n     * ],\r\n     * ```\r\n     */\n    timeFormat: 'h:mm:ss a',\n    /**\r\n     * The `datePickerConfig` option configures the `date` [cell editor](@/guides/cell-functions/cell-editor/cell-editor.md)'s date picker, which uses an external dependency: [Pikaday](https://github.com/Pikaday/Pikaday/tree/1.8.2).\r\n     *\r\n     * You can set the `datePickerConfig` option to an object with any of the available [Pikaday options](https://github.com/Pikaday/Pikaday/tree/1.8.2#configuration),\r\n     * except for the following, which are always overwritten by the `date` [cell editor](@/guides/cell-functions/cell-editor/cell-editor.md):\r\n     * - `bound`\r\n     * - `container`\r\n     * - `field`\r\n     * - `trigger`\r\n     *\r\n     * If the `datePickerConfig` option is not defined, the `date` [cell editor](@/guides/cell-functions/cell-editor/cell-editor.md) overwrites the following [Pikaday options](https://github.com/Pikaday/Pikaday/tree/1.8.2#configuration) as well:\r\n     *\r\n     * | Pikaday option       | Handsontable's setting |\r\n     * | -------------------- | ---------------------- |\r\n     * | `format`             | `'DD/MM/YYYY'`         |\r\n     * | `reposition`         | `false`                |\r\n     *\r\n     * Read more:\r\n     * - [`editor`](#editor)\r\n     * - [`dateFormat`](#dateFormat)\r\n     * - [Cell editor](@/guides/cell-functions/cell-editor/cell-editor.md)\r\n     * - [All Pikaday options &#8594;](https://github.com/Pikaday/Pikaday/tree/1.8.2#configuration)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object}\r\n     * @default undefined\r\n     * @category Core\r\n     */\n    datePickerConfig: undefined,\n    /**\r\n     * The `defaultDate` option configures the date displayed\r\n     * in empty [`date`](@/guides/cell-types/date-cell-type/date-cell-type.md) cells.\r\n     *\r\n     * You can set the `defaultDate` option to a string.\r\n     *\r\n     * Read more:\r\n     * - [Date cell type](@/guides/cell-types/date-cell-type/date-cell-type.md)\r\n     * - [`dateFormat`](#dateFormat)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `date`\r\n     *     type: 'date',\r\n     *     // in every empty `date` cell of this column, display `2015-02-02`\r\n     *     defaultDate: '2015-02-02'\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    defaultDate: undefined,\n    /**\r\n     * @description\r\n     * The `disableVisualSelection` option configures how\r\n     * [selection](@/guides/cell-features/selection/selection.md) is shown.\r\n     *\r\n     * You can set the `disableVisualSelection` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                         |\r\n     * | ----------------- | --------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | - Show single-cell selection<br>- Show range selection<br>- Show header selection                   |\r\n     * | `true`            | - Don't show single-cell selection<br>- Don't show range selection<br>- Don't show header selection |\r\n     * | `'current'`       | - Don't show single-cell selection<br>- Show range selection<br>- Show header selection             |\r\n     * | `'area'`          | - Show single-cell selection<br>- Don't show range selection<br>- Show header selection             |\r\n     * | `'header'`        | - Show single-cell selection<br>- Show range selection<br>- Don't show header selection             |\r\n     * | An array          | A combination of `'current'`, `'area'`, and/or `'header'`                                           |\r\n     *\r\n     * Read more:\r\n     * - [Selection](@/guides/cell-features/selection/selection.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string|string[]}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // don't show single-cell selection\r\n     * // don't show range selection\r\n     * // don't show header selection\r\n     * disableVisualSelection: true,\r\n     *\r\n     * // don't show single-cell selection\r\n     * // show range selection\r\n     * // show header selection\r\n     * disableVisualSelection: 'current',\r\n     *\r\n     * // don't show single-cell selection\r\n     * // don't show range selection\r\n     * // show header selection\r\n     * disableVisualSelection: ['current', 'area'],\r\n     * ```\r\n     */\n    disableVisualSelection: false,\n    /**\r\n     * @description\r\n     * The `dragToScroll` option configures the [`DragToScroll`](@/api/dragToScroll.md) plugin.\r\n     *\r\n     * You can set the `dragToScroll` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                 |\r\n     * | ---------------- | --------------------------------------------------------------------------- |\r\n     * | `true` (default) | When selection reaches the edge of the grid's viewport, scroll the viewport |\r\n     * | `false`          | Don't scroll the viewport                                                   |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `DragToScroll`](@/api/dragToScroll.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category DragToScroll\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // when selection reaches the edge of the grid's viewport, scroll the viewport\r\n     * dragToScroll: true,\r\n     * ```\r\n     */\n    dragToScroll: true,\n    /**\r\n     * The `dropdownMenu` option configures the [`DropdownMenu`](@/api/dropdownMenu.md) plugin.\r\n     *\r\n     * You can set the `dropdownMenu` option to one of the following:\r\n     *\r\n     * | Setting   | Description                                                                                                                                                                                  |\r\n     * | --------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false`   | Disable the [`DropdownMenu`](@/api/dropdownMenu.md) plugin                                                                                                                                   |\r\n     * | `true`    | - Enable the [`DropdownMenu`](@/api/dropdownMenu.md) plugin<br>- Use the [default context menu options](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-default-options)    |\r\n     * | An array  | - Enable the [`DropdownMenu`](@/api/dropdownMenu.md) plugin<br>- Modify [individual context menu options](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options) |\r\n     * | An object | - Enable the [`DropdownMenu`](@/api/dropdownMenu.md) plugin<br>- Apply a custom dropdown menu configuration                                                                                  |\r\n     *\r\n     * Read more:\r\n     * - [Context menu](@/guides/accessories-and-menus/context-menu/context-menu.md)\r\n     * - [Plugins: `DropdownMenu`](@/api/dropdownMenu.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object|string[]}\r\n     * @default undefined\r\n     * @category DropdownMenu\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `DropdownMenu` plugin\r\n     * // use the default context menu options\r\n     * dropdownMenu: true,\r\n     *\r\n     * // enable the `DropdownMenu` plugin\r\n     * // and modify individual context menu options\r\n     * dropdownMenu: ['---------', 'undo', 'redo'],\r\n     *\r\n     * // enable the `DropdownMenu` plugin\r\n     * // and apply a custom dropdown menu configuration\r\n     * dropdownMenu: {\r\n     *   items: {\r\n     *     'option1': {\r\n     *       name: 'Option 1'\r\n     *     },\r\n     *     'option2': {\r\n     *       name: 'Option 2',\r\n     *       submenu: {\r\n     *         items: [\r\n     *           {\r\n     *             key: 'option2:suboption1',\r\n     *             name: 'Suboption 1',\r\n     *             callback(key, options) {\r\n     *               ...\r\n     *             }\r\n     *           },\r\n     *           ...\r\n     *         ]\r\n     *       }\r\n     *     }\r\n     *   }\r\n     * },\r\n     * ```\r\n     */\n    dropdownMenu: undefined,\n    /**\r\n     * The `editor` option sets a [cell editor](@/guides/cell-functions/cell-editor/cell-editor.md) for a cell.\r\n     *\r\n     * You can set the `editor` option to one of the following [cell editor aliases](@/guides/cell-functions/cell-editor/cell-editor.md):\r\n     *\r\n     * | Alias               | Cell editor function                                                       |\r\n     * | ------------------- | -------------------------------------------------------------------------- |\r\n     * | A custom alias      | Your [custom cell editor](@/guides/cell-functions/cell-editor/cell-editor.md) function |\r\n     * | `'autocomplete'`    | `AutocompleteEditor`                                                       |\r\n     * | `'base'`            | `BaseEditor`                                                               |\r\n     * | `'checkbox'`        | `CheckboxEditor`                                                           |\r\n     * | `'date'`            | `DateEditor`                                                               |\r\n     * | `'dropdown'`        | `DropdownEditor`                                                           |\r\n     * | `'handsontable'`    | `HandsontableEditor`                                                       |\r\n     * | `'numeric'`         | `NumericEditor`                                                            |\r\n     * | `'password'`        | `PasswordEditor`                                                           |\r\n     * | `'select'`          | `SelectEditor`                                                             |\r\n     * | `'text'`            | `TextEditor`                                                               |\r\n     * | `'time'`            | `TimeEditor`                                                               |\r\n     *\r\n     * To disable editing cells through cell editors,\r\n     * set the `editor` option to `false`.\r\n     * You'll still be able to change cells' content through Handsontable's API\r\n     * or through plugins (e.g. [`CopyPaste`](@/api/copyPaste.md)), though.\r\n     *\r\n     * To set the [`editor`](#editor), [`renderer`](#renderer), and [`validator`](#validator)\r\n     * options all at once, use the [`type`](#type) option.\r\n     *\r\n     * Read more:\r\n     * - [Cell editor](@/guides/cell-functions/cell-editor/cell-editor.md)\r\n     * - [Cell type](@/guides/cell-types/cell-type/cell-type.md)\r\n     * - [Configuration options: Cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration)\r\n     * - [`type`](#type)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string|Function|boolean}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // use the `numeric` editor for each cell of the entire grid\r\n     * editor: 'numeric',\r\n     *\r\n     * // apply the `editor` option to individual columns\r\n     * columns: [\r\n     *   {\r\n     *     // use the `autocomplete` editor for each cell of this column\r\n     *     editor: 'autocomplete'\r\n     *   },\r\n     *   {\r\n     *     // disable editing cells through cell editors for each cell of this column\r\n     *     editor: false\r\n     *   }\r\n     * ]\r\n     * ```\r\n     */\n    editor: undefined,\n    /**\r\n     * The `enterBeginsEditing` option configures the action of the <kbd>**Enter**</kbd> key.\r\n     *\r\n     * You can set the `enterBeginsEditing` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                                                                                                                                               |\r\n     * | ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true` (default) | - On pressing <kbd>**Enter**</kbd> once, enter the editing mode of the active cell<br>- On pressing <kbd>**Enter**</kbd> twice, move to another cell,<br>as configured by the [`enterMoves`](#enterMoves) setting |\r\n     * | `false`          | - On pressing <kbd>**Enter**</kbd> once, move to another cell,<br>as configured by the [`enterMoves`](#enterMoves) setting                                                                                    |\r\n     *\r\n     * Read more:\r\n     * - [`enterMoves`](#enterMoves)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // press Enter once to start editing\r\n     * // press Enter twice to move to another cell\r\n     * enterBeginsEditing: true,\r\n     *\r\n     * // press Enter once to move to another cell\r\n     * enterBeginsEditing: false,\r\n     * ```\r\n     */\n    enterBeginsEditing: true,\n    /**\r\n     * The `enterMoves` option configures the action of the <kbd>**Enter**</kbd> key.\r\n     *\r\n     * If the [`enterBeginsEditing`](#enterBeginsEditing) option is set to `true`,\r\n     * the `enterMoves` setting applies to the **second** pressing of the <kbd>**Enter**</kbd> key.\r\n     *\r\n     * If the [`enterBeginsEditing`](#enterBeginsEditing) option is set to `false`,\r\n     * the `enterMoves` setting applies to the **first** pressing of the <kbd>**Enter**</kbd> key.\r\n     *\r\n     * You can set the `enterMoves` option to an object with the following properties\r\n     * (or to a function that returns such an object):\r\n     *\r\n     * | Property | Type   | Description                                                                                                                                              |\r\n     * | -------- | ------ | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `col`    | Number | - On pressing <kbd>**Enter**</kbd>, move selection `col` columns right<br>- On pressing <kbd>**Shift**</kbd>+<kbd>**Enter**</kbd>, move selection `col` columns left |\r\n     * | `row`    | Number | - On pressing <kbd>**Enter**</kbd>, move selection `row` rows down<br>- On pressing <kbd>**Shift**</kbd>+<kbd>**Enter**</kbd>, move selection `row` rows up          |\r\n     *\r\n     * Read more:\r\n     * - [`enterBeginsEditing`](#enterBeginsEditing)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object|Function}\r\n     * @default {col: 0, row: 1}\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // on pressing Enter, move selection 1 column right and 1 row down\r\n     * // on pressing Shift+Enter, move selection 1 column left and 1 row up\r\n     * enterMoves: {col: 1, row: 1},\r\n     *\r\n     * // the same setting, as a function\r\n     * // `event` is a DOM Event object received on pressing Enter\r\n     * // you can use it to check whether the user pressed Enter or Shift+Enter\r\n     * enterMoves(event) {\r\n     *   return {col: 1, row: 1};\r\n     * },\r\n     * ```\r\n     */\n    enterMoves: {\n      col: 0,\n      row: 1\n    },\n    /**\r\n     * The `fillHandle` option configures the [Autofill](@/api/autofill.md) plugin.\r\n     *\r\n     * You can set the `fillHandle` option to one the following:\r\n     *\r\n     * | Setting        | Description                                                                |\r\n     * | -------------- | -------------------------------------------------------------------------- |\r\n     * | `true`         | - Enable autofill in all directions<br>- Add the fill handle               |\r\n     * | `false`        | Disable autofill                                                           |\r\n     * | `'vertical'`   | - Enable vertical autofill<br>- Add the fill handle                        |\r\n     * | `'horizontal'` | - Enable horizontal autofill<br>- Add the fill handle                      |\r\n     * | An object      | - Enable autofill<br>- Add the fill handle<br>- Configure autofill options |\r\n     *\r\n     * If you set the `fillHandle` option to an object, you can configure the following autofill options:\r\n     *\r\n     * | Option          | Possible settings              | Description                                                                                               |\r\n     * | --------------- | ------------------------------ | --------------------------------------------------------------------------------------------------------- |\r\n     * | `autoInsertRow` | `true` (default) \\| `false`    | `true`: When you reach the grid's bottom, add new rows<br>`false`: When you reach the grid's bottom, stop |\r\n     * | `direction`     | `'vertical'` \\| `'horizontal'` | `'vertical'`: Enable vertical autofill<br>`'horizontal'`: Enable horizontal autofill                      |\r\n     *\r\n     * Read more:\r\n     * - [AutoFill values](@/guides/cell-features/autofill-values/autofill-values.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string|object}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable autofill in all directions\r\n     * // with `autoInsertRow` enabled\r\n     * fillHandle: true,\r\n     *\r\n     * // enable vertical autofill\r\n     * // with `autoInsertRow` enabled\r\n     * fillHandle: 'vertical',\r\n     *\r\n     * // enable horizontal autofill\r\n     * // with `autoInsertRow` enabled\r\n     * fillHandle: 'horizontal',\r\n     *\r\n     * // enable autofill in all directions\r\n     * // with `autoInsertRow` disabled\r\n     * fillHandle: {\r\n     *   autoInsertRow: false,\r\n     * },\r\n     *\r\n     * // enable vertical autofill\r\n     * // with `autoInsertRow` disabled\r\n     * fillHandle: {\r\n     *   autoInsertRow: false,\r\n     *   direction: 'vertical'\r\n     * },\r\n     * ```\r\n     */\n    fillHandle: {\n      autoInsertRow: false\n    },\n    /**\r\n     * The `filter` option configures whether [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md) cells'\r\n     * lists are updated by the end user's input.\r\n     *\r\n     * You can set the `filter` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                                                           |\r\n     * | ---------------- | --------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true` (default) | When the end user types into the input area, only options matching the input are displayed                            |\r\n     * | `false`          | When the end user types into the input area, all options are displayed<br>(options matching the input are put in bold |\r\n     *\r\n     * Read more:\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * - [`source`](#source)\r\n     * - [`filteringCaseSensitive`](#filteringCaseSensitive)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [{\r\n     *   // set the `type` of each cell in this column to `autocomplete`\r\n     *   type: 'autocomplete',\r\n     *   // set options available in every `autocomplete` cell of this column\r\n     *   source: ['A', 'B', 'C'],\r\n     *   // when the end user types in `A`, display only the A option\r\n     *   // when the end user types in `B`, display only the B option\r\n     *   // when the end user types in `C`, display only the C option\r\n     *   filter: true\r\n     * }],\r\n     * ```\r\n     */\n    filter: true,\n    /**\r\n     * The `filteringCaseSensitive` option configures whether [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md) cells'\r\n     * input is case-sensitive.\r\n     *\r\n     * You can set the `filteringCaseSensitive` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                        |\r\n     * | ----------------- | -------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md) cells' input is not case-sensitive |\r\n     * | `true`            | [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md) cells' input is case-sensitive     |\r\n     *\r\n     * Read more:\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * - [`source`](#source)\r\n     * - [`filter`](#filter)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     type: 'autocomplete',\r\n     *     source: [ ... ],\r\n     *     // match case while searching autocomplete options\r\n     *     filteringCaseSensitive: true\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    filteringCaseSensitive: false,\n    /**\r\n     * The `filters` option configures the [`Filters`](@/api/filters.md) plugin.\r\n     *\r\n     * You can set the `filters` option to one of the following:\r\n     *\r\n     * | Setting | Description                                      |\r\n     * | ------- | ------------------------------------------------ |\r\n     * | `false` | Disable the [`Filters`](@/api/filters.md) plugin |\r\n     * | `true`  | Enable the [`Filters`](@/api/filters.md) plugin  |\r\n     *\r\n     * Read more:\r\n     * - [Column filter](@/guides/columns/column-filter/column-filter.md)\r\n     * - [Plugins: `Filters`](@/api/filters.md)\r\n     * - [`dropdownMenu`](#dropdownMenu)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default undefined\r\n     * @category Filters\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `Filters` plugin\r\n     * filters: true,\r\n     * ```\r\n     */\n    filters: undefined,\n    /**\r\n     * `fixedColumnsLeft` is a legacy option.\r\n     *\r\n     * If your grid's [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is LTR (default), `fixedColumnsLeft` acts like the [`fixedColumnsStart`](#fixedColumnsStart) option.\r\n     *\r\n     * If your grid's [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is RTL, using `fixedColumnsLeft` throws an error.\r\n     *\r\n     * Use [`fixedColumnsStart`](#fixedColumnsStart), which works in any layout direction.\r\n     *\r\n     * Read more:\r\n     * - [`fixedColumnsStart`](#fixedcolumnsstart)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // freeze the first 3 columns from the left\r\n     * fixedColumnsLeft: 3,\r\n     * ```\r\n     */\n    fixedColumnsLeft: 0,\n    /**\r\n     * If your grid's [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is LTR (default), the `fixedColumnsStart` option sets the number of [frozen columns](@/guides/columns/column-freezing/column-freezing.md) at the left-hand edge of the grid.\r\n     *\r\n     * If your grid's [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) is RTL, the `fixedColumnsStart` option sets the number of [frozen columns](@/guides/columns/column-freezing/column-freezing.md) at the right-hand edge of the grid.\r\n     *\r\n     * Read more:\r\n     * - [Column freezing](@/guides/columns/column-freezing/column-freezing.md)\r\n     * - [Layout direction](@/guides/internationalization/layout-direction/layout-direction.md)\r\n     * - [`fixedColumnsLeft`](#fixedcolumnsleft)\r\n     * - [`layoutDirection`](#layoutDirection)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // when `layoutDirection` is set to `inherit` (default)\r\n     * // freeze the first 3 columns from the left or from the right\r\n     * // depending on your HTML document's `dir` attribute\r\n     * layoutDirection: 'inherit',\r\n     * fixedColumnsStart: 3,\r\n     *\r\n     * // when `layoutDirection` is set to `rtl`\r\n     * // freeze the first 3 columns from the right\r\n     * // regardless of your HTML document's `dir` attribute\r\n     * layoutDirection: 'rtl',\r\n     * fixedColumnsStart: 3,\r\n     *\r\n     * // when `layoutDirection` is set to `ltr`\r\n     * // freeze the first 3 columns from the left\r\n     * // regardless of your HTML document's `dir` attribute\r\n     * layoutDirection: 'ltr',\r\n     * fixedColumnsStart: 3,\r\n     * ```\r\n     */\n    fixedColumnsStart: 0,\n    /**\r\n     * The `fixedRowsBottom` option sets the number of [frozen rows](@/guides/rows/row-freezing/row-freezing.md)\r\n     * at the bottom of the grid.\r\n     *\r\n     * Read more:\r\n     * - [Row freezing](@/guides/rows/row-freezing/row-freezing.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // freeze the bottom 3 rows\r\n     * fixedRowsBottom: 3,\r\n     * ```\r\n     */\n    fixedRowsBottom: 0,\n    /**\r\n     * The `fixedRowsTop` option sets the number of [frozen rows](@/guides/rows/row-freezing/row-freezing.md) at the top of the grid.\r\n     *\r\n     * Read more:\r\n     * - [Row freezing](@/guides/rows/row-freezing/row-freezing.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // freeze the top 3 rows\r\n     * fixedRowsTop: 3,\r\n     * ```\r\n     */\n    fixedRowsTop: 0,\n    /**\r\n     * The `formulas` option configures the [`Formulas`](@/api/formulas.md) plugin.\r\n     *\r\n     * The [`Formulas`](@/api/formulas.md) plugin uses the [HyperFormula](https://handsontable.github.io/hyperformula/) calculation engine.\r\n     * To install [HyperFormula](https://handsontable.github.io/hyperformula/), read the following:\r\n     * - [Formula calculation: Initialization methods](@/guides/formulas/formula-calculation/formula-calculation.md#initialization-methods)\r\n     *\r\n     * You can set the `formulas` option to an object with the following properties:\r\n     *\r\n     * | Property    | Possible values                                                                                                                                                                                                        |\r\n     * | ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `engine`    | `HyperFormula` \\|<br>A [HyperFormula](https://handsontable.github.io/hyperformula/) instance \\|<br>A [HyperFormula configuration](https://handsontable.github.io/hyperformula/api/interfaces/configparams.html) object |\r\n     * | `sheetId`   | A number                                                                                                                                                                                                               |\r\n     * | `sheetName` | A string                                                                                                                                                                                                               |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `Formulas`](@/api/formulas.md)\r\n     * - [Formula calculation](@/guides/formulas/formula-calculation/formula-calculation.md)\r\n     * - [HyperFormula documentation: Client-side installation](https://handsontable.github.io/hyperformula/guide/client-side-installation)\r\n     * - [HyperFormula documentation: Configuration options](https://handsontable.github.io/hyperformula/api/interfaces/configparams.html)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object}\r\n     * @default undefined\r\n     * @category Formulas\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // either add the `HyperFormula` class\r\n     * formulas: {\r\n     *   // set `engine` to `HyperFormula`\r\n     *   engine: HyperFormula,\r\n     *   sheetId: 1,\r\n     *   sheetName: 'Sheet 1'\r\n     * }\r\n     *\r\n     * // or, add a HyperFormula instance\r\n     * // initialized with the `'internal-use-in-handsontable'` license key\r\n     * const hyperformulaInstance = HyperFormula.buildEmpty({\r\n     *   licenseKey: 'internal-use-in-handsontable',\r\n     * });\r\n     *\r\n     * formulas: {\r\n     *   // set `engine` to a HyperFormula instance\r\n     *   engine: hyperformulaInstance,\r\n     *   sheetId: 1,\r\n     *   sheetName: 'Sheet 1'\r\n     * }\r\n     *\r\n     * // or, add a HyperFormula configuration object\r\n     * formulas: {\r\n     *   // set `engine` to a HyperFormula configuration object\r\n     *   engine: {\r\n     *     hyperformula: HyperFormula // or `engine: hyperformulaInstance`\r\n     *     leapYear1900: false,       // this option comes from HyperFormula\r\n     *     // add more HyperFormula configuration options\r\n     *   },\r\n     *   sheetId: 1,\r\n     *   sheetName: 'Sheet 1'\r\n     * }\r\n     *\r\n     * // use the same HyperFormula instance in multiple Handsontable instances\r\n     *\r\n     * // a Handsontable instance `hot1`\r\n     * formulas: {\r\n     *   engine: HyperFormula,\r\n     *   sheetId: 1,\r\n     *   sheetName: 'Sheet 1'\r\n     * }\r\n     *\r\n     * // a Handsontable instance `hot2`\r\n     * formulas: {\r\n     *   engine: hot1.getPlugin('formulas').engine,\r\n     *   sheetId: 1,\r\n     *   sheetName: 'Sheet 1'\r\n     * }\r\n     * ```\r\n     */\n    formulas: undefined,\n    /**\r\n     * The `fragmentSelection` option configures text selection settings.\r\n     *\r\n     * You can set the `fragmentSelection` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                        |\r\n     * | ----------------- | ------------------------------------------------- |\r\n     * | `false` (default) | Disable text selection                            |\r\n     * | `true`            | Enable text selection in multiple cells at a time |\r\n     * | `'cell'`          | Enable text selection in one cell at a time       |\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable text selection in multiple cells at a time\r\n     * fragmentSelection: true,\r\n     *\r\n     * // enable text selection in one cell a time\r\n     * fragmentSelection: 'cell',\r\n     * ```\r\n     */\n    fragmentSelection: false,\n    /**\r\n     * The `headerClassName` option allows adding one or more class names to the column headers' inner `div` element.\r\n     * It can be used to align the labels in the column headers to left, center or right by setting this option to\r\n     * `htLeft`, `htCenter`, or `htRight` respectively.\r\n     *\r\n     * @since 14.5.0\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // Adding class names to all column headers\r\n     * headerClassName: 'htRight my-class',\r\n     *\r\n     * columns: [\r\n     *  {\r\n     *    // Adding class names to the column header of a single column\r\n     *    headerClassName: 'htRight my-class',\r\n     *  }\r\n     * ]\r\n     * ```\r\n     */\n    headerClassName: undefined,\n    /**\r\n     * The `height` option configures the height of your grid.\r\n     *\r\n     * You can set `height` option to one of the following:\r\n     *\r\n     * | Setting                                                                    | Example                    |\r\n     * | -------------------------------------------------------------------------- | -------------------------- |\r\n     * | A number of pixels                                                         | `height: 500`              |\r\n     * | A string with a [CSS unit](https://www.w3schools.com/cssref/css_units.asp) | `height: '75vw'`           |\r\n     * | A function that returns a valid number or string                           | `height() { return 500; }` |\r\n     *\r\n     * Read more:\r\n     * - [Grid size](@/guides/getting-started/grid-size/grid-size.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|string|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the grid's height to 500px\r\n     * height: 500,\r\n     *\r\n     * // set the grid's height to 75vh\r\n     * height: '75vh',\r\n     *\r\n     * // set the grid's height to 500px, using a function\r\n     * height() {\r\n     *   return 500;\r\n     * },\r\n     * ```\r\n     */\n    height: undefined,\n    /**\r\n     * The `hiddenColumns` option configures the [`HiddenColumns`](@/api/hiddenColumns.md) plugin.\r\n     *\r\n     * You can set the `hiddenColumns` option to one of the following:\r\n     *\r\n     * | Setting   | Description                                                                                  |\r\n     * | --------- | -------------------------------------------------------------------------------------------- |\r\n     * | `false`   | Disable the [`HiddenColumns`](@/api/hiddenColumns.md) plugin                                 |\r\n     * | `true`    | Enable the [`HiddenColumns`](@/api/hiddenColumns.md) plugin with the default plugin options  |\r\n     * | An object | - Enable the [`HiddenColumns`](@/api/hiddenColumns.md) plugin<br>- Modify the plugin options |\r\n     *\r\n     * If you set the `hiddenColumns` to an object, you can set the following [`HiddenColumns`](@/api/hiddenColumns.md) plugin options:\r\n     *\r\n     * | Property           | Possible values     | Description                                                                                                                                             |\r\n     * | ------------------ | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `columns`          | An array of indexes | An array of indexes of columns that are hidden at initialization                                                                                        |\r\n     * | `copyPasteEnabled` | `true` \\| `false`   | `true`: when copying or pasting data, take hidden columns into account<br>`false`: when copying or pasting data, don't take hidden columns into account |\r\n     * | `indicators`       | `true` \\| `false`   | `true`: display UI markers to indicate the presence of hidden columns<br>`false`: display UI markers                                                    |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `HiddenColumns`](@/api/hiddenColumns.md)\r\n     * - [Column hiding](@/guides/columns/column-hiding/column-hiding.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object}\r\n     * @default undefined\r\n     * @category HiddenColumns\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `HiddenColumns` plugin\r\n     * hiddenColumns: true,\r\n     *\r\n     * // enable `HiddenColumns` plugin, and modify the plugin options\r\n     * hiddenColumns: {\r\n     *   // set columns that are hidden by default\r\n     *   columns: [5, 10, 15],\r\n     *   // when copying or pasting data, take hidden columns into account\r\n     *   copyPasteEnabled: true,\r\n     *   // show where hidden columns are\r\n     *   indicators: true\r\n     * }\r\n     * ```\r\n     */\n    hiddenColumns: undefined,\n    /**\r\n     * The `hiddenRows` option configures the [`HiddenRows`](@/api/hiddenRows.md) plugin.\r\n     *\r\n     * You can set the `hiddenRows` option to one of the following:\r\n     *\r\n     * | Setting   | Description                                                                            |\r\n     * | --------- | -------------------------------------------------------------------------------------- |\r\n     * | `false`   | Disable the [`HiddenRows`](@/api/hiddenRows.md) plugin                                 |\r\n     * | `true`    | Enable the [`HiddenRows`](@/api/hiddenRows.md) plugin with the default plugin options  |\r\n     * | An object | - Enable the [`HiddenRows`](@/api/hiddenRows.md) plugin<br>- Modify the plugin options |\r\n     *\r\n     * If you set the `hiddenRows` to an object, you can set the following [`HiddenRows`](@/api/hiddenRows.md) plugin options:\r\n     *\r\n     * | Property           | Possible values     | Description                                                                                                                                       |\r\n     * | ------------------ | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `rows   `          | An array of indexes | An array of indexes of rows that are hidden at initialization                                                                                     |\r\n     * | `copyPasteEnabled` | `true` \\| `false`   | `true`: when copying or pasting data, take hidden rows into account<br>`false`: when copying or pasting data, don't take hidden rows into account |\r\n     * | `indicators`       | `true` \\| `false`   | `true`: display UI markers to indicate the presence of hidden rows<br>`false`: display UI markers                                                 |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `HiddenRows`](@/api/hiddenRows.md)\r\n     * - [Row hiding](@/guides/rows/row-hiding/row-hiding.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object}\r\n     * @default undefined\r\n     * @category HiddenRows\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `HiddenRows` plugin\r\n     * hiddenRows: true,\r\n     *\r\n     * // enable `HiddenRows` plugin, and modify the plugin options\r\n     * hiddenRows: {\r\n     *   // set rows that are hidden by default\r\n     *   rows: [5, 10, 15],\r\n     *   // when copying or pasting data, take hidden rows into account\r\n     *   copyPasteEnabled: true,\r\n     *   // show where hidden rows are\r\n     *   indicators: true\r\n     * }\r\n     * ```\r\n     */\n    hiddenRows: undefined,\n    /**\r\n     * The `invalidCellClassName` option lets you add a CSS class name to cells\r\n     * that were marked as `invalid` by the [cell validator](@/guides/cell-functions/cell-validator/cell-validator.md).\r\n     *\r\n     * Read more:\r\n     * - [Cell validator](@/guides/cell-functions/cell-validator/cell-validator.md)\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'htInvalid'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `highlight-error` CSS class name\r\n     * // to every `invalid` cell`\r\n     * invalidCellClassName: 'highlight-error',\r\n     * ```\r\n     */\n    invalidCellClassName: 'htInvalid',\n    /**\r\n     * The `imeFastEdit` option allows using the \"fast edit\" feature for the IME users. It's disabled by default\r\n     * because of its incompatibility with some of the accessibility features.\r\n     *\r\n     * Enabling this option can make a negative impact on how some screen readers handle reading the table cells.\r\n     *\r\n     * @since 14.0.0\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @category Core\r\n     */\n    imeFastEdit: false,\n    /**\r\n     * The `isEmptyCol` option lets you define your own custom method\r\n     * for checking if a column at a given visual index is empty.\r\n     *\r\n     * The `isEmptyCol` setting overwrites the built-in [`isEmptyCol`](@/api/core.md#isEmptyCol) method.\r\n     *\r\n     * @memberof Options#\r\n     * @type {Function}\r\n     * @param {number} col Visual column index.\r\n     * @returns {boolean}\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // overwrite the built-in `isEmptyCol` method\r\n     * isEmptyCol(visualColumnIndex) {\r\n     *    // your custom method\r\n     *    ...\r\n     * },\r\n     * ```\r\n     */\n    isEmptyCol(col) {\n      let row;\n      let rowLen;\n      let value;\n      for (row = 0, rowLen = this.countRows(); row < rowLen; row++) {\n        value = this.getDataAtCell(row, col);\n        if (isEmpty(value) === false) {\n          return false;\n        }\n      }\n      return true;\n    },\n    /**\r\n     * The `isEmptyRow` option lets you define your own custom method\r\n     * for checking if a row at a given visual index is empty.\r\n     *\r\n     * The `isEmptyRow` setting overwrites the built-in [`isEmptyRow`](@/api/core.md#isEmptyRow) method.\r\n     *\r\n     * @memberof Options#\r\n     * @type {Function}\r\n     * @param {number} row Visual row index.\r\n     * @returns {boolean}\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // overwrite the built-in `isEmptyRow` method\r\n     * isEmptyRow(visualRowIndex) {\r\n     *    // your custom method\r\n     *    ...\r\n     * },\r\n     * ```\r\n     */\n    isEmptyRow(row) {\n      let col;\n      let colLen;\n      let value;\n      let meta;\n      for (col = 0, colLen = this.countCols(); col < colLen; col++) {\n        value = this.getDataAtCell(row, col);\n        if (isEmpty(value) === false) {\n          if (typeof value === 'object') {\n            meta = this.getCellMeta(row, col);\n            return isObjectEqual(this.getSchema()[meta.prop], value);\n          }\n          return false;\n        }\n      }\n      return true;\n    },\n    /**\r\n     * @description\r\n     * The `label` option configures [`checkbox`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md) cells` labels.\r\n     *\r\n     * You can set the `label` option to an object with the following properties:\r\n     *\r\n     * | Property    | Possible values                   | Description                                                                                                                                                                                                             |\r\n     * | ----------- | --------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `position`  | `'after'` (default) \\| `'before'` | `'after'`: place the label to the right of the checkbox<br>`'before'`: place the label to the left of the checkbox                                                                                                      |\r\n     * | `value`     | A string \\| A function            | The label's text                                                                                                                                                                                                        |\r\n     * | `separated` | `false` (default) \\| `true`       | `false`: don't separate the label from the checkbox<br>`true`: separate the label from the checkbox                                                                                                                     |\r\n     * | `property`  | A string                          | - A [`data`](#data) object property name that's used as the label's text <br>- Works only when the [`data`](#data) option is set to an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects) |\r\n     *\r\n     * Read more:\r\n     * - [Checkbox cell type: Checkbox labels](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md#checkbox-labels)\r\n     *\r\n     * @memberof Options#\r\n     * @type {object}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [{\r\n     *   type: 'checkbox',\r\n     *   // add 'My label:' after the checkbox\r\n     *   label: { position: 'after', value: 'My label: ', separated: true }\r\n     * }],\r\n     * ```\r\n     */\n    label: undefined,\n    /**\r\n     * The `language` option configures Handsontable's [language](@/guides/internationalization/language/language.md) settings.\r\n     *\r\n     * You can set the `language` option to one of the following:\r\n     *\r\n     * | Setting             | Description                 |\r\n     * | ------------------- | --------------------------- |\r\n     * | `'en-US'` (default) | English - United States     |\r\n     * | `'ar-AR'`           | Arabic - Global<br><br>To properly render this language, set the [layout direction](@/guides/internationalization/layout-direction/layout-direction.md) to RTL. |\r\n     * | `'cs-CZ'`           | Czech - Czech Republic      |\r\n     * | `'de-CH'`           | German - Switzerland        |\r\n     * | `'de-DE'`           | German - Germany            |\r\n     * | `'es-MX'`           | Spanish - Mexico            |\r\n     * | `'fr-FR'`           | French - France             |\r\n     * | `'hr-HR'`           | Croatian - Croatia          |\r\n     * | `'it-IT'`           | Italian - Italy             |\r\n     * | `'ja-JP'`           | Japanese - Japan            |\r\n     * | `'ko-KR'`           | Korean - Korea              |\r\n     * | `'lv-LV'`           | Latvian - Latvia            |\r\n     * | `'nb-NO'`           | Norwegian (Bokmål) - Norway |\r\n     * | `'nl-NL'`           | Dutch - Netherlands         |\r\n     * | `'pl-PL'`           | Polish - Poland             |\r\n     * | `'pt-BR'`           | Portuguese - Brazil         |\r\n     * | `'ru-RU'`           | Russian - Russia            |\r\n     * | `'sr-SP'`           | Serbian (Latin) - Serbia    |\r\n     * | `'zh-CN'`           | Chinese - China             |\r\n     * | `'zh-TW'`           | Chinese - Taiwan            |\r\n     *\r\n     * Read more:\r\n     * - [Language](@/guides/internationalization/language/language.md)\r\n     * - [`locale`](#locale)\r\n     * - [`layoutDirection`](#layoutdirection)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'en-US'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set Handsontable's language to Polish\r\n     * language: 'pl-PL',\r\n     * ```\r\n     */\n    language: 'en-US',\n    /**\r\n     * The `layoutDirection` option configures whether Handsontable renders from the left to the right, or from the right to the left.\r\n     *\r\n     * You can set the layout direction only at Handsontable's [initialization](@/guides/getting-started/installation/installation.md#initialize-handsontable). Any change of the `layoutDirection` option after the initialization (e.g. using the [`updateSettings()`](@/api/core.md#updatesettings) method) is ignored.\r\n     *\r\n     * You can set the `layoutDirection` option only [for the entire grid](@/guides/getting-started/configuration-options/configuration-options.md#set-grid-options).\r\n     * You can't set it for individual columns, rows, or cells.\r\n     *\r\n     * You can set the `layoutDirection` option to one of the following strings:\r\n     *\r\n     * | Setting             | Description                                                                                                                                                                                  |\r\n     * | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `inherit` (default) | Set Handsontable's layout direction automatically,<br>based on the value of your HTML document's [`dir`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir) attribute  |\r\n     * | `rtl`               | Render Handsontable from the right to the left,<br>even when your HTML document's [`dir`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir) attribute is set to `ltr` |\r\n     * | `ltr`               | Render Handsontable from the left to the right,<br>even when your HTML document's [`dir`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir) attribute is set to `rtl` |\r\n     *\r\n     * Read more:\r\n     * - [Layout direction](@/guides/internationalization/layout-direction/layout-direction.md)\r\n     * - [Language](@/guides/internationalization/language/language.md)\r\n     * - [`language`](#language)\r\n     * - [`locale`](#locale)\r\n     * - [`fixedColumnsStart`](#fixedcolumnsstart)\r\n     * - [`customBorders`](#customBorders)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'inherit'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // inherit Handsontable's layout direction\r\n     * // from the value of your HTML document's `dir` attribute\r\n     * layoutDirection: 'inherit',\r\n     *\r\n     * // render Handsontable from the right to the left\r\n     * // regardless of your HTML document's `dir`\r\n     * layoutDirection: 'rtl',\r\n     *\r\n     * // render Handsontable from the left to the right\r\n     * // regardless of your HTML document's `dir`\r\n     * layoutDirection: 'ltr',\r\n     * ```\r\n     */\n    layoutDirection: 'inherit',\n    /**\r\n     * The `licenseKey` option sets your Handsontable license key.\r\n     *\r\n     * You can set the `licenseKey` option to one of the following:\r\n     *\r\n     * | Setting                                                                                                 | Description                                                                                       |\r\n     * | ------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n     * | A string with your [commercial license key](@/guides/getting-started/license-key/license-key.md#commercial-license) | For [commercial use](@/guides/technical-specification/software-license/software-license.md#commercial-use)         |\r\n     * | `'non-commercial-and-evaluation'`                                                                       | For [non-commercial use](@/guides/technical-specification/software-license/software-license.md#non-commercial-use) |\r\n     *\r\n     * Read more:\r\n     * - [License key](@/guides/getting-started/license-key/license-key.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // for commercial use\r\n     * licenseKey: 'xxxxx-xxxxx-xxxxx-xxxxx-xxxxx', // your commercial license key\r\n     *\r\n     * // for non-commercial use\r\n     * licenseKey: 'non-commercial-and-evaluation',\r\n     * ```\r\n     */\n    licenseKey: undefined,\n    /**\r\n     * The `locale` option configures Handsontable's [locale](@/guides/internationalization/locale/locale.md) settings.\r\n     *\r\n     * You can set the `locale` option to any valid and canonicalized Unicode BCP 47 locale tag,\r\n     * both for the [entire grid](@/guides/internationalization/locale/locale.md#set-the-grid-s-locale),\r\n     * and for [individual columns](@/guides/internationalization/locale/locale.md#set-a-column-s-locale).\r\n     *\r\n     * Read more:\r\n     * - [Locale](@/guides/internationalization/locale/locale.md)\r\n     * - [`language`](#language)\r\n     * - [`layoutDirection`](#layoutdirection)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'en-US'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the entire grid's locale to Polish\r\n     * locale: 'pl-PL',\r\n     *\r\n     * // set individual columns' locales\r\n     * columns: [\r\n     *   {\r\n     *     // set the first column's locale to Polish\r\n     *     locale: 'pl-PL',\r\n     *   },\r\n     *   {\r\n     *     // set the second column's locale to German\r\n     *     locale: 'de-DE',\r\n     *   },\r\n     * ],\r\n     * ```\r\n     */\n    locale: 'en-US',\n    /**\r\n     * The `manualColumnFreeze` option configures the [`ManualColumnFreeze`](@/api/manualColumnFreeze.md) plugin.\r\n     *\r\n     * You can set the `manualColumnFreeze` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                                            |\r\n     * | -------- | ---------------------------------------------------------------------- |\r\n     * | `true`   | Enable the [`ManualColumnFreeze`](@/api/manualColumnFreeze.md) plugin  |\r\n     * | `false`  | Disable the [`ManualColumnFreeze`](@/api/manualColumnFreeze.md) plugin |\r\n     *\r\n     * Read more:\r\n     * - [Column freezing](@/guides/columns/column-freezing/column-freezing.md#user-triggered-freeze)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default undefined\r\n     * @category ManualColumnFreeze\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `ManualColumnFreeze` plugin\r\n     * manualColumnFreeze: true,\r\n     * ```\r\n     */\n    manualColumnFreeze: undefined,\n    /**\r\n     * The `manualColumnMove` option configures the [`ManualColumnMove`](@/api/manualColumnMove.md) plugin.\r\n     *\r\n     * You can set the `manualColumnMove` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                                                                                        |\r\n     * | -------- | ------------------------------------------------------------------------------------------------------------------ |\r\n     * | `true`   | Enable the [`ManualColumnMove`](@/api/manualColumnMove.md) plugin                                                  |\r\n     * | `false`  | Disable the [`ManualColumnMove`](@/api/manualColumnMove.md) plugin                                                 |\r\n     * | An array | - Enable the [`ManualColumnMove`](@/api/manualColumnMove.md) plugin<br>- Move individual columns at initialization |\r\n     *\r\n     * Read more:\r\n     * - [Column moving](@/guides/columns/column-moving/column-moving.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|number[]}\r\n     * @default undefined\r\n     * @category ManualColumnMove\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `ManualColumnMove` plugin\r\n     * manualColumnMove: true,\r\n     *\r\n     * // enable the `ManualColumnMove` plugin\r\n     * // at initialization, move column 0 to 1\r\n     * // at initialization, move column 1 to 4\r\n     * // at initialization, move column 2 to 6\r\n     * manualColumnMove: [1, 4, 6],\r\n     * ```\r\n     */\n    manualColumnMove: undefined,\n    /**\r\n     * @description\r\n     * The `manualColumnResize` option configures the [`ManualColumnResize`](@/api/manualColumnResize.md) plugin.\r\n     *\r\n     * You can set the `manualColumnResize` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                                                                                           |\r\n     * | -------- | --------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true`   | Enable the [`ManualColumnResize`](@/api/manualColumnResize.md) plugin                                                 |\r\n     * | `false`  | Disable the [`ManualColumnResize`](@/api/manualColumnResize.md) plugin                                                |\r\n     * | An array | - Enable the [`ManualColumnResize`](@/api/manualColumnResize.md) plugin<br>- Set initial widths of individual columns |\r\n     *\r\n     * Read more:\r\n     * - [Column width: Column stretching](@/guides/columns/column-width/column-width.md#column-stretching)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|number[]}\r\n     * @default undefined\r\n     * @category ManualColumnResize\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `manualColumnResize` plugin\r\n     * manualColumnResize: true,\r\n     *\r\n     * // enable the `manualColumnResize` plugin\r\n     * // set the initial width of column 0 to 40 pixels\r\n     * // set the initial width of column 1 to 50 pixels\r\n     * // set the initial width of column 2 to 60 pixels\r\n     * manualColumnResize: [40, 50, 60],\r\n     * ```\r\n     */\n    manualColumnResize: undefined,\n    /**\r\n     * @description\r\n     * The `manualRowMove` option configures the [`ManualRowMove`](@/api/manualRowMove.md) plugin.\r\n     *\r\n     * You can set the `manualRowMove` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                                                                               |\r\n     * | -------- | --------------------------------------------------------------------------------------------------------- |\r\n     * | `true`   | Enable the [`ManualRowMove`](@/api/manualRowMove.md) plugin                                               |\r\n     * | `false`  | Disable the [`ManualRowMove`](@/api/manualRowMove.md) plugin                                              |\r\n     * | An array | - Enable the [`ManualRowMove`](@/api/manualRowMove.md) plugin<br>- Move individual rows at initialization |\r\n     *\r\n     * Read more:\r\n     * - [Row moving](@/guides/rows/row-moving/row-moving.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|number[]}\r\n     * @default undefined\r\n     * @category ManualRowMove\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `ManualRowMove` plugin\r\n     * manualRowMove: true,\r\n     *\r\n     * // enable the `ManualRowMove` plugin\r\n     * // at initialization, move row 0 to 1\r\n     * // at initialization, move row 1 to 4\r\n     * // at initialization, move row 2 to 6\r\n     * manualColumnMove: [1, 4, 6],\r\n     * ```\r\n     */\n    manualRowMove: undefined,\n    /**\r\n     * @description\r\n     * The `manualRowResize` option configures the [`ManualRowResize`](@/api/manualRowResize.md) plugin.\r\n     *\r\n     * You can set the `manualRowResize` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                                                                                   |\r\n     * | -------- | ------------------------------------------------------------------------------------------------------------- |\r\n     * | `true`   | Enable the [`ManualRowResize`](@/api/manualRowResize.md) plugin                                               |\r\n     * | `false`  | Disable the [`ManualRowResize`](@/api/manualRowResize.md) plugin                                              |\r\n     * | An array | - Enable the [`ManualRowResize`](@/api/manualRowResize.md) plugin<br>- Set initial heights of individual rows |\r\n     *\r\n     * Read more:\r\n     * - [Row height: Adjust the row height manually](@/guides/rows/row-height/row-height.md#adjust-the-row-height-manually)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|number[]}\r\n     * @default undefined\r\n     * @category ManualRowResize\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `ManualRowResize` plugin\r\n     * manualRowResize: true,\r\n     *\r\n     * // enable the `ManualRowResize` plugin\r\n     * // set the initial height of row 0 to 40 pixels\r\n     * // set the initial height of row 1 to 50 pixels\r\n     * // set the initial height of row 2 to 60 pixels\r\n     * manualRowResize: [40, 50, 60],\r\n     * ```\r\n     */\n    manualRowResize: undefined,\n    /**\r\n     * The `maxCols` option sets a maximum number of columns.\r\n     *\r\n     * The `maxCols` option is used:\r\n     * - At initialization: if the `maxCols` value is lower than the initial number of columns,\r\n     * Handsontable trims columns from the right.\r\n     * - At runtime: for example, when inserting columns.\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default Infinity\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the maximum number of columns to 300\r\n     * maxCols: 300,\r\n     * ```\r\n     */\n    maxCols: Infinity,\n    /**\r\n     * The `maxRows` option sets a maximum number of rows.\r\n     *\r\n     * The `maxRows` option is used:\r\n     * - At initialization: if the `maxRows` value is lower than the initial number of rows,\r\n     * Handsontable trims rows from the bottom.\r\n     * - At runtime: for example, when inserting rows.\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default Infinity\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the maximum number of rows to 300\r\n     * maxRows: 300,\r\n     * ```\r\n     */\n    maxRows: Infinity,\n    /**\r\n     * @description\r\n     * The `mergeCells` option configures the [`MergeCells`](@/api/mergeCells.md) plugin.\r\n     *\r\n     * You can set the `mergeCells` option to one of the following:\r\n     *\r\n     * | Setting             | Description                                                                                         |\r\n     * | ------------------- | --------------------------------------------------------------------------------------------------- |\r\n     * | `true`              | Enable the [`MergeCells`](@/api/mergeCells.md) plugin                                               |\r\n     * | `false`             | Disable the [`MergeCells`](@/api/mergeCells.md) plugin                                              |\r\n     * | An array of objects | - Enable the [`MergeCells`](@/api/mergeCells.md) plugin<br>- Merge specific cells at initialization |\r\n     *\r\n     * To merge specific cells at Handsontable's initialization,\r\n     * set the `mergeCells` option to an array of objects, with the following properties:\r\n     *\r\n     * | Property  | Description                                                |\r\n     * | --------- | ---------------------------------------------------------- |\r\n     * | `row`     | The row index of the merged section's beginning            |\r\n     * | `col`     | The column index of the merged section's beginning         |\r\n     * | `rowspan` | The width (as a number of rows) of the merged section      |\r\n     * | `colspan` | The height (as a number of columns ) of the merged section |\r\n     *\r\n     * Read more:\r\n     * - [Merge cells](@/guides/cell-features/merge-cells/merge-cells.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object[]}\r\n     * @default false\r\n     * @category MergeCells\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `MergeCells` plugin\r\n     * mergeCells: true,\r\n     *\r\n     * // enable the `MergeCells` plugin\r\n     * // and merge specific cells at initialization\r\n     * mergeCells: [\r\n     *   // merge cells from cell (1,1) to cell (3,3)\r\n     *   {row: 1, col: 1, rowspan: 3, colspan: 3},\r\n     *   // merge cells from cell (3,4) to cell (2,2)\r\n     *   {row: 3, col: 4, rowspan: 2, colspan: 2},\r\n     *   // merge cells from cell (5,6) to cell (3,3)\r\n     *   {row: 5, col: 6, rowspan: 3, colspan: 3}\r\n     * ],\r\n     * ```\r\n     */\n    mergeCells: false,\n    /**\r\n     * The `minCols` option sets a minimum number of columns.\r\n     *\r\n     * The `minCols` option is used:\r\n     * - At initialization: if the `minCols` value is higher than the initial number of columns,\r\n     * Handsontable adds empty columns to the right.\r\n     * - At runtime: for example, when removing columns.\r\n     *\r\n     * The `minCols` option works only when your [`data`](#data) is an [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays).\r\n     * When your [`data`](#data) is an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects),\r\n     * you can only have as many columns as defined in:\r\n     * - The first data row\r\n     * - The [`dataSchema`](#dataSchema) option\r\n     * - The [`columns`](#columns) option\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the minimum number of columns to 10\r\n     * minCols: 10,\r\n     * ```\r\n     */\n    minCols: 0,\n    /**\r\n     * The `minRows` option sets a minimum number of rows.\r\n     *\r\n     * The `minRows` option is used:\r\n     * - At initialization: if the `minRows` value is higher than the initial number of rows,\r\n     * Handsontable adds empty rows at the bottom.\r\n     * - At runtime: for example, when removing rows.\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the minimum number of rows to 10\r\n     * minRows: 10,\r\n     * ```\r\n     */\n    minRows: 0,\n    /**\r\n     * The `minSpareCols` option sets a minimum number of empty columns\r\n     * at the grid's right-hand end.\r\n     *\r\n     * If there already are other empty columns at the grid's right-hand end,\r\n     * they are counted into the `minSpareCols` value.\r\n     *\r\n     * The total number of columns can't exceed the [`maxCols`](#maxCols) value.\r\n     *\r\n     * The `minSpareCols` option works only when your [`data`](#data) is an [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays).\r\n     * When your [`data`](#data) is an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects),\r\n     * you can only have as many columns as defined in:\r\n     * - The first data row\r\n     * - The [`dataSchema`](#dataSchema) option\r\n     * - The [`columns`](#columns) option\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // at Handsontable's initialization, add at least 3 empty columns on the right\r\n     * minSpareCols: 3,\r\n     * ```\r\n     */\n    minSpareCols: 0,\n    /**\r\n     * The `minSpareRows` option sets a minimum number of empty rows\r\n     * at the bottom of the grid.\r\n     *\r\n     * If there already are other empty rows at the bottom,\r\n     * they are counted into the `minSpareRows` value.\r\n     *\r\n     * The total number of rows can't exceed the [`maxRows`](#maxRows) value.\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 0\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // at Handsontable's initialization, add at least 3 empty rows at the bottom\r\n     * minSpareRows: 3,\r\n     * ```\r\n     */\n    minSpareRows: 0,\n    /**\r\n     * @description\r\n     * The `multiColumnSorting` option configures the [`MultiColumnSorting`](@/api/columnSorting.md) plugin.\r\n     *\r\n     * You can set the `multiColumnSorting` option to one of the following:\r\n     *\r\n     * | Setting    | Description                                                                                                                                                |\r\n     * | ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `true`     | Enable the [`MultiColumnSorting`](@/api/multiColumnSorting.md) plugin with the default configuration                                                       |\r\n     * | `false`    | Disable the [`MultiColumnSorting`](@/api/multiColumnSorting.md) plugin                                                                                     |\r\n     * | An object  | - Enable the [`MultiColumnSorting`](@/api/multiColumnSorting.md) plugin<br>- Modify the [`MultiColumnSorting`](@/api/multiColumnSorting.md) plugin options |\r\n     *\r\n     * If you set the `multiColumnSorting` option to an object,\r\n     * you can set the following [`MultiColumnSorting`](@/api/multiColumnSorting.md) plugin options:\r\n     *\r\n     * | Option                   | Possible settings                                                                                                                                |\r\n     * | ------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n     * | `indicator`              | `true`: Display the arrow icon in the column header, to indicate a sortable column<br>`false`: Don't display the arrow icon in the column header |\r\n     * | `headerAction`           | `true`: Enable clicking on the column header to sort the column<br>`false`: Disable clicking on the column header to sort the column             |\r\n     * | `sortEmptyCells`         | `true`: Sort empty cells as well<br>`false`: Place empty cells at the end                                                                        |\r\n     * | `compareFunctionFactory` | A [custom compare function](@/guides/rows/rows-sorting/rows-sorting.md#add-a-custom-comparator)                                                               |\r\n     *\r\n     * If you set the `multiColumnSorting` option to an object,\r\n     * you can also sort individual columns at Handsontable's initialization.\r\n     * In the `multiColumnSorting` object, add an object named `initialConfig`,\r\n     * with the following properties:\r\n     *\r\n     * | Option      | Possible settings   | Description                                                      |\r\n     * | ----------- | ------------------- | ---------------------------------------------------------------- |\r\n     * | `column`    | A number            | The index of the column that you want to sort at initialization  |\r\n     * | `sortOrder` | `'asc'` \\| `'desc'` | The sorting order:<br>`'asc'`: ascending<br>`'desc'`: descending |\r\n     *\r\n     * Read more:\r\n     * - [Rows sorting](@/guides/rows/rows-sorting/rows-sorting.md)\r\n     * - [`columnSorting`](#columnSorting)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object}\r\n     * @default undefined\r\n     * @category MultiColumnSorting\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `MultiColumnSorting` plugin\r\n     * multiColumnSorting: true\r\n     *\r\n     * // enable the `MultiColumnSorting` plugin with custom configuration\r\n     * multiColumnSorting: {\r\n     *   // sort empty cells as well\r\n     *   sortEmptyCells: true,\r\n     *   // display the arrow icon in the column header\r\n     *   indicator: true,\r\n     *   // disable clicking on the column header to sort the column\r\n     *   headerAction: false,\r\n     *   // add a custom compare function\r\n     *   compareFunctionFactory(sortOrder, columnMeta) {\r\n     *     return function(value, nextValue) {\r\n     *       // some value comparisons which will return -1, 0 or 1...\r\n     *     }\r\n     *   }\r\n     * }\r\n     *\r\n     * // enable the `MultiColumnSorting` plugin\r\n     * multiColumnSorting: {\r\n     *   // at initialization, sort column 1 in ascending order\r\n     *   initialConfig: {\r\n     *     column: 1,\r\n     *     sortOrder: 'asc'\r\n     *   },\r\n     *   // at initialization, sort column 2 in descending order\r\n     *   initialConfig: {\r\n     *     column: 2,\r\n     *     sortOrder: 'desc'\r\n     *   }\r\n     * }\r\n     * ```\r\n     */\n    multiColumnSorting: undefined,\n    /**\r\n     * When set to `true`, the `navigableHeaders` option lets you navigate [row headers](@/guides/rows/row-header/row-header.md) and [column headers](@/guides/columns/column-header/column-header.md), using the arrow keys or the <kbd>**Tab**</kbd> key (if the [`tabNavigation`](#tabNavigation) option is set to `true`).\r\n     *\r\n     * @since 14.0.0\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // you can navigate row and column headers with the keyboard\r\n     * navigableHeaders: true,\r\n     *\r\n     * // default behavior: you can't navigate row and column headers with the keyboard\r\n     * navigableHeaders: false,\r\n     * ```\r\n     */\n    navigableHeaders: false,\n    /**\r\n     * When set to `false`, the `tabNavigation` option changes the behavior of the\r\n     * <kbd>Tab</kbd> and <kbd>Shift</kbd>+<kbd>Tab</kbd> keyboard shortcuts. The Handsontable\r\n     * no more captures that shortcuts to make the grid navigation available (`tabNavigation: true`)\r\n     * but returns control to the browser so the native page navigation is possible.\r\n     *\r\n     * @since 14.0.0\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // you can't navigate row and column headers using <kbd>Tab</kbd> or <kbd>Shift</kbd>+<kbd>Tab</kbd> keyboard shortcuts\r\n     * tabNavigation: false,\r\n     *\r\n     * // default behavior: you can navigate row and column headers using <kbd>Tab</kbd> or <kbd>Shift</kbd>+<kbd>Tab</kbd> keyboard shortcuts\r\n     * tabNavigation: true,\r\n     * ```\r\n     */\n    tabNavigation: true,\n    /**\r\n     * @description\r\n     * The `nestedHeaders` option configures the [`NestedHeaders`](@/api/nestedHeaders.md) plugin.\r\n     *\r\n     * You can set the `nestedHeaders` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                                                           |\r\n     * | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | Disable the [`NestedHeaders`](@/api/nestedHeaders.md) plugin                                                                          |\r\n     * | `true`            | - Enable the [`NestedHeaders`](@/api/nestedHeaders.md) plugin<br>- Don't configure any nested headers                                 |\r\n     * | Array of arrays   | - Enable the [`NestedHeaders`](@/api/nestedHeaders.md) plugin<br>- Configure headers that are nested on Handsontable's initialization |\r\n     *\r\n     * If you set the `nestedHeaders` option to an array of arrays, each array configures one set of nested headers.\r\n     *\r\n     * Each array element configures one header, and can be one of the following:\r\n     *\r\n     * | Array element | Description                                                                                  |\r\n     * | ------------- | -------------------------------------------------------------------------------------------- |\r\n     * | A string      | The header's label                                                                           |\r\n     * | An object     | Properties:<br>`label` (string): the header's label<br>`colspan` (integer): the column width |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `NestedHeaders`](@/api/nestedHeaders.md)\r\n     * - [Column groups: Nested headers](@/guides/columns/column-groups/column-groups.md#nested-headers)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|Array[]}\r\n     * @default undefined\r\n     * @category NestedHeaders\r\n     *\r\n     * @example\r\n     * ```js\r\n     * nestedHeaders: [\r\n     *   ['A', {label: 'B', colspan: 8}, 'C'],\r\n     *   ['D', {label: 'E', colspan: 4}, {label: 'F', colspan: 4}, 'G'],\r\n     *   ['H', 'I', 'J', 'K', 'L', 'M', 'N', 'R', 'S', 'T']\r\n     * ],\r\n     * ```\r\n     */\n    nestedHeaders: undefined,\n    /**\r\n     * @description\r\n     * The `nestedRows` option configures the [`NestedRows`](@/api/nestedRows.md) plugin.\r\n     *\r\n     * You can set the `nestedRows` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                            |\r\n     * | ----------------- | ------------------------------------------------------ |\r\n     * | `false` (default) | Disable the [`NestedRows`](@/api/nestedRows.md) plugin |\r\n     * | `true`            | Enable the [`NestedRows`](@/api/nestedRows.md) plugin  |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `NestedRows`](@/guides/rows/row-parent-child/row-parent-child.md)\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `NestedRows` plugin\r\n     * nestedRows: true,\r\n     * ```\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category NestedRows\r\n     */\n    nestedRows: undefined,\n    /**\r\n     * The `noWordWrapClassName` option lets you add a CSS class name\r\n     * to each cell that has the [`wordWrap`](#wordWrap) option set to `false`.\r\n     *\r\n     * Read more:\r\n     * - [`wordWrap`](#wordWrap)\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'htNoWrap'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add an `is-noWrapCell` CSS class name\r\n     * // to each cell that doesn't wrap content\r\n     * noWordWrapClassName: 'is-noWrapCell',\r\n     * ```\r\n     */\n    noWordWrapClassName: 'htNoWrap',\n    /**\r\n     * The `numericFormat` option configures the number format and the currency format\r\n     * of [`numeric`](@/guides/cell-types/numeric-cell-type/numeric-cell-type.md) cells` displayed output\r\n     * in the numeric cell renderer.\r\n     *\r\n     * You can set the `numericFormat` option to an object with the following properties:\r\n     *\r\n     * | Property    | Possible values                                                               | Description     |\r\n     * | ----------- | ----------------------------------------------------------------------------- | --------------- |\r\n     * | `pattern`   | All [`numbro.js` number formats](https://numbrojs.com/format.html#numbers)    | Number format   |\r\n     * | `culture`   | All [`numbro.js` currency formats](https://numbrojs.com/format.html#currency) | Currency format |\r\n     *\r\n     * The `numericFormat` option as no effect on the numeric cell editor.\r\n     *\r\n     * In the source data, numeric data is stored as JavaScript numbers.\r\n     *\r\n     * Read more:\r\n     * - [Numeric cell type](@/guides/cell-types/numeric-cell-type/numeric-cell-type.md)\r\n     * - [Third-party licenses](@/guides/technical-specification/third-party-licenses/third-party-licenses.md)\r\n     *\r\n     * @memberof Options#\r\n     * @since 0.35.0\r\n     * @type {object}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `numeric`\r\n     *     type: 'numeric',\r\n     *     // set the `numericFormat` option for every `numeric` cell of this column\r\n     *     numericFormat: {\r\n     *       // set the number format\r\n     *       pattern: '0,00',\r\n     *       // set the currency format\r\n     *       culture: 'en-US'\r\n     *     }\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    numericFormat: undefined,\n    /**\r\n     * If the `observeDOMVisibility` option is set to `true`,\r\n     * Handsontable rerenders every time it detects that the grid was made visible in the DOM.\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // don't rerender the grid on visibility changes\r\n     * observeDOMVisibility: false,\r\n     * ```\r\n     */\n    observeDOMVisibility: true,\n    /**\r\n     * The `outsideClickDeselects` option determines what happens to the current [selection](@/guides/cell-features/selection/selection.md)\r\n     * when you click outside of the grid.\r\n     *\r\n     * You can set the `outsideClickDeselects` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                                              |\r\n     * | ---------------- | -------------------------------------------------------------------------------------------------------- |\r\n     * | `true` (default) | On a mouse click outside of the grid, clear the current [selection](@/guides/cell-features/selection/selection.md) |\r\n     * | `false`          | On a mouse click outside of the grid, keep the current [selection](@/guides/cell-features/selection/selection.md)  |\r\n     * | A function       | A function that takes the click event target and returns a boolean                                       |\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|Function}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // on a mouse click outside of the grid, clear the current selection\r\n     * outsideClickDeselects: true,\r\n     *\r\n     * // on a mouse click outside of the grid, keep the current selection\r\n     * outsideClickDeselects: false,\r\n     *\r\n     * // take the click event target and return `false`\r\n     * outsideClickDeselects(event) {\r\n     *   return false;\r\n     * }\r\n     *\r\n     * // take the click event target and return `true`\r\n     * outsideClickDeselects(event) {\r\n     *   return false;\r\n     * }\r\n     * ```\r\n     */\n    outsideClickDeselects: true,\n    /**\r\n     * @description\r\n     * The `persistentState` option configures the [`PersistentState`](@/api/persistentState.md) plugin.\r\n     *\r\n     * You can set the `persistentState` to one of the following:\r\n     *\r\n     * | Setting           | Description                                                      |\r\n     * | ----------------- | ---------------------------------------------------------------- |\r\n     * | `false` (default) | Disable the [`PersistentState`](@/api/persistentState.md) plugin |\r\n     * | `true`            | Enable the [`PersistentState`](@/api/persistentState.md) plugin  |\r\n     *\r\n     * Read more:\r\n     * - [Saving data: Saving data locally](@/guides/getting-started/saving-data/saving-data.md#save-data-locally)\r\n     * - [Plugins: `PersistentState`](@/api/persistentState.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category PersistentState\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `PersistentState` plugin\r\n     * persistentState: true,\r\n     * ```\r\n     */\n    persistentState: undefined,\n    /**\r\n     * The `placeholder` option lets you display placeholder text in every empty cell.\r\n     *\r\n     * You can set the `placeholder` option to one of the following:\r\n     *\r\n     * | Setting            | Example        | Description                                                           |\r\n     * | ------------------ | -------------- | --------------------------------------------------------------------- |\r\n     * | A non-empty string | `'Empty cell'` | Display `Empty cell` text in empty cells                              |\r\n     * | A non-string value | `000`          | Display `000` text in empty cells (non-string values get stringified) |\r\n     *\r\n     * Read more:\r\n     * - [`placeholderCellClassName`](#placeholderCellClassName)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // display 'Empty cell' text\r\n     * // in every empty cell of the entire grid\r\n     * placeholder: 'Empty cell',\r\n     *\r\n     * // or\r\n     * columns: [\r\n     *   {\r\n     *     data: 'date',\r\n     *     dateFormat: 'DD/MM/YYYY',\r\n     *     // display 'Empty date cell' text\r\n     *     // in every empty cell of the `date` column\r\n     *     placeholder: 'Empty date cell'\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    placeholder: undefined,\n    /**\r\n     * The `placeholderCellClassName` option lets you add a CSS class name to cells\r\n     * that contain [`placeholder`](#placeholder) text.\r\n     *\r\n     * Read more:\r\n     * - [Cell validator](@/guides/cell-functions/cell-validator/cell-validator.md)\r\n     * - [`placeholder`](#placeholder)\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'htPlaceholder'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `has-placeholder` CSS class name\r\n     * // to each cell that contains `placeholder` text\r\n     * placeholderCellClassName: 'has-placeholder',\r\n     * ```\r\n     */\n    placeholderCellClassName: 'htPlaceholder',\n    /**\r\n     * The `preventOverflow` option configures preventing Handsontable\r\n     * from overflowing outside of its parent element.\r\n     *\r\n     * You can set the `preventOverflow` option to one of the following:\r\n     *\r\n     * | Setting           | Description                      |\r\n     * | ----------------- | -------------------------------- |\r\n     * | `false` (default) | Don't prevent overflowing        |\r\n     * | `'horizontal'`      | Prevent horizontal overflowing |\r\n     * | `'vertical'`        | Prevent vertical overflowing   |\r\n     *\r\n     * @memberof Options#\r\n     * @type {string|boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // prevent horizontal overflowing\r\n     * preventOverflow: 'horizontal',\r\n     * ```\r\n     */\n    preventOverflow: false,\n    /**\r\n     * The `preventWheel` option configures preventing the `wheel` event's default action\r\n     * on overlays.\r\n     *\r\n     * You can set the `preventWheel` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                      |\r\n     * | ----------------- | ------------------------------------------------ |\r\n     * | `false` (default) | Don't prevent the `wheel` event's default action |\r\n     * | `true`            | Prevent the `wheel` event's default action       |\r\n     *\r\n     * @memberof Options#\r\n     * @private\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // don't prevent the `wheel` event's default action\r\n     * preventWheel: false,\r\n     * ```\r\n     */\n    preventWheel: false,\n    /**\r\n     * @description\r\n     * The `readOnly` option determines whether a [cell](@/guides/cell-features/disabled-cells/disabled-cells.md#read-only-specific-cells),\r\n     * [comment](@/guides/cell-features/comments/comments.md#make-a-comment-read-only), [column](@/guides/cell-features/disabled-cells/disabled-cells.md#read-only-columns)\r\n     * or the [entire grid](@/guides/cell-features/disabled-cells/disabled-cells.md#read-only-grid) is editable or not. You can configure it as follows:\r\n     *\r\n     * | Setting           | Description                                                                                                                |\r\n     * | ----------------- | ------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | Set as editable                                                                                                           |\r\n     * | `true`            | - Set as read-only<br>- Add the [`readOnlyCellClassName`](#readOnlyCellClassName) CSS class name (by default: `htDimmed`) |\r\n     *\r\n     * `readOnly` cells can't be changed by the [`populateFromArray()`](@/api/core.md#populatefromarray) method.\r\n     *\r\n     * Read more:\r\n     * - [Disabled cells](@/guides/cell-features/disabled-cells/disabled-cells.md)\r\n     * - [Configuration options: Cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // make the entire grid read-only\r\n     * const configurationOptions = {\r\n     *   columnSorting: true,\r\n     * };\r\n     *\r\n     * // make the third column read-only\r\n     * const configurationOptions = {\r\n     *   columns: [\r\n     *     {},\r\n     *     {},\r\n     *     {\r\n     *       readOnly: true,\r\n     *     },\r\n     *   ],\r\n     * };\r\n     *\r\n     * // make a specific cell read-only\r\n     * const configurationOptions = {\r\n     *   cell: [\r\n     *     {\r\n     *       row: 0,\r\n     *       col: 0,\r\n     *       readOnly: true,\r\n     *     },\r\n     * };\r\n     * ```\r\n     */\n    readOnly: false,\n    /**\r\n     * The `readOnlyCellClassName` option lets you add a CSS class name to [read-only](#readOnly) cells.\r\n     *\r\n     * Read more:\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`placeholderCellClassName`](#placeholderCellClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`TableClassName`](#TableClassName)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'htDimmed'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `is-readOnly` CSS class name\r\n     * // to every read-only cell\r\n     * readOnlyCellClassName: 'is-readOnly',\r\n     * ```\r\n     */\n    readOnlyCellClassName: 'htDimmed',\n    /**\r\n     * The `renderAllRows` option controls Handsontable's [row virtualization](@/guides/rows/row-virtualization/row-virtualization.md).\r\n     * You can configure it as follows:\r\n     *\r\n     * | Setting           | Description                                                                                                                                                                                     |\r\n     * | ----------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | Enable [row virtualization](@/guides/rows/row-virtualization/row-virtualization.md), rendering only the visible rows for optimal performance with large datasets.                                                  |\r\n     * | `true`            | Disable [row virtualization](@/guides/rows/row-virtualization/row-virtualization.md)<br>(render all rows of the grid), rendering all rows in the dataset for consistent rendering and screen reader accessibility. |\r\n     *\r\n     * Setting `renderAllRows` to `true` overwrites the [`viewportRowRenderingOffset`](#viewportRowRenderingOffset) setting.\r\n     *\r\n     * Read more:\r\n     * - [Row virtualization](@/guides/rows/row-virtualization/row-virtualization.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // disable row virtualization\r\n     * renderAllRows: true,\r\n     * ```\r\n     */\n    renderAllRows: false,\n    /**\r\n     * The `renderAllColumns` option configures Handsontable's [column virtualization](@/guides/columns/column-virtualization/column-virtualization.md).\r\n     *\r\n     * You can set the `renderAllColumns` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                                                                                                                                                      |\r\n     * | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | Enable [column virtualization](@/guides/columns/column-virtualization/column-virtualization.md), rendering only visible columns for better performance with many columns.                                                                              |\r\n     * | `true`            | Disable [column virtualization](@/guides/columns/column-virtualization/column-virtualization.md)<br>(render all columns of the grid), rendering all columns in the dataset, and ensuring all columns are available regardless of horizontal scrolling. |\r\n     *\r\n     * Setting `renderAllColumns` to `true` overwrites the [`viewportColumnRenderingOffset`](#viewportColumnRenderingOffset) setting.\r\n     *\r\n     * Read more:\r\n     * - [Column virtualization](@/guides/columns/column-virtualization/column-virtualization.md)\r\n     *\r\n     * @since 14.1.0\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // disable column virtualization\r\n     * renderAllColumns: true,\r\n     * ```\r\n     */\n    renderAllColumns: false,\n    /**\r\n     * @description\r\n     * The `renderer` option sets a [cell renderer](@/guides/cell-functions/cell-renderer/cell-renderer.md) for a cell.\r\n     *\r\n     * You can set the `renderer` option to one of the following:\r\n     * - A custom renderer function\r\n     * - One of the following [cell renderer aliases](@/guides/cell-functions/cell-renderer/cell-renderer.md):\r\n     *\r\n     * | Alias               | Cell renderer function                                                         |\r\n     * | ------------------- | ------------------------------------------------------------------------------ |\r\n     * | A custom alias      | Your [custom cell renderer](@/guides/cell-functions/cell-renderer/cell-renderer.md) function |\r\n     * | `'autocomplete'`    | `AutocompleteRenderer`                                                         |\r\n     * | `'base'`            | `BaseRenderer`                                                                 |\r\n     * | `'checkbox'`        | `CheckboxRenderer`                                                             |\r\n     * | `'date'`            | `DateRenderer`                                                                 |\r\n     * | `'dropdown'`        | `DropdownRenderer`                                                             |\r\n     * | `'html'`            | `HtmlRenderer`                                                                 |\r\n     * | `'numeric'`         | `NumericRenderer`                                                              |\r\n     * | `'password'`        | `PasswordRenderer`                                                             |\r\n     * | `'text'`            | `TextRenderer`                                                                 |\r\n     * | `'time'`            | `TimeRenderer`                                                                 |\r\n     *\r\n     * To set the [`renderer`](#renderer), [`editor`](#editor), and [`validator`](#validator)\r\n     * options all at once, use the [`type`](#type) option.\r\n     *\r\n     * Read more:\r\n     * - [Cell renderer](@/guides/cell-functions/cell-renderer/cell-renderer.md)\r\n     * - [Cell type](@/guides/cell-types/cell-type/cell-type.md)\r\n     * - [Configuration options: Cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration)\r\n     * - [`type`](#type)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // use the `numeric` renderer for each cell of the entire grid\r\n     * renderer: `'numeric'`,\r\n     *\r\n     * // add a custom renderer function\r\n     * renderer(hotInstance, td, row, column, prop, value, cellProperties) {\r\n     *   // your custom renderer's logic\r\n     *   ...\r\n     * }\r\n     *\r\n     * // apply the `renderer` option to individual columns\r\n     * columns: [\r\n     *   {\r\n     *     // use the `autocomplete` renderer for each cell of this column\r\n     *     renderer: 'autocomplete'\r\n     *   },\r\n     *   {\r\n     *     // use the `myCustomRenderer` renderer for each cell of this column\r\n     *     renderer: 'myCustomRenderer'\r\n     *   }\r\n     * ]\r\n     * ```\r\n     */\n    renderer: undefined,\n    /**\r\n     * The `rowHeaders` option configures your grid's row headers.\r\n     *\r\n     * You can set the `rowHeaders` option to one of the following:\r\n     *\r\n     * | Setting    | Description                                                       |\r\n     * | ---------- | ----------------------------------------------------------------- |\r\n     * | `true`     | Enable the default row headers ('1', '2', '3', ...)               |\r\n     * | `false`    | Disable row headers                                               |\r\n     * | An array   | Define your own row headers (e.g. `['One', 'Two', 'Three', ...]`) |\r\n     * | A function | Define your own row headers, using a function                     |\r\n     *\r\n     * Read more:\r\n     * - [Row header](@/guides/rows/row-header/row-header.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string[]|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the default row headers\r\n     * rowHeaders: true,\r\n     *\r\n     * // set your own row headers\r\n     * rowHeaders: ['One', 'Two', 'Three'],\r\n     *\r\n     * // set your own row headers, using a function\r\n     * rowHeaders: function(visualRowIndex) {\r\n     *   return `${visualRowIndex}: AB`;\r\n     * },\r\n     * ```\r\n     */\n    rowHeaders: undefined,\n    /**\r\n     * @description\r\n     * The `rowHeaderWidth` option configures the width of row headers.\r\n     *\r\n     * You can set the `rowHeaderWidth` option to one of the following:\r\n     *\r\n     * | Setting  | Description                                     |\r\n     * | -------- | ----------------------------------------------- |\r\n     * | A number | Set the same width for every row header         |\r\n     * | An array | Set different widths for individual row headers |\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|number[]}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the same width for every row header\r\n     * rowHeaderWidth: 25,\r\n     *\r\n     * // set different widths for individual row headers\r\n     * rowHeaderWidth: [25, 30, 55],\r\n     * ```\r\n     */\n    rowHeaderWidth: undefined,\n    /**\r\n     * The `rowHeights` option sets rows' heights, in pixels.\r\n     *\r\n     * In the rendering process, the default row height is 23 px (22 px + 1 px of the row's bottom border).\r\n     * You can change it to equal or greater than 23px, by setting the `rowHeights` option to one of the following:\r\n     *\r\n     * | Setting     | Description                                                                                         | Example                                                      |\r\n     * | ----------- | --------------------------------------------------------------------------------------------------- | ------------------------------------------------------------ |\r\n     * | A number    | Set the same height for every row                                                                   | `rowHeights: 100`                                            |\r\n     * | A string    | Set the same height for every row                                                                   | `rowHeights: '100px'`                                        |\r\n     * | An array    | Set heights separately for each row                                                                 | `rowHeights: [100, 120, undefined]`                          |\r\n     * | A function  | Set row heights dynamically,<br>on each render                                                      | `rowHeights(visualRowIndex) { return visualRowIndex * 10; }` |\r\n     * | `undefined` | Used by the [modifyRowHeight](@/api/hooks.md#modifyRowHeight) hook,<br>to detect row height changes | `rowHeights: undefined`                                      |\r\n     *\r\n     * The `rowHeights` option also sets the minimum row height that can be set\r\n     * via the {@link ManualRowResize} and {@link AutoRowSize} plugins (if they are enabled).\r\n     *\r\n     * Read more:\r\n     * - [Row height](@/guides/rows/row-height/row-height.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|number[]|string|string[]|Array<undefined>|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set every row's height to 100px\r\n     * rowHeights: 100,\r\n     *\r\n     * // set every row's height to 100px\r\n     * rowHeights: '100px',\r\n     *\r\n     * // set the first (by visual index) row's height to 100\r\n     * // set the second (by visual index) row's height to 120\r\n     * // set the third (by visual index) row's height to `undefined`\r\n     * // set any other row's height to the default 23px\r\n     * rowHeights: [100, 120, undefined],\r\n     *\r\n     * // set each row's height individually, using a function\r\n     * rowHeights(visualRowIndex) {\r\n     *   return visualRowIndex * 10;\r\n     * },\r\n     * ```\r\n     */\n    rowHeights: undefined,\n    /**\r\n     * @description\r\n     * The `search` option configures the [`Search`](@/api/search.md) plugin.\r\n     *\r\n     * You can set the `search` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                          |\r\n     * | ----------------- | ------------------------------------------------------------------------------------ |\r\n     * | `false` (default) | Disable the [`Search`](@/api/search.md) plugin                                       |\r\n     * | `true`            | Enable the [`Search`](@/api/search.md) plugin with the default configuration         |\r\n     * | An object         | - Enable the [`Search`](@/api/search.md) plugin<br>- Apply your custom configuration |\r\n     *\r\n     * If you set the `search` option to an object, you can configure the following search options:\r\n     *\r\n     * | Option              | Possible settings | Description                                                                                          |\r\n     * | ------------------- | ----------------- | ---------------------------------------------------------------------------------------------------- |\r\n     * | `searchResultClass` | A string          | Add a custom CSS class name to search results                                                        |\r\n     * | `queryMethod`       | A function        | Add a [custom query method](@/guides/navigation/searching-values/searching-values.md#custom-query-method)  |\r\n     * | `callback`          | A function        | Add a [custom callback function](@/guides/navigation/searching-values/searching-values.md#custom-callback) |\r\n     *\r\n     * Read more:\r\n     * - [Searching values](@/guides/navigation/searching-values/searching-values.md)\r\n     * - [Searching values: Custom query method](@/guides/navigation/searching-values/searching-values.md#custom-query-method)\r\n     * - [Searching values: Custom callback](@/guides/navigation/searching-values/searching-values.md#custom-callback)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|object}\r\n     * @default false\r\n     * @category Search\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `Search` plugin with the default configuration\r\n     * search: true,\r\n     *\r\n     * // enable the `Search` plugin with a custom configuration\r\n     * search: {\r\n     *   // add a `customClass` CSS class name to search results\r\n     *   searchResultClass: 'customClass',\r\n     *   // add a custom query method\r\n     *   queryMethod(queryStr, value) {\r\n     *     ...\r\n     *   },\r\n     *   // add a custom callback function\r\n     *   callback(instance, row, column, value, result) {\r\n     *     ...\r\n     *   }\r\n     * }\r\n     * ```\r\n     */\n    search: false,\n    /**\r\n     * @description\r\n     * The `selectionMode` option configures how [selection](@/guides/cell-features/selection/selection.md) works.\r\n     *\r\n     * You can set the `selectionMode` option to one of the following:\r\n     *\r\n     * | Setting      | Description                                                  |\r\n     * | ------------ | ------------------------------------------------------------ |\r\n     * | `'single'`   | Allow the user to select only one cell at a time.            |\r\n     * | `'range'`    | Allow the user to select one range of cells at a time.       |\r\n     * | `'multiple'` | Allow the user to select multiple ranges of cells at a time. |\r\n     *\r\n     * Read more:\r\n     * - [Selection: Selecting ranges](@/guides/cell-features/selection/selection.md#select-ranges)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'multiple'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // you can only select one cell at at a time\r\n     * selectionMode: 'single',\r\n     *\r\n     * // you can select one range of cells at a time\r\n     * selectionMode: 'range',\r\n     *\r\n     * // you can select multiple ranges of cells at a time\r\n     * selectionMode: 'multiple',\r\n     * ```\r\n     */\n    selectionMode: 'multiple',\n    /**\r\n     * The `selectOptions` option configures options that the end user can choose from in [`select`](@/guides/cell-types/select-cell-type/select-cell-type.md) cells.\r\n     *\r\n     * You can set the `selectOptions` option to one of the following:\r\n     *\r\n     * | Setting                         | Description                                                                   |\r\n     * | ------------------------------- | ----------------------------------------------------------------------------- |\r\n     * | An array of strings             | Each string is one option's value and label                                   |\r\n     * | An object with key-string pairs | - Each key is one option's value<br>- The key's string is that option's label |\r\n     * | A function                      | A function that returns an object with key-string pairs                       |\r\n     *\r\n     * Read more:\r\n     * - [Select cell type](@/guides/cell-types/select-cell-type/select-cell-type.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string[]|object|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `select`\r\n     *     type: 'select',\r\n     *     // set the first option's value and label to `A`\r\n     *     // set the second option's value and label to `B`\r\n     *     // set the third option's value and label to `C`\r\n     *     selectOptions: ['A', 'B', 'C'],\r\n     *   },\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `select`\r\n     *     type: 'select',\r\n     *     selectOptions: {\r\n     *       // set the first option's value to `value1` and label to `Label 1`\r\n     *       value1: 'Label 1',\r\n     *       // set the second option's value to `value2` and label to `Label 2`\r\n     *       value2: 'Label 2',\r\n     *       // set the third option's value to `value3` and label to `Label 3`\r\n     *       value3: 'Label 3',\r\n     *     },\r\n     *   },\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `select`\r\n     *     type: 'select',\r\n     *     // set `selectOption` to a function that returns available options as an object\r\n     *     selectOptions(visualRow, visualColumn, prop) {\r\n     *       return {\r\n     *         value1: 'Label 1',\r\n     *         value2: 'Label 2',\r\n     *         value3: 'Label 3',\r\n     *       };\r\n     *   },\r\n     * ],\r\n     * ```\r\n     */\n    selectOptions: undefined,\n    /**\r\n     * @description\r\n     * The `skipColumnOnPaste` option determines whether you can paste data into a given column.\r\n     *\r\n     * You can only apply the `skipColumnOnPaste` option to an entire column, using the [`columns`](#columns) option.\r\n     *\r\n     * You can set the `skipColumnOnPaste` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                           |\r\n     * | ----------------- | ----------------------------------------------------------------------------------------------------- |\r\n     * | `false` (default) | Enable pasting data into this column                                                                  |\r\n     * | `true`            | - Disable pasting data into this column<br>- On pasting, paste data into the next column to the right |\r\n     *\r\n     * Read more:\r\n     * - [Configuration options: Setting column options](@/guides/getting-started/configuration-options/configuration-options.md#set-column-options)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // disable pasting data into this column\r\n     *     skipColumnOnPaste: true\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    skipColumnOnPaste: false,\n    /**\r\n     * @description\r\n     *\r\n     * The `skipRowOnPaste` option determines whether you can paste data into a given row.\r\n     *\r\n     * You can only apply the `skipRowOnPaste` option to an entire row, using the [`cells`](#cells) option.\r\n     *\r\n     * You can set the `skipRowOnPaste` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                         |\r\n     * | ----------------- | ----------------------------------------------------------------------------------- |\r\n     * | `false` (default) | Enable pasting data into this row                                                   |\r\n     * | `true`            | - Disable pasting data into this row<br>- On pasting, paste data into the row below |\r\n     *\r\n     * Read more:\r\n     * - [Configuration options: Setting row options](@/guides/getting-started/configuration-options/configuration-options.md#set-row-options)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * cells(row, column) {\r\n     *  const cellProperties = {};\r\n     *\r\n     *  // disable pasting data into row 1\r\n     *  if (row === 1) {\r\n     *    cellProperties.skipRowOnPaste = true;\r\n     *  }\r\n     *\r\n     *  return cellProperties;\r\n     * }\r\n     * ```\r\n     */\n    skipRowOnPaste: false,\n    /**\r\n     * The `sortByRelevance` option configures whether [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md) cells'\r\n     * lists are sorted in the same order as provided in the [`source`](#source) option.\r\n     *\r\n     * You can set the `sortByRelevance` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                  |\r\n     * | ---------------- | ---------------------------------------------------------------------------- |\r\n     * | `true` (default) | Sort options in the same order as provided in the [`source`](#source) option |\r\n     * | `false`          | Sort options alphabetically                                                  |\r\n     *\r\n     * Read more:\r\n     * - [`source`](#source)\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [{\r\n     *   // set the `type` of each cell in this column to `autocomplete`\r\n     *   type: 'autocomplete',\r\n     *   // set options available in every `autocomplete` cell of this column\r\n     *   source: ['D', 'C', 'B', 'A'],\r\n     *   // sort the `autocomplete` option in this order: D, C, B, A\r\n     *   sortByRelevance: true\r\n     * }],\r\n     * ```\r\n     */\n    sortByRelevance: true,\n    /**\r\n     * The `source` option sets options available in [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * and [`dropdown`](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md) cells.\r\n     *\r\n     * You can set the `source` option to one of the following:\r\n     *\r\n     * - An array\r\n     * - A function\r\n     *\r\n     * Read more:\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * - [Dropdown cell type](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md)\r\n     * - [`strict`](#strict)\r\n     * - [`allowHtml`](#allowHtml)\r\n     * - [`filter`](#filter)\r\n     * - [`sortByRelevance`](#sortByRelevance)\r\n     *\r\n     * @memberof Options#\r\n     * @type {Array|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set `source` to an array\r\n     * columns: [{\r\n     *   // set the `type` of each cell in this column to `autocomplete`\r\n     *   type: 'autocomplete',\r\n     *   // set options available in every `autocomplete` cell of this column\r\n     *   source: ['A', 'B', 'C', 'D']\r\n     * }],\r\n     *\r\n     * // set `source` to a function\r\n     * columns: [{\r\n     *   // set the `type` of each cell in this column to `autocomplete`\r\n     *   type: 'autocomplete',\r\n     *   // for every `autocomplete` cell in this column, fetch data from an external source\r\n     *   source(query, callback) {\r\n     *     fetch('https://example.com/query?q=' + query, function(response) {\r\n     *       callback(response.items);\r\n     *     })\r\n     *   }\r\n     * }],\r\n     * ```\r\n     */\n    source: undefined,\n    /**\r\n     * @description\r\n     * If the [`data`](#data) option is not set, the `startCols` option sets the initial number of empty columns.\r\n     *\r\n     * The `startCols` option works only in Handsontable's constructor.\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 5\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // start with 15 empty columns\r\n     * startCols: 15,\r\n     * ```\r\n     */\n    startCols: 5,\n    /**\r\n     * @description\r\n     * If the [`data`](#data) option is not set, the `startRows` option sets the initial number of empty rows.\r\n     *\r\n     * The `startRows` option works only in Handsontable's constructor.\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 5\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // start with 15 empty rows\r\n     * startRows: 15,\r\n     * ```\r\n     */\n    startRows: 5,\n    /**\r\n     * @description\r\n     * The `stretchH` option determines what happens when the declared grid width\r\n     * is different from the calculated sum of all column widths.\r\n     *\r\n     * You can set the `stretchH` option to one of the following:\r\n     *\r\n     * | Setting            | Description                                                       |\r\n     * | ------------------ | ----------------------------------------------------------------- |\r\n     * | `'none'` (default) | Don't fit the grid to the container (disable column stretching)   |\r\n     * | `'last'`           | Fit the grid to the container, by stretching only the last column |\r\n     * | `'all'`            | Fit the grid to the container, by stretching all columns evenly   |\r\n     *\r\n     * Read more:\r\n     * - [Column width: Column stretching](@/guides/columns/column-width/column-width.md#column-stretching)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'none'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // fit the grid to the container\r\n     * // by stretching all columns evenly\r\n     * stretchH: 'all',\r\n     * ```\r\n     */\n    stretchH: 'none',\n    /**\r\n     * The `strict` option configures the behavior of [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md) cells.\r\n     *\r\n     * You can set the `strict` option to one of the following:\r\n     *\r\n     * | Setting | Mode                                                                                          | Description                                                                                |\r\n     * | ------- | --------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------ |\r\n     * | `true`  | [Strict mode](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md#autocomplete-strict-mode)         | The end user:<br>- Can only choose one of suggested values<br>- Can't enter a custom value |\r\n     * | `false` | [Flexible mode](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md#autocomplete-flexible-mode)     | The end user:<br>- Can choose one of suggested values<br>- Can enter a custom value        |\r\n     *\r\n     * Read more:\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * - [`source`](#source)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *   // set the `type` of each cell in this column to `autocomplete`\r\n     *   type: 'autocomplete',\r\n     *   // set options available in every `autocomplete` cell of this column\r\n     *   source: ['A', 'B', 'C'],\r\n     *   // values entered must match `A`, `B`, or `C`\r\n     *   strict: true\r\n     *   },\r\n     * ],\r\n     * ```\r\n     */\n    strict: undefined,\n    /**\r\n     * The `tableClassName` option lets you add CSS class names\r\n     * to every Handsontable instance inside the `container` element.\r\n     *\r\n     * You can set the `tableClassName` option to one of the following:\r\n     *\r\n     * | Setting             | Description                                                                                |\r\n     * | ------------------- | ------------------------------------------------------------------------------------------ |\r\n     * | A string            | Add a single CSS class name to every Handsontable instance inside the `container` element  |\r\n     * | An array of strings | Add multiple CSS class names to every Handsontable instance inside the `container` element |\r\n     *\r\n     * Read more:\r\n     * - [`currentRowClassName`](#currentRowClassName)\r\n     * - [`currentColClassName`](#currentColClassName)\r\n     * - [`currentHeaderClassName`](#currentHeaderClassName)\r\n     * - [`activeHeaderClassName`](#activeHeaderClassName)\r\n     * - [`invalidCellClassName`](#invalidCellClassName)\r\n     * - [`placeholderCellClassName`](#placeholderCellClassName)\r\n     * - [`readOnlyCellClassName`](#readOnlyCellClassName)\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     * - [`commentedCellClassName`](#commentedCellClassName)\r\n     * - [`className`](#className)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string|string[]}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // add a `your-class-name` CSS class name\r\n     * // to every Handsontable instance inside the `container` element\r\n     * tableClassName: 'your-class-name',\r\n     *\r\n     * // add `first-class-name` and `second-class-name` CSS class names\r\n     * // to every Handsontable instance inside the `container` element\r\n     * tableClassName: ['first-class-name', 'second-class-name'],\r\n     * ```\r\n     */\n    tableClassName: undefined,\n    /**\r\n     * The `tabMoves` option configures the action of the <kbd>**Tab**</kbd> key.\r\n     *\r\n     * You can set the `tabMoves` option to an object with the following properties\r\n     * (or to a function that returns such an object):\r\n     *\r\n     * | Property | Type   | Description                                                                                                                                              |\r\n     * | -------- | ------ | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | `row`    | Number | - On pressing <kbd>**Tab**</kbd>, move selection `row` rows down<br>- On pressing <kbd>**Shift**</kbd>+<kbd>**Tab**</kbd>, move selection `row` rows up              |\r\n     * | `col`    | Number | - On pressing <kbd>**Tab**</kbd>, move selection `col` columns right<br>- On pressing <kbd>**Shift**</kbd>+<kbd>**Tab**</kbd>, move selection `col` columns left     |\r\n     *\r\n     * @memberof Options#\r\n     * @type {object|Function}\r\n     * @default {row: 0, col: 1}\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // on pressing Tab, move selection 2 rows down and 2 columns right\r\n     * // on pressing Shift+Tab, move selection 2 rows up and 2 columns left\r\n     * tabMoves: {row: 2, col: 2},\r\n     *\r\n     * // the same setting, as a function\r\n     * // `event` is a DOM Event object received on pressing Tab\r\n     * // you can use it to check whether the user pressed Tab or Shift+Tab\r\n     * tabMoves(event) {\r\n     *   return {row: 2, col: 2};\r\n     * },\r\n     * ```\r\n     */\n    tabMoves: {\n      row: 0,\n      col: 1\n    },\n    /**\r\n     * @description\r\n     * The `title` option configures [column header](@/guides/columns/column-header/column-header.md) names.\r\n     *\r\n     * You can set the `title` option to a string.\r\n     *\r\n     * Read more:\r\n     * - [Column header](@/guides/columns/column-header/column-header.md)\r\n     * - [`columns`](#columns)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // set the first column header name to `First name`\r\n     *     title: 'First name',\r\n     *     type: 'text',\r\n     *   },\r\n     *   {\r\n     *     // set the second column header name to `Last name`\r\n     *     title: 'Last name',\r\n     *     type: 'text',\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    title: undefined,\n    /**\r\n     * The `trimDropdown` option configures the width of the [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * and [`dropdown`](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md) lists.\r\n     *\r\n     * You can set the `trimDropdown` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                                     |\r\n     * | ---------------- | ------------------------------------------------------------------------------- |\r\n     * | `true` (default) | Make the dropdown/autocomplete list's width the same as the edited cell's width |\r\n     * | `false`          | Scale the dropdown/autocomplete list's width to the list's content              |\r\n     *\r\n     * Read more:\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * - [Dropdown cell type](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     type: 'autocomplete',\r\n     *     // for each cell of this column\r\n     *     // make the `autocomplete` list's width the same as the edited cell's width\r\n     *     trimDropdown: true,\r\n     *   },\r\n     *   {\r\n     *     type: 'dropdown',\r\n     *     // for each cell of this column\r\n     *     // scale the `dropdown` list's width to the list's content\r\n     *     trimDropdown: false,\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    trimDropdown: true,\n    /**\r\n     * @description\r\n     * The `trimRows` option configures the [`TrimRows`](@/api/trimRows.md) plugin.\r\n     *\r\n     * You can set the `trimRows` option to one of the following:\r\n     *\r\n     * | Setting                          | Description                                                                                   |\r\n     * | -------------------------------- | --------------------------------------------------------------------------------------------- |\r\n     * | `false`                          | Disable the [`TrimRows`](@/api/trimRows.md) plugin                                            |\r\n     * | `true`                           | Enable the [`TrimRows`](@/api/trimRows.md) plugin                                             |\r\n     * | An array of physical row indexes | - Enable the [`TrimRows`](@/api/trimRows.md) plugin<br>- Trim selected rows at initialization |\r\n     *\r\n     * Read more:\r\n     * - [Plugins: `TrimRows`](@/api/trimRows.md)\r\n     * - [Row trimming](@/guides/rows/row-trimming/row-trimming.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|number[]}\r\n     * @default undefined\r\n     * @category TrimRows\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `TrimRows` plugin\r\n     * trimRows: true,\r\n     *\r\n     * // enable the `TrimRows` plugin\r\n     * // at Handsontable's initialization, trim rows 5, 10, and 15\r\n     * trimRows: [5, 10, 15],\r\n     * ```\r\n     */\n    trimRows: undefined,\n    /**\r\n     * The `trimWhitespace` option configures automatic whitespace removal. This option\r\n     * affects the cell renderer and the cell editor.\r\n     *\r\n     * You can set the `trimWhitespace` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                                     |\r\n     * | ---------------- | --------------------------------------------------------------- |\r\n     * | `true` (default) | Remove whitespace at the beginning and at the end of each cell |\r\n     * | `false`          | Don't remove whitespace                                         |\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // don't remove whitespace\r\n     *     // from any cell of this column\r\n     *     trimWhitespace: false\r\n     *   }\r\n     * ]\r\n     * ```\r\n     */\n    trimWhitespace: true,\n    /**\r\n     * @description\r\n     * The `type` option lets you set the [`renderer`](#renderer), [`editor`](#editor), and [`validator`](#validator)\r\n     * options all at once, by selecting a [cell type](@/guides/cell-types/cell-type/cell-type.md).\r\n     *\r\n     * You can set the `type` option to one of the following:\r\n     *\r\n     * | Cell type                                                         | Renderer, editor & validator                                                                                                                                                                                                                       |\r\n     * | ----------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n     * | A [custom cell type](@/guides/cell-types/cell-type/cell-type.md)            | Renderer: your [custom cell renderer](@/guides/cell-functions/cell-renderer/cell-renderer.md)<br>Editor: your [custom cell editor](@/guides/cell-functions/cell-editor/cell-editor.md)<br>Validator: your [custom cell validator](@/guides/cell-functions/cell-validator/cell-validator.md) |\r\n     * | [`'autocomplete'`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md) | Renderer: `AutocompleteRenderer`<br>Editor: `AutocompleteEditor`<br>Validator: `AutocompleteValidator`                                                                         |\r\n     * | [`'checkbox'`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md)         | Renderer: `CheckboxRenderer`<br>Editor: `CheckboxEditor`<br>Validator: -                                                                                                                               |\r\n     * | [`'date'`](@/guides/cell-types/date-cell-type/date-cell-type.md)                 | Renderer: `DateRenderer`<br>Editor: `DateEditor`<br>Validator: `DateValidator`                                                                                                 |\r\n     * | [`'dropdown'`](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md)         | Renderer: `DropdownRenderer`<br>Editor: `DropdownEditor`<br>Validator: `DropdownValidator`                                                                                     |\r\n     * | [`'handsontable'`](@/guides/cell-types/handsontable-cell-type/handsontable-cell-type.md) | Renderer: `AutocompleteRenderer`<br>Editor: `HandsontableEditor`<br>Validator: -                                                                                                                       |\r\n     * | [`'numeric'`](@/guides/cell-types/numeric-cell-type/numeric-cell-type.md)           | Renderer: `NumericRenderer`<br>Editor: `NumericEditor`<br>Validator: `NumericValidator`                                                                                        |\r\n     * | [`'password'`](@/guides/cell-types/password-cell-type/password-cell-type.md)         | Renderer: `PasswordRenderer`<br>Editor: `PasswordEditor`<br>Validator: -                                                                                                                               |\r\n     * | `'text'`                                                          | Renderer: `TextRenderer`<br>Editor: `TextEditor`<br>Validator: -                                                                                                                                       |\r\n     * | [`'time`'](@/guides/cell-types/time-cell-type/time-cell-type.md)                 | Renderer: `TimeRenderer`<br>Editor: `TimeEditor`<br>Validator: `TimeValidator`                                                                                                 |\r\n     *\r\n     * Read more:\r\n     * - [Cell type](@/guides/cell-types/cell-type/cell-type.md)\r\n     * - [Cell renderer](@/guides/cell-functions/cell-renderer/cell-renderer.md)\r\n     * - [Cell editor](@/guides/cell-functions/cell-editor/cell-editor.md)\r\n     * - [Cell validator](@/guides/cell-functions/cell-validator/cell-validator.md)\r\n     * - [Configuration options: Cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration)\r\n     * - [`renderer`](#renderer)\r\n     * - [`editor`](#editor)\r\n     * - [`validator`](#validator)\r\n     *\r\n     * @memberof Options#\r\n     * @type {string}\r\n     * @default 'text'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the `numeric` cell type for each cell of the entire grid\r\n     * type: `'numeric'`,\r\n     *\r\n     * // apply the `type` option to individual columns\r\n     * columns: [\r\n     *   {\r\n     *     // set the `autocomplete` cell type for each cell of this column\r\n     *     type: 'autocomplete'\r\n     *   },\r\n     *   {\r\n     *     // set the `myCustomCellType` cell type for each cell of this column\r\n     *     type: 'myCustomCellType'\r\n     *   }\r\n     * ]\r\n     * ```\r\n     */\n    type: 'text',\n    /**\r\n     * The `uncheckedTemplate` option lets you configure what value\r\n     * an unchecked [`checkbox`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md) cell has.\r\n     *\r\n     * You can set the `uncheckedTemplate` option to one of the following:\r\n     *\r\n     * | Setting           | Description                                                                                                                                                                                |\r\n     * | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n     * | `false` (default) | If a [`checkbox`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md) cell is unchecked,<br>the [`getDataAtCell`](@/api/core.md#getDataAtCell) method for this cell returns `false`                 |\r\n     * | A string          | If a [`checkbox`](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md) cell is unchecked,<br>the [`getDataAtCell`](@/api/core.md#getDataAtCell) method for this cell returns a string of your choice |\r\n     *\r\n     * Read more:\r\n     * - [Checkbox cell type: Checkbox template](@/guides/cell-types/checkbox-cell-type/checkbox-cell-type.md#checkbox-template)\r\n     * - [`getDataAtCell()`](@/api/core.md#getDataAtCell)\r\n     * - [`checkedTemplate`](#checkedTemplate)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean|string|number}\r\n     * @default false\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `checkbox`\r\n     *     // when unchecked, the cell's value is `false`\r\n     *     // when checked, the cell's value is `true`\r\n     *     type: 'checkbox',\r\n     *   },\r\n     *   {\r\n     *     // set the `type` of each cell in this column to `checkbox`\r\n     *     // when unchecked, the cell's value is `'No'`\r\n     *     // when checked, the cell's value is `'Yes'`\r\n     *     type: 'checkbox',\r\n     *     uncheckedTemplate: 'No'\r\n     *     checkedTemplate: 'Yes',\r\n     *  }\r\n     * ],\r\n     * ```\r\n     */\n    uncheckedTemplate: undefined,\n    /**\r\n     * The `undo` option configures the [`UndoRedo`](@/api/undoRedo.md) plugin.\r\n     *\r\n     * You can set the `undo` option to one of the following:\r\n     *\r\n     * | Setting | Description                                        |\r\n     * | ------- | -------------------------------------------------- |\r\n     * | `true`  | Enable the [`UndoRedo`](@/api/undoRedo.md) plugin  |\r\n     * | `false` | Disable the [`UndoRedo`](@/api/undoRedo.md) plugin |\r\n     *\r\n     * By default, the `undo` option is set to `undefined`,\r\n     * but the [`UndoRedo`](@/api/undoRedo.md) plugin acts as enabled.\r\n     * To disable the [`UndoRedo`](@/api/undoRedo.md) plugin completely,\r\n     * set the `undo` option to `false`.\r\n     *\r\n     * Read more:\r\n     * - [Undo and redo](@/guides/accessories-and-menus/undo-redo/undo-redo.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default undefined\r\n     * @category UndoRedo\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // enable the `UndoRedo` plugin\r\n     * undo: true,\r\n     * ```\r\n     */\n    undo: undefined,\n    /**\r\n     * @description\r\n     * The `validator` option sets a [cell validator](@/guides/cell-functions/cell-validator/cell-validator.md) for a cell.\r\n     *\r\n     * You can set the `validator` option to one of the following:\r\n     *\r\n     * | Setting              | Description                                                                      |\r\n     * | -------------------- | -------------------------------------------------------------------------------- |\r\n     * | A string             | A [cell validator alias](@/guides/cell-functions/cell-validator/cell-validator.md)              |\r\n     * | A function           | Your [custom cell validator function](@/guides/cell-functions/cell-validator/cell-validator.md) |\r\n     * | A regular expression | A regular expression used for cell validation                                    |\r\n     *\r\n     * By setting the `validator` option to a string,\r\n     * you can use one of the following [cell validator aliases](@/guides/cell-functions/cell-validator/cell-validator.md):\r\n     *\r\n     * | Alias               | Cell validator function                                                 |\r\n     * | ------------------- | ----------------------------------------------------------------------- |\r\n     * | A custom alias      | Your [custom cell validator](@/guides/cell-functions/cell-validator/cell-validator.md) |\r\n     * | `'autocomplete'`    | `AutocompleteValidator`                                                 |\r\n     * | `'date'`            | `DateValidator`                                                         |\r\n     * | `'dropdown'`        | `DropdownValidator`                                                     |\r\n     * | `'numeric'`         | `NumericValidator`                                                      |\r\n     * | `'time'`            | `TimeValidator`                                                         |\r\n     *\r\n     * To set the [`editor`](#editor), [`renderer`](#renderer), and [`validator`](#validator)\r\n     * options all at once, use the [`type`](#type) option.\r\n     *\r\n     * Read more:\r\n     * - [Cell validator](@/guides/cell-functions/cell-validator/cell-validator.md)\r\n     * - [Cell type](@/guides/cell-types/cell-type/cell-type.md)\r\n     * - [Configuration options: Cascading configuration](@/guides/getting-started/configuration-options/configuration-options.md#cascading-configuration)\r\n     * - [`type`](#type)\r\n     *\r\n     * @memberof Options#\r\n     * @type {Function|RegExp|string}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *    {\r\n     *      // use a built-in `numeric` cell validator\r\n     *      validator: 'numeric'\r\n     *    },\r\n     *    {\r\n     *      // validate against a regular expression\r\n     *      validator: /^[0-9]$/\r\n     *    },\r\n     *    {\r\n     *      // add a custom cell validator function\r\n     *      validator(value, callback) {\r\n     *          ...\r\n     *      }\r\n     *    },\r\n     * ],\r\n     * ```\r\n     */\n    validator: undefined,\n    /**\r\n     * @description\r\n     * The `viewportColumnRenderingOffset` option configures the number of columns\r\n     * to be rendered outside of the grid's viewport.\r\n     *\r\n     * You can set the `viewportColumnRenderingOffset` option to one of the following:\r\n     *\r\n     * | Setting            | Description                                             |\r\n     * | ------------------ | ------------------------------------------------------- |\r\n     * | `auto` (default)   | Use the offset calculated automatically by Handsontable |\r\n     * | A number           | Set the offset manually                                 |\r\n     *\r\n     * The `viewportColumnRenderingOffset` setting is ignored when [`renderAllColumns`](#renderAllColumns) is set to `true`.\r\n     *\r\n     * Read more:\r\n     * - [Performance: Define the number of pre-rendered rows and columns](@/guides/optimization/performance/performance.md#define-the-number-of-pre-rendered-rows-and-columns)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|string}\r\n     * @default 'auto'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // render 70 columns outside of the grid's viewport\r\n     * viewportColumnRenderingOffset: 70,\r\n     * ```\r\n     */\n    viewportColumnRenderingOffset: 'auto',\n    /**\r\n     * @description\r\n     * The `viewportRowRenderingOffset` option configures the number of rows\r\n     * to be rendered outside of the grid's viewport.\r\n     *\r\n     * You can set the `viewportRowRenderingOffset` option to one of the following:\r\n     *\r\n     * | Setting            | Description                                             |\r\n     * | ------------------ | ------------------------------------------------------- |\r\n     * | `auto` (default)   | Use the offset calculated automatically by Handsontable |\r\n     * | A number           | Set the offset manually                                 |\r\n     *\r\n     * The `viewportRowRenderingOffset` setting is ignored when [`renderAllRows`](#renderAllRows) is set to `true`.\r\n     *\r\n     * Read more:\r\n     * - [Performance: Define the number of pre-rendered rows and columns](@/guides/optimization/performance/performance.md#define-the-number-of-pre-rendered-rows-and-columns)\r\n     * - [Column virtualization](@/guides/columns/column-virtualization/column-virtualization.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|string}\r\n     * @default 'auto'\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // render 70 rows outside of the grid's viewport\r\n     * viewportRowRenderingOffset: 70,\r\n     * ```\r\n     */\n    viewportRowRenderingOffset: 'auto',\n    /**\r\n     * The `visibleRows` option sets the height of the [`autocomplete`](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * and [`dropdown`](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md) lists.\r\n     *\r\n     * When the number of list options exceeds the `visibleRows` number, a scrollbar appears.\r\n     *\r\n     * Read more:\r\n     * - [Autocomplete cell type](@/guides/cell-types/autocomplete-cell-type/autocomplete-cell-type.md)\r\n     * - [Dropdown cell type](@/guides/cell-types/dropdown-cell-type/dropdown-cell-type.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number}\r\n     * @default 10\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * columns: [\r\n     *   {\r\n     *     type: 'autocomplete',\r\n     *     // set the `autocomplete` list's height to 15 options\r\n     *     // for each cell of this column\r\n     *     visibleRows: 15,\r\n     *   },\r\n     *   {\r\n     *     type: 'dropdown',\r\n     *     // set the `dropdown` list's height to 5 options\r\n     *     // for each cell of this column\r\n     *     visibleRows: 5,\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    visibleRows: 10,\n    /**\r\n     * The `width` option configures the width of your grid.\r\n     *\r\n     * You can set the `width` option to one of the following:\r\n     *\r\n     * | Setting                                                                    | Example                   |\r\n     * | -------------------------------------------------------------------------- | ------------------------- |\r\n     * | A number of pixels                                                         | `width: 500`              |\r\n     * | A string with a [CSS unit](https://www.w3schools.com/cssref/css_units.asp) | `width: '75vw'`           |\r\n     * | A function that returns a valid number or string                           | `width() { return 500; }` |\r\n     *\r\n     * Read more:\r\n     * - [Grid size](@/guides/getting-started/grid-size/grid-size.md)\r\n     *\r\n     * @memberof Options#\r\n     * @type {number|string|Function}\r\n     * @default undefined\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set the grid's width to 500px\r\n     * width: 500,\r\n     *\r\n     * // set the grid's width to 75vw\r\n     * width: '75vw',\r\n     *\r\n     * // set the grid's width to 500px, using a function\r\n     * width() {\r\n     *   return 500;\r\n     * },\r\n     * ```\r\n     */\n    width: undefined,\n    /**\r\n     * The `wordWrap` option configures whether content that exceeds a column's width is wrapped or not.\r\n     *\r\n     * You can set the `wordWrap` option to one of the following:\r\n     *\r\n     * | Setting          | Description                                             |\r\n     * | ---------------- | ------------------------------------------------------- |\r\n     * | `true` (default) | If content exceeds the column's width, wrap the content |\r\n     * | `false`          | Don't wrap content                                      |\r\n     *\r\n     * To style cells that don't wrap content, use the [`noWordWrapClassName`](#noWordWrapClassName) option.\r\n     *\r\n     * Read more:\r\n     * - [`noWordWrapClassName`](#noWordWrapClassName)\r\n     *\r\n     * @memberof Options#\r\n     * @type {boolean}\r\n     * @default true\r\n     * @category Core\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // set column width for every column of the entire grid\r\n     * colWidths: 100,\r\n     *\r\n     * columns: [\r\n     *   {\r\n     *     // don't wrap content in this column\r\n     *     wordWrap: false,\r\n     *   },\r\n     *   {\r\n     *     // if content exceeds this column's width, wrap the content\r\n     *     wordWrap: true,\r\n     *   }\r\n     * ],\r\n     * ```\r\n     */\n    wordWrap: true\n\n    /* eslint-enable jsdoc/require-description-complete-sentence */\n  };\n});", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { extendByMetaType } from \"../utils.mjs\";\nimport metaSchemaFactory from \"../metaSchema.mjs\";\n/**\r\n * @typedef {Options} TableMeta\r\n */\n/**\r\n * @returns {TableMeta} Returns an empty object. The holder for global meta object.\r\n */\nfunction createTableMetaEmptyClass() {\n  return class TableMeta {};\n}\n\n/**\r\n * The global meta object is a root of all default settings, which are recognizable by Handsontable.\r\n * Other layers are inherited from this object. Adding, removing, or changing property in that\r\n * object has a direct reflection to all layers such as: TableMeta, ColumnMeta, or CellMeta layers.\r\n *\r\n * +-------------+.\r\n * │ GlobalMeta  │\r\n * │ (prototype) │\r\n * +-------------+\\\r\n *       │         \\\r\n *       │          \\\r\n *      \\│/         _\\|\r\n * +-------------+    +-------------+.\r\n * │ TableMeta   │    │ ColumnMeta  │\r\n * │ (instance)  │    │ (prototype) │\r\n * +-------------+    +-------------+.\r\n *                         │\r\n *                         │\r\n *                        \\│/\r\n *                    +-------------+.\r\n *                    │  CellMeta   │\r\n *                    │ (instance)  │\r\n *                    +-------------+.\r\n */\nexport default class GlobalMeta {\n  constructor(hot) {\n    /**\r\n     * An alias for the constructor. Necessary for inheritance for creating new layers.\r\n     *\r\n     * @type {TableMeta}\r\n     */\n    _defineProperty(this, \"metaCtor\", createTableMetaEmptyClass());\n    /**\r\n     * Main object (prototype of the internal TableMeta class), holder for all default settings.\r\n     *\r\n     * @type {object}\r\n     */\n    _defineProperty(this, \"meta\", void 0);\n    this.meta = this.metaCtor.prototype;\n    extend(this.meta, metaSchemaFactory());\n    this.meta.instance = hot;\n  }\n\n  /**\r\n   * Gets constructor of the global meta object. Necessary for inheritance for creating the next meta layers.\r\n   *\r\n   * @returns {Function}\r\n   */\n  getMetaConstructor() {\n    return this.metaCtor;\n  }\n\n  /**\r\n   * Gets settings object for this layer.\r\n   *\r\n   * @returns {object}\r\n   */\n  getMeta() {\n    return this.meta;\n  }\n\n  /**\r\n   * Updates global settings object by merging settings with the current state.\r\n   *\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateMeta(settings) {\n    var _settings$type;\n    extend(this.meta, settings);\n    extendByMetaType(this.meta, {\n      ...settings,\n      type: (_settings$type = settings.type) !== null && _settings$type !== void 0 ? _settings$type : this.meta.type\n    }, settings);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { extendByMetaType } from \"../utils.mjs\";\n/**\r\n * The table meta object is a layer that keeps all settings of the Handsontable that was passed in\r\n * the constructor. That layer contains all default settings inherited from the GlobalMeta layer\r\n * merged with settings passed by the developer. Adding, removing, or changing property in that\r\n * object has no direct reflection on any other layers.\r\n *\r\n * +-------------+.\r\n * │ GlobalMeta  │\r\n * │ (prototype) │\r\n * +-------------+\\\r\n *       │         \\\r\n *       │          \\\r\n *      \\│/         _\\|\r\n * +-------------+    +-------------+.\r\n * │ TableMeta   │    │ ColumnMeta  │\r\n * │ (instance)  │    │ (prototype) │\r\n * +-------------+    +-------------+.\r\n *                         │\r\n *                         │\r\n *                        \\│/\r\n *                    +-------------+.\r\n *                    │  CellMeta   │\r\n *                    │ (instance)  │\r\n *                    +-------------+.\r\n */\nexport default class TableMeta {\n  constructor(globalMeta) {\n    /**\r\n     * Main object (instance of the internal TableMeta class from GlobalMeta), holder for all settings defined in the table scope.\r\n     *\r\n     * @type {TableMeta}\r\n     */\n    _defineProperty(this, \"meta\", void 0);\n    const MetaCtor = globalMeta.getMetaConstructor();\n    this.meta = new MetaCtor();\n  }\n\n  /**\r\n   * Gets settings object for this layer.\r\n   *\r\n   * @returns {TableMeta}\r\n   */\n  getMeta() {\n    return this.meta;\n  }\n\n  /**\r\n   * Updates table settings object by merging settings with the current state.\r\n   *\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateMeta(settings) {\n    extend(this.meta, settings);\n    extendByMetaType(this.meta, settings, settings);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { arrayFilter } from \"../../helpers/array.mjs\";\nimport { assert, isUnsignedNumber, isNullish } from \"./utils.mjs\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * @class LazyFactoryMap\r\n *\r\n * The LazyFactoryMap object holds key-value pairs in the structure similar to the\r\n * regular Map. Once created, items can be moved around a grid depending on the operations\r\n * performed on that grid - adding or removing rows. The collection requires \"key\"\r\n * to be a zero-based index.\r\n *\r\n * It's essential to notice that the \"key\" index under which the item was created\r\n * is volatile. After altering the grid, the \"key\" index can change.\r\n *\r\n * Having created N items with corresponding example data where the data has 10\r\n * holes (`undefined` values) within (that's why internal storage index counts from 10).\r\n * +------+------+------+------+------+.\r\n * | 0/10 | 1/11 | 2/12 | 3/13 | 4/14 |  Keys (volatile zero-based index / internal storage index)\r\n * +------+------+------+------+------+.\r\n *    │      │      │      │      │\r\n * +------+------+------+------+------+.\r\n * | AAA  | BBB  | CCC  | DDD  | EEE  |  Data\r\n * +------+------+------+------+------+.\r\n *\r\n * Map.obtain(0) // returns \"AAA\"\r\n * map.obtain(2) // returns \"CCC\".\r\n *\r\n * After inserting 2 new rows, keys that hold the data positioned after the place\r\n * where the new rows are added are upshifted by 2.\r\n *               │\r\n *               │ Insert 2 rows\r\n *              \\│/\r\n * +------+------+------+------+------+.\r\n * | 0/10 | 1/11 | 2/12 | 3/13 | 4/14 |  Keys before\r\n * +------+------+------+------+------+.\r\n *\r\n *                / 2 new rows \\\r\n * +------+------+------+------+------+------+------+.\r\n * | 0/10 | 1/11 | 2/15 | 3/16 | 4/12 | 5/13 | 6/14 |  Keys after\r\n * +------+------+------+------+------+------+------+.\r\n *    │       │      │      │      │      │     │\r\n *    │       │      └──────┼──────┼──────┼┐    │\r\n *    │       │             └──────┼──────┼┼────┼┐\r\n *    │       │      ┌─────────────┘      ││    ││\r\n *    │       │      │      ┌─────────────┘│    ││\r\n *    │       │      │      │      ┌───────┼────┘│\r\n *    │       │      │      │      │       │     │\r\n * +------+------+------+------+------+------+------+.\r\n * | AAA  | BBB  | CCC  | DDD  | EEE  | FFF  | GGG  |  Data\r\n * +------+------+------+------+------+------+------+\r\n *\r\n * Now at index 2 and 3 we have access to new items.\r\n *\r\n * map.obtain(2) // returns new value \"FFF\" for newly created row.\r\n * map.obtain(4) // index shifted by 2 has access to the old \"CCC\" value, as before inserting.\r\n *\r\n * after removing 4 rows, keys that hold the data positioned after the place where the\r\n * rows are removed are downshifted by 4.\r\n *        │\r\n *        │ Remove 4 rows\r\n *        ├───────────────────────────┐\r\n *       \\│/                          │\r\n * +------+------+------+------+------+------+------+\r\n * | 0/10 | 1/11 | 2/15 | 3/16 | 4/12 | 5/13 | 6/14 |  Keys after\r\n * +------+------+------+------+------+------+------+\r\n *    │       │      │      │      │      │     │\r\n *    │       │      └──────┼──────┼──────┼┐    │\r\n *    │       │             └──────┼──────┼┼────┼┐\r\n *    │       │      ┌─────────────┘      ││    ││\r\n *    │       │      │      ┌─────────────┘│    ││\r\n *    │       │      │      │      ┌───────┼────┘│\r\n *    │       │      │      │      │       │     │\r\n * +------+------+------+------+------+------+------+\r\n * | AAA  | BBB  | CCC  | DDD  | EEE  | FFF  | GGG  |  Data\r\n * +------+------+------+------+------+------+------+\r\n *\r\n * +------+------+------+\r\n * | 0/10 | 1/13 | 2/14 |  Keys after\r\n * +------+------+------+\r\n *    │       │      │\r\n *    │       │      └─────────────┐\r\n *    │       └────────────┐       │\r\n *    │                    │       │\r\n *    │                    │       │\r\n *    │                    │       │\r\n *    │                    │       │\r\n * +------+------+------+------+------+------+------+\r\n * | AAA  | BBB  | CCC  | DDD  | EEE  | FFF  | GGG  |  Data\r\n * +------+------+------+------+------+------+------+\r\n *           /│\\   /│\\                   /│\\   /│\\\r\n *            └──┬──┘                     └──┬──┘\r\n *           This data is marked as \"hole\" which\r\n *           means that can be replaced by new item\r\n *           when that will be created.\r\n *\r\n * map.obtain(2) // returns the value (\"EEE\") as it should. Access to the value is\r\n *               // changed (the key was downshifted). However, the internal index has not changed,\r\n *               // which means that the data does not need to be changed (spliced) too.\r\n *\r\n * After previous remove operation which creates some \"holes\" obtaining new\r\n * items replaces that \"holes\" as follows:\r\n *\r\n * // Obtains new item\r\n * map.obtain(90) // Returns \"NEW\" value\r\n *\r\n * +------+------+------+...+------+\r\n * | 0/10 | 1/13 | 2/14 |   | 90/0 |  Keys after\r\n * +------+------+------+...+------+\r\n *    │       │      │          │\r\n *    │       │      └──────────┼────────────┐\r\n *    │       └─────────────────┼─────┐      │\r\n *    └──────────┐              │     │      │\r\n *               │              │     │      │\r\n *    ┌──────────┼──────────────┘     │      │\r\n *    │          │                    │      │\r\n * +------+...+------+------+------+------+------+-----+\r\n * | NEW  |   | AAA  | BBB  | CCC  | DDD  | EEE  | FFF |  Data\r\n * +------+...+------+------+------+------+------+-----+\r\n *   /│\\\r\n *    │\r\n * The first \"hole\" (at index 0) item is permanently removed and replaced by a new item.\r\n * The hole index is taken from the hole collection which act as FIFO (First In First Out).\r\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nexport default class LazyFactoryMap {\n  constructor(valueFactory) {\n    /**\r\n     * The data factory function.\r\n     *\r\n     * @type {Function}\r\n     */\n    _defineProperty(this, \"valueFactory\", void 0);\n    /**\r\n     * An array which contains data.\r\n     *\r\n     * @type {Array}\r\n     */\n    _defineProperty(this, \"data\", []);\n    /**\r\n     * An array of indexes where the key of the array is mapped to the value which points to the\r\n     * specific position of the data array.\r\n     *\r\n     * @type {number[]}\r\n     */\n    _defineProperty(this, \"index\", []);\n    /**\r\n     * The collection of indexes that points to the data items which can be replaced by obtaining new\r\n     * ones. The \"holes\" are an intended effect of deleting entries.\r\n     *\r\n     * The idea of \"holes\" generally allows us to not modify the \"data\" structure while removing\r\n     * items from the collection.\r\n     *\r\n     * @type {Set<number>}\r\n     */\n    _defineProperty(this, \"holes\", new Set());\n    this.valueFactory = valueFactory;\n  }\n\n  /**\r\n   * Gets or if data not exist creates and returns new data.\r\n   *\r\n   * @param {number} key The item key as zero-based index.\r\n   * @returns {*}\r\n   */\n  obtain(key) {\n    assert(() => isUnsignedNumber(key), 'Expecting an unsigned number.');\n    const dataIndex = this._getStorageIndexByKey(key);\n    let result;\n    if (dataIndex >= 0) {\n      result = this.data[dataIndex];\n      if (result === undefined) {\n        result = this.valueFactory(key);\n        this.data[dataIndex] = result;\n      }\n    } else {\n      result = this.valueFactory(key);\n      if (this.holes.size > 0) {\n        const reuseIndex = this.holes.values().next().value; // Gets first item from the collection\n\n        this.holes.delete(reuseIndex);\n        this.data[reuseIndex] = result;\n        this.index[key] = reuseIndex;\n      } else {\n        this.data.push(result);\n        this.index[key] = this.data.length - 1;\n      }\n    }\n    return result;\n  }\n\n  /**\r\n   * Inserts an empty data to the map. This method creates an empty space for obtaining\r\n   * new data.\r\n   *\r\n   * @param {number} key The key as volatile zero-based index at which to begin inserting space for new data.\r\n   * @param {number} [amount=1] Ammount of data to insert.\r\n   */\n  insert(key) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    assert(() => isUnsignedNumber(key) || isNullish(key), 'Expecting an unsigned number or null/undefined argument.');\n    const newIndexes = [];\n    const dataLength = this.data.length;\n    for (let i = 0; i < amount; i++) {\n      newIndexes.push(dataLength + i);\n      this.data.push(undefined);\n    }\n    const insertionIndex = isNullish(key) ? this.index.length : key;\n    this.index = [...this.index.slice(0, insertionIndex), ...newIndexes, ...this.index.slice(insertionIndex)];\n  }\n\n  /**\r\n   * Removes (soft remove) data from \"index\" and according to the amount of data.\r\n   *\r\n   * @param {number} key The key as volatile zero-based index at which to begin removing the data.\r\n   * @param {number} [amount=1] Ammount data to remove.\r\n   */\n  remove(key) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    assert(() => isUnsignedNumber(key) || isNullish(key), 'Expecting an unsigned number or null/undefined argument.');\n    const removed = this.index.splice(isNullish(key) ? this.index.length - amount : key, amount);\n    for (let i = 0; i < removed.length; i++) {\n      const removedIndex = removed[i];\n      if (typeof removedIndex === 'number') {\n        this.holes.add(removedIndex);\n      }\n    }\n  }\n\n  /**\r\n   * Returns the size of the data which this map holds.\r\n   *\r\n   * @returns {number}\r\n   */\n  size() {\n    return this.data.length - this.holes.size;\n  }\n\n  /**\r\n   * Returns a new Iterator object that contains the values for each item in the LazyMap object.\r\n   *\r\n   * @returns {Iterator}\r\n   */\n  values() {\n    return arrayFilter(this.data, (_, index) => !this.holes.has(index))[Symbol.iterator]();\n  }\n\n  /**\r\n   * Returns a new Iterator object that contains an array of `[index, value]` for each item in the LazyMap object.\r\n   *\r\n   * @returns {Iterator}\r\n   */\n  entries() {\n    const validEntries = [];\n    for (let i = 0; i < this.data.length; i++) {\n      const keyIndex = this._getKeyByStorageIndex(i);\n      if (keyIndex !== -1) {\n        validEntries.push([keyIndex, this.data[i]]);\n      }\n    }\n    let dataIndex = 0;\n    return {\n      next: () => {\n        if (dataIndex < validEntries.length) {\n          const value = validEntries[dataIndex];\n          dataIndex += 1;\n          return {\n            value,\n            done: false\n          };\n        }\n        return {\n          done: true\n        };\n      }\n    };\n  }\n\n  /**\r\n   * Clears the map.\r\n   */\n  clear() {\n    this.data = [];\n    this.index = [];\n    this.holes.clear();\n  }\n\n  /**\r\n   * Gets storage index calculated from the key associated with the specified value.\r\n   *\r\n   * @param {number} key Volatile zero-based index.\r\n   * @returns {number} Returns index 0-N or -1 if no storage index found.\r\n   */\n  _getStorageIndexByKey(key) {\n    return this.index.length > key ? this.index[key] : -1;\n  }\n\n  /**\r\n   * Gets the key associated with the specified value calculated from storage index.\r\n   *\r\n   * @param {number} dataIndex Zero-based storage index.\r\n   * @returns {number} Returns index 0-N or -1 if no key found.\r\n   */\n  _getKeyByStorageIndex(dataIndex) {\n    return this.index.indexOf(dataIndex);\n  }\n\n  /**\r\n   * Makes this object iterable.\r\n   *\r\n   * @returns {Iterator}\r\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { columnFactory, extendByMetaType } from \"../utils.mjs\";\nimport LazyFactoryMap from \"../lazyFactoryMap.mjs\";\n/**\r\n * List of props which have to be cleared in the column meta-layer. That props have a\r\n * different meaning when using in column meta.\r\n *\r\n * @type {string[]}\r\n */\nconst COLUMNS_PROPS_CONFLICTS = ['data', 'width'];\n\n/**\r\n * The column meta object is a root of all settings defined in the column property of the Handsontable\r\n * settings. Each column in the Handsontable is associated with a unique meta object which is managed by\r\n * this layer. Adding, removing, or changing property in that object has a direct reflection only for\r\n * the CellMeta layer. The reflection will be visible only if the property doesn't exist in the lower\r\n * layers (prototype lookup).\r\n *\r\n * +-------------+.\r\n * │ GlobalMeta  │\r\n * │ (prototype) │\r\n * +-------------+\\\r\n *       │         \\\r\n *       │          \\\r\n *      \\│/         _\\|\r\n * +-------------+    +-------------+.\r\n * │ TableMeta   │    │ ColumnMeta  │\r\n * │ (instance)  │    │ (prototype) │\r\n * +-------------+    +-------------+.\r\n *                         │\r\n *                         │\r\n *                        \\│/\r\n *                    +-------------+.\r\n *                    │  CellMeta   │\r\n *                    │ (instance)  │\r\n *                    +-------------+.\r\n */\nexport default class ColumnMeta {\n  constructor(globalMeta) {\n    /**\r\n     * Reference to the GlobalMeta layer. While creating new column meta objects, all new objects\r\n     * inherit properties from the GlobalMeta layer.\r\n     *\r\n     * @type {GlobalMeta}\r\n     */\n    _defineProperty(this, \"globalMeta\", void 0);\n    /**\r\n     * The LazyFactoryMap structure, holder for column meta objects where each column meta is\r\n     * stored under the physical column index.\r\n     *\r\n     * @type {LazyFactoryMap}\r\n     */\n    _defineProperty(this, \"metas\", new LazyFactoryMap(() => this._createMeta()));\n    this.globalMeta = globalMeta;\n    this.metas = new LazyFactoryMap(() => this._createMeta());\n  }\n\n  /**\r\n   * Updates column meta object by merging settings with the current state.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points what column meta object is updated.\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateMeta(physicalColumn, settings) {\n    const meta = this.getMeta(physicalColumn);\n    extend(meta, settings);\n    extendByMetaType(meta, settings);\n  }\n\n  /**\r\n   * Creates one or more columns at specific position.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points from what position the column is added.\r\n   * @param {number} amount An amount of columns to add.\r\n   */\n  createColumn(physicalColumn, amount) {\n    this.metas.insert(physicalColumn, amount);\n  }\n\n  /**\r\n   * Removes one or more columns from the collection.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points from what position the column is removed.\r\n   * @param {number} amount An amount columns to remove.\r\n   */\n  removeColumn(physicalColumn, amount) {\n    this.metas.remove(physicalColumn, amount);\n  }\n\n  /**\r\n   * Gets settings object for this layer.\r\n   *\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @returns {object}\r\n   */\n  getMeta(physicalColumn) {\n    return this.metas.obtain(physicalColumn);\n  }\n\n  /**\r\n   * Gets constructor of the column meta object. Necessary for inheritance - creating the next meta layers.\r\n   *\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @returns {Function}\r\n   */\n  getMetaConstructor(physicalColumn) {\n    return this.metas.obtain(physicalColumn).constructor;\n  }\n\n  /**\r\n   * Clears all saved column meta objects.\r\n   */\n  clearCache() {\n    this.metas.clear();\n  }\n\n  /**\r\n   * Creates and returns new column meta object with properties inherited from the global meta layer.\r\n   *\r\n   * @private\r\n   * @returns {object}\r\n   */\n  _createMeta() {\n    return columnFactory(this.globalMeta.getMetaConstructor(), COLUMNS_PROPS_CONFLICTS).prototype;\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { extendByMetaType, assert, isUnsignedNumber } from \"../utils.mjs\";\nimport LazyFactoryMap from \"../lazyFactoryMap.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * @class CellMeta\r\n *\r\n * The cell meta object is a root of all settings defined for the specific cell rendered by the\r\n * Handsontable. Each cell meta inherits settings from higher layers. When a property doesn't\r\n * exist in that layer, it is looked up through a prototype to the highest layer. Starting\r\n * from CellMeta -> ColumnMeta and ending to GlobalMeta, which stores default settings. Adding,\r\n * removing, or changing property in that object has no direct reflection on any other layers.\r\n *\r\n * +-------------+\r\n * │ GlobalMeta  │\r\n * │ (prototype) │\r\n * +-------------+\\\r\n *       │         \\\r\n *       │          \\\r\n *      \\│/         _\\|\r\n * +-------------+    +-------------+\r\n * │ TableMeta   │    │ ColumnMeta  │\r\n * │ (instance)  │    │ (prototype) │\r\n * +-------------+    +-------------+\r\n *                         │\r\n *                         │\r\n *                        \\│/\r\n *                    +-------------+\r\n *                    │  CellMeta   │\r\n *                    │ (instance)  │\r\n *                    +-------------+\r\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nexport default class CellMeta {\n  constructor(columnMeta) {\n    /**\r\n     * Reference to the ColumnMeta layer. While creating new cell meta objects, all new objects\r\n     * inherit properties from the ColumnMeta layer.\r\n     *\r\n     * @type {ColumnMeta}\r\n     */\n    _defineProperty(this, \"columnMeta\", void 0);\n    /**\r\n     * Holder for cell meta objects, organized as a grid of LazyFactoryMap of LazyFactoryMaps.\r\n     * The access to the cell meta object is done through access to the row defined by the physical\r\n     * row index and then by accessing the second LazyFactory Map under the physical column index.\r\n     *\r\n     * @type {LazyFactoryMap<number, LazyFactoryMap<number, object>>}\r\n     */\n    _defineProperty(this, \"metas\", new LazyFactoryMap(() => this._createRow()));\n    this.columnMeta = columnMeta;\n  }\n\n  /**\r\n   * Updates cell meta object by merging settings with the current state.\r\n   *\r\n   * @param {number} physicalRow The physical row index which points what cell meta object is updated.\r\n   * @param {number} physicalColumn The physical column index which points what cell meta object is updated.\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateMeta(physicalRow, physicalColumn, settings) {\n    const meta = this.getMeta(physicalRow, physicalColumn);\n    extend(meta, settings);\n    extendByMetaType(meta, settings);\n  }\n\n  /**\r\n   * Creates one or more rows at specific position.\r\n   *\r\n   * @param {number} physicalRow The physical row index which points from what position the row is added.\r\n   * @param {number} amount An amount of rows to add.\r\n   */\n  createRow(physicalRow, amount) {\n    this.metas.insert(physicalRow, amount);\n  }\n\n  /**\r\n   * Creates one or more columns at specific position.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points from what position the column is added.\r\n   * @param {number} amount An amount of columns to add.\r\n   */\n  createColumn(physicalColumn, amount) {\n    for (let i = 0; i < this.metas.size(); i++) {\n      this.metas.obtain(i).insert(physicalColumn, amount);\n    }\n  }\n\n  /**\r\n   * Removes one or more rows from the collection.\r\n   *\r\n   * @param {number} physicalRow The physical row index which points from what position the row is removed.\r\n   * @param {number} amount An amount of rows to remove.\r\n   */\n  removeRow(physicalRow, amount) {\n    this.metas.remove(physicalRow, amount);\n  }\n\n  /**\r\n   * Removes one or more columns from the collection.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points from what position the column is removed.\r\n   * @param {number} amount An amount of columns to remove.\r\n   */\n  removeColumn(physicalColumn, amount) {\n    for (let i = 0; i < this.metas.size(); i++) {\n      this.metas.obtain(i).remove(physicalColumn, amount);\n    }\n  }\n\n  /**\r\n   * Gets settings object for this layer.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @param {string} [key] If the key exists its value will be returned, otherwise the whole cell meta object.\r\n   * @returns {object}\r\n   */\n  getMeta(physicalRow, physicalColumn, key) {\n    const cellMeta = this.metas.obtain(physicalRow).obtain(physicalColumn);\n    if (key === undefined) {\n      return cellMeta;\n    }\n    return cellMeta[key];\n  }\n\n  /**\r\n   * Sets settings object for this layer defined by \"key\" property.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @param {string} key The property name to set.\r\n   * @param {*} value Value to save.\r\n   */\n  setMeta(physicalRow, physicalColumn, key, value) {\n    var _cellMeta$_automatica;\n    const cellMeta = this.metas.obtain(physicalRow).obtain(physicalColumn);\n    (_cellMeta$_automatica = cellMeta._automaticallyAssignedMetaProps) === null || _cellMeta$_automatica === void 0 || _cellMeta$_automatica.delete(key);\n    cellMeta[key] = value;\n  }\n\n  /**\r\n   * Removes a property defined by the \"key\" argument from the cell meta object.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @param {string} key The property name to remove.\r\n   */\n  removeMeta(physicalRow, physicalColumn, key) {\n    const cellMeta = this.metas.obtain(physicalRow).obtain(physicalColumn);\n    delete cellMeta[key];\n  }\n\n  /**\r\n   * Returns all cell meta objects that were created during the Handsontable operation. As cell meta\r\n   * objects are created lazy, the length of the returned collection depends on how and when the\r\n   * table has asked for access to that meta objects.\r\n   *\r\n   * @returns {object[]}\r\n   */\n  getMetas() {\n    const metas = [];\n    const rows = Array.from(this.metas.values());\n    for (let row = 0; row < rows.length; row++) {\n      // Getting a meta for already added row (new row already exist - it has been added using `createRow` method).\n      // However, is not ready until the first `getMeta` call (lazy loading).\n      if (isDefined(rows[row])) {\n        metas.push(...rows[row].values());\n      }\n    }\n    return metas;\n  }\n\n  /**\r\n   * Returns all cell meta objects that were created during the Handsontable operation but for\r\n   * specific row index.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @returns {object[]}\r\n   */\n  getMetasAtRow(physicalRow) {\n    assert(() => isUnsignedNumber(physicalRow), 'Expecting an unsigned number.');\n    const rowsMeta = new Map(this.metas);\n    return rowsMeta.has(physicalRow) ? Array.from(rowsMeta.get(physicalRow).values()) : [];\n  }\n\n  /**\r\n   * Clears all saved cell meta objects.\r\n   */\n  clearCache() {\n    this.metas.clear();\n  }\n\n  /**\r\n   * Creates and returns new structure for cell meta objects stored in columnar axis.\r\n   *\r\n   * @private\r\n   * @returns {object}\r\n   */\n  _createRow() {\n    return new LazyFactoryMap(physicalColumn => this._createMeta(physicalColumn));\n  }\n\n  /**\r\n   * Creates and returns new cell meta object with properties inherited from the column meta layer.\r\n   *\r\n   * @private\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @returns {object}\r\n   */\n  _createMeta(physicalColumn) {\n    const ColumnMeta = this.columnMeta.getMetaConstructor(physicalColumn);\n    return new ColumnMeta();\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport GlobalMeta from \"./metaLayers/globalMeta.mjs\";\nimport TableMeta from \"./metaLayers/tableMeta.mjs\";\nimport ColumnMeta from \"./metaLayers/columnMeta.mjs\";\nimport CellMeta from \"./metaLayers/cellMeta.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\n/**\r\n * With the Meta Manager class, it can be possible to manage with meta objects for different layers in\r\n * one place. All coordinates used to fetch, updating, removing, or creating rows or columns have to\r\n * be passed as physical values.\r\n *\r\n * The diagram of the meta layers:\r\n * +-------------+.\r\n * │ GlobalMeta  │\r\n * │ (prototype) │\r\n * +-------------+\\\r\n *       │         \\\r\n *       │          \\\r\n *      \\│/         _\\|\r\n * +-------------+    +-------------+.\r\n * │ TableMeta   │    │ ColumnMeta  │\r\n * │ (instance)  │    │ (prototype) │\r\n * +-------------+    +-------------+.\r\n *                         │\r\n *                         │\r\n *                        \\│/\r\n *                    +-------------+.\r\n *                    │  CellMeta   │\r\n *                    │ (instance)  │\r\n *                    +-------------+.\r\n *\r\n * A more detailed description of the specific layers can be found in the \"metaLayers/\" modules description.\r\n */\nexport default class MetaManager {\n  constructor(hot) {\n    let customSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let metaMods = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    /**\r\n     * @type {Handsontable}\r\n     */\n    this.hot = hot;\n    /**\r\n     * @type {GlobalMeta}\r\n     */\n    this.globalMeta = new GlobalMeta(hot);\n    /**\r\n     * @type {TableMeta}\r\n     */\n    this.tableMeta = new TableMeta(this.globalMeta);\n    /**\r\n     * @type {ColumnMeta}\r\n     */\n    this.columnMeta = new ColumnMeta(this.globalMeta);\n    /**\r\n     * @type {CellMeta}\r\n     */\n    this.cellMeta = new CellMeta(this.columnMeta);\n    metaMods.forEach(ModifierClass => new ModifierClass(this));\n    this.globalMeta.updateMeta(customSettings);\n  }\n\n  /**\r\n   * Gets the global meta object that is a root of all default settings, which are recognizable by Handsontable.\r\n   * Other layers inherites all properties from this. Adding, removing, or changing property in that\r\n   * object has a direct reflection to all layers.\r\n   *\r\n   * @returns {object}\r\n   */\n  getGlobalMeta() {\n    return this.globalMeta.getMeta();\n  }\n\n  /**\r\n   * Updates global settings object by merging settings with the current state.\r\n   *\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateGlobalMeta(settings) {\n    this.globalMeta.updateMeta(settings);\n  }\n\n  /**\r\n   * Gets settings object that was passed in the Handsontable constructor. That layer contains all\r\n   * default settings inherited from the GlobalMeta layer merged with settings passed by the developer.\r\n   * Adding, removing, or changing property in that object has no direct reflection on any other layers.\r\n   *\r\n   * @returns {TableMeta}\r\n   */\n  getTableMeta() {\n    return this.tableMeta.getMeta();\n  }\n\n  /**\r\n   * Updates table settings object by merging settings with the current state.\r\n   *\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateTableMeta(settings) {\n    this.tableMeta.updateMeta(settings);\n  }\n\n  /**\r\n   * Gets column meta object that is a root of all settings defined in the column property of the Handsontable\r\n   * settings. Each column in the Handsontable is associated with a unique meta object which identified by\r\n   * the physical column index. Adding, removing, or changing property in that object has a direct reflection\r\n   * only for the CellMeta layer. The reflection will be visible only if the property doesn't exist in the lower\r\n   * layers (prototype lookup).\r\n   *\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @returns {object}\r\n   */\n  getColumnMeta(physicalColumn) {\n    return this.columnMeta.getMeta(physicalColumn);\n  }\n\n  /**\r\n   * Updates column meta object by merging settings with the current state.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points what column meta object is updated.\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateColumnMeta(physicalColumn, settings) {\n    this.columnMeta.updateMeta(physicalColumn, settings);\n  }\n\n  /**\r\n   * Gets the cell meta object that is a root of all settings defined for the specific cell rendered by\r\n   * the Handsontable. Each cell meta inherits settings from higher layers. When a property doesn't\r\n   * exist in that layer, it is looked up through a prototype to the highest layer. Starting\r\n   * from CellMeta -> ColumnMeta and ending to GlobalMeta, which stores default settings. Adding,\r\n   * removing, or changing property in that object has no direct reflection on any other layers.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @param {object} options Additional options that are used to extend the cell meta object.\r\n   * @param {number} options.visualRow The visual row index of the currently requested cell meta object.\r\n   * @param {number} options.visualColumn The visual column index of the currently requested cell meta object.\r\n   * @returns {object}\r\n   */\n  getCellMeta(physicalRow, physicalColumn, _ref) {\n    let {\n      visualRow,\n      visualColumn\n    } = _ref;\n    const cellMeta = this.cellMeta.getMeta(physicalRow, physicalColumn);\n    cellMeta.visualRow = visualRow;\n    cellMeta.visualCol = visualColumn;\n    cellMeta.row = physicalRow;\n    cellMeta.col = physicalColumn;\n    this.runLocalHooks('afterGetCellMeta', cellMeta);\n    return cellMeta;\n  }\n\n  /**\r\n   * Gets a value (defined by the `key` property) from the cell meta object.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @param {string} key Defines the value that will be returned from the cell meta object.\r\n   * @returns {*}\r\n   */\n  getCellMetaKeyValue(physicalRow, physicalColumn, key) {\n    if (typeof key !== 'string') {\n      throw new Error('The passed cell meta object key is not a string');\n    }\n    return this.cellMeta.getMeta(physicalRow, physicalColumn, key);\n  }\n\n  /**\r\n   * Sets settings object for cell meta object defined by \"key\" property.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @param {string} key The property name to set.\r\n   * @param {*} value Value to save.\r\n   */\n  setCellMeta(physicalRow, physicalColumn, key, value) {\n    this.cellMeta.setMeta(physicalRow, physicalColumn, key, value);\n  }\n\n  /**\r\n   * Updates cell meta object by merging settings with the current state.\r\n   *\r\n   * @param {number} physicalRow The physical row index which points what cell meta object is updated.\r\n   * @param {number} physicalColumn The physical column index which points what cell meta object is updated.\r\n   * @param {object} settings An object to merge with.\r\n   */\n  updateCellMeta(physicalRow, physicalColumn, settings) {\n    this.cellMeta.updateMeta(physicalRow, physicalColumn, settings);\n  }\n\n  /**\r\n   * Removes a property defined by the \"key\" argument from the cell meta object.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @param {number} physicalColumn The physical column index.\r\n   * @param {string} key The property name to remove.\r\n   */\n  removeCellMeta(physicalRow, physicalColumn, key) {\n    this.cellMeta.removeMeta(physicalRow, physicalColumn, key);\n  }\n\n  /**\r\n   * Returns all cell meta objects that were created during the Handsontable operation. As cell meta\r\n   * objects are created lazy, the length of the returned collection depends on how and when the\r\n   * table has asked for access to that meta objects.\r\n   *\r\n   * @returns {object[]}\r\n   */\n  getCellsMeta() {\n    return this.cellMeta.getMetas();\n  }\n\n  /**\r\n   * Returns all cell meta objects that were created during the Handsontable operation but for\r\n   * specific row index.\r\n   *\r\n   * @param {number} physicalRow The physical row index.\r\n   * @returns {object[]}\r\n   */\n  getCellsMetaAtRow(physicalRow) {\n    return this.cellMeta.getMetasAtRow(physicalRow);\n  }\n\n  /**\r\n   * Creates one or more rows at specific position.\r\n   *\r\n   * @param {number} physicalRow The physical row index which points from what position the row is added.\r\n   * @param {number} [amount=1] An amount of rows to add.\r\n   */\n  createRow(physicalRow) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this.cellMeta.createRow(physicalRow, amount);\n  }\n\n  /**\r\n   * Removes one or more rows from the collection.\r\n   *\r\n   * @param {number} physicalRow The physical row index which points from what position the row is removed.\r\n   * @param {number} [amount=1] An amount rows to remove.\r\n   */\n  removeRow(physicalRow) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this.cellMeta.removeRow(physicalRow, amount);\n  }\n\n  /**\r\n   * Creates one or more columns at specific position.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points from what position the column is added.\r\n   * @param {number} [amount=1] An amount of columns to add.\r\n   */\n  createColumn(physicalColumn) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this.cellMeta.createColumn(physicalColumn, amount);\n    this.columnMeta.createColumn(physicalColumn, amount);\n  }\n\n  /**\r\n   * Removes one or more columns from the collection.\r\n   *\r\n   * @param {number} physicalColumn The physical column index which points from what position the column is removed.\r\n   * @param {number} [amount=1] An amount of columns to remove.\r\n   */\n  removeColumn(physicalColumn) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this.cellMeta.removeColumn(physicalColumn, amount);\n    this.columnMeta.removeColumn(physicalColumn, amount);\n  }\n\n  /**\r\n   * Clears all saved cell meta objects. It keeps column meta, table meta, and global meta intact.\r\n   */\n  clearCellsCache() {\n    this.cellMeta.clearCache();\n  }\n\n  /**\r\n   * Clears all saved cell and columns meta objects.\r\n   */\n  clearCache() {\n    this.cellMeta.clearCache();\n    this.columnMeta.clearCache();\n  }\n}\nmixin(MetaManager, localHooks);", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { toUpperCaseFirst } from \"../helpers/string.mjs\";\nimport { isFunction } from \"../helpers/function.mjs\";\nimport DataMap from \"./dataMap.mjs\";\nimport { deepClone } from \"../helpers/object.mjs\";\nimport { setAttribute } from \"../helpers/dom/element.mjs\";\nimport { A11Y_COLCOUNT, A11Y_ROWCOUNT } from \"../helpers/a11y.mjs\";\n/**\r\n * Loads new data to Handsontable.\r\n *\r\n * @private\r\n * @param {Array} data Array of arrays or array of objects containing data.\r\n * @param {Function} setDataMapFunction Function that updates the datamap instance.\r\n * @param {Function} callbackFunction Function that takes care of updating Handsontable to the new dataset. Called\r\n * right before the `after-` hooks.\r\n * @param {object} config The configuration object containing all the needed dependency references and information.\r\n * @param {Handsontable.Core} config.hotInstance The Handsontable instance.\r\n * @param {DataMap} config.dataMap The current `dataMap` instance.\r\n * @param {DataSource} config.dataSource The current `dataSource` instance.\r\n * @param {string} config.internalSource The immediate internal source of the `replaceData` call.\r\n * @param {string} config.source The source of the call.\r\n * @param {boolean} config.firstRun `true` if it's a first call in the Handsontable lifecycle, `false` otherwise.\r\n * @fires Hooks#beforeLoadData\r\n * @fires Hooks#beforeUpdateData\r\n * @fires Hooks#afterLoadData\r\n * @fires Hooks#afterUpdateData\r\n * @fires Hooks#afterChange\r\n */\nfunction replaceData(data, setDataMapFunction, callbackFunction, config) {\n  const {\n    hotInstance,\n    dataMap,\n    dataSource,\n    internalSource,\n    source,\n    metaManager,\n    firstRun\n  } = config;\n  const capitalizedInternalSource = toUpperCaseFirst(internalSource);\n  const tableMeta = hotInstance.getSettings();\n  if (Array.isArray(tableMeta.dataSchema)) {\n    hotInstance.dataType = 'array';\n  } else if (isFunction(tableMeta.dataSchema)) {\n    hotInstance.dataType = 'function';\n  } else {\n    hotInstance.dataType = 'object';\n  }\n  if (dataMap) {\n    dataMap.destroy();\n  }\n  data = hotInstance.runHooks(`before${capitalizedInternalSource}`, data, firstRun, source);\n  const newDataMap = new DataMap(hotInstance, data, metaManager);\n\n  // We need to apply the new dataMap immediately, because of some asynchronous logic in the\n  // `autoRowSize`/`autoColumnSize` plugins.\n  setDataMapFunction(newDataMap);\n  if (typeof data === 'object' && data !== null) {\n    if (!(data.push && data.splice)) {\n      // check if data is array. Must use duck-type check so Backbone Collections also pass it\n      // when data is not an array, attempt to make a single-row array of it\n      // eslint-disable-next-line no-param-reassign\n      data = [data];\n    }\n  } else if (data === null) {\n    const dataSchema = newDataMap.getSchema();\n\n    // eslint-disable-next-line no-param-reassign\n    data = [];\n    let row;\n    let r = 0;\n    let rlen = 0;\n    for (r = 0, rlen = tableMeta.startRows; r < rlen; r++) {\n      if ((hotInstance.dataType === 'object' || hotInstance.dataType === 'function') && tableMeta.dataSchema) {\n        row = deepClone(dataSchema);\n        data.push(row);\n      } else if (hotInstance.dataType === 'array') {\n        row = deepClone(dataSchema[0]);\n        data.push(row);\n      } else {\n        row = [];\n        for (let c = 0, clen = tableMeta.startCols; c < clen; c++) {\n          row.push(null);\n        }\n        data.push(row);\n      }\n    }\n  } else {\n    throw new Error(`${internalSource} only accepts array of objects or array of arrays (${typeof data} given)`);\n  }\n  if (Array.isArray(data[0])) {\n    hotInstance.dataType = 'array';\n  }\n  tableMeta.data = data;\n  newDataMap.dataSource = data;\n  dataSource.data = data;\n  dataSource.dataType = hotInstance.dataType;\n  dataSource.colToProp = newDataMap.colToProp.bind(newDataMap);\n  dataSource.propToCol = newDataMap.propToCol.bind(newDataMap);\n  dataSource.countCachedColumns = newDataMap.countCachedColumns.bind(newDataMap);\n\n  // Run the logic for reassuring that the table structure fits the new dataset.\n  callbackFunction(newDataMap);\n  hotInstance.runHooks(`after${capitalizedInternalSource}`, data, firstRun, source);\n\n  // TODO: rethink the way the `afterChange` hook is being run here in the core `init` method.\n  if (!firstRun) {\n    hotInstance.runHooks('afterChange', null, internalSource);\n    hotInstance.render();\n  }\n  if (hotInstance.getSettings().ariaTags) {\n    setAttribute(hotInstance.rootElement, [A11Y_ROWCOUNT(-1),\n    // If run after initialization, add the number of row headers.\n    A11Y_COLCOUNT(hotInstance.countCols() + (hotInstance.view ? hotInstance.countRowHeaders() : 0))]);\n  }\n}\nexport { replaceData };", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport Hooks from \"../../../pluginHooks.mjs\";\nimport { hasOwnProperty } from \"../../../helpers/object.mjs\";\nimport { isFunction } from \"../../../helpers/function.mjs\";\n/**\r\n * @class DynamicCellMetaMod\r\n *\r\n * The `DynamicCellMetaMod` modifier allows for extending cell meta objects\r\n * (returned by `getCellMeta()` from `MetaManager`)\r\n * by user-specific properties.\r\n *\r\n * The user-specific properties can be added and changed dynamically,\r\n * either by Handsontable's hooks (`beforeGetCellMeta` and`afterGetCellMeta`),\r\n * or by Handsontable's `cells` option.\r\n *\r\n * The `getCellMeta()` method is used widely throughout the source code.\r\n * To boost the method's execution time,\r\n * the logic is triggered only once per one Handsontable slow render cycle.\r\n */\nexport class DynamicCellMetaMod {\n  constructor(metaManager) {\n    /**\r\n     * @type {MetaManager}\r\n     */\n    _defineProperty(this, \"metaManager\", void 0);\n    /**\r\n     * @type {Map}\r\n     */\n    _defineProperty(this, \"metaSyncMemo\", new Map());\n    this.metaManager = metaManager;\n    metaManager.addLocalHook('afterGetCellMeta', cellMeta => this.extendCellMeta(cellMeta));\n    Hooks.getSingleton().add('beforeRender', forceFullRender => {\n      if (forceFullRender) {\n        this.metaSyncMemo.clear();\n      }\n    }, this.metaManager.hot);\n  }\n\n  /**\r\n   * Extends the cell meta object by user-specific properties.\r\n   *\r\n   * The cell meta object can be extended dynamically,\r\n   * either by Handsontable's hooks (`beforeGetCellMeta` and`afterGetCellMeta`),\r\n   * or by Handsontable's `cells` option.\r\n   *\r\n   * To boost performance, the extending process is triggered only once per one slow Handsontable render cycle.\r\n   *\r\n   * @param {object} cellMeta The cell meta object.\r\n   */\n  extendCellMeta(cellMeta) {\n    var _this$metaSyncMemo$ge;\n    const {\n      row: physicalRow,\n      col: physicalColumn\n    } = cellMeta;\n    if ((_this$metaSyncMemo$ge = this.metaSyncMemo.get(physicalRow)) !== null && _this$metaSyncMemo$ge !== void 0 && _this$metaSyncMemo$ge.has(physicalColumn)) {\n      return;\n    }\n    const {\n      visualRow,\n      visualCol\n    } = cellMeta;\n    const hot = this.metaManager.hot;\n    const prop = hot.colToProp(visualCol);\n    cellMeta.prop = prop;\n    hot.runHooks('beforeGetCellMeta', visualRow, visualCol, cellMeta);\n\n    // extend a `type` value, added or changed in the `beforeGetCellMeta` hook\n    const cellType = hasOwnProperty(cellMeta, 'type') ? cellMeta.type : null;\n    let cellSettings = isFunction(cellMeta.cells) ? cellMeta.cells(physicalRow, physicalColumn, prop) : null;\n    if (cellType) {\n      if (cellSettings) {\n        var _cellSettings$type;\n        cellSettings.type = (_cellSettings$type = cellSettings.type) !== null && _cellSettings$type !== void 0 ? _cellSettings$type : cellType;\n      } else {\n        cellSettings = {\n          type: cellType\n        };\n      }\n    }\n    if (cellSettings) {\n      this.metaManager.updateCellMeta(physicalRow, physicalColumn, cellSettings);\n    }\n    hot.runHooks('afterGetCellMeta', visualRow, visualCol, cellMeta);\n    if (!this.metaSyncMemo.has(physicalRow)) {\n      this.metaSyncMemo.set(physicalRow, new Set());\n    }\n    this.metaSyncMemo.get(physicalRow).add(physicalColumn);\n  }\n}", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nvar _initOnlyCallback = /*#__PURE__*/new WeakMap();\n/**\r\n * @class ExtendMetaPropertiesMod\r\n */\nexport class ExtendMetaPropertiesMod {\n  constructor(metaManager) {\n    /**\r\n     * @type {MetaManager}\r\n     */\n    _defineProperty(this, \"metaManager\", void 0);\n    /**\r\n     * @type {Set}\r\n     */\n    _defineProperty(this, \"usageTracker\", new Set());\n    /**\r\n     * @type {Map}\r\n     */\n    _defineProperty(this, \"propDescriptors\", new Map([['ariaTags', {\n      initOnly: true\n    }], ['fixedColumnsLeft', {\n      target: 'fixedColumnsStart',\n      onChange(propName) {\n        const isRtl = this.metaManager.hot.isRtl();\n        if (isRtl && propName === 'fixedColumnsLeft') {\n          throw new Error('The `fixedColumnsLeft` is not supported for RTL. Please use option `fixedColumnsStart`.');\n        }\n        if (this.usageTracker.has('fixedColumnsLeft') && this.usageTracker.has('fixedColumnsStart')) {\n          throw new Error('The `fixedColumnsLeft` and `fixedColumnsStart` should not be used together. ' + 'Please use only the option `fixedColumnsStart`.');\n        }\n      }\n    }], ['layoutDirection', {\n      initOnly: true\n    }], ['renderAllColumns', {\n      initOnly: true\n    }], ['renderAllRows', {\n      initOnly: true\n    }]]));\n    /**\r\n     * Callback called when the prop is marked as `initOnly`.\r\n     *\r\n     * @param {string} propName The property name.\r\n     * @param {*} value The new value.\r\n     * @param {boolean} isInitialChange Is the change initial.\r\n     */\n    _classPrivateFieldInitSpec(this, _initOnlyCallback, (propName, value, isInitialChange) => {\n      if (!isInitialChange) {\n        throw new Error(`The \\`${propName}\\` option can not be updated after the Handsontable is initialized.`);\n      }\n    });\n    this.metaManager = metaManager;\n    this.extendMetaProps();\n  }\n  /**\r\n   * Extends the meta options based on the object descriptors from the `propDescriptors` list.\r\n   */\n  extendMetaProps() {\n    this.propDescriptors.forEach((descriptor, alias) => {\n      const {\n        initOnly,\n        target,\n        onChange\n      } = descriptor;\n      const hasTarget = typeof target === 'string';\n      const targetProp = hasTarget ? target : alias;\n      const origProp = `_${targetProp}`;\n      this.metaManager.globalMeta.meta[origProp] = this.metaManager.globalMeta.meta[targetProp];\n      if (onChange) {\n        this.installPropWatcher(alias, origProp, onChange);\n        if (hasTarget) {\n          this.installPropWatcher(target, origProp, onChange);\n        }\n      } else if (initOnly) {\n        this.installPropWatcher(alias, origProp, _classPrivateFieldGet(_initOnlyCallback, this));\n        if (!this.metaManager.globalMeta.meta._initOnlySettings) {\n          this.metaManager.globalMeta.meta._initOnlySettings = [];\n        }\n        this.metaManager.globalMeta.meta._initOnlySettings.push(alias);\n      }\n    });\n  }\n\n  /**\r\n   * Installs the property watcher to the `propName` option and forwards getter and setter to\r\n   * the new one.\r\n   *\r\n   * @param {string} propName The property to watch.\r\n   * @param {string} origProp The property from/to the value is forwarded.\r\n   * @param {Function} onChange The callback.\r\n   */\n  installPropWatcher(propName, origProp, onChange) {\n    const self = this;\n    Object.defineProperty(this.metaManager.globalMeta.meta, propName, {\n      get() {\n        return this[origProp];\n      },\n      set(value) {\n        const isInitialChange = !self.usageTracker.has(propName);\n        self.usageTracker.add(propName);\n        onChange.call(self, propName, value, isInitialChange);\n        this[origProp] = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n}", "/**\r\n * Group name for keyboard shortcuts that are active when the cell is selected.\r\n */\nexport const GRID_GROUP = 'gridDefault';\n/**\r\n * Group name for keyboard shortcuts that are active when the cell editor is active.\r\n */\nexport const EDITOR_EDIT_GROUP = 'editorManager.handlingEditor';", "export const command = {\n  name: 'editorCloseAndSave',\n  callback(hot) {\n    const editorManager = hot._getEditorManager();\n    editorManager.closeEditorAndSaveChanges();\n  }\n};", "import \"core-js/modules/es.array.push.js\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\nimport { defineGetter, objectEach } from \"./../helpers/object.mjs\";\nconst MIXIN_NAME = 'hooksRefRegisterer';\n\n/**\r\n * Mixin object to extend objects functionality for auto registering hooks in an Handsontable instance.\r\n *\r\n * @type {object}\r\n */\nconst hooksRefRegisterer = {\n  /**\r\n   * Internal hooks storage.\r\n   */\n  _hooksStorage: Object.create(null),\n  /**\r\n   * Add hook to the collection.\r\n   *\r\n   * @param {string} key The hook name.\r\n   * @param {Function} callback The hook callback.\r\n   * @returns {object}\r\n   */\n  addHook(key, callback) {\n    if (!this._hooksStorage[key]) {\n      this._hooksStorage[key] = [];\n    }\n    this.hot.addHook(key, callback);\n    this._hooksStorage[key].push(callback);\n    return this;\n  },\n  /**\r\n   * Remove all hooks listeners by hook name.\r\n   *\r\n   * @param {string} key The hook name.\r\n   */\n  removeHooksByKey(key) {\n    arrayEach(this._hooksStorage[key] || [], callback => {\n      this.hot.removeHook(key, callback);\n    });\n  },\n  /**\r\n   * Clear all added hooks.\r\n   */\n  clearHooks() {\n    objectEach(this._hooksStorage, (callbacks, name) => this.removeHooksByKey(name));\n    this._hooksStorage = {};\n  }\n};\ndefineGetter(hooksRefRegisterer, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default hooksRefRegisterer;", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { stringify } from \"../../helpers/mixed.mjs\";\nimport { mixin } from \"../../helpers/object.mjs\";\nimport hooksRefRegisterer from \"../../mixins/hooksRefRegisterer.mjs\";\nimport { getScrollbarWidth, offset, hasVerticalScrollbar, hasHorizontalScrollbar, outerWidth, outerHeight, getComputedStyle } from \"../../helpers/dom/element.mjs\";\nexport const EDITOR_TYPE = 'base';\nexport const EDITOR_STATE = Object.freeze({\n  VIRGIN: 'STATE_VIRGIN',\n  // before editing\n  EDITING: 'STATE_EDITING',\n  WAITING: 'STATE_WAITING',\n  // waiting for async validation\n  FINISHED: 'STATE_FINISHED'\n});\n\n/**\r\n * @class BaseEditor\r\n */\nexport class BaseEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n\n  /**\r\n   * A reference to the source instance of the Handsontable.\r\n   *\r\n   * @type {Handsontable}\r\n   */\n\n  /**\r\n   * @param {Handsontable} hotInstance A reference to the source instance of the Handsontable.\r\n   */\n  constructor(hotInstance) {\n    _defineProperty(this, \"hot\", void 0);\n    /**\r\n     * Editor's state.\r\n     *\r\n     * @type {string}\r\n     */\n    _defineProperty(this, \"state\", EDITOR_STATE.VIRGIN);\n    /**\r\n     * Flag to store information about editor's opening status.\r\n     *\r\n     * @private\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"_opened\", false);\n    /**\r\n     * Defines the editor's editing mode. When false, then an editor works in fast editing mode.\r\n     *\r\n     * @private\r\n     *\r\n     * @type {boolean}\r\n     */\n    _defineProperty(this, \"_fullEditMode\", false);\n    /**\r\n     * Callback to call after closing editor.\r\n     *\r\n     * @type {Function}\r\n     */\n    _defineProperty(this, \"_closeCallback\", null);\n    /**\r\n     * Currently rendered cell's TD element.\r\n     *\r\n     * @type {HTMLTableCellElement}\r\n     */\n    _defineProperty(this, \"TD\", null);\n    /**\r\n     * Visual row index.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"row\", null);\n    /**\r\n     * Visual column index.\r\n     *\r\n     * @type {number}\r\n     */\n    _defineProperty(this, \"col\", null);\n    /**\r\n     * Column property name or a column index, if datasource is an array of arrays.\r\n     *\r\n     * @type {number|string}\r\n     */\n    _defineProperty(this, \"prop\", null);\n    /**\r\n     * Original cell's value.\r\n     *\r\n     * @type {*}\r\n     */\n    _defineProperty(this, \"originalValue\", null);\n    /**\r\n     * Object containing the cell's properties.\r\n     *\r\n     * @type {object}\r\n     */\n    _defineProperty(this, \"cellProperties\", null);\n    this.hot = hotInstance;\n    this.init();\n  }\n\n  /**\r\n   * Fires callback after closing editor.\r\n   *\r\n   * @private\r\n   * @param {boolean} result The editor value.\r\n   */\n  _fireCallbacks(result) {\n    if (this._closeCallback) {\n      this._closeCallback(result);\n      this._closeCallback = null;\n    }\n  }\n\n  /**\r\n   * Initializes an editor's intance.\r\n   */\n  init() {}\n\n  /**\r\n   * Required method to get current value from editable element.\r\n   */\n  getValue() {\n    throw Error('Editor getValue() method unimplemented');\n  }\n\n  /**\r\n   * Required method to set new value into editable element.\r\n   */\n  setValue() {\n    throw Error('Editor setValue() method unimplemented');\n  }\n\n  /**\r\n   * Required method to open editor.\r\n   */\n  open() {\n    throw Error('Editor open() method unimplemented');\n  }\n\n  /**\r\n   * Required method to close editor.\r\n   */\n  close() {\n    throw Error('Editor close() method unimplemented');\n  }\n\n  /**\r\n   * Prepares editor's meta data.\r\n   *\r\n   * @param {number} row The visual row index.\r\n   * @param {number} col The visual column index.\r\n   * @param {number|string} prop The column property (passed when datasource is an array of objects).\r\n   * @param {HTMLTableCellElement} td The rendered cell element.\r\n   * @param {*} value The rendered value.\r\n   * @param {object} cellProperties The cell meta object (see {@link Core#getCellMeta}).\r\n   */\n  prepare(row, col, prop, td, value, cellProperties) {\n    this.TD = td;\n    this.row = row;\n    this.col = col;\n    this.prop = prop;\n    this.originalValue = value;\n    this.cellProperties = cellProperties;\n    this.state = this.isOpened() ? this.state : EDITOR_STATE.VIRGIN;\n  }\n\n  /**\r\n   * Fallback method to provide extendable editors in ES5.\r\n   *\r\n   * @returns {Function}\r\n   */\n  extend() {\n    return class Editor extends this.constructor {};\n  }\n\n  /**\r\n   * Saves value from editor into data storage.\r\n   *\r\n   * @param {*} value The editor value.\r\n   * @param {boolean} ctrlDown If `true`, applies value to each cell in the last selected range.\r\n   */\n  saveValue(value, ctrlDown) {\n    let visualRowFrom;\n    let visualColumnFrom;\n    let visualRowTo;\n    let visualColumnTo;\n\n    // if ctrl+enter and multiple cells selected, behave like Excel (finish editing and apply to all cells)\n    if (ctrlDown) {\n      const selectedLast = this.hot.getSelectedLast();\n      visualRowFrom = Math.max(Math.min(selectedLast[0], selectedLast[2]), 0); // Math.max eliminate headers coords.\n      visualColumnFrom = Math.max(Math.min(selectedLast[1], selectedLast[3]), 0); // Math.max eliminate headers coords.\n      visualRowTo = Math.max(selectedLast[0], selectedLast[2]);\n      visualColumnTo = Math.max(selectedLast[1], selectedLast[3]);\n    } else {\n      [visualRowFrom, visualColumnFrom, visualRowTo, visualColumnTo] = [this.row, this.col, null, null];\n    }\n    const modifiedCellCoords = this.hot.runHooks('modifyGetCellCoords', visualRowFrom, visualColumnFrom);\n    if (Array.isArray(modifiedCellCoords)) {\n      [visualRowFrom, visualColumnFrom] = modifiedCellCoords;\n    }\n\n    // Saving values using the modified coordinates.\n    this.hot.populateFromArray(visualRowFrom, visualColumnFrom, value, visualRowTo, visualColumnTo, 'edit');\n  }\n\n  /**\r\n   * Begins editing on a highlighted cell and hides fillHandle corner if was present.\r\n   *\r\n   * @param {*} newInitialValue The initial editor value.\r\n   * @param {Event} event The keyboard event object.\r\n   */\n  beginEditing(newInitialValue, event) {\n    if (this.state !== EDITOR_STATE.VIRGIN) {\n      return;\n    }\n    const hotInstance = this.hot;\n    // We have to convert visual indexes into renderable indexes\n    // due to hidden columns don't participate in the rendering process\n    const renderableRowIndex = hotInstance.rowIndexMapper.getRenderableFromVisualIndex(this.row);\n    const renderableColumnIndex = hotInstance.columnIndexMapper.getRenderableFromVisualIndex(this.col);\n    hotInstance.view.scrollViewport(hotInstance._createCellCoords(renderableRowIndex, renderableColumnIndex));\n    this.state = EDITOR_STATE.EDITING;\n\n    // Set the editor value only in the full edit mode. In other mode the focusable element has to be empty,\n    // otherwise IME (editor for Asia users) doesn't work.\n    if (this.isInFullEditMode()) {\n      const stringifiedInitialValue = typeof newInitialValue === 'string' ? newInitialValue : stringify(this.originalValue);\n      this.setValue(stringifiedInitialValue);\n    }\n    this.open(event);\n    this._opened = true;\n    this.focus();\n\n    // only rerender the selections (FillHandle should disappear when beginEditing is triggered)\n    hotInstance.view.render();\n    hotInstance.runHooks('afterBeginEditing', this.row, this.col);\n  }\n\n  /**\r\n   * Finishes editing and start saving or restoring process for editing cell or last selected range.\r\n   *\r\n   * @param {boolean} restoreOriginalValue If true, then closes editor without saving value from the editor into a cell.\r\n   * @param {boolean} ctrlDown If true, then saveValue will save editor's value to each cell in the last selected range.\r\n   * @param {Function} callback The callback function, fired after editor closing.\r\n   */\n  finishEditing(restoreOriginalValue, ctrlDown, callback) {\n    let val;\n    if (callback) {\n      const previousCloseCallback = this._closeCallback;\n      this._closeCallback = result => {\n        if (previousCloseCallback) {\n          previousCloseCallback(result);\n        }\n        callback(result);\n        this.hot.view.render();\n      };\n    }\n    if (this.isWaiting()) {\n      return;\n    }\n    if (this.state === EDITOR_STATE.VIRGIN) {\n      this.hot._registerTimeout(() => {\n        this._fireCallbacks(true);\n      });\n      return;\n    }\n    if (this.state === EDITOR_STATE.EDITING) {\n      if (restoreOriginalValue) {\n        this.cancelChanges();\n        this.hot.view.render();\n        return;\n      }\n      const value = this.getValue();\n      if (this.cellProperties.trimWhitespace) {\n        // We trim only string values\n        val = [[typeof value === 'string' ? String.prototype.trim.call(value || '') : value]];\n      } else {\n        val = [[value]];\n      }\n      this.state = EDITOR_STATE.WAITING;\n      this.saveValue(val, ctrlDown);\n      if (this.hot.getCellValidator(this.cellProperties)) {\n        this.hot.addHookOnce('postAfterValidate', result => {\n          this.state = EDITOR_STATE.FINISHED;\n          this.discardEditor(result);\n        });\n      } else {\n        this.state = EDITOR_STATE.FINISHED;\n        this.discardEditor(true);\n      }\n    }\n  }\n\n  /**\r\n   * Finishes editing without singout saving value.\r\n   */\n  cancelChanges() {\n    this.state = EDITOR_STATE.FINISHED;\n    this.discardEditor();\n  }\n\n  /**\r\n   * Verifies result of validation or closes editor if user's cancelled changes.\r\n   *\r\n   * @param {boolean|undefined} result If `false` and the cell using allowInvalid option,\r\n   *                                   then an editor won't be closed until validation is passed.\r\n   */\n  discardEditor(result) {\n    if (this.state !== EDITOR_STATE.FINISHED) {\n      return;\n    }\n\n    // validator was defined and failed\n    if (result === false && this.cellProperties.allowInvalid !== true) {\n      this.hot.selectCell(this.row, this.col);\n      this.focus();\n      this.state = EDITOR_STATE.EDITING;\n      this._fireCallbacks(false);\n    } else {\n      this.close();\n      this._opened = false;\n      this._fullEditMode = false;\n      this.state = EDITOR_STATE.VIRGIN;\n      this._fireCallbacks(true);\n      const shortcutManager = this.hot.getShortcutManager();\n      shortcutManager.setActiveContextName('grid');\n    }\n  }\n\n  /**\r\n   * Switch editor into full edit mode. In this state navigation keys don't close editor. This mode is activated\r\n   * automatically after hit ENTER or F2 key on the cell or while editing cell press F2 key.\r\n   */\n  enableFullEditMode() {\n    this._fullEditMode = true;\n  }\n\n  /**\r\n   * Checks if editor is in full edit mode.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isInFullEditMode() {\n    return this._fullEditMode;\n  }\n\n  /**\r\n   * Returns information whether the editor is open.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isOpened() {\n    return this._opened;\n  }\n\n  /**\r\n   * Returns information whether the editor is waiting, eg.: for async validation.\r\n   *\r\n   * @returns {boolean}\r\n   */\n  isWaiting() {\n    return this.state === EDITOR_STATE.WAITING;\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\r\n   * Gets the object that provides information about the edited cell size and its position\r\n   * relative to the table viewport.\r\n   *\r\n   * The rectangle has six integer properties:\r\n   *  - `top` The top position relative to the table viewport\r\n   *  - `start` The left (or right in RTL) position relative to the table viewport\r\n   *  - `width` The cell's current width;\r\n   *  - `maxWidth` The maximum cell's width after which the editor goes out of the table viewport\r\n   *  - `height` The cell's current height;\r\n   *  - `maxHeight` The maximum cell's height after which the editor goes out of the table viewport\r\n   *\r\n   * @returns {{top: number, start: number, width: number, maxWidth: number, height: number, maxHeight: number} | undefined}\r\n   */\n  getEditedCellRect() {\n    var _wtOverlays$getParent;\n    const TD = this.getEditedCell();\n\n    // TD is outside of the viewport.\n    if (!TD) {\n      return;\n    }\n    const {\n      wtOverlays,\n      wtViewport\n    } = this.hot.view._wt;\n    const rootWindow = this.hot.rootWindow;\n    const currentOffset = offset(TD);\n    const cellWidth = outerWidth(TD);\n    const containerOffset = offset(this.hot.rootElement);\n    const containerWidth = outerWidth(this.hot.rootElement);\n    const scrollableContainerTop = wtOverlays.topOverlay.holder;\n    const scrollableContainerLeft = wtOverlays.inlineStartOverlay.holder;\n    const containerScrollTop = scrollableContainerTop !== rootWindow ? scrollableContainerTop.scrollTop : 0;\n    const containerScrollLeft = scrollableContainerLeft !== rootWindow ? scrollableContainerLeft.scrollLeft : 0;\n    const gridMostRightPos = rootWindow.innerWidth - containerOffset.left - containerWidth;\n    const {\n      wtTable: overlayTable\n    } = (_wtOverlays$getParent = wtOverlays.getParentOverlay(TD)) !== null && _wtOverlays$getParent !== void 0 ? _wtOverlays$getParent : this.hot.view._wt;\n    const overlayName = overlayTable.name;\n    const scrollTop = ['master', 'inline_start'].includes(overlayName) ? containerScrollTop : 0;\n    const scrollLeft = ['master', 'top', 'bottom'].includes(overlayName) ? containerScrollLeft : 0;\n\n    // If colHeaders is disabled, cells in the first row have border-top\n    const editTopModifier = currentOffset.top === containerOffset.top ? 0 : 1;\n    let topPos = currentOffset.top - containerOffset.top - editTopModifier - scrollTop;\n    let inlineStartPos = 0;\n    if (this.hot.isRtl()) {\n      inlineStartPos = rootWindow.innerWidth - currentOffset.left - cellWidth - gridMostRightPos - 1 + scrollLeft;\n    } else {\n      inlineStartPos = currentOffset.left - containerOffset.left - 1 - scrollLeft;\n    }\n\n    // When the scrollable element is Window object then the editor position needs to be compensated\n    // by the overlays' position (position relative to the table viewport). In other cases, the overlay's\n    // position always returns 0.\n    if (['top', 'top_inline_start_corner'].includes(overlayName)) {\n      topPos += wtOverlays.topOverlay.getOverlayOffset();\n    }\n    if (['inline_start', 'top_inline_start_corner'].includes(overlayName)) {\n      inlineStartPos += Math.abs(wtOverlays.inlineStartOverlay.getOverlayOffset());\n    }\n    const hasColumnHeaders = this.hot.hasColHeaders();\n    const renderableRow = this.hot.rowIndexMapper.getRenderableFromVisualIndex(this.row);\n    const renderableColumn = this.hot.columnIndexMapper.getRenderableFromVisualIndex(this.col);\n    const nrOfRenderableRowIndexes = this.hot.rowIndexMapper.getRenderableIndexesLength();\n    const firstRowIndexOfTheBottomOverlay = nrOfRenderableRowIndexes - this.hot.view._wt.getSetting('fixedRowsBottom');\n    if (hasColumnHeaders && renderableRow <= 0 || renderableRow === firstRowIndexOfTheBottomOverlay) {\n      topPos += 1;\n    }\n    if (renderableColumn <= 0) {\n      inlineStartPos += 1;\n    }\n    const firstRowOffset = wtViewport.rowsRenderCalculator.startPosition;\n    const firstColumnOffset = wtViewport.columnsRenderCalculator.startPosition;\n    const horizontalScrollPosition = Math.abs(wtOverlays.inlineStartOverlay.getScrollPosition());\n    const verticalScrollPosition = wtOverlays.topOverlay.getScrollPosition();\n    const scrollbarWidth = getScrollbarWidth(this.hot.rootDocument);\n    let cellTopOffset = TD.offsetTop;\n    if (['inline_start', 'master'].includes(overlayName)) {\n      cellTopOffset += firstRowOffset - verticalScrollPosition;\n    }\n    if (['bottom', 'bottom_inline_start_corner'].includes(overlayName)) {\n      const {\n        wtViewport: bottomWtViewport,\n        wtTable: bottomWtTable\n      } = wtOverlays.bottomOverlay.clone;\n      cellTopOffset += bottomWtViewport.getWorkspaceHeight() - bottomWtTable.getHeight() - scrollbarWidth;\n    }\n    let cellStartOffset = TD.offsetLeft;\n    if (this.hot.isRtl()) {\n      if (cellStartOffset >= 0) {\n        cellStartOffset = overlayTable.getWidth() - TD.offsetLeft;\n      } else {\n        // The `offsetLeft` returns negative values when the parent offset element has position relative\n        // (it happens when on the cell the selection is applied - the `area` CSS class).\n        // When it happens the `offsetLeft` value is calculated from the right edge of the parent element.\n        cellStartOffset = Math.abs(cellStartOffset);\n      }\n      cellStartOffset += firstColumnOffset - horizontalScrollPosition - cellWidth;\n    } else if (['top', 'master', 'bottom'].includes(overlayName)) {\n      cellStartOffset += firstColumnOffset - horizontalScrollPosition;\n    }\n    const cellComputedStyle = getComputedStyle(this.TD, this.hot.rootWindow);\n    const borderPhysicalWidthProp = this.hot.isRtl() ? 'borderRightWidth' : 'borderLeftWidth';\n    const inlineStartBorderCompensation = parseInt(cellComputedStyle[borderPhysicalWidthProp], 10) > 0 ? 0 : 1;\n    const topBorderCompensation = parseInt(cellComputedStyle.borderTopWidth, 10) > 0 ? 0 : 1;\n    const width = outerWidth(TD) + inlineStartBorderCompensation;\n    const height = outerHeight(TD) + topBorderCompensation;\n    const actualVerticalScrollbarWidth = hasVerticalScrollbar(scrollableContainerTop) ? scrollbarWidth : 0;\n    const actualHorizontalScrollbarWidth = hasHorizontalScrollbar(scrollableContainerLeft) ? scrollbarWidth : 0;\n    const maxWidth = this.hot.view.maximumVisibleElementWidth(cellStartOffset) - actualVerticalScrollbarWidth + inlineStartBorderCompensation;\n    const maxHeight = Math.max(this.hot.view.maximumVisibleElementHeight(cellTopOffset) - actualHorizontalScrollbarWidth + topBorderCompensation, 23);\n    return {\n      top: topPos,\n      start: inlineStartPos,\n      height,\n      maxHeight,\n      width,\n      maxWidth\n    };\n  }\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n\n  /**\r\n   * Gets className of the edited cell if exist.\r\n   *\r\n   * @returns {string}\r\n   */\n  getEditedCellsLayerClass() {\n    const editorSection = this.checkEditorSection();\n    switch (editorSection) {\n      case 'inline-start':\n        return 'ht_clone_left ht_clone_inline_start';\n      case 'bottom':\n        return 'ht_clone_bottom';\n      case 'bottom-inline-start-corner':\n        return 'ht_clone_bottom_left_corner ht_clone_bottom_inline_start_corner';\n      case 'top':\n        return 'ht_clone_top';\n      case 'top-inline-start-corner':\n        return 'ht_clone_top_left_corner ht_clone_top_inline_start_corner';\n      default:\n        return 'ht_clone_master';\n    }\n  }\n\n  /**\r\n   * Gets HTMLTableCellElement of the edited cell if exist.\r\n   *\r\n   * @returns {HTMLTableCellElement|null}\r\n   */\n  getEditedCell() {\n    return this.hot.getCell(this.row, this.col, true);\n  }\n\n  /**\r\n   * Returns name of the overlay, where editor is placed.\r\n   *\r\n   * @private\r\n   * @returns {string}\r\n   */\n  checkEditorSection() {\n    const totalRows = this.hot.countRows();\n    let section = '';\n    if (this.row < this.hot.getSettings().fixedRowsTop) {\n      if (this.col < this.hot.getSettings().fixedColumnsStart) {\n        section = 'top-inline-start-corner';\n      } else {\n        section = 'top';\n      }\n    } else if (this.hot.getSettings().fixedRowsBottom && this.row >= totalRows - this.hot.getSettings().fixedRowsBottom) {\n      if (this.col < this.hot.getSettings().fixedColumnsStart) {\n        section = 'bottom-inline-start-corner';\n      } else {\n        section = 'bottom';\n      }\n    } else if (this.col < this.hot.getSettings().fixedColumnsStart) {\n      section = 'inline-start';\n    }\n    return section;\n  }\n}\nmixin(BaseEditor, hooksRefRegisterer);", "import { EDITOR_STATE } from \"../../../editors/baseEditor/index.mjs\";\nexport const command = {\n  name: 'editorCloseAndSaveByArrowKeys',\n  callback(hot, event, keys) {\n    const editorManager = hot._getEditorManager();\n    const activeEditor = editorManager.getActiveEditor();\n    if (activeEditor.isInFullEditMode() && activeEditor.state === EDITOR_STATE.EDITING) {\n      return;\n    }\n    editorManager.closeEditorAndSaveChanges();\n    if (hot.getSelected()) {\n      if (keys.includes('arrowdown')) {\n        hot.selection.transformStart(1, 0);\n      } else if (keys.includes('arrowup')) {\n        hot.selection.transformStart(-1, 0);\n      } else if (keys.includes('arrowleft')) {\n        hot.selection.transformStart(0, -1 * hot.getDirectionFactor());\n      } else if (keys.includes('arrowright')) {\n        hot.selection.transformStart(0, hot.getDirectionFactor());\n      }\n    }\n    event.preventDefault();\n  }\n};", "export const command = {\n  name: 'editorCloseAndSaveByEnter',\n  callback(hot, event) {\n    const editorManager = hot._getEditorManager();\n    editorManager.closeEditorAndSaveChanges(event.ctrlKey || event.metaKey);\n    editorManager.moveSelectionAfterEnter(event);\n  }\n};", "export const command = {\n  name: 'editorCloseWithoutSaving',\n  callback(hot) {\n    const editorManager = hot._getEditorManager();\n    editorManager.closeEditorAndRestoreOriginalValue(hot.getShortcutManager().isCtrlPressed());\n    editorManager.activeEditor.focus();\n  }\n};", "export const command = {\n  name: 'editorFastOpen',\n  callback(hot, event) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    if (highlight.isHeader()) {\n      return;\n    }\n    hot._getEditorManager().openEditor(null, event, true);\n  }\n};", "import { stopImmediatePropagation } from \"../../../helpers/dom/event.mjs\";\nexport const command = {\n  name: 'editorOpen',\n  callback(hot, event, keys) {\n    const editorManager = hot._getEditorManager();\n    const selectedRange = hot.getSelectedRangeLast();\n    const {\n      highlight\n    } = selectedRange;\n\n    // supports for navigating with enter key when multiple cells are selected\n    if (hot.selection.isMultiple() && !selectedRange.isHeader() && hot.countRenderedCols() > 0 && hot.countRenderedRows() > 0) {\n      const settings = hot.getSettings();\n      const enterMoves = typeof settings.enterMoves === 'function' ? settings.enterMoves(event) : settings.enterMoves;\n      if (keys.includes('shift')) {\n        hot.selection.transformFocus(-enterMoves.row, -enterMoves.col);\n      } else {\n        hot.selection.transformFocus(enterMoves.row, enterMoves.col);\n      }\n      return;\n    }\n    if (highlight.isHeader()) {\n      return;\n    }\n\n    // supports editor opening with enter key\n    if (hot.getSettings().enterBeginsEditing) {\n      if (editorManager.cellProperties.readOnly) {\n        editorManager.moveSelectionAfterEnter(event);\n      } else {\n        editorManager.openEditor(null, event, true);\n      }\n    } else {\n      editorManager.moveSelectionAfterEnter(event);\n    }\n    stopImmediatePropagation(event); // required by HandsontableEditor\n  }\n};", "import { command as closeAndSave } from \"./closeAndSave.mjs\";\nimport { command as closeAndSaveByArrowKeys } from \"./closeAndSaveByArrowKeys.mjs\";\nimport { command as closeAndSaveByEnter } from \"./closeAndSaveByEnter.mjs\";\nimport { command as closeWithoutSaving } from \"./closeWithoutSaving.mjs\";\nimport { command as fastOpen } from \"./fastOpen.mjs\";\nimport { command as open } from \"./open.mjs\";\n/**\r\n * Returns complete list of the shortcut commands for the cells editing feature.\r\n *\r\n * @returns {Function[]}\r\n */\nexport function getAllCommands() {\n  return [closeAndSave, closeAndSaveByArrowKeys, closeAndSaveByEnter, closeWithoutSaving, fastOpen, open];\n}", "export const command = {\n  name: 'extendCellsSelectionDown',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByColumnHeader() && !hot.selection.isSelectedByCorner() && (highlight.isCell() || highlight.isHeader() && hot.selection.isSelectedByRowHeader())) {\n      hot.selection.transformEnd(1, 0);\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionDownByViewportHeight',\n  callback(hot) {\n    const {\n      to\n    } = hot.getSelectedRangeLast();\n    const nextRowIndexToSelect = Math.min(to.row + hot.countVisibleRows(), hot.countRows() - 1);\n    const row = hot.rowIndexMapper.getNearestNotHiddenIndex(nextRowIndexToSelect, -1);\n    if (row !== null) {\n      const coords = hot._createCellCoords(row, to.col);\n      const scrollPadding = to.row - hot.view.getFirstFullyVisibleRow();\n      const nextVerticalScroll = Math.min(coords.row - scrollPadding, hot.countRows() - 1);\n      hot.selection.setRangeEnd(coords);\n      hot.scrollViewportTo({\n        row: nextVerticalScroll,\n        verticalSnap: 'top',\n        horizontalSnap: 'start'\n      });\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionLeft',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByRowHeader() && !hot.selection.isSelectedByCorner() && (highlight.isCell() || highlight.isHeader() && hot.selection.isSelectedByColumnHeader())) {\n      hot.selection.transformEnd(0, -1 * hot.getDirectionFactor());\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionRight',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByRowHeader() && !hot.selection.isSelectedByCorner() && (highlight.isCell() || highlight.isHeader() && hot.selection.isSelectedByColumnHeader())) {\n      hot.selection.transformEnd(0, hot.getDirectionFactor());\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToColumns',\n  callback(hot) {\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    if (hot.selection.isSelectedByRowHeader()) {\n      hot.selection.selectAll(true, true);\n    } else {\n      hot.selectColumns(from.col, to.col, highlight);\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToMostBottom',\n  callback(hot) {\n    const {\n      selection,\n      rowIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByRowHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const row = rowIndexMapper.getNearestNotHiddenIndex(hot.countRows() - 1, -1);\n      const newFrom = from.clone();\n      newFrom.row = highlight.row;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the row highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByRowHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(row, to.col));\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToMostInlineEnd',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByRowHeader() && !hot.selection.isSelectedByCorner() && highlight.isCell()) {\n      const column = columnIndexMapper.getNearestNotHiddenIndex(hot.countCols() - 1, -1);\n      const newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToMostInlineStart',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByRowHeader() && !hot.selection.isSelectedByCorner() && highlight.isCell()) {\n      const fixedColumns = parseInt(hot.getSettings().fixedColumnsStart, 10);\n      const column = columnIndexMapper.getNearestNotHiddenIndex(fixedColumns, 1);\n      const newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToMostLeft',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByColumnHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const column = columnIndexMapper.getNearestNotHiddenIndex(...(hot.isRtl() ? [hot.countCols() - 1, -1] : [0, 1]));\n      const newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the column highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByColumnHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToMostRight',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByColumnHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const column = columnIndexMapper.getNearestNotHiddenIndex(...(hot.isRtl() ? [0, 1] : [hot.countCols() - 1, -1]));\n      const newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the column highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByColumnHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToMostTop',\n  callback(hot) {\n    const {\n      selection,\n      rowIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByRowHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const row = rowIndexMapper.getNearestNotHiddenIndex(0, 1);\n      const newFrom = from.clone();\n      newFrom.row = highlight.row;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the row highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByRowHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(row, to.col));\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionToRows',\n  callback(hot) {\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    if (hot.selection.isSelectedByColumnHeader()) {\n      hot.selection.selectAll(true, true);\n    } else {\n      hot.selectRows(from.row, to.row, highlight);\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionUp',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    if (!hot.selection.isSelectedByColumnHeader() && !hot.selection.isSelectedByCorner() && (highlight.isCell() || highlight.isHeader() && hot.selection.isSelectedByRowHeader())) {\n      hot.selection.transformEnd(-1, 0);\n    }\n  }\n};", "export const command = {\n  name: 'extendCellsSelectionUpByViewportHeight',\n  callback(hot) {\n    const {\n      to\n    } = hot.getSelectedRangeLast();\n    const nextRowIndexToSelect = Math.max(to.row - hot.countVisibleRows(), 0);\n    const row = hot.rowIndexMapper.getNearestNotHiddenIndex(nextRowIndexToSelect, 1);\n    if (row !== null) {\n      const coords = hot._createCellCoords(row, to.col);\n      const scrollPadding = to.row - hot.view.getFirstFullyVisibleRow();\n      const nextVerticalScroll = Math.max(coords.row - scrollPadding, 0);\n      hot.selection.setRangeEnd(coords);\n      hot.scrollViewportTo({\n        row: nextVerticalScroll,\n        verticalSnap: 'top',\n        horizontalSnap: 'start'\n      });\n    }\n  }\n};", "import { command as down } from \"./down.mjs\";\nimport { command as downByViewportHeight } from \"./downByViewportHeight.mjs\";\nimport { command as left } from \"./left.mjs\";\nimport { command as right } from \"./right.mjs\";\nimport { command as toColumns } from \"./toColumns.mjs\";\nimport { command as toMostBottom } from \"./toMostBottom.mjs\";\nimport { command as toMostInlineEnd } from \"./toMostInlineEnd.mjs\";\nimport { command as toMostInlineStart } from \"./toMostInlineStart.mjs\";\nimport { command as toMostLeft } from \"./toMostLeft.mjs\";\nimport { command as toMostRight } from \"./toMostRight.mjs\";\nimport { command as toMostTop } from \"./toMostTop.mjs\";\nimport { command as toRows } from \"./toRows.mjs\";\nimport { command as up } from \"./up.mjs\";\nimport { command as upByViewportHeight } from \"./upByViewportHeight.mjs\";\n/**\r\n * Returns complete list of the shortcut commands for the cells selection extending feature.\r\n *\r\n * @returns {Function[]}\r\n */\nexport function getAllCommands() {\n  return [down, downByViewportHeight, left, right, toColumns, toMostBottom, toMostInlineEnd, toMostInlineStart, toMostLeft, toMostRight, toMostTop, toRows, up, upByViewportHeight];\n}", "export const command = {\n  name: 'moveCellSelectionDown',\n  callback(_ref) {\n    let {\n      selection\n    } = _ref;\n    selection.transformStart(1, 0);\n  }\n};", "export const command = {\n  name: 'moveCellSelectionDownByViewportHeight',\n  callback(hot) {\n    const {\n      navigableHeaders\n    } = hot.getSettings();\n    const columnHeadersCount = navigableHeaders ? hot.countColHeaders() : 0;\n    const {\n      row\n    } = hot.getSelectedRangeLast().highlight;\n    let rowsStep = hot.countVisibleRows() + columnHeadersCount;\n\n    // if the last row is currently selected move the focus to the first row (if autoWrap is enabled)\n    if (row === hot.countRows() - 1) {\n      rowsStep = 1;\n\n      // if the next move would move the focus off the table calculate the delta to move the selection to\n      // the last row\n    } else if (row + rowsStep > hot.countRows()) {\n      rowsStep = hot.countRows() - row - 1;\n    }\n    hot.selection.transformStart(rowsStep, 0);\n    if (hot.getSelectedRangeLast().highlight.row < 0) {\n      hot.scrollViewportTo({\n        row: 0\n      });\n    }\n  }\n};", "export const command = {\n  name: 'moveCellSelectionInlineEnd',\n  callback(hot, event) {\n    const settings = hot.getSettings();\n    const selectedRange = hot.getSelectedRangeLast();\n    const tabMoves = typeof settings.tabMoves === 'function' ? settings.tabMoves(event) : settings.tabMoves;\n    if (hot.selection.isMultiple() && !selectedRange.isHeader() && hot.countRenderedCols() > 0 && hot.countRenderedRows() > 0) {\n      hot.selection.transformFocus(-tabMoves.row, -tabMoves.col);\n    } else {\n      hot.selection.transformStart(-tabMoves.row, -tabMoves.col);\n    }\n  }\n};", "export const command = {\n  name: 'moveCellSelectionInlineStart',\n  callback(hot, event) {\n    const settings = hot.getSettings();\n    const selectedRange = hot.getSelectedRangeLast();\n    const tabMoves = typeof settings.tabMoves === 'function' ? settings.tabMoves(event) : settings.tabMoves;\n    if (hot.selection.isMultiple() && !selectedRange.isHeader() && hot.countRenderedCols() > 0 && hot.countRenderedRows() > 0) {\n      hot.selection.transformFocus(tabMoves.row, tabMoves.col);\n    } else {\n      hot.selection.transformStart(tabMoves.row, tabMoves.col);\n    }\n  }\n};", "export const command = {\n  name: 'moveCellSelectionLeft',\n  callback(hot) {\n    hot.selection.transformStart(0, -1 * hot.getDirectionFactor());\n  }\n};", "export const command = {\n  name: 'moveCellSelectionRight',\n  callback(hot) {\n    hot.selection.transformStart(0, hot.getDirectionFactor());\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostBottom',\n  callback(hot) {\n    const {\n      col\n    } = hot.getSelectedRangeLast().highlight;\n    let row = hot.rowIndexMapper.getNearestNotHiddenIndex(hot.countRows() - 1, -1);\n    if (row === null) {\n      row = -1;\n    }\n    hot.selection.setRangeStart(hot._createCellCoords(row, col));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostBottomInlineEnd',\n  callback(hot) {\n    const {\n      selection,\n      rowIndexMapper,\n      columnIndexMapper\n    } = hot;\n    const fixedRows = parseInt(hot.getSettings().fixedRowsBottom, 10);\n    const row = rowIndexMapper.getNearestNotHiddenIndex(hot.countRows() - fixedRows - 1, -1);\n    const column = columnIndexMapper.getNearestNotHiddenIndex(hot.countCols() - 1, -1);\n    selection.setRangeStart(hot._createCellCoords(row, column));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostInlineEnd',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    selection.setRangeStart(hot._createCellCoords(hot.getSelectedRangeLast().highlight.row, columnIndexMapper.getNearestNotHiddenIndex(hot.countCols() - 1, -1)));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostInlineStart',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const fixedColumns = parseInt(hot.getSettings().fixedColumnsStart, 10);\n    const row = hot.getSelectedRangeLast().highlight.row;\n    const column = columnIndexMapper.getNearestNotHiddenIndex(fixedColumns, 1);\n    selection.setRangeStart(hot._createCellCoords(row, column));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostLeft',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const row = hot.getSelectedRangeLast().highlight.row;\n    let column = columnIndexMapper.getNearestNotHiddenIndex(...(hot.isRtl() ? [hot.countCols() - 1, -1] : [0, 1]));\n    if (column === null) {\n      column = hot.isRtl() ? -1 : -hot.countRowHeaders();\n    }\n    selection.setRangeStart(hot._createCellCoords(row, column));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostRight',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      row\n    } = hot.getSelectedRangeLast().highlight;\n    let column = columnIndexMapper.getNearestNotHiddenIndex(...(hot.isRtl() ? [0, 1] : [hot.countCols() - 1, -1]));\n    if (column === null) {\n      column = hot.isRtl() ? -hot.countRowHeaders() : -1;\n    }\n    selection.setRangeStart(hot._createCellCoords(row, column));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostTop',\n  callback(hot) {\n    const {\n      col\n    } = hot.getSelectedRangeLast().highlight;\n    let row = hot.rowIndexMapper.getNearestNotHiddenIndex(0, 1);\n    if (row === null) {\n      row = -hot.countColHeaders();\n    }\n    hot.selection.setRangeStart(hot._createCellCoords(row, col));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionToMostTopInlineStart',\n  callback(hot) {\n    const {\n      selection,\n      rowIndexMapper,\n      columnIndexMapper\n    } = hot;\n    const fixedRows = parseInt(hot.getSettings().fixedRowsTop, 10);\n    const fixedColumns = parseInt(hot.getSettings().fixedColumnsStart, 10);\n    const row = rowIndexMapper.getNearestNotHiddenIndex(fixedRows, 1);\n    const column = columnIndexMapper.getNearestNotHiddenIndex(fixedColumns, 1);\n    selection.setRangeStart(hot._createCellCoords(row, column));\n  }\n};", "export const command = {\n  name: 'moveCellSelectionUp',\n  callback(_ref) {\n    let {\n      selection\n    } = _ref;\n    selection.transformStart(-1, 0);\n  }\n};", "export const command = {\n  name: 'moveCellSelectionUpByViewportHight',\n  callback(hot) {\n    const {\n      navigableHeaders\n    } = hot.getSettings();\n    const columnHeadersCount = navigableHeaders ? hot.countColHeaders() : 0;\n    const {\n      row\n    } = hot.getSelectedRangeLast().highlight;\n    let rowsStep = -(hot.countVisibleRows() + columnHeadersCount);\n\n    // if the first row is currently selected move the focus to the last row (if autoWrap is enabled)\n    if (row === -columnHeadersCount) {\n      rowsStep = -1;\n\n      // if the next move would move the focus off the table calculate the delta to move the selection to\n      // the first row\n    } else if (row + rowsStep < columnHeadersCount) {\n      rowsStep = -(row + columnHeadersCount);\n    }\n    hot.selection.transformStart(rowsStep, 0);\n    if (hot.getSelectedRangeLast().highlight.row < 0) {\n      hot.scrollViewportTo({\n        row: 0\n      });\n    }\n  }\n};", "import { command as down } from \"./down.mjs\";\nimport { command as downByViewportHeight } from \"./downByViewportHeight.mjs\";\nimport { command as inlineEnd } from \"./inlineEnd.mjs\";\nimport { command as inlineStart } from \"./inlineStart.mjs\";\nimport { command as left } from \"./left.mjs\";\nimport { command as right } from \"./right.mjs\";\nimport { command as toMostBottom } from \"./toMostBottom.mjs\";\nimport { command as toMostBottomInlineEnd } from \"./toMostBottomInlineEnd.mjs\";\nimport { command as toMostInlineEnd } from \"./toMostInlineEnd.mjs\";\nimport { command as toMostInlineStart } from \"./toMostInlineStart.mjs\";\nimport { command as toMostLeft } from \"./toMostLeft.mjs\";\nimport { command as toMostRight } from \"./toMostRight.mjs\";\nimport { command as toMostTop } from \"./toMostTop.mjs\";\nimport { command as toMostTopInlineStart } from \"./toMostTopInlineStart.mjs\";\nimport { command as up } from \"./up.mjs\";\nimport { command as upByViewportHeight } from \"./upByViewportHeight.mjs\";\n/**\r\n * Returns complete list of the shortcut commands for the cells moving feature.\r\n *\r\n * @returns {Function[]}\r\n */\nexport function getAllCommands() {\n  return [down, downByViewportHeight, inlineEnd, inlineStart, left, right, toMostBottom, toMostBottomInlineEnd, toMostInlineEnd, toMostInlineStart, toMostLeft, toMostRight, toMostTop, toMostTopInlineStart, up, upByViewportHeight];\n}", "export const command = {\n  name: 'emptySelectedCells',\n  callback(hot) {\n    hot.emptySelectedCells();\n    hot._getEditorManager().prepareEditor();\n  }\n};", "export const command = {\n  name: 'scrollToFocusedCell',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    const firstVisibleRow = hot.view.getFirstFullyVisibleRow() - 1;\n    const firstVisibleColumn = hot.view.getFirstFullyVisibleColumn() - 1;\n    const lastVisibleRow = hot.view.getLastFullyVisibleRow() + 1;\n    const lastVisibleColumn = hot.view.getLastFullyVisibleColumn() + 1;\n    const visibleCoordsFrom = hot._createCellCoords(firstVisibleRow, firstVisibleColumn);\n    const visibleCoordsTo = hot._createCellCoords(lastVisibleRow, lastVisibleColumn);\n    const visibleRange = hot._createCellRange(visibleCoordsFrom, visibleCoordsFrom, visibleCoordsTo);\n    if (!visibleRange.includes(highlight) && (highlight.row >= 0 || highlight.col >= 0)) {\n      const scrollCoords = {};\n      if (highlight.col >= 0) {\n        const offsetColumns = Math.floor(hot.countVisibleCols() / 2);\n        scrollCoords.col = Math.max(highlight.col - offsetColumns, 0);\n      }\n      if (highlight.row >= 0) {\n        const offsetRows = Math.floor(hot.countVisibleRows() / 2);\n        scrollCoords.row = Math.max(highlight.row - offsetRows, 0);\n      }\n      hot.scrollViewportTo({\n        ...scrollCoords,\n        verticalSnap: 'top',\n        horizontalSnap: 'start'\n      });\n    }\n  }\n};", "export const command = {\n  name: 'selectAllCells',\n  callback(hot) {\n    hot.selection.selectAll(true, true, {\n      disableHeadersHighlight: true\n    });\n  }\n};", "export const command = {\n  name: 'selectAllCellsAndHeaders',\n  callback(hot) {\n    hot.selection.selectAll(true, true, {\n      disableHeadersHighlight: false\n    });\n  }\n};", "export const command = {\n  name: 'populateSelectedCellsData',\n  callback(hot) {\n    const selectedRange = hot.getSelectedRange();\n    const {\n      row: highlightRow,\n      col: highlightColumn\n    } = selectedRange[selectedRange.length - 1].highlight.normalize();\n    const valueToPopulate = hot.getDataAtCell(highlightRow, highlightColumn);\n    const cellValues = new Map();\n    for (let i = 0; i < selectedRange.length; i++) {\n      selectedRange[i].forAll((row, column) => {\n        if (row >= 0 && column >= 0 && (row !== highlightRow || column !== highlightColumn)) {\n          const {\n            readOnly\n          } = hot.getCellMeta(row, column);\n          if (!readOnly) {\n            cellValues.set(`${row}x${column}`, [row, column, valueToPopulate]);\n          }\n        }\n      });\n    }\n    hot.setDataAtCell(Array.from(cellValues.values()));\n  }\n};", "import { getAllCommands as getAllEditorCommands } from \"./editor/index.mjs\";\nimport { getAllCommands as getAllSelectionExtendCommands } from \"./extendCellsSelection/index.mjs\";\nimport { getAllCommands as getAllSelectionMoveCommands } from \"./moveCellSelection/index.mjs\";\nimport { command as emptySelectedCells } from \"./emptySelectedCells.mjs\";\nimport { command as scrollToFocusedCell } from \"./scrollToFocusedCell.mjs\";\nimport { command as selectAllCells } from \"./selectAllCells.mjs\";\nimport { command as selectAllCellsAndHeaders } from \"./selectAllCellsAndHeaders.mjs\";\nimport { command as populateSelectedCellsData } from \"./populateSelectedCellsData.mjs\";\nconst allCommands = [...getAllEditorCommands(), ...getAllSelectionExtendCommands(), ...getAllSelectionMoveCommands(), emptySelectedCells, scrollToFocusedCell, selectAllCells, selectAllCellsAndHeaders, populateSelectedCellsData];\n\n/**\r\n * Prepares and creates an object with all available commands to trigger.\r\n *\r\n * @param {Handsontable} hot The Handsontable instance.\r\n * @returns {object}\r\n */\nexport function createKeyboardShortcutCommandsPool(hot) {\n  const commands = {};\n  allCommands.forEach(_ref => {\n    let {\n      name,\n      callback\n    } = _ref;\n    commands[name] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return callback(hot, ...args);\n    };\n  });\n  return commands;\n}", "import { EDITOR_EDIT_GROUP } from \"./constants.mjs\";\nimport { createKeyboardShortcutCommandsPool } from \"./commands/index.mjs\";\n/**\r\n * The context that defines a base shortcut list available for cells editors.\r\n *\r\n * @param {Handsontable} hot The Handsontable instance.\r\n */\nexport function shortcutsEditorContext(hot) {\n  const context = hot.getShortcutManager().addContext('editor');\n  const commandsPool = createKeyboardShortcutCommandsPool(hot);\n  const config = {\n    group: EDITOR_EDIT_GROUP\n  };\n  context.addShortcuts([{\n    keys: [['Enter'], ['Enter', 'Shift']],\n    callback: (event, keys) => commandsPool.editorCloseAndSaveByEnter(event, keys)\n  }, {\n    keys: [['Enter', 'Control/Meta'], ['Enter', 'Control/Meta', 'Shift']],\n    captureCtrl: true,\n    callback: (event, keys) => commandsPool.editorCloseAndSaveByEnter(event, keys)\n  }, {\n    keys: [['Tab'], ['Tab', 'Shift'], ['PageDown'], ['PageUp']],\n    forwardToContext: hot.getShortcutManager().getContext('grid'),\n    callback: (event, keys) => commandsPool.editorCloseAndSave(event, keys)\n  }, {\n    keys: [['ArrowDown'], ['ArrowUp'], ['ArrowLeft'], ['ArrowRight']],\n    preventDefault: false,\n    callback: (event, keys) => commandsPool.editorCloseAndSaveByArrowKeys(event, keys)\n  }, {\n    keys: [['Escape'], ['Escape', 'Control/Meta']],\n    callback: () => commandsPool.editorCloseWithoutSaving()\n  }], config);\n}", "import { isDefined } from \"../helpers/mixed.mjs\";\nimport { GRID_GROUP, EDITOR_EDIT_GROUP } from \"./constants.mjs\";\nimport { createKeyboardShortcutCommandsPool } from \"./commands/index.mjs\";\n/**\r\n * The context that defines shortcut list available for selected cell or cells.\r\n *\r\n * @param {Handsontable} hot The Handsontable instance.\r\n */\nexport function shortcutsGridContext(hot) {\n  const context = hot.getShortcutManager().addContext('grid');\n  const commandsPool = createKeyboardShortcutCommandsPool(hot);\n  const config = {\n    runOnlyIf: () => {\n      const {\n        navigableHeaders\n      } = hot.getSettings();\n      return isDefined(hot.getSelected()) && (navigableHeaders || !navigableHeaders && hot.countRenderedRows() > 0 && hot.countRenderedCols() > 0);\n    },\n    group: GRID_GROUP\n  };\n  context.addShortcuts([{\n    keys: [['F2']],\n    callback: event => commandsPool.editorFastOpen(event)\n  }, {\n    keys: [['Enter'], ['Enter', 'Shift']],\n    callback: (event, keys) => commandsPool.editorOpen(event, keys)\n  }, {\n    keys: [['Backspace'], ['Delete']],\n    callback: () => commandsPool.emptySelectedCells()\n  }], {\n    group: EDITOR_EDIT_GROUP,\n    runOnlyIf: () => isDefined(hot.getSelected())\n  });\n  context.addShortcuts([{\n    keys: [['Control/Meta', 'A']],\n    callback: () => commandsPool.selectAllCells(),\n    runOnlyIf: () => !hot.getSelectedRangeLast().highlight.isHeader()\n  }, {\n    keys: [['Control/Meta', 'A']],\n    callback: () => {},\n    runOnlyIf: () => hot.getSelectedRangeLast().highlight.isHeader(),\n    preventDefault: true\n  }, {\n    keys: [['Control/Meta', 'Shift', 'Space']],\n    callback: () => commandsPool.selectAllCellsAndHeaders()\n  }, {\n    keys: [['Control/Meta', 'Enter']],\n    callback: () => commandsPool.populateSelectedCellsData(),\n    runOnlyIf: () => {\n      return !hot.getSelectedRangeLast().highlight.isHeader() && hot.getSelectedRangeLast().getCellsCount() > 1;\n    }\n  }, {\n    keys: [['Control', 'Space']],\n    captureCtrl: true,\n    callback: () => commandsPool.extendCellsSelectionToColumns()\n  }, {\n    keys: [['Shift', 'Space']],\n    stopPropagation: true,\n    callback: () => commandsPool.extendCellsSelectionToRows()\n  }, {\n    keys: [['ArrowUp']],\n    callback: () => commandsPool.moveCellSelectionUp()\n  }, {\n    keys: [['ArrowUp', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostTop()\n  }, {\n    keys: [['ArrowUp', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionUp()\n  }, {\n    keys: [['ArrowUp', 'Shift', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.extendCellsSelectionToMostTop(),\n    runOnlyIf: () => !(hot.selection.isSelectedByCorner() || hot.selection.isSelectedByColumnHeader())\n  }, {\n    keys: [['ArrowDown']],\n    callback: () => commandsPool.moveCellSelectionDown()\n  }, {\n    keys: [['ArrowDown', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostBottom()\n  }, {\n    keys: [['ArrowDown', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionDown()\n  }, {\n    keys: [['ArrowDown', 'Shift', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.extendCellsSelectionToMostBottom(),\n    runOnlyIf: () => !(hot.selection.isSelectedByCorner() || hot.selection.isSelectedByColumnHeader())\n  }, {\n    keys: [['ArrowLeft']],\n    callback: () => commandsPool.moveCellSelectionLeft()\n  }, {\n    keys: [['ArrowLeft', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostLeft()\n  }, {\n    keys: [['ArrowLeft', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionLeft()\n  }, {\n    keys: [['ArrowLeft', 'Shift', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.extendCellsSelectionToMostLeft(),\n    runOnlyIf: () => !(hot.selection.isSelectedByCorner() || hot.selection.isSelectedByRowHeader())\n  }, {\n    keys: [['ArrowRight']],\n    callback: () => commandsPool.moveCellSelectionRight()\n  }, {\n    keys: [['ArrowRight', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostRight()\n  }, {\n    keys: [['ArrowRight', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionRight()\n  }, {\n    keys: [['ArrowRight', 'Shift', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.extendCellsSelectionToMostRight(),\n    runOnlyIf: () => !(hot.selection.isSelectedByCorner() || hot.selection.isSelectedByRowHeader())\n  }, {\n    keys: [['Home']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostInlineStart(),\n    runOnlyIf: () => hot.view.isMainTableNotFullyCoveredByOverlays()\n  }, {\n    keys: [['Home', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionToMostInlineStart()\n  }, {\n    keys: [['Home', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostTopInlineStart(),\n    runOnlyIf: () => hot.view.isMainTableNotFullyCoveredByOverlays()\n  }, {\n    keys: [['End']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostInlineEnd(),\n    runOnlyIf: () => hot.view.isMainTableNotFullyCoveredByOverlays()\n  }, {\n    keys: [['End', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionToMostInlineEnd()\n  }, {\n    keys: [['End', 'Control/Meta']],\n    captureCtrl: true,\n    callback: () => commandsPool.moveCellSelectionToMostBottomInlineEnd(),\n    runOnlyIf: () => hot.view.isMainTableNotFullyCoveredByOverlays()\n  }, {\n    keys: [['PageUp']],\n    callback: () => commandsPool.moveCellSelectionUpByViewportHight()\n  }, {\n    keys: [['PageUp', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionUpByViewportHeight()\n  }, {\n    keys: [['PageDown']],\n    callback: () => commandsPool.moveCellSelectionDownByViewportHeight()\n  }, {\n    keys: [['PageDown', 'Shift']],\n    callback: () => commandsPool.extendCellsSelectionDownByViewportHeight()\n  }, {\n    keys: [['Tab']],\n    // The property value is controlled by focusCatcher module (https://github.com/handsontable/handsontable/blob/master/handsontable/src/core/focusCatcher/index.js)\n    preventDefault: false,\n    callback: event => commandsPool.moveCellSelectionInlineStart(event)\n  }, {\n    keys: [['Shift', 'Tab']],\n    // The property value is controlled by focusCatcher module (https://github.com/handsontable/handsontable/blob/master/handsontable/src/core/focusCatcher/index.js)\n    preventDefault: false,\n    callback: event => commandsPool.moveCellSelectionInlineEnd(event)\n  }, {\n    keys: [['Control/Meta', 'Backspace']],\n    callback: () => commandsPool.scrollToFocusedCell()\n  }], config);\n}", "import { shortcutsEditorContext } from \"./editor.mjs\";\nimport { shortcutsGridContext } from \"./grid.mjs\";\nexport * from \"./constants.mjs\";\n/**\r\n * Register all shortcut contexts.\r\n *\r\n * @param {Handsontable} hotInstance The Handsontable instance.\r\n */\nexport function registerAllShortcutContexts(hotInstance) {\n  [shortcutsGridContext, shortcutsEditorContext].forEach(context => context(hotInstance));\n}", "import { setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { A11Y_PRESENTATION, A11Y_HIDDEN } from \"../../helpers/a11y.mjs\";\n/**\r\n * Installs a focus detector module. The module appends two input elements into the DOM side by side.\r\n * When the first input is focused, then it means that a user entered to the component using the TAB key\r\n * from the element above. When the second input is focused, a user enters to the component from\r\n * the element below the table. Each action, once detected, triggers the specific hook.\r\n *\r\n * @param {Handsontable} hot The Handsontable instance.\r\n * @param {{ onFocusFromTop: Function, onFocusFromBottom: Function }} hooks An object with defined callbacks to call.\r\n * @returns {{ activate: Function, deactivate: Function }}\r\n */\nexport function installFocusDetector(hot) {\n  let hooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const rootElement = hot.rootElement;\n  const inputTrapTop = createInputElement(hot);\n  const inputTrapBottom = createInputElement(hot);\n  inputTrapTop.addEventListener('focus', () => hooks === null || hooks === void 0 ? void 0 : hooks.onFocusFromTop());\n  inputTrapBottom.addEventListener('focus', () => hooks === null || hooks === void 0 ? void 0 : hooks.onFocusFromBottom());\n  rootElement.firstChild.before(inputTrapTop);\n  rootElement.lastChild.after(inputTrapBottom);\n  return {\n    /**\r\n     * Activates the detector by resetting the tabIndex of the input elements.\r\n     */\n    activate() {\n      hot._registerTimeout(() => {\n        inputTrapTop.tabIndex = 0;\n        inputTrapBottom.tabIndex = 0;\n      }, 10);\n    },\n    /**\r\n     * Deactivates the detector by setting tabIndex to -1.\r\n     */\n    deactivate() {\n      hot._registerTimeout(() => {\n        inputTrapTop.tabIndex = -1;\n        inputTrapBottom.tabIndex = -1;\n      }, 10);\n    }\n  };\n}\n\n/**\r\n * Creates a new HTML input element.\r\n *\r\n * @param {Handsontable} hot The Handsontable instance.\r\n * @returns {HTMLInputElement}\r\n */\nfunction createInputElement(hot) {\n  const rootDocument = hot.rootDocument;\n  const input = rootDocument.createElement('input');\n  input.type = 'text';\n  input.classList.add('htFocusCatcher');\n  if (hot.getSettings().ariaTags) {\n    setAttribute(input, [A11Y_PRESENTATION(), A11Y_HIDDEN()]);\n  }\n  return input;\n}", "import { GRID_GROUP } from \"../../shortcutContexts/index.mjs\";\nimport { installFocusDetector } from \"./focusDetector.mjs\";\n/**\r\n * Installs a focus catcher module. The module observes when the table is focused and depending on\r\n * from the which side it was focused on it selects a specified cell or releases the TAB navigation\r\n * to the browser.\r\n *\r\n * @param {Core} hot The Handsontable instance.\r\n */\nexport function installFocusCatcher(hot) {\n  const clampCoordsIfNeeded = normalizeCoordsIfNeeded(hot);\n  let recentlyAddedFocusCoords;\n  const {\n    activate,\n    deactivate\n  } = installFocusDetector(hot, {\n    onFocusFromTop() {\n      var _clampCoordsIfNeeded;\n      const mostTopStartCoords = (_clampCoordsIfNeeded = clampCoordsIfNeeded(recentlyAddedFocusCoords)) !== null && _clampCoordsIfNeeded !== void 0 ? _clampCoordsIfNeeded : getMostTopStartPosition(hot);\n      if (mostTopStartCoords) {\n        hot.runHooks('modifyFocusOnTabNavigation', 'from_above', mostTopStartCoords);\n        hot.selectCell(mostTopStartCoords.row, mostTopStartCoords.col);\n      }\n      hot.listen();\n    },\n    onFocusFromBottom() {\n      var _clampCoordsIfNeeded2;\n      const mostBottomEndCoords = (_clampCoordsIfNeeded2 = clampCoordsIfNeeded(recentlyAddedFocusCoords)) !== null && _clampCoordsIfNeeded2 !== void 0 ? _clampCoordsIfNeeded2 : getMostBottomEndPosition(hot);\n      if (mostBottomEndCoords) {\n        hot.runHooks('modifyFocusOnTabNavigation', 'from_below', mostBottomEndCoords);\n        hot.selectCell(mostBottomEndCoords.row, mostBottomEndCoords.col);\n      }\n      hot.listen();\n    }\n  });\n  const rowWrapState = {\n    wrapped: false,\n    flipped: false\n  };\n  let isSavingCoordsEnabled = true;\n  let isTabOrShiftTabPressed = false;\n  let preventViewportScroll = false;\n  hot.addHook('afterListen', () => deactivate());\n  hot.addHook('afterUnlisten', () => activate());\n  hot.addHook('afterSelection', (row, column, row2, column2, preventScrolling) => {\n    if (isTabOrShiftTabPressed && (rowWrapState.wrapped && rowWrapState.flipped || preventViewportScroll)) {\n      preventViewportScroll = false;\n      preventScrolling.value = true;\n    }\n    if (isSavingCoordsEnabled) {\n      var _hot$getSelectedRange;\n      recentlyAddedFocusCoords = (_hot$getSelectedRange = hot.getSelectedRangeLast()) === null || _hot$getSelectedRange === void 0 ? void 0 : _hot$getSelectedRange.highlight;\n    }\n  });\n  hot.addHook('beforeRowWrap', (interruptedByAutoInsertMode, newCoords, isFlipped) => {\n    rowWrapState.wrapped = true;\n    rowWrapState.flipped = isFlipped;\n  });\n\n  /**\r\n   * Unselects the cell and deactivates the table.\r\n   */\n  function deactivateTable() {\n    rowWrapState.wrapped = false;\n    rowWrapState.flipped = false;\n    hot.deselectCell();\n    hot.unlisten();\n  }\n  const shortcutOptions = {\n    keys: [['Tab'], ['Shift', 'Tab']],\n    preventDefault: false,\n    stopPropagation: false,\n    relativeToGroup: GRID_GROUP,\n    group: 'focusCatcher'\n  };\n  hot.getShortcutManager().getContext('grid').addShortcuts([{\n    ...shortcutOptions,\n    callback: () => {\n      const {\n        tabNavigation\n      } = hot.getSettings();\n      isTabOrShiftTabPressed = true;\n      if (hot.getSelectedRangeLast() && !tabNavigation) {\n        isSavingCoordsEnabled = false;\n      }\n      if (!tabNavigation) {\n        preventViewportScroll = true;\n      }\n    },\n    position: 'before'\n  }, {\n    ...shortcutOptions,\n    callback: event => {\n      const {\n        tabNavigation,\n        autoWrapRow\n      } = hot.getSettings();\n      isTabOrShiftTabPressed = false;\n      isSavingCoordsEnabled = true;\n      if (!tabNavigation || !hot.selection.isSelected() || autoWrapRow && rowWrapState.wrapped && rowWrapState.flipped || !autoWrapRow && rowWrapState.wrapped) {\n        if (autoWrapRow && rowWrapState.wrapped && rowWrapState.flipped) {\n          recentlyAddedFocusCoords = event.shiftKey ? getMostTopStartPosition(hot) : getMostBottomEndPosition(hot);\n        }\n        deactivateTable();\n        return false;\n      }\n\n      // if the selection is still within the table's range then prevent default action\n      event.preventDefault();\n    },\n    position: 'after'\n  }]);\n}\n\n/**\r\n * Gets the coordinates of the most top-start cell or header (depends on the table settings and its size).\r\n *\r\n * @param {Core} hot The Handsontable instance.\r\n * @returns {CellCoords|null}\r\n */\nfunction getMostTopStartPosition(hot) {\n  const {\n    rowIndexMapper,\n    columnIndexMapper\n  } = hot;\n  const {\n    navigableHeaders\n  } = hot.getSettings();\n  let topRow = navigableHeaders && hot.countColHeaders() > 0 ? -hot.countColHeaders() : 0;\n  let startColumn = navigableHeaders && hot.countRowHeaders() > 0 ? -hot.countRowHeaders() : 0;\n  if (topRow === 0) {\n    topRow = rowIndexMapper.getVisualFromRenderableIndex(topRow);\n  }\n  if (startColumn === 0) {\n    startColumn = columnIndexMapper.getVisualFromRenderableIndex(startColumn);\n  }\n  if (topRow === null || startColumn === null) {\n    return null;\n  }\n  return hot._createCellCoords(topRow, startColumn);\n}\n\n/**\r\n * Gets the coordinates of the most bottom-end cell or header (depends on the table settings and its size).\r\n *\r\n * @param {Core} hot The Handsontable instance.\r\n * @returns {CellCoords|null}\r\n */\nfunction getMostBottomEndPosition(hot) {\n  var _rowIndexMapper$getVi, _columnIndexMapper$ge;\n  const {\n    rowIndexMapper,\n    columnIndexMapper\n  } = hot;\n  const {\n    navigableHeaders\n  } = hot.getSettings();\n  let bottomRow = rowIndexMapper.getRenderableIndexesLength() - 1;\n  let endColumn = columnIndexMapper.getRenderableIndexesLength() - 1;\n  if (bottomRow < 0) {\n    if (!navigableHeaders || hot.countColHeaders() === 0) {\n      return null;\n    }\n    bottomRow = -1;\n  }\n  if (endColumn < 0) {\n    if (!navigableHeaders || hot.countColHeaders() === 0) {\n      return null;\n    }\n    endColumn = -1;\n  }\n  return hot._createCellCoords((_rowIndexMapper$getVi = rowIndexMapper.getVisualFromRenderableIndex(bottomRow)) !== null && _rowIndexMapper$getVi !== void 0 ? _rowIndexMapper$getVi : bottomRow, (_columnIndexMapper$ge = columnIndexMapper.getVisualFromRenderableIndex(endColumn)) !== null && _columnIndexMapper$ge !== void 0 ? _columnIndexMapper$ge : endColumn);\n}\n\n/**\r\n * Normalizes the coordinates (clamps to nearest visible cell position within dataset range).\r\n *\r\n * @param {Core} hot The Handsontable instance.\r\n * @returns {function(Coords | undefined): Coords | null}\r\n */\nfunction normalizeCoordsIfNeeded(hot) {\n  return coords => {\n    if (!coords) {\n      return null;\n    }\n    const mostTopStartCoords = getMostTopStartPosition(hot);\n    const mostBottomEndCoords = getMostBottomEndPosition(hot);\n    if (coords.col < mostTopStartCoords.col) {\n      coords.col = mostTopStartCoords.col;\n    }\n    if (coords.col > mostBottomEndCoords.col) {\n      coords.col = mostBottomEndCoords.col;\n    }\n    if (coords.row < mostTopStartCoords.row) {\n      coords.row = mostTopStartCoords.row;\n    }\n    if (coords.row > mostBottomEndCoords.row) {\n      coords.row = mostBottomEndCoords.row;\n    }\n    return coords;\n  };\n}", "/**\r\n * Scroll strategy for column header selection.\r\n *\r\n * @param {Core} hot Handsontable instance.\r\n * @returns {function(): function(CellCoords): void}\r\n */\nexport function columnHeaderScrollStrategy(hot) {\n  return _ref => {\n    let {\n      col\n    } = _ref;\n    hot.scrollViewportTo({\n      col\n    });\n  };\n}", "/**\r\n * Scroll strategy for corner header selection.\r\n *\r\n * @returns {function(): function(CellCoords): void}\r\n */\nexport function cornerHeaderScrollStrategy() {\n  return () => {\n    // do not scroll the viewport when the corner is clicked\n  };\n}", "/**\r\n * Scroll strategy for changed the focus position of the selection.\r\n *\r\n * @param {Core} hot Handsontable instance.\r\n * @returns {function(): function(CellCoords): void}\r\n */\nexport function focusScrollStrategy(hot) {\n  return cellCoords => {\n    hot.scrollViewportTo(cellCoords.toObject());\n  };\n}", "/**\r\n * Scroll strategy for multiple selections.\r\n *\r\n * @param {Core} hot Handsontable instance.\r\n * @returns {function(): function(CellCoords): void}\r\n */\nexport function multipleScrollStrategy(hot) {\n  return cellCoords => {\n    hot.scrollViewportTo(cellCoords.toObject());\n  };\n}", "/**\r\n * Scroll strategy for non-contiguous selections.\r\n *\r\n * @param {Core} hot Handsontable instance.\r\n * @returns {function(): function(CellCoords): void}\r\n */\nexport function noncontiguousScrollStrategy(hot) {\n  return cellCoords => {\n    hot.scrollViewportTo(cellCoords.toObject());\n  };\n}", "/**\r\n * Scroll strategy for row header selection.\r\n *\r\n * @param {Core} hot Handsontable instance.\r\n * @returns {function(): function(CellCoords): void}\r\n */\nexport function rowHeaderScrollStrategy(hot) {\n  return _ref => {\n    let {\n      row\n    } = _ref;\n    hot.scrollViewportTo({\n      row\n    });\n  };\n}", "/**\r\n * Scroll strategy for single cell selection.\r\n *\r\n * @param {Core} hot Handsontable instance.\r\n * @returns {function(): function(CellCoords): { row: number, col: number } | void }\r\n */\nexport function singleScrollStrategy(hot) {\n  return cellCoords => {\n    const selectionSource = hot.selection.getSelectionSource();\n    const {\n      row,\n      col\n    } = cellCoords;\n\n    // navigating through the column headers (when `navigableHeaders` is enabled)\n    // scrolls the viewport horizontally only\n    if (row < 0 && col >= 0) {\n      hot.scrollViewportTo({\n        col\n      });\n\n      // navigating through the row headers (when `navigableHeaders` is enabled)\n      // scrolls the viewport vertically only\n    } else if (col < 0 && row >= 0) {\n      hot.scrollViewportTo({\n        row\n      });\n\n      // navigating through the cells\n    } else {\n      if (selectionSource === 'mouse') {\n        if (col === hot.view.getLastPartiallyVisibleColumn() || row === hot.view.getLastPartiallyVisibleRow()) {\n          return;\n        }\n      }\n      hot.scrollViewportTo({\n        row,\n        col\n      });\n    }\n  };\n}", "import { columnHeaderScrollStrategy } from \"./scrollStrategies/columnHeaderScroll.mjs\";\nimport { cornerHeaderScrollStrategy } from \"./scrollStrategies/cornerHeaderScroll.mjs\";\nimport { focusScrollStrategy } from \"./scrollStrategies/focusScroll.mjs\";\nimport { multipleScrollStrategy } from \"./scrollStrategies/multipleScroll.mjs\";\nimport { noncontiguousScrollStrategy } from \"./scrollStrategies/noncontiguousScroll.mjs\";\nimport { rowHeaderScrollStrategy } from \"./scrollStrategies/rowHeaderScroll.mjs\";\nimport { singleScrollStrategy } from \"./scrollStrategies/singleScroll.mjs\";\n/**\r\n * @typedef ViewportScroller\r\n * @property {function(): void} resume Resumes the viewport scroller.\r\n * @property {function(): void} suspend Suspends the viewport scroller until the `resume` method is called.\r\n * @property {function(): void} skipNextScrollCycle Skip the next scroll cycle.\r\n * @property {function(CellCoords): void} scrollTo Scroll the viewport to a given cell.\r\n */\n/**\r\n * Installs a viewport scroller module. The module is responsible for scrolling the viewport to a given cell\r\n * based on the selection type (single cell selection, multiple cells selection, header selection etc.).\r\n * It's triggered by the selection module via the `afterSetRangeEnd` hook every time the selection changes.\r\n *\r\n * @param {Core} hot The Handsontable instance.\r\n * @returns {ViewportScroller} The viewport scroller module.\r\n */\nexport function createViewportScroller(hot) {\n  const {\n    selection\n  } = hot;\n  let skipNextCall = false;\n  let isSuspended = false;\n  return {\n    resume() {\n      isSuspended = false;\n    },\n    suspend() {\n      isSuspended = true;\n    },\n    skipNextScrollCycle() {\n      skipNextCall = true;\n    },\n    scrollTo(cellCoords) {\n      var _scrollStrategy;\n      if (skipNextCall || isSuspended) {\n        skipNextCall = false;\n        return;\n      }\n      let scrollStrategy;\n      if (selection.isFocusSelectionChanged()) {\n        scrollStrategy = focusScrollStrategy(hot);\n      } else if (selection.isSelectedByCorner()) {\n        scrollStrategy = cornerHeaderScrollStrategy(hot);\n      } else if (selection.isSelectedByRowHeader()) {\n        scrollStrategy = rowHeaderScrollStrategy(hot);\n      } else if (selection.isSelectedByColumnHeader()) {\n        scrollStrategy = columnHeaderScrollStrategy(hot);\n      } else if (selection.getSelectedRange().size() === 1 && selection.isMultiple()) {\n        scrollStrategy = multipleScrollStrategy(hot);\n      } else if (selection.getSelectedRange().size() === 1 && !selection.isMultiple()) {\n        scrollStrategy = singleScrollStrategy(hot);\n      } else if (selection.getSelectedRange().size() > 1) {\n        scrollStrategy = noncontiguousScrollStrategy(hot);\n      }\n      (_scrollStrategy = scrollStrategy) === null || _scrollStrategy === void 0 || _scrollStrategy(cellCoords);\n    }\n  };\n}", "// This file handles key-name discrepancies between browsers.\n// For the list of discrepancies, go to: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values.\nconst mappings = new Map([[' ', 'space'],\n// custom mapping\n['spacebar', 'space'], ['scroll', 'scrolllock'], ['del', 'delete'], ['esc', 'escape'], ['medianexttrack', 'mediatracknext'], ['mediaprevioustrack', 'mediatrackprevious'], ['volumeup', 'audiovolumeup'], ['volumedown', 'audiovolumedown'], ['volumemute', 'audiovolumemute'], ['multiply', '*'], ['add', '+'], ['divide', '/'], ['subtract', '-'], ['left', 'arrowleft'], ['right', 'arrowright'], ['up', 'arrowup'], ['down', 'arrowdown']]);\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\r\n * Get a single, normalized string from the list of the `KeyboardEvent.key` properties.\r\n *\r\n * @param {Array<string>} keys The list of the `KeyboardEvent.key` properties\r\n * @returns {string}\r\n */\nexport const normalizeKeys = keys => {\n  return keys.map(key => {\n    const lowercaseKey = key.toLowerCase();\n    if (mappings.has(lowercaseKey)) {\n      return mappings.get(lowercaseKey);\n    }\n    return lowercaseKey;\n  }).sort().join('+');\n};\n\n/**\r\n * Get the list of the `KeyboardEvent.key` properties from a single, normalized string.\r\n *\r\n * @param {string} normalizedKeys A single, normalized string that contains the list of the `KeyboardEvent.key` properties\r\n * @returns {Array<string>}\r\n */\nexport const getKeysList = normalizedKeys => {\n  return normalizedKeys.split('+');\n};\nconst specialCharactersSet = new Map([[186, 'semicolon'], [187, 'equal'], [188, 'comma'], [189, 'minus'], [190, 'period'], [191, 'slash'], [192, 'backquote'], [219, 'bracketleft'], [220, 'backslash'], [221, 'bracketright'], [222, 'quote']]);\n\n/**\r\n * Normalizes a keyboard event key value to a key before its modification.\r\n *\r\n * Keep in mind that there is difference between `key` and `code` properties of the KeyboardEvent object.\r\n * The `key` property represents the logical key on the keyboard (after applying modifiers and taking\r\n * the keyboard layout into account), where the `code` property represents the physical key\r\n * (regardless of what is printed on the key). Using the `keyCode` for alphanumeric keys,\r\n * solves the problem and allows to get the correct key value. The value that takes the keyboard layout\r\n * into account but is not modified by the modifiers (e.g. Alt + L would give polish \"ł\" we want \"l\").\r\n *\r\n * @param {Event} event The KeyboardEvent object.\r\n * @returns {string}\r\n */\nexport const normalizeEventKey = _ref => {\n  let {\n    which,\n    key\n  } = _ref;\n  if (specialCharactersSet.has(which)) {\n    return specialCharactersSet.get(which);\n  }\n  const normalizedKey = String.fromCharCode(which).toLowerCase();\n  if (/^[a-z0-9]$/.test(normalizedKey)) {\n    return normalizedKey;\n  }\n  return key.toLowerCase();\n};", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { createUniqueMap } from \"../utils/dataStructures/uniqueMap.mjs\";\nimport { normalizeKeys, getKeysList } from \"./utils.mjs\";\nimport { isUndefined, isDefined } from \"../helpers/mixed.mjs\";\nimport { isFunction } from \"../helpers/function.mjs\";\nimport { objectEach, isObject } from \"../helpers/object.mjs\";\nimport { toSingleLine } from \"../helpers/templateLiteralTag.mjs\";\nconst __kindOf = Symbol('shortcut-context');\n\n/**\r\n * Checks if the provided object is a context object.\r\n *\r\n * @param {*} objectToCheck An object to check.\r\n * @returns {boolean}\r\n */\nexport function isContextObject(objectToCheck) {\n  return isObject(objectToCheck) && objectToCheck.__kindOf === __kindOf;\n}\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * The `ShortcutContext` API lets you store and manage [keyboard shortcuts](@/guides/navigation/keyboard-shortcuts/keyboard-shortcuts.md) in a given [context](@/guides/navigation/keyboard-shortcuts/keyboard-shortcuts.md#keyboard-shortcut-contexts).\r\n *\r\n * Each `ShortcutContext` object stores and manages its own set of keyboard shortcuts.\r\n *\r\n * @alias ShortcutContext\r\n * @class ShortcutContext\r\n * @param {string} name The name of the keyboard shortcut context\r\n * @returns {object}\r\n */\nexport const createContext = name => {\n  const SHORTCUTS = createUniqueMap({\n    errorIdExists: keys => `The \"${keys}\" shortcut is already registered in the \"${name}\" context.`\n  });\n\n  /**\r\n   * Add a keyboard shortcut to this context.\r\n   *\r\n   * @memberof ShortcutContext#\r\n   * @param {object} options The shortcut's options\r\n   * @param {Array<Array<string>>} options.keys Names of the shortcut's keys,\r\n   * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n   * in lowercase or uppercase, unified across browsers\r\n   * @param {Function} options.callback The shortcut's action\r\n   * @param {object} options.group A group of shortcuts to which the shortcut belongs\r\n   * @param {object} [options.runOnlyIf] A condition on which the shortcut's action runs\r\n   * @param {object} [options.stopPropagation=false] If set to `true`: stops the event's propagation\r\n   * @param {object} [options.captureCtrl=false] If set to `true`: captures the state of the Control/Meta modifier key\r\n   * @param {object} [options.preventDefault=true] If set to `true`: prevents the default behavior\r\n   * @param {object} [options.position='after'] The order in which the shortcut's action runs:\r\n   * `'before'` or `'after'` the `relativeToGroup` group of actions\r\n   * @param {object} [options.relativeToGroup] The name of a group of actions, used to determine an action's `position`\r\n   * @param {object} [options.forwardToContext] The context object where the event will be forwarded to.\r\n   */\n  const addShortcut = function () {\n    let {\n      keys,\n      callback,\n      group,\n      runOnlyIf = () => true,\n      captureCtrl = false,\n      preventDefault = true,\n      stopPropagation = false,\n      relativeToGroup,\n      position,\n      forwardToContext\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (isUndefined(group)) {\n      throw new Error('You need to define the shortcut\\'s group.');\n    }\n    if (isFunction(callback) === false) {\n      throw new Error('The shortcut\\'s callback needs to be a function.');\n    }\n    if (Array.isArray(keys) === false) {\n      throw new Error(toSingleLine`Pass the shortcut\\'s keys as an array of arrays,\\x20\n      using the KeyboardEvent.key properties:\\x20\n      https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values.`);\n    }\n    const newShortcut = {\n      callback,\n      group,\n      runOnlyIf,\n      captureCtrl,\n      preventDefault,\n      stopPropagation\n    };\n    if (isDefined(relativeToGroup)) {\n      newShortcut.relativeToGroup = relativeToGroup;\n      newShortcut.position = position;\n    }\n    if (isContextObject(forwardToContext)) {\n      newShortcut.forwardToContext = forwardToContext;\n    }\n    keys.forEach(keyCombination => {\n      const normalizedKeys = normalizeKeys(keyCombination);\n      const hasKeyCombination = SHORTCUTS.hasItem(normalizedKeys);\n      if (hasKeyCombination) {\n        const shortcuts = SHORTCUTS.getItem(normalizedKeys);\n        let insertionIndex = shortcuts.findIndex(shortcut => shortcut.group === relativeToGroup);\n        if (insertionIndex !== -1) {\n          if (position === 'before') {\n            insertionIndex -= 1;\n          } else {\n            insertionIndex += 1;\n          }\n        } else {\n          insertionIndex = shortcuts.length;\n        }\n        shortcuts.splice(insertionIndex, 0, newShortcut);\n      } else {\n        SHORTCUTS.addItem(normalizedKeys, [newShortcut]);\n      }\n    });\n  };\n\n  /**\r\n   * Add multiple keyboard shortcuts to this context.\r\n   *\r\n   * @memberof ShortcutContext#\r\n   * @param {Array<object>} shortcuts List of shortcuts to add to this shortcut context\r\n   * @param {object} [options] A shortcut's options\r\n   * @param {Function} [options.callback] A shortcut's action\r\n   * @param {object} [options.group] A group of shortcuts to which a shortcut belongs\r\n   * @param {object} [options.runOnlyIf] A condition on which a shortcut's action runs\r\n   * @param {object} [options.stopPropagation=false] If set to `true`: stops the event's propagation\r\n   * @param {object} [options.preventDefault=true] If set to `true`: prevents the default behavior\r\n   * @param {object} [options.position='after'] The order in which a shortcut's action runs:\r\n   * `'before'` or `'after'` a `relativeToGroup` group of actions\r\n   * @param {object} [options.relativeToGroup] The name of a group of actions, used to determine an action's `position`\r\n   * @param {object} [options.forwardToContext] The context object where the event will be forwarded to.\r\n   */\n  const addShortcuts = function (shortcuts) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    shortcuts.forEach(shortcut => {\n      objectEach(options, (value, key) => {\n        if (Object.prototype.hasOwnProperty.call(shortcut, key) === false) {\n          shortcut[key] = options[key];\n        }\n      });\n      addShortcut(shortcut);\n    });\n  };\n\n  /**\r\n   * Remove a shortcut from this context.\r\n   *\r\n   * @memberof ShortcutContext#\r\n   * @param {Array<string>} keys Names of the shortcut's keys,\r\n   * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n   * in lowercase or uppercase, unified across browsers\r\n   */\n  const removeShortcutsByKeys = keys => {\n    const normalizedKeys = normalizeKeys(keys);\n    SHORTCUTS.removeItem(normalizedKeys);\n  };\n\n  /**\r\n   * Remove a group of shortcuts from this context.\r\n   *\r\n   * @memberof ShortcutContext#\r\n   * @param {string} group The name of the group of shortcuts\r\n   */\n  const removeShortcutsByGroup = group => {\n    const shortcuts = SHORTCUTS.getItems();\n    shortcuts.forEach(_ref => {\n      let [normalizedKeys, shortcutOptions] = _ref;\n      const leftOptions = shortcutOptions.filter(option => option.group !== group);\n      if (leftOptions.length === 0) {\n        removeShortcutsByKeys(getKeysList(normalizedKeys));\n      } else {\n        shortcutOptions.length = 0;\n        shortcutOptions.push(...leftOptions);\n      }\n    });\n  };\n\n  /**\r\n   * Get a shortcut's details.\r\n   *\r\n   * @memberof ShortcutContext#\r\n   * @param {Array<string>} keys Names of the shortcut's keys,\r\n   * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n   * in lowercase or uppercase, unified across browsers\r\n   * @returns {Array}\r\n   */\n  const getShortcuts = keys => {\n    const normalizedKeys = normalizeKeys(keys);\n    const shortcuts = SHORTCUTS.getItem(normalizedKeys);\n    return isDefined(shortcuts) ? shortcuts.slice() : [];\n  };\n\n  /**\r\n   * Check if a shortcut exists in this context.\r\n   *\r\n   * @memberof ShortcutContext#\r\n   * @param {Array<string>} keys Names of the shortcut's keys,\r\n   * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n   * in lowercase or uppercase, unified across browsers\r\n   * @returns {boolean}\r\n   */\n  const hasShortcut = keys => {\n    const normalizedKeys = normalizeKeys(keys);\n    return SHORTCUTS.hasItem(normalizedKeys);\n  };\n  return {\n    __kindOf,\n    addShortcut,\n    addShortcuts,\n    getShortcuts,\n    hasShortcut,\n    removeShortcutsByKeys,\n    removeShortcutsByGroup\n  };\n};", "import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\r\n * Create a key observer.\r\n *\r\n * @returns {object}\r\n */\nexport function createKeysObserver() {\n  const PRESSED_KEYS = new Set();\n  return {\n    /**\r\n     * Press a key.\r\n     *\r\n     * @param {string} key Names of the shortcut's keys,\r\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n     * in lowercase or uppercase, unified across browsers\r\n     */\n    press(key) {\n      PRESSED_KEYS.add(key);\n    },\n    /**\r\n     * Release a pressed key.\r\n     *\r\n     * @param {string} key Names of the shortcut's keys,\r\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n     * in lowercase or uppercase, unified across browsers\r\n     */\n    release(key) {\n      PRESSED_KEYS.delete(key);\n    },\n    /**\r\n     * Release all pressed keys.\r\n     */\n    releaseAll() {\n      PRESSED_KEYS.clear();\n    },\n    /**\r\n     * Check if a key is pressed.\r\n     *\r\n     * @param {string} key Names of the shortcut's keys,\r\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n     * in lowercase or uppercase, unified across browsers\r\n     * @returns {boolean}\r\n     */\n    isPressed(key) {\n      return PRESSED_KEYS.has(key);\n    }\n  };\n}", "import \"core-js/modules/es.array.push.js\";\nimport { createKeysObserver } from \"./keyObserver.mjs\";\nimport { normalizeEventKey } from \"./utils.mjs\";\nimport { isImmediatePropagationStopped } from \"../helpers/dom/event.mjs\";\nimport { getParentWindow } from \"../helpers/dom/element.mjs\";\nimport { isMacOS } from \"../helpers/browser.mjs\";\nconst MODIFIER_KEYS = ['meta', 'alt', 'shift', 'control'];\nconst modifierKeysObserver = createKeysObserver();\nconst modKeyListeners = [];\nlet instanceCounter = 0;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\r\n * A key recorder, used for tracking key events.\r\n *\r\n * @param {EventTarget} ownerWindow A starting `window` element\r\n * @param {Function} handleEvent A condition on which event is handled.\r\n * @param {Function} beforeKeyDown A hook fired before the `keydown` event is handled.\r\n * @param {Function} afterKeyDown A hook fired after the `keydown` event is handled\r\n * @param {Function} callback `KeyEvent`'s listener's callback function\r\n * @returns {object}\r\n */\nexport function useRecorder(ownerWindow, handleEvent, beforeKeyDown, afterKeyDown, callback) {\n  /**\r\n   * Check if a pressed key is tracked or not.\r\n   *\r\n   * @param {string} pressedKey A pressed key\r\n   * @returns {boolean}\r\n   */\n  const isModifierKey = pressedKey => {\n    return MODIFIER_KEYS.includes(pressedKey);\n  };\n\n  /**\r\n   * Get every pressed modifier key from the performed `KeyboardEvent`.\r\n   *\r\n   * @private\r\n   * @param {KeyboardEvent} event The event object.\r\n   * @param {boolean} [mergeMetaKeys=false] If `true,` the function will return the \"control\" and \"meta\"\r\n   *                                        modifiers keys as the \"control/meta\" name. This allows creating\r\n   *                                        keyboard shortcuts with modifier key that trigger the shortcut\r\n   *                                        actions depend on the OS keyboard layout (the Meta key for macOS\r\n   *                                        and Control for non macOS system).\r\n   * @returns {string[]}\r\n   */\n  const getPressedModifierKeys = function (event) {\n    let mergeMetaKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const pressedModifierKeys = [];\n    if (event.altKey) {\n      pressedModifierKeys.push('alt');\n    }\n    if (mergeMetaKeys && (event.ctrlKey || event.metaKey)) {\n      pressedModifierKeys.push('control/meta');\n    } else {\n      if (event.ctrlKey) {\n        pressedModifierKeys.push('control');\n      }\n      if (event.metaKey) {\n        pressedModifierKeys.push('meta');\n      }\n    }\n    if (event.shiftKey) {\n      pressedModifierKeys.push('shift');\n    }\n    return pressedModifierKeys;\n  };\n\n  /**\r\n   * `KeyboardEvent`'s callback function\r\n   *\r\n   * @private\r\n   * @param {KeyboardEvent} event The event object\r\n   */\n  const onkeydown = event => {\n    if (handleEvent(event) === false) {\n      return;\n    }\n    const result = beforeKeyDown(event);\n\n    // keyCode 229 aka 'uninitialized' doesn't take into account with editors. This key code is\n    // produced when unfinished character is entering using the IME editor. It is fired on macOS,\n    // Windows and linux (ubuntu) with installed ibus-pinyin package.\n    if (event.keyCode === 229 || result === false || isImmediatePropagationStopped(event)) {\n      return;\n    }\n    const pressedKey = normalizeEventKey(event);\n    let extraModifierKeys = [];\n    if (!isModifierKey(pressedKey)) {\n      extraModifierKeys = getPressedModifierKeys(event);\n    }\n    const pressedKeys = [pressedKey].concat(extraModifierKeys);\n    const isExecutionCancelled = callback(event, pressedKeys);\n    if (!isExecutionCancelled && (isMacOS() && extraModifierKeys.includes('meta') || !isMacOS() && extraModifierKeys.includes('control'))) {\n      // Trigger the callback for the virtual OS-dependent \"control/meta\" key\n      callback(event, [pressedKey].concat(getPressedModifierKeys(event, true)));\n    }\n    afterKeyDown(event);\n  };\n\n  /**\r\n   * `KeyboardEvent`'s callback function for observing the pressed state of the mod keys.\r\n   *\r\n   * @private\r\n   * @param {KeyboardEvent} event The event object\r\n   */\n  const onkeydownForModKeys = event => {\n    if (event.key) {\n      const pressedKey = normalizeEventKey(event);\n      if (isModifierKey(pressedKey)) {\n        modifierKeysObserver.press(pressedKey);\n      }\n    }\n  };\n\n  /**\r\n   * `KeyboardEvent`'s callback function for observing the pressed state of the mod keys.\r\n   *\r\n   * @private\r\n   * @param {KeyboardEvent} event The event object\r\n   */\n  const onkeyupForModKeys = event => {\n    if (event.key) {\n      const pressedKey = normalizeEventKey(event);\n      if (isModifierKey(pressedKey)) {\n        modifierKeysObserver.release(pressedKey);\n      }\n    }\n  };\n\n  /**\r\n   * `FocusEvent`'s callback function\r\n   *\r\n   * @private\r\n   */\n  const onblur = () => {\n    modifierKeysObserver.releaseAll();\n  };\n\n  /**\r\n   * Add event listeners to the starting window and its parents' windows.\r\n   */\n  const mount = () => {\n    let eventTarget = ownerWindow;\n    instanceCounter += 1;\n    while (eventTarget) {\n      if (instanceCounter === 1) {\n        eventTarget.document.documentElement.addEventListener('keydown', onkeydownForModKeys);\n        modKeyListeners.push({\n          event: 'keydown',\n          listener: onkeydownForModKeys\n        });\n        eventTarget.document.documentElement.addEventListener('keyup', onkeyupForModKeys);\n        modKeyListeners.push({\n          event: 'keyup',\n          listener: onkeyupForModKeys\n        });\n      }\n      eventTarget.document.documentElement.addEventListener('keydown', onkeydown);\n      eventTarget.document.documentElement.addEventListener('blur', onblur);\n      eventTarget = getParentWindow(eventTarget);\n    }\n  };\n\n  /**\r\n   * Remove event listeners from the starting window and its parents' windows.\r\n   */\n  const unmount = () => {\n    let eventTarget = ownerWindow;\n    instanceCounter -= 1;\n    while (eventTarget) {\n      if (instanceCounter === 0) {\n        for (let i = 0; i < modKeyListeners.length; i++) {\n          const {\n            event,\n            listener\n          } = modKeyListeners[i];\n          eventTarget.document.documentElement.removeEventListener(event, listener);\n        }\n        modKeyListeners.length = 0;\n      }\n      eventTarget.document.documentElement.removeEventListener('keydown', onkeydown);\n      eventTarget.document.documentElement.removeEventListener('blur', onblur);\n      eventTarget = getParentWindow(eventTarget);\n    }\n  };\n  return {\n    mount,\n    unmount,\n    isPressed: key => modifierKeysObserver.isPressed(key),\n    releasePressedKeys: () => modifierKeysObserver.releaseAll()\n  };\n}", "import \"core-js/modules/es.error.cause.js\";\nimport { createUniqueMap } from \"../utils/dataStructures/uniqueMap.mjs\";\nimport { stopImmediatePropagation } from \"../helpers/dom/event.mjs\";\nimport { createContext, isContextObject } from \"./context.mjs\";\nimport { useRecorder } from \"./recorder.mjs\";\nimport { toSingleLine } from \"../helpers/templateLiteralTag.mjs\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * The `ShortcutManager` API lets you store and manage [keyboard shortcut contexts](@/guides/navigation/keyboard-shortcuts/keyboard-shortcuts.md#keyboard-shortcut-contexts) ([`ShortcutContext`](@/api/shortcutContext.md)).\r\n *\r\n * Each `ShortcutManager` object:\r\n * - Stores and manages its own set of keyboard shortcut contexts.\r\n * - Listens to the [`KeyboardEvent`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent) events and runs actions for them.\r\n *\r\n * @alias ShortcutManager\r\n * @class ShortcutManager\r\n * @param {object} options The manager's options\r\n * @param {EventTarget} options.ownerWindow A starting `window` element\r\n * @param {Function} options.handleEvent A condition on which `event` is handled.\r\n * @param {Function} options.beforeKeyDown A hook fired before the `keydown` event is handled. You can use it to [block a keyboard shortcut's actions](@/guides/navigation/keyboard-shortcuts/keyboard-shortcuts.md#block-a-keyboard-shortcut-s-actions).\r\n * @param {Function} options.afterKeyDown A hook fired after the `keydown` event is handled\r\n */\nexport const createShortcutManager = _ref => {\n  let {\n    ownerWindow,\n    handleEvent,\n    beforeKeyDown,\n    afterKeyDown\n  } = _ref;\n  /**\r\n   * A unique map that stores keyboard shortcut contexts.\r\n   *\r\n   * @type {UniqueMap}\r\n   */\n  const CONTEXTS = createUniqueMap({\n    errorIdExists: keys => `The \"${keys}\" context name is already registered.`\n  });\n  /**\r\n   * The name of the active [`ShortcutContext`](@/api/shortcutContext.md).\r\n   *\r\n   * @type {string}\r\n   */\n  let activeContextName = 'grid';\n\n  /**\r\n   * Create a new [`ShortcutContext`](@/api/shortcutContext.md) object.\r\n   *\r\n   * @memberof ShortcutManager#\r\n   * @param {string} contextName The name of the new shortcut context\r\n   * @returns {object}\r\n   */\n  const addContext = contextName => {\n    const context = createContext(contextName);\n    CONTEXTS.addItem(contextName, context);\n    return context;\n  };\n\n  /**\r\n   * Get the ID of the active [`ShortcutContext`](@/api/shortcutContext.md).\r\n   *\r\n   * @memberof ShortcutManager#\r\n   * @returns {string}\r\n   */\n  const getActiveContextName = () => {\n    return activeContextName;\n  };\n\n  /**\r\n   * Get a keyboard shortcut context by its name.\r\n   *\r\n   * @memberof ShortcutManager#\r\n   * @param {string} contextName The name of the shortcut context\r\n   * @returns {object|undefined} A [`ShortcutContext`](@/api/shortcutContext.md) object that stores registered shortcuts\r\n   */\n  const getContext = contextName => {\n    return CONTEXTS.getItem(contextName);\n  };\n\n  /**\r\n   * Start listening to keyboard shortcuts within a given [`ShortcutContext`](@/api/shortcutContext.md).\r\n   *\r\n   * @memberof ShortcutManager#\r\n   * @param {string} contextName The name of the shortcut context\r\n   */\n  const setActiveContextName = contextName => {\n    if (!CONTEXTS.hasItem(contextName)) {\n      throw new Error(toSingleLine`You've tried to activate the \"${contextName}\" shortcut context\\x20\n        that does not exist. Before activation, register the context using the \"addContext\" method.`);\n    }\n    activeContextName = contextName;\n  };\n\n  /**\r\n   * This variable relates to the `captureCtrl` shortcut option,\r\n   * which allows for capturing the state of the Control/Meta modifier key.\r\n   * Some of the default keyboard shortcuts related to cell selection need this feature for working properly.\r\n   *\r\n   * @type {boolean}\r\n   */\n  let isCtrlKeySilenced = false;\n\n  /**\r\n   * A callback function for listening events from the recorder.\r\n   *\r\n   * @param {KeyboardEvent} event The keyboard event.\r\n   * @param {string[]} keys Names of the shortcut's keys,\r\n   * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\r\n   * in lowercase or uppercase, unified across browsers.\r\n   * @param {object | string} context The context object or name.\r\n   * @returns {boolean}\r\n   */\n  const recorderCallback = function (event, keys) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getActiveContextName();\n    const activeContext = isContextObject(context) ? context : getContext(context);\n    let isExecutionCancelled = false;\n    if (!activeContext.hasShortcut(keys)) {\n      return isExecutionCancelled;\n    }\n\n    // Processing just actions being in stack at the moment of shortcut pressing (without respecting additions/removals performed dynamically).\n    const shortcuts = activeContext.getShortcuts(keys);\n    for (let index = 0; index < shortcuts.length; index++) {\n      const {\n        callback,\n        runOnlyIf,\n        preventDefault,\n        stopPropagation,\n        captureCtrl,\n        forwardToContext\n      } = shortcuts[index];\n      if (runOnlyIf(event) === true) {\n        isCtrlKeySilenced = captureCtrl;\n        isExecutionCancelled = callback(event, keys) === false;\n        isCtrlKeySilenced = false;\n        if (preventDefault) {\n          event.preventDefault();\n        }\n        if (stopPropagation) {\n          stopImmediatePropagation(event);\n          event.stopPropagation();\n        }\n        if (isExecutionCancelled) {\n          break;\n        }\n        if (forwardToContext) {\n          recorderCallback(event, keys, forwardToContext);\n        }\n      }\n    }\n    return isExecutionCancelled;\n  };\n\n  /**\r\n   * Internal key recorder.\r\n   *\r\n   * @private\r\n   */\n  const keyRecorder = useRecorder(ownerWindow, handleEvent, beforeKeyDown, afterKeyDown, recorderCallback);\n  keyRecorder.mount();\n  return {\n    addContext,\n    getActiveContextName,\n    getContext,\n    setActiveContextName,\n    /**\r\n     * Returns whether `control` or `meta` keys are pressed.\r\n     *\r\n     * @memberof ShortcutManager#\r\n     * @type {Function}\r\n     * @returns {boolean}\r\n     */\n    isCtrlPressed: () => !isCtrlKeySilenced && (keyRecorder.isPressed('control') || keyRecorder.isPressed('meta')),\n    /**\r\n     * Release every previously pressed key.\r\n     *\r\n     * @type {Function}\r\n     * @memberof ShortcutManager#\r\n     */\n    releasePressedKeys: () => keyRecorder.releasePressedKeys(),\n    /**\r\n     * Destroy a context manager instance.\r\n     *\r\n     * @type {Function}\r\n     * @memberof ShortcutManager#\r\n     */\n    destroy: () => keyRecorder.unmount()\n  };\n};", "import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.immediate.js\";\nimport { addClass, empty, observeVisibilityChangeOnce, removeClass } from \"./helpers/dom/element.mjs\";\nimport { isFunction } from \"./helpers/function.mjs\";\nimport { isDefined, isUndefined, isRegExp, _injectProductInfo, isEmpty } from \"./helpers/mixed.mjs\";\nimport { isMobileBrowser, isIpadOS } from \"./helpers/browser.mjs\";\nimport EditorManager from \"./editorManager.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { deepClone, duckSchema, isObjectEqual, isObject, deepObjectSize, hasOwnProperty, createObjectPropListener, objectEach } from \"./helpers/object.mjs\";\nimport { FocusManager } from \"./focusManager.mjs\";\nimport { arrayMap, arrayEach, arrayReduce, getDifferenceOfArrays, stringToArray, pivot } from \"./helpers/array.mjs\";\nimport { instanceToHTML } from \"./utils/parseTable.mjs\";\nimport { getPlugin, getPluginsNames } from \"./plugins/registry.mjs\";\nimport { getRenderer } from \"./renderers/registry.mjs\";\nimport { getEditor } from \"./editors/registry.mjs\";\nimport { getValidator } from \"./validators/registry.mjs\";\nimport { randomString, toUpperCaseFirst } from \"./helpers/string.mjs\";\nimport { rangeEach, rangeEachReverse, isNumericLike } from \"./helpers/number.mjs\";\nimport TableView from \"./tableView.mjs\";\nimport DataSource from \"./dataMap/dataSource.mjs\";\nimport { spreadsheetColumnLabel } from \"./helpers/data.mjs\";\nimport { IndexMapper } from \"./translations/index.mjs\";\nimport { registerAsRootInstance, hasValidParameter, isRootInstance } from \"./utils/rootInstance.mjs\";\nimport { DEFAULT_COLUMN_WIDTH } from \"./3rdparty/walkontable/src/index.mjs\";\nimport Hooks from \"./pluginHooks.mjs\";\nimport { hasLanguageDictionary, getValidLanguageCode, getTranslatedPhrase } from \"./i18n/registry.mjs\";\nimport { warnUserAboutLanguageRegistration, normalizeLanguageCode } from \"./i18n/utils.mjs\";\nimport { Selection } from \"./selection/index.mjs\";\nimport { MetaManager, DynamicCellMetaMod, ExtendMetaPropertiesMod, replaceData } from \"./dataMap/index.mjs\";\nimport { installFocusCatcher, createViewportScroller } from \"./core/index.mjs\";\nimport { createUniqueMap } from \"./utils/dataStructures/uniqueMap.mjs\";\nimport { createShortcutManager } from \"./shortcuts/index.mjs\";\nimport { registerAllShortcutContexts } from \"./shortcutContexts/index.mjs\";\nlet activeGuid = null;\n\n/**\r\n * Keeps the collection of the all Handsontable instances created on the same page. The\r\n * list is then used to trigger the \"afterUnlisten\" hook when the \"listen()\" method was\r\n * called on another instance.\r\n *\r\n * @type {Map<string, Core>}\r\n */\nconst foreignHotInstances = new Map();\n\n/**\r\n * A set of deprecated feature names.\r\n *\r\n * @type {Set<string>}\r\n */\n// eslint-disable-next-line no-unused-vars\nconst deprecationWarns = new Set();\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * Handsontable constructor.\r\n *\r\n * @core\r\n * @class Core\r\n * @description\r\n *\r\n * The `Handsontable` class (known as the `Core`) lets you modify the grid's behavior by using Handsontable's public API methods.\r\n *\r\n * ::: only-for react\r\n * To use these methods, associate a Handsontable instance with your instance\r\n * of the [`HotTable` component](@/guides/getting-started/installation/installation.md#_4-use-the-hottable-component),\r\n * by using React's `ref` feature (read more on the [Instance methods](@/guides/getting-started/react-methods/react-methods.md) page).\r\n * :::\r\n *\r\n * ## How to call a method\r\n *\r\n * ::: only-for javascript\r\n * ```js\r\n * // create a Handsontable instance\r\n * const hot = new Handsontable(document.getElementById('example'), options);\r\n *\r\n * // call a method\r\n * hot.setDataAtCell(0, 0, 'new value');\r\n * ```\r\n * :::\r\n *\r\n * ::: only-for react\r\n * ```jsx\r\n * import { useRef } from 'react';\r\n *\r\n * const hotTableComponent = useRef(null);\r\n *\r\n * <HotTable\r\n *   // associate your `HotTable` component with a Handsontable instance\r\n *   ref={hotTableComponent}\r\n *   settings={options}\r\n * />\r\n *\r\n * // access the Handsontable instance, under the `.current.hotInstance` property\r\n * // call a method\r\n * hotTableComponent.current.hotInstance.setDataAtCell(0, 0, 'new value');\r\n * ```\r\n * :::\r\n *\r\n * @param {HTMLElement} rootElement The element to which the Handsontable instance is injected.\r\n * @param {object} userSettings The user defined options.\r\n * @param {boolean} [rootInstanceSymbol=false] Indicates if the instance is root of all later instances created.\r\n */\nexport default function Core(rootElement, userSettings) {\n  var _userSettings$layoutD,\n    _this = this;\n  let rootInstanceSymbol = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let instance = this;\n  const eventManager = new EventManager(instance);\n  let datamap;\n  let dataSource;\n  let grid;\n  let editorManager;\n  let focusManager;\n  let viewportScroller;\n  let firstRun = true;\n  if (hasValidParameter(rootInstanceSymbol)) {\n    registerAsRootInstance(this);\n  }\n\n  // TODO: check if references to DOM elements should be move to UI layer (Walkontable)\n  /**\r\n   * Reference to the container element.\r\n   *\r\n   * @private\r\n   * @type {HTMLElement}\r\n   */\n  this.rootElement = rootElement;\n  /**\r\n   * The nearest document over container.\r\n   *\r\n   * @private\r\n   * @type {Document}\r\n   */\n  this.rootDocument = rootElement.ownerDocument;\n  /**\r\n   * Window object over container's document.\r\n   *\r\n   * @private\r\n   * @type {Window}\r\n   */\n  this.rootWindow = this.rootDocument.defaultView;\n  /**\r\n   * A boolean to tell if the Handsontable has been fully destroyed. This is set to `true`\r\n   * after `afterDestroy` hook is called.\r\n   *\r\n   * @memberof Core#\r\n   * @member isDestroyed\r\n   * @type {boolean}\r\n   */\n  this.isDestroyed = false;\n  /**\r\n   * The counter determines how many times the render suspending was called. It allows\r\n   * tracking the nested suspending calls. For each render suspend resuming call the\r\n   * counter is decremented. The value equal to 0 means the render suspending feature\r\n   * is disabled.\r\n   *\r\n   * @private\r\n   * @type {number}\r\n   */\n  this.renderSuspendedCounter = 0;\n  /**\r\n   * The counter determines how many times the execution suspending was called. It allows\r\n   * tracking the nested suspending calls. For each execution suspend resuming call the\r\n   * counter is decremented. The value equal to 0 means the execution suspending feature\r\n   * is disabled.\r\n   *\r\n   * @private\r\n   * @type {number}\r\n   */\n  this.executionSuspendedCounter = 0;\n  const layoutDirection = (_userSettings$layoutD = userSettings === null || userSettings === void 0 ? void 0 : userSettings.layoutDirection) !== null && _userSettings$layoutD !== void 0 ? _userSettings$layoutD : 'inherit';\n  const rootElementDirection = ['rtl', 'ltr'].includes(layoutDirection) ? layoutDirection : this.rootWindow.getComputedStyle(this.rootElement).direction;\n  this.rootElement.setAttribute('dir', rootElementDirection);\n\n  /**\r\n   * Checks if the grid is rendered using the right-to-left layout direction.\r\n   *\r\n   * @since 12.0.0\r\n   * @memberof Core#\r\n   * @function isRtl\r\n   * @returns {boolean} True if RTL.\r\n   */\n  this.isRtl = function () {\n    return rootElementDirection === 'rtl';\n  };\n\n  /**\r\n   * Checks if the grid is rendered using the left-to-right layout direction.\r\n   *\r\n   * @since 12.0.0\r\n   * @memberof Core#\r\n   * @function isLtr\r\n   * @returns {boolean} True if LTR.\r\n   */\n  this.isLtr = function () {\n    return !instance.isRtl();\n  };\n\n  /**\r\n   * Returns 1 for LTR; -1 for RTL. Useful for calculations.\r\n   *\r\n   * @since 12.0.0\r\n   * @memberof Core#\r\n   * @function getDirectionFactor\r\n   * @returns {number} Returns 1 for LTR; -1 for RTL.\r\n   */\n  this.getDirectionFactor = function () {\n    return instance.isLtr() ? 1 : -1;\n  };\n  userSettings.language = getValidLanguageCode(userSettings.language);\n  const metaManager = new MetaManager(instance, userSettings, [DynamicCellMetaMod, ExtendMetaPropertiesMod]);\n  const tableMeta = metaManager.getTableMeta();\n  const globalMeta = metaManager.getGlobalMeta();\n  const pluginsRegistry = createUniqueMap();\n  this.container = this.rootDocument.createElement('div');\n  this.renderCall = false;\n  rootElement.insertBefore(this.container, rootElement.firstChild);\n  if (isRootInstance(this)) {\n    _injectProductInfo(userSettings.licenseKey, rootElement);\n  }\n  this.guid = `ht_${randomString()}`; // this is the namespace for global events\n\n  foreignHotInstances.set(this.guid, this);\n\n  /**\r\n   * Instance of index mapper which is responsible for managing the column indexes.\r\n   *\r\n   * @memberof Core#\r\n   * @member columnIndexMapper\r\n   * @type {IndexMapper}\r\n   */\n  this.columnIndexMapper = new IndexMapper();\n  /**\r\n   * Instance of index mapper which is responsible for managing the row indexes.\r\n   *\r\n   * @memberof Core#\r\n   * @member rowIndexMapper\r\n   * @type {IndexMapper}\r\n   */\n  this.rowIndexMapper = new IndexMapper();\n  this.columnIndexMapper.addLocalHook('indexesSequenceChange', source => {\n    instance.runHooks('afterColumnSequenceChange', source);\n  });\n  this.rowIndexMapper.addLocalHook('indexesSequenceChange', source => {\n    instance.runHooks('afterRowSequenceChange', source);\n  });\n  dataSource = new DataSource(instance);\n  if (!this.rootElement.id || this.rootElement.id.substring(0, 3) === 'ht_') {\n    this.rootElement.id = this.guid; // if root element does not have an id, assign a random id\n  }\n  const visualToRenderableCoords = coords => {\n    const {\n      row: visualRow,\n      col: visualColumn\n    } = coords;\n    return instance._createCellCoords(\n    // We just store indexes for rows and columns without headers.\n    visualRow >= 0 ? instance.rowIndexMapper.getRenderableFromVisualIndex(visualRow) : visualRow, visualColumn >= 0 ? instance.columnIndexMapper.getRenderableFromVisualIndex(visualColumn) : visualColumn);\n  };\n  const renderableToVisualCoords = coords => {\n    const {\n      row: renderableRow,\n      col: renderableColumn\n    } = coords;\n    return instance._createCellCoords(\n    // We just store indexes for rows and columns without headers.\n    renderableRow >= 0 ? instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow, renderableColumn >= 0 ? instance.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn // eslint-disable-line max-len\n    );\n  };\n  const findFirstNonHiddenRenderableRow = (visualRowFrom, visualRowTo) => {\n    const dir = visualRowTo > visualRowFrom ? 1 : -1;\n    const minIndex = Math.min(visualRowFrom, visualRowTo);\n    const maxIndex = Math.max(visualRowFrom, visualRowTo);\n    const rowIndex = instance.rowIndexMapper.getNearestNotHiddenIndex(visualRowFrom, dir);\n    if (rowIndex === null || dir === 1 && rowIndex > maxIndex || dir === -1 && rowIndex < minIndex) {\n      return null;\n    }\n    return rowIndex >= 0 ? instance.rowIndexMapper.getRenderableFromVisualIndex(rowIndex) : rowIndex;\n  };\n  const findFirstNonHiddenRenderableColumn = (visualColumnFrom, visualColumnTo) => {\n    const dir = visualColumnTo > visualColumnFrom ? 1 : -1;\n    const minIndex = Math.min(visualColumnFrom, visualColumnTo);\n    const maxIndex = Math.max(visualColumnFrom, visualColumnTo);\n    const columnIndex = instance.columnIndexMapper.getNearestNotHiddenIndex(visualColumnFrom, dir);\n    if (columnIndex === null || dir === 1 && columnIndex > maxIndex || dir === -1 && columnIndex < minIndex) {\n      return null;\n    }\n    return columnIndex >= 0 ? instance.columnIndexMapper.getRenderableFromVisualIndex(columnIndex) : columnIndex;\n  };\n  let selection = new Selection(tableMeta, {\n    rowIndexMapper: instance.rowIndexMapper,\n    columnIndexMapper: instance.columnIndexMapper,\n    countCols: () => instance.countCols(),\n    countRows: () => instance.countRows(),\n    propToCol: prop => datamap.propToCol(prop),\n    isEditorOpened: () => instance.getActiveEditor() ? instance.getActiveEditor().isOpened() : false,\n    countRenderableColumns: () => this.view.countRenderableColumns(),\n    countRenderableRows: () => this.view.countRenderableRows(),\n    countRowHeaders: () => this.countRowHeaders(),\n    countColHeaders: () => this.countColHeaders(),\n    countRenderableRowsInRange: function () {\n      return _this.view.countRenderableRowsInRange(...arguments);\n    },\n    countRenderableColumnsInRange: function () {\n      return _this.view.countRenderableColumnsInRange(...arguments);\n    },\n    getShortcutManager: () => instance.getShortcutManager(),\n    createCellCoords: (row, column) => instance._createCellCoords(row, column),\n    createCellRange: (highlight, from, to) => instance._createCellRange(highlight, from, to),\n    visualToRenderableCoords,\n    renderableToVisualCoords,\n    findFirstNonHiddenRenderableRow,\n    findFirstNonHiddenRenderableColumn,\n    isDisabledCellSelection: (visualRow, visualColumn) => {\n      if (visualRow < 0 || visualColumn < 0) {\n        return instance.getSettings().disableVisualSelection;\n      }\n      return instance.getCellMeta(visualRow, visualColumn).disableVisualSelection;\n    }\n  });\n  this.selection = selection;\n  const onIndexMapperCacheUpdate = _ref => {\n    let {\n      hiddenIndexesChanged\n    } = _ref;\n    if (hiddenIndexesChanged) {\n      this.selection.commit();\n    }\n  };\n  this.columnIndexMapper.addLocalHook('cacheUpdated', onIndexMapperCacheUpdate);\n  this.rowIndexMapper.addLocalHook('cacheUpdated', onIndexMapperCacheUpdate);\n  this.selection.addLocalHook('afterSetRangeEnd', (cellCoords, isLastSelectionLayer) => {\n    const preventScrolling = createObjectPropListener(false);\n    const selectionRange = this.selection.getSelectedRange();\n    const {\n      from,\n      to\n    } = selectionRange.current();\n    const selectionLayerLevel = selectionRange.size() - 1;\n    this.runHooks('afterSelection', from.row, from.col, to.row, to.col, preventScrolling, selectionLayerLevel);\n    this.runHooks('afterSelectionByProp', from.row, instance.colToProp(from.col), to.row, instance.colToProp(to.col), preventScrolling, selectionLayerLevel);\n    if (isLastSelectionLayer && (!preventScrolling.isTouched() || preventScrolling.isTouched() && !preventScrolling.value)) {\n      viewportScroller.scrollTo(cellCoords);\n    }\n    const isSelectedByRowHeader = selection.isSelectedByRowHeader();\n    const isSelectedByColumnHeader = selection.isSelectedByColumnHeader();\n\n    // @TODO: These CSS classes are no longer needed anymore. They are used only as a indicator of the selected\n    // rows/columns in the MergedCells plugin (via border.js#L520 in the walkontable module). After fixing\n    // the Border class this should be removed.\n    if (isSelectedByRowHeader && isSelectedByColumnHeader) {\n      addClass(this.rootElement, ['ht__selection--rows', 'ht__selection--columns']);\n    } else if (isSelectedByRowHeader) {\n      removeClass(this.rootElement, 'ht__selection--columns');\n      addClass(this.rootElement, 'ht__selection--rows');\n    } else if (isSelectedByColumnHeader) {\n      removeClass(this.rootElement, 'ht__selection--rows');\n      addClass(this.rootElement, 'ht__selection--columns');\n    } else {\n      removeClass(this.rootElement, ['ht__selection--rows', 'ht__selection--columns']);\n    }\n    if (selection.getSelectionSource() !== 'shift') {\n      editorManager.closeEditor(null);\n    }\n    instance.view.render();\n    editorManager.prepareEditor();\n  });\n  this.selection.addLocalHook('beforeSetFocus', cellCoords => {\n    this.runHooks('beforeSelectionFocusSet', cellCoords.row, cellCoords.col);\n  });\n  this.selection.addLocalHook('afterSetFocus', cellCoords => {\n    const preventScrolling = createObjectPropListener(false);\n    this.runHooks('afterSelectionFocusSet', cellCoords.row, cellCoords.col, preventScrolling);\n    if (!preventScrolling.isTouched() || preventScrolling.isTouched() && !preventScrolling.value) {\n      viewportScroller.scrollTo(cellCoords);\n    }\n    editorManager.closeEditor();\n    instance.view.render();\n    editorManager.prepareEditor();\n  });\n  this.selection.addLocalHook('afterSelectionFinished', cellRanges => {\n    const selectionLayerLevel = cellRanges.length - 1;\n    const {\n      from,\n      to\n    } = cellRanges[selectionLayerLevel];\n    this.runHooks('afterSelectionEnd', from.row, from.col, to.row, to.col, selectionLayerLevel);\n    this.runHooks('afterSelectionEndByProp', from.row, instance.colToProp(from.col), to.row, instance.colToProp(to.col), selectionLayerLevel);\n  });\n  this.selection.addLocalHook('afterIsMultipleSelection', isMultiple => {\n    const changedIsMultiple = this.runHooks('afterIsMultipleSelection', isMultiple.value);\n    if (isMultiple.value) {\n      isMultiple.value = changedIsMultiple;\n    }\n  });\n  this.selection.addLocalHook('afterDeselect', () => {\n    editorManager.closeEditor();\n    instance.view.render();\n    removeClass(this.rootElement, ['ht__selection--rows', 'ht__selection--columns']);\n    this.runHooks('afterDeselect');\n  });\n  this.selection.addLocalHook('beforeHighlightSet', () => this.runHooks('beforeSelectionHighlightSet')).addLocalHook('beforeSetRangeStart', function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _this.runHooks('beforeSetRangeStart', ...args);\n  }).addLocalHook('beforeSetRangeStartOnly', function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return _this.runHooks('beforeSetRangeStartOnly', ...args);\n  }).addLocalHook('beforeSetRangeEnd', function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return _this.runHooks('beforeSetRangeEnd', ...args);\n  }).addLocalHook('beforeSelectColumns', function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return _this.runHooks('beforeSelectColumns', ...args);\n  }).addLocalHook('afterSelectColumns', function () {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return _this.runHooks('afterSelectColumns', ...args);\n  }).addLocalHook('beforeSelectRows', function () {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    return _this.runHooks('beforeSelectRows', ...args);\n  }).addLocalHook('afterSelectRows', function () {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    return _this.runHooks('afterSelectRows', ...args);\n  }).addLocalHook('beforeModifyTransformStart', function () {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    return _this.runHooks('modifyTransformStart', ...args);\n  }).addLocalHook('afterModifyTransformStart', function () {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    return _this.runHooks('afterModifyTransformStart', ...args);\n  }).addLocalHook('beforeModifyTransformFocus', function () {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    return _this.runHooks('modifyTransformFocus', ...args);\n  }).addLocalHook('afterModifyTransformFocus', function () {\n    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      args[_key11] = arguments[_key11];\n    }\n    return _this.runHooks('afterModifyTransformFocus', ...args);\n  }).addLocalHook('beforeModifyTransformEnd', function () {\n    for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n      args[_key12] = arguments[_key12];\n    }\n    return _this.runHooks('modifyTransformEnd', ...args);\n  }).addLocalHook('afterModifyTransformEnd', function () {\n    for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n      args[_key13] = arguments[_key13];\n    }\n    return _this.runHooks('afterModifyTransformEnd', ...args);\n  }).addLocalHook('beforeRowWrap', function () {\n    for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n      args[_key14] = arguments[_key14];\n    }\n    return _this.runHooks('beforeRowWrap', ...args);\n  }).addLocalHook('beforeColumnWrap', function () {\n    for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n      args[_key15] = arguments[_key15];\n    }\n    return _this.runHooks('beforeColumnWrap', ...args);\n  }).addLocalHook('insertRowRequire', totalRows => this.alter('insert_row_above', totalRows, 1, 'auto')).addLocalHook('insertColRequire', totalCols => this.alter('insert_col_start', totalCols, 1, 'auto'));\n  grid = {\n    /**\r\n     * Inserts or removes rows and columns.\r\n     *\r\n     * @private\r\n     * @param {string} action Possible values: \"insert_row_above\", \"insert_row_below\", \"insert_col_start\", \"insert_col_end\",\r\n     *                        \"remove_row\", \"remove_col\".\r\n     * @param {number|Array} index Row or column visual index which from the alter action will be triggered.\r\n     *                             Alter actions such as \"remove_row\" and \"remove_col\" support array indexes in the\r\n     *                             format `[[index, amount], [index, amount]...]` this can be used to remove\r\n     *                             non-consecutive columns or rows in one call.\r\n     * @param {number} [amount=1] Amount of rows or columns to remove.\r\n     * @param {string} [source] Optional. Source of hook runner.\r\n     * @param {boolean} [keepEmptyRows] Optional. Flag for preventing deletion of empty rows.\r\n     */\n    alter(action, index) {\n      var _index, _index2;\n      let amount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      let source = arguments.length > 3 ? arguments[3] : undefined;\n      let keepEmptyRows = arguments.length > 4 ? arguments[4] : undefined;\n      const normalizeIndexesGroup = indexes => {\n        if (indexes.length === 0) {\n          return [];\n        }\n        const sortedIndexes = [...indexes];\n\n        // Sort the indexes in ascending order.\n        sortedIndexes.sort((_ref2, _ref3) => {\n          let [indexA] = _ref2;\n          let [indexB] = _ref3;\n          if (indexA === indexB) {\n            return 0;\n          }\n          return indexA > indexB ? 1 : -1;\n        });\n\n        // Normalize the {index, amount} groups into bigger groups.\n        const normalizedIndexes = arrayReduce(sortedIndexes, (acc, _ref4) => {\n          let [groupIndex, groupAmount] = _ref4;\n          const previousItem = acc[acc.length - 1];\n          const [prevIndex, prevAmount] = previousItem;\n          const prevLastIndex = prevIndex + prevAmount;\n          if (groupIndex <= prevLastIndex) {\n            const amountToAdd = Math.max(groupAmount - (prevLastIndex - groupIndex), 0);\n            previousItem[1] += amountToAdd;\n          } else {\n            acc.push([groupIndex, groupAmount]);\n          }\n          return acc;\n        }, [sortedIndexes[0]]);\n        return normalizedIndexes;\n      };\n\n      /* eslint-disable no-case-declarations */\n      switch (action) {\n        case 'insert_row_below':\n        case 'insert_row_above':\n          const numberOfSourceRows = instance.countSourceRows();\n          if (tableMeta.maxRows === numberOfSourceRows) {\n            return;\n          }\n\n          // `above` is the default behavior for creating new rows\n          const insertRowMode = action === 'insert_row_below' ? 'below' : 'above';\n\n          // Calling the `insert_row_above` action adds a new row at the beginning of the data set.\n          // eslint-disable-next-line no-param-reassign\n          index = (_index = index) !== null && _index !== void 0 ? _index : insertRowMode === 'below' ? numberOfSourceRows : 0;\n          const {\n            delta: rowDelta,\n            startPhysicalIndex: startRowPhysicalIndex\n          } = datamap.createRow(index, amount, {\n            source,\n            mode: insertRowMode\n          });\n          selection.shiftRows(instance.toVisualRow(startRowPhysicalIndex), rowDelta);\n          break;\n        case 'insert_col_start':\n        case 'insert_col_end':\n          // \"start\" is a default behavior for creating new columns\n          const insertColumnMode = action === 'insert_col_end' ? 'end' : 'start';\n\n          // Calling the `insert_col_start` action adds a new column to the left of the data set.\n          // eslint-disable-next-line no-param-reassign\n          index = (_index2 = index) !== null && _index2 !== void 0 ? _index2 : insertColumnMode === 'end' ? instance.countSourceCols() : 0;\n          const {\n            delta: colDelta,\n            startPhysicalIndex: startColumnPhysicalIndex\n          } = datamap.createCol(index, amount, {\n            source,\n            mode: insertColumnMode\n          });\n          if (colDelta) {\n            if (Array.isArray(tableMeta.colHeaders)) {\n              const spliceArray = [instance.toVisualColumn(startColumnPhysicalIndex), 0];\n              spliceArray.length += colDelta; // inserts empty (undefined) elements at the end of an array\n              Array.prototype.splice.apply(tableMeta.colHeaders, spliceArray); // inserts empty (undefined) elements into the colHeader array\n            }\n            selection.shiftColumns(instance.toVisualColumn(startColumnPhysicalIndex), colDelta);\n          }\n          break;\n        case 'remove_row':\n          const removeRow = indexes => {\n            let offset = 0;\n\n            // Normalize the {index, amount} groups into bigger groups.\n            arrayEach(indexes, _ref5 => {\n              let [groupIndex, groupAmount] = _ref5;\n              const calcIndex = isEmpty(groupIndex) ? instance.countRows() - 1 : Math.max(groupIndex - offset, 0);\n\n              // If the 'index' is an integer decrease it by 'offset' otherwise pass it through to make the value\n              // compatible with datamap.removeCol method.\n              if (Number.isInteger(groupIndex)) {\n                // eslint-disable-next-line no-param-reassign\n                groupIndex = Math.max(groupIndex - offset, 0);\n              }\n\n              // TODO: for datamap.removeRow index should be passed as it is (with undefined and null values). If not, the logic\n              // inside the datamap.removeRow breaks the removing functionality.\n              const wasRemoved = datamap.removeRow(groupIndex, groupAmount, source);\n              if (!wasRemoved) {\n                return;\n              }\n              if (selection.isSelected()) {\n                const {\n                  row\n                } = instance.getSelectedRangeLast().highlight;\n                if (row >= groupIndex && row <= groupIndex + groupAmount - 1) {\n                  editorManager.closeEditor(true);\n                }\n              }\n              const totalRows = instance.countRows();\n              if (totalRows === 0) {\n                selection.deselect();\n              } else if (source === 'ContextMenu.removeRow') {\n                selection.refresh();\n              } else {\n                selection.shiftRows(groupIndex, -groupAmount);\n              }\n              const fixedRowsTop = tableMeta.fixedRowsTop;\n              if (fixedRowsTop >= calcIndex + 1) {\n                tableMeta.fixedRowsTop -= Math.min(groupAmount, fixedRowsTop - calcIndex);\n              }\n              const fixedRowsBottom = tableMeta.fixedRowsBottom;\n              if (fixedRowsBottom && calcIndex >= totalRows - fixedRowsBottom) {\n                tableMeta.fixedRowsBottom -= Math.min(groupAmount, fixedRowsBottom);\n              }\n              offset += groupAmount;\n            });\n          };\n          if (Array.isArray(index)) {\n            removeRow(normalizeIndexesGroup(index));\n          } else {\n            removeRow([[index, amount]]);\n          }\n          break;\n        case 'remove_col':\n          const removeCol = indexes => {\n            let offset = 0;\n\n            // Normalize the {index, amount} groups into bigger groups.\n            arrayEach(indexes, _ref6 => {\n              let [groupIndex, groupAmount] = _ref6;\n              const calcIndex = isEmpty(groupIndex) ? instance.countCols() - 1 : Math.max(groupIndex - offset, 0);\n              let physicalColumnIndex = instance.toPhysicalColumn(calcIndex);\n\n              // If the 'index' is an integer decrease it by 'offset' otherwise pass it through to make the value\n              // compatible with datamap.removeCol method.\n              if (Number.isInteger(groupIndex)) {\n                // eslint-disable-next-line no-param-reassign\n                groupIndex = Math.max(groupIndex - offset, 0);\n              }\n\n              // TODO: for datamap.removeCol index should be passed as it is (with undefined and null values). If not, the logic\n              // inside the datamap.removeCol breaks the removing functionality.\n              const wasRemoved = datamap.removeCol(groupIndex, groupAmount, source);\n              if (!wasRemoved) {\n                return;\n              }\n              if (selection.isSelected()) {\n                const {\n                  col\n                } = instance.getSelectedRangeLast().highlight;\n                if (col >= groupIndex && col <= groupIndex + groupAmount - 1) {\n                  editorManager.closeEditor(true);\n                }\n              }\n              const totalColumns = instance.countCols();\n              if (totalColumns === 0) {\n                selection.deselect();\n              } else if (source === 'ContextMenu.removeColumn') {\n                selection.refresh();\n              } else {\n                selection.shiftColumns(groupIndex, -groupAmount);\n              }\n              const fixedColumnsStart = tableMeta.fixedColumnsStart;\n              if (fixedColumnsStart >= calcIndex + 1) {\n                tableMeta.fixedColumnsStart -= Math.min(groupAmount, fixedColumnsStart - calcIndex);\n              }\n              if (Array.isArray(tableMeta.colHeaders)) {\n                if (typeof physicalColumnIndex === 'undefined') {\n                  physicalColumnIndex = -1;\n                }\n                tableMeta.colHeaders.splice(physicalColumnIndex, groupAmount);\n              }\n              offset += groupAmount;\n            });\n          };\n          if (Array.isArray(index)) {\n            removeCol(normalizeIndexesGroup(index));\n          } else {\n            removeCol([[index, amount]]);\n          }\n          break;\n        default:\n          throw new Error(`There is no such action \"${action}\"`);\n      }\n      instance.view.render();\n      if (!keepEmptyRows) {\n        grid.adjustRowsAndCols(); // makes sure that we did not add rows that will be removed in next refresh\n      }\n    },\n    /**\r\n     * Makes sure there are empty rows at the bottom of the table.\r\n     *\r\n     * @private\r\n     */\n    adjustRowsAndCols() {\n      const minRows = tableMeta.minRows;\n      const minSpareRows = tableMeta.minSpareRows;\n      const minCols = tableMeta.minCols;\n      const minSpareCols = tableMeta.minSpareCols;\n      if (minRows) {\n        // should I add empty rows to data source to meet minRows?\n        const nrOfRows = instance.countRows();\n        if (nrOfRows < minRows) {\n          // The synchronization with cell meta is not desired here. For `minRows` option,\n          // we don't want to touch/shift cell meta objects.\n          datamap.createRow(nrOfRows, minRows - nrOfRows, {\n            source: 'auto'\n          });\n        }\n      }\n      if (minSpareRows) {\n        const emptyRows = instance.countEmptyRows(true);\n\n        // should I add empty rows to meet minSpareRows?\n        if (emptyRows < minSpareRows) {\n          const emptyRowsMissing = minSpareRows - emptyRows;\n          const rowsToCreate = Math.min(emptyRowsMissing, tableMeta.maxRows - instance.countSourceRows());\n\n          // The synchronization with cell meta is not desired here. For `minSpareRows` option,\n          // we don't want to touch/shift cell meta objects.\n          datamap.createRow(instance.countRows(), rowsToCreate, {\n            source: 'auto'\n          });\n        }\n      }\n      {\n        let emptyCols;\n\n        // count currently empty cols\n        if (minCols || minSpareCols) {\n          emptyCols = instance.countEmptyCols(true);\n        }\n        let nrOfColumns = instance.countCols();\n\n        // should I add empty cols to meet minCols?\n        if (minCols && !tableMeta.columns && nrOfColumns < minCols) {\n          // The synchronization with cell meta is not desired here. For `minSpareRows` option,\n          // we don't want to touch/shift cell meta objects.\n          const colsToCreate = minCols - nrOfColumns;\n          emptyCols += colsToCreate;\n          datamap.createCol(nrOfColumns, colsToCreate, {\n            source: 'auto'\n          });\n        }\n        // should I add empty cols to meet minSpareCols?\n        if (minSpareCols && !tableMeta.columns && instance.dataType === 'array' && emptyCols < minSpareCols) {\n          nrOfColumns = instance.countCols();\n          const emptyColsMissing = minSpareCols - emptyCols;\n          const colsToCreate = Math.min(emptyColsMissing, tableMeta.maxCols - nrOfColumns);\n\n          // The synchronization with cell meta is not desired here. For `minSpareRows` option,\n          // we don't want to touch/shift cell meta objects.\n          datamap.createCol(nrOfColumns, colsToCreate, {\n            source: 'auto'\n          });\n        }\n      }\n      if (instance.view) {\n        instance.view.adjustElementsSize();\n      }\n    },\n    /**\r\n     * Populate the data from the provided 2d array from the given cell coordinates.\r\n     *\r\n     * @private\r\n     * @param {object} start Start selection position. Visual indexes.\r\n     * @param {Array} input 2d data array.\r\n     * @param {object} [end] End selection position (only for drag-down mode). Visual indexes.\r\n     * @param {string} [source=\"populateFromArray\"] Source information string.\r\n     * @param {string} [method=\"overwrite\"] Populate method. Possible options: `shift_down`, `shift_right`, `overwrite`.\r\n     * @returns {object|undefined} Ending td in pasted area (only if any cell was changed).\r\n     */\n    populateFromArray(start, input, end, source, method) {\n      let r;\n      let rlen;\n      let c;\n      let clen;\n      const setData = [];\n      const current = {};\n      const newDataByColumns = [];\n      const startRow = start.row;\n      const startColumn = start.col;\n      rlen = input.length;\n      if (rlen === 0) {\n        return false;\n      }\n      let columnsPopulationEnd = 0;\n      let rowsPopulationEnd = 0;\n      if (isObject(end)) {\n        columnsPopulationEnd = end.col - startColumn + 1;\n        rowsPopulationEnd = end.row - startRow + 1;\n      }\n\n      // insert data with specified pasteMode method\n      switch (method) {\n        case 'shift_down':\n          // translate data from a list of rows to a list of columns\n          const populatedDataByColumns = pivot(input);\n          const numberOfDataColumns = populatedDataByColumns.length;\n          // method's argument can extend the range of data population (data would be repeated)\n          const numberOfColumnsToPopulate = Math.max(numberOfDataColumns, columnsPopulationEnd);\n          const pushedDownDataByRows = instance.getData().slice(startRow);\n\n          // translate data from a list of rows to a list of columns\n          const pushedDownDataByColumns = pivot(pushedDownDataByRows).slice(startColumn, startColumn + numberOfColumnsToPopulate);\n          for (c = 0; c < numberOfColumnsToPopulate; c += 1) {\n            if (c < numberOfDataColumns) {\n              for (r = 0, rlen = populatedDataByColumns[c].length; r < rowsPopulationEnd - rlen; r += 1) {\n                // repeating data for rows\n                populatedDataByColumns[c].push(populatedDataByColumns[c][r % rlen]);\n              }\n              if (c < pushedDownDataByColumns.length) {\n                newDataByColumns.push(populatedDataByColumns[c].concat(pushedDownDataByColumns[c]));\n              } else {\n                // if before data population, there was no data in the column\n                // we fill the required rows' newly-created cells with `null` values\n                newDataByColumns.push(populatedDataByColumns[c].concat(new Array(pushedDownDataByRows.length).fill(null)));\n              }\n            } else {\n              // Repeating data for columns.\n              newDataByColumns.push(populatedDataByColumns[c % numberOfDataColumns].concat(pushedDownDataByColumns[c]));\n            }\n          }\n          instance.populateFromArray(startRow, startColumn, pivot(newDataByColumns));\n          break;\n        case 'shift_right':\n          const numberOfDataRows = input.length;\n          // method's argument can extend the range of data population (data would be repeated)\n          const numberOfRowsToPopulate = Math.max(numberOfDataRows, rowsPopulationEnd);\n          const pushedRightDataByRows = instance.getData().slice(startRow).map(rowData => rowData.slice(startColumn));\n          for (r = 0; r < numberOfRowsToPopulate; r += 1) {\n            if (r < numberOfDataRows) {\n              for (c = 0, clen = input[r].length; c < columnsPopulationEnd - clen; c += 1) {\n                // repeating data for rows\n                input[r].push(input[r][c % clen]);\n              }\n              if (r < pushedRightDataByRows.length) {\n                for (let i = 0; i < pushedRightDataByRows[r].length; i += 1) {\n                  input[r].push(pushedRightDataByRows[r][i]);\n                }\n              } else {\n                // if before data population, there was no data in the row\n                // we fill the required columns' newly-created cells with `null` values\n                input[r].push(...new Array(pushedRightDataByRows[0].length).fill(null));\n              }\n            } else {\n              // Repeating data for columns.\n              input.push(input[r % rlen].slice(0, numberOfRowsToPopulate).concat(pushedRightDataByRows[r]));\n            }\n          }\n          instance.populateFromArray(startRow, startColumn, input);\n          break;\n        case 'overwrite':\n        default:\n          // overwrite and other not specified options\n          current.row = start.row;\n          current.col = start.col;\n          let skippedRow = 0;\n          let skippedColumn = 0;\n          let pushData = true;\n          let cellMeta;\n          const getInputValue = function getInputValue(row) {\n            let col = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const rowValue = input[row % input.length];\n            if (col !== null) {\n              return rowValue[col % rowValue.length];\n            }\n            return rowValue;\n          };\n          const rowInputLength = input.length;\n          const rowSelectionLength = end ? end.row - start.row + 1 : 0;\n          if (end) {\n            rlen = rowSelectionLength;\n          } else {\n            rlen = Math.max(rowInputLength, rowSelectionLength);\n          }\n          for (r = 0; r < rlen; r++) {\n            if (end && current.row > end.row && rowSelectionLength > rowInputLength || !tableMeta.allowInsertRow && current.row > instance.countRows() - 1 || current.row >= tableMeta.maxRows) {\n              break;\n            }\n            const visualRow = r - skippedRow;\n            const colInputLength = getInputValue(visualRow).length;\n            const colSelectionLength = end ? end.col - start.col + 1 : 0;\n            if (end) {\n              clen = colSelectionLength;\n            } else {\n              clen = Math.max(colInputLength, colSelectionLength);\n            }\n            current.col = start.col;\n            cellMeta = instance.getCellMeta(current.row, current.col);\n            if ((source === 'CopyPaste.paste' || source === 'Autofill.fill') && cellMeta.skipRowOnPaste) {\n              skippedRow += 1;\n              current.row += 1;\n              rlen += 1;\n              /* eslint-disable no-continue */\n              continue;\n            }\n            skippedColumn = 0;\n            for (c = 0; c < clen; c++) {\n              if (end && current.col > end.col && colSelectionLength > colInputLength || !tableMeta.allowInsertColumn && current.col > instance.countCols() - 1 || current.col >= tableMeta.maxCols) {\n                break;\n              }\n              cellMeta = instance.getCellMeta(current.row, current.col);\n              if ((source === 'CopyPaste.paste' || source === 'Autofill.fill') && cellMeta.skipColumnOnPaste) {\n                skippedColumn += 1;\n                current.col += 1;\n                clen += 1;\n                continue;\n              }\n              if (cellMeta.readOnly && source !== 'UndoRedo.undo') {\n                current.col += 1;\n                /* eslint-disable no-continue */\n                continue;\n              }\n              const visualColumn = c - skippedColumn;\n              let value = getInputValue(visualRow, visualColumn);\n              let orgValue = instance.getDataAtCell(current.row, current.col);\n              if (value !== null && typeof value === 'object') {\n                // when 'value' is array and 'orgValue' is null, set 'orgValue' to\n                // an empty array so that the null value can be compared to 'value'\n                // as an empty value for the array context\n                if (Array.isArray(value) && orgValue === null) orgValue = [];\n                if (orgValue === null || typeof orgValue !== 'object') {\n                  pushData = false;\n                } else {\n                  const orgValueSchema = duckSchema(Array.isArray(orgValue) ? orgValue : orgValue[0] || orgValue);\n                  const valueSchema = duckSchema(Array.isArray(value) ? value : value[0] || value);\n\n                  // Allow overwriting values with the same object-based schema or any array-based schema.\n                  if (isObjectEqual(orgValueSchema, valueSchema) || Array.isArray(orgValueSchema) && Array.isArray(valueSchema)) {\n                    value = deepClone(value);\n                  } else {\n                    pushData = false;\n                  }\n                }\n              } else if (orgValue !== null && typeof orgValue === 'object') {\n                pushData = false;\n              }\n              if (pushData) {\n                setData.push([current.row, current.col, value]);\n              }\n              pushData = true;\n              current.col += 1;\n            }\n            current.row += 1;\n          }\n          instance.setDataAtCell(setData, null, null, source || 'populateFromArray');\n          break;\n      }\n    }\n  };\n\n  /**\r\n   * Internal function to set `language` key of settings.\r\n   *\r\n   * @private\r\n   * @param {string} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\r\n   * @fires Hooks#afterLanguageChange\r\n   */\n  function setLanguage(languageCode) {\n    const normalizedLanguageCode = normalizeLanguageCode(languageCode);\n    if (hasLanguageDictionary(normalizedLanguageCode)) {\n      instance.runHooks('beforeLanguageChange', normalizedLanguageCode);\n      globalMeta.language = normalizedLanguageCode;\n      instance.runHooks('afterLanguageChange', normalizedLanguageCode);\n    } else {\n      warnUserAboutLanguageRegistration(languageCode);\n    }\n  }\n\n  /**\r\n   * Internal function to set `className` or `tableClassName`, depending on the key from the settings object.\r\n   *\r\n   * @private\r\n   * @param {string} className `className` or `tableClassName` from the key in the settings object.\r\n   * @param {string|string[]} classSettings String or array of strings. Contains class name(s) from settings object.\r\n   */\n  function setClassName(className, classSettings) {\n    const element = className === 'className' ? instance.rootElement : instance.table;\n    if (firstRun) {\n      addClass(element, classSettings);\n    } else {\n      let globalMetaSettingsArray = [];\n      let settingsArray = [];\n      if (globalMeta[className]) {\n        globalMetaSettingsArray = Array.isArray(globalMeta[className]) ? globalMeta[className] : stringToArray(globalMeta[className]);\n      }\n      if (classSettings) {\n        settingsArray = Array.isArray(classSettings) ? classSettings : stringToArray(classSettings);\n      }\n      const classNameToRemove = getDifferenceOfArrays(globalMetaSettingsArray, settingsArray);\n      const classNameToAdd = getDifferenceOfArrays(settingsArray, globalMetaSettingsArray);\n      if (classNameToRemove.length) {\n        removeClass(element, classNameToRemove);\n      }\n      if (classNameToAdd.length) {\n        addClass(element, classNameToAdd);\n      }\n    }\n    globalMeta[className] = classSettings;\n  }\n  this.init = function () {\n    dataSource.setData(tableMeta.data);\n    instance.runHooks('beforeInit');\n    if (isMobileBrowser() || isIpadOS()) {\n      addClass(instance.rootElement, 'mobile');\n    }\n    this.updateSettings(tableMeta, true);\n    this.view = new TableView(this);\n    editorManager = EditorManager.getInstance(instance, tableMeta, selection);\n    viewportScroller = createViewportScroller(instance);\n    focusManager = new FocusManager(instance);\n    if (isRootInstance(this)) {\n      installFocusCatcher(instance);\n    }\n    instance.runHooks('init');\n    this.forceFullRender = true; // used when data was changed\n    this.view.render();\n\n    // Run the logic only if it's the table's initialization and the root element is not visible.\n    if (!!firstRun && instance.rootElement.offsetParent === null) {\n      observeVisibilityChangeOnce(instance.rootElement, () => {\n        // Update the spreader size cache before rendering.\n        instance.view._wt.wtOverlays.updateLastSpreaderSize();\n        instance.render();\n        instance.view.adjustElementsSize();\n      });\n    }\n    if (typeof firstRun === 'object') {\n      instance.runHooks('afterChange', firstRun[0], firstRun[1]);\n      firstRun = false;\n    }\n    instance.runHooks('afterInit');\n  };\n\n  /**\r\n   * @ignore\r\n   * @returns {object}\r\n   */\n  function ValidatorsQueue() {\n    // moved this one level up so it can be used in any function here. Probably this should be moved to a separate file\n    let resolved = false;\n    return {\n      validatorsInQueue: 0,\n      valid: true,\n      addValidatorToQueue() {\n        this.validatorsInQueue += 1;\n        resolved = false;\n      },\n      removeValidatorFormQueue() {\n        this.validatorsInQueue = this.validatorsInQueue - 1 < 0 ? 0 : this.validatorsInQueue - 1;\n        this.checkIfQueueIsEmpty();\n      },\n      onQueueEmpty() {},\n      checkIfQueueIsEmpty() {\n        if (this.validatorsInQueue === 0 && resolved === false) {\n          resolved = true;\n          this.onQueueEmpty(this.valid);\n        }\n      }\n    };\n  }\n\n  /**\r\n   * Get parsed number from numeric string.\r\n   *\r\n   * @private\r\n   * @param {string} numericData Float (separated by a dot or a comma) or integer.\r\n   * @returns {number} Number if we get data in parsable format, not changed value otherwise.\r\n   */\n  function getParsedNumber(numericData) {\n    // Unifying \"float like\" string. Change from value with comma determiner to value with dot determiner,\n    // for example from `450,65` to `450.65`.\n    const unifiedNumericData = numericData.replace(',', '.');\n    if (isNaN(parseFloat(unifiedNumericData)) === false) {\n      return parseFloat(unifiedNumericData);\n    }\n    return numericData;\n  }\n\n  /**\r\n   * @ignore\r\n   * @param {Array} changes The 2D array containing information about each of the edited cells.\r\n   * @param {string} source The string that identifies source of validation.\r\n   * @param {Function} callback The callback function fot async validation.\r\n   */\n  function validateChanges(changes, source, callback) {\n    if (!changes.length) {\n      callback();\n      return;\n    }\n    const activeEditor = instance.getActiveEditor();\n    const waitingForValidator = new ValidatorsQueue();\n    let shouldBeCanceled = true;\n    waitingForValidator.onQueueEmpty = () => {\n      if (activeEditor && shouldBeCanceled) {\n        activeEditor.cancelChanges();\n      }\n      callback(); // called when async validators are resolved and beforeChange was not async\n    };\n    for (let i = changes.length - 1; i >= 0; i--) {\n      const [row, prop,, newValue] = changes[i];\n      const visualCol = datamap.propToCol(prop);\n      let cellProperties;\n      if (Number.isInteger(visualCol)) {\n        cellProperties = instance.getCellMeta(row, visualCol);\n      } else {\n        // If there's no requested visual column, we can use the table meta as the cell properties when retrieving\n        // the cell validator.\n        cellProperties = {\n          ...Object.getPrototypeOf(tableMeta),\n          ...tableMeta\n        };\n      }\n      if (cellProperties.type === 'numeric' && typeof newValue === 'string' && isNumericLike(newValue)) {\n        changes[i][3] = getParsedNumber(newValue);\n      }\n\n      /* eslint-disable no-loop-func */\n      if (instance.getCellValidator(cellProperties)) {\n        waitingForValidator.addValidatorToQueue();\n        instance.validateCell(changes[i][3], cellProperties, function (index, cellPropertiesReference) {\n          return function (result) {\n            if (typeof result !== 'boolean') {\n              throw new Error('Validation error: result is not boolean');\n            }\n            if (result === false && cellPropertiesReference.allowInvalid === false) {\n              shouldBeCanceled = false;\n              changes.splice(index, 1); // cancel the change\n              cellPropertiesReference.valid = true; // we cancelled the change, so cell value is still valid\n            }\n            waitingForValidator.removeValidatorFormQueue();\n          };\n        }(i, cellProperties), source);\n      }\n    }\n    waitingForValidator.checkIfQueueIsEmpty();\n  }\n\n  /**\r\n   * Internal function to apply changes. Called after validateChanges.\r\n   *\r\n   * @private\r\n   * @param {Array} changes Array in form of [row, prop, oldValue, newValue].\r\n   * @param {string} source String that identifies how this change will be described in changes array (useful in onChange callback).\r\n   * @fires Hooks#beforeChangeRender\r\n   * @fires Hooks#afterChange\r\n   */\n  function applyChanges(changes, source) {\n    for (let i = changes.length - 1; i >= 0; i--) {\n      let skipThisChange = false;\n      if (changes[i] === null) {\n        changes.splice(i, 1);\n        /* eslint-disable no-continue */\n        continue;\n      }\n      if ((changes[i][2] === null || changes[i][2] === undefined) && (changes[i][3] === null || changes[i][3] === undefined)) {\n        /* eslint-disable no-continue */\n        continue;\n      }\n      if (tableMeta.allowInsertRow) {\n        while (changes[i][0] > instance.countRows() - 1) {\n          const {\n            delta: numberOfCreatedRows\n          } = datamap.createRow(undefined, undefined, {\n            source\n          });\n          if (numberOfCreatedRows === 0) {\n            skipThisChange = true;\n            break;\n          }\n        }\n      }\n      if (instance.dataType === 'array' && (!tableMeta.columns || tableMeta.columns.length === 0) && tableMeta.allowInsertColumn) {\n        while (datamap.propToCol(changes[i][1]) > instance.countCols() - 1) {\n          const {\n            delta: numberOfCreatedColumns\n          } = datamap.createCol(undefined, undefined, {\n            source\n          });\n          if (numberOfCreatedColumns === 0) {\n            skipThisChange = true;\n            break;\n          }\n        }\n      }\n      if (skipThisChange) {\n        /* eslint-disable no-continue */\n        continue;\n      }\n      datamap.set(changes[i][0], changes[i][1], changes[i][3]);\n    }\n    const hasChanges = changes.length > 0;\n    instance.forceFullRender = true; // used when data was changed or when all cells need to be re-rendered\n\n    if (hasChanges) {\n      grid.adjustRowsAndCols();\n      instance.runHooks('beforeChangeRender', changes, source);\n      editorManager.closeEditor();\n      instance.view.render();\n      editorManager.prepareEditor();\n      instance.view.adjustElementsSize();\n      instance.runHooks('afterChange', changes, source || 'edit');\n      const activeEditor = instance.getActiveEditor();\n      if (activeEditor && isDefined(activeEditor.refreshValue)) {\n        activeEditor.refreshValue();\n      }\n    } else {\n      instance.view.render();\n    }\n  }\n\n  /**\r\n   * Creates and returns the CellCoords object.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function _createCellCoords\r\n   * @param {number} row The row index.\r\n   * @param {number} column The column index.\r\n   * @returns {CellCoords}\r\n   */\n  this._createCellCoords = function (row, column) {\n    return instance.view._wt.createCellCoords(row, column);\n  };\n\n  /**\r\n   * Creates and returns the CellRange object.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function _createCellRange\r\n   * @param {CellCoords} highlight Defines the border around a cell where selection was started and to edit the cell\r\n   *                               when you press Enter. The highlight cannot point to headers (negative values).\r\n   * @param {CellCoords} from Initial coordinates.\r\n   * @param {CellCoords} to Final coordinates.\r\n   * @returns {CellRange}\r\n   */\n  this._createCellRange = function (highlight, from, to) {\n    return instance.view._wt.createCellRange(highlight, from, to);\n  };\n\n  /**\r\n   * Validate a single cell.\r\n   *\r\n   * @memberof Core#\r\n   * @function validateCell\r\n   * @param {string|number} value The value to validate.\r\n   * @param {object} cellProperties The cell meta which corresponds with the value.\r\n   * @param {Function} callback The callback function.\r\n   * @param {string} source The string that identifies source of the validation.\r\n   */\n  this.validateCell = function (value, cellProperties, callback, source) {\n    let validator = instance.getCellValidator(cellProperties);\n\n    // the `canBeValidated = false` argument suggests, that the cell passes validation by default.\n    /**\r\n     * @private\r\n     * @function done\r\n     * @param {boolean} valid Indicates if the validation was successful.\r\n     * @param {boolean} [canBeValidated=true] Flag which controls the validation process.\r\n     */\n    function done(valid) {\n      let canBeValidated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      // Fixes GH#3903\n      if (!canBeValidated || cellProperties.hidden === true) {\n        callback(valid);\n        return;\n      }\n      const col = cellProperties.visualCol;\n      const row = cellProperties.visualRow;\n      const td = instance.getCell(row, col, true);\n      if (td && td.nodeName !== 'TH') {\n        const renderableRow = instance.rowIndexMapper.getRenderableFromVisualIndex(row);\n        const renderableColumn = instance.columnIndexMapper.getRenderableFromVisualIndex(col);\n        instance.view._wt.getSetting('cellRenderer', renderableRow, renderableColumn, td);\n      }\n      callback(valid);\n    }\n    if (isRegExp(validator)) {\n      validator = function (expression) {\n        return function (cellValue, validatorCallback) {\n          validatorCallback(expression.test(cellValue));\n        };\n      }(validator);\n    }\n    if (isFunction(validator)) {\n      // eslint-disable-next-line no-param-reassign\n      value = instance.runHooks('beforeValidate', value, cellProperties.visualRow, cellProperties.prop, source);\n\n      // To provide consistent behaviour, validation should be always asynchronous\n      instance._registerImmediate(() => {\n        validator.call(cellProperties, value, valid => {\n          if (!instance) {\n            return;\n          }\n          // eslint-disable-next-line no-param-reassign\n          valid = instance.runHooks('afterValidate', valid, value, cellProperties.visualRow, cellProperties.prop, source);\n          cellProperties.valid = valid;\n          done(valid);\n          instance.runHooks('postAfterValidate', valid, value, cellProperties.visualRow, cellProperties.prop, source);\n        });\n      });\n    } else {\n      // resolve callback even if validator function was not found\n      instance._registerImmediate(() => {\n        cellProperties.valid = true;\n        done(cellProperties.valid, false);\n      });\n    }\n  };\n\n  /**\r\n   * @ignore\r\n   * @param {number} row The visual row index.\r\n   * @param {string|number} propOrCol The visual prop or column index.\r\n   * @param {*} value The cell value.\r\n   * @returns {Array}\r\n   */\n  function setDataInputToArray(row, propOrCol, value) {\n    if (Array.isArray(row)) {\n      // it's an array of changes\n      return row;\n    }\n    return [[row, propOrCol, value]];\n  }\n\n  /**\r\n   * Process changes prepared for applying to the dataset (unifying list of changes, closing an editor - when needed,\r\n   * calling a hook).\r\n   *\r\n   * @private\r\n   * @param {Array} changes Array of changes in format `[[row, col, value],...]`.\r\n   * @param {string} [source] String that identifies how this change will be described in the changes array (useful in afterChange or beforeChange callback). Set to 'edit' if left empty.\r\n   * @returns {Array} List of changes finally applied to the dataset.\r\n   */\n  function processChanges(changes, source) {\n    const activeEditor = instance.getActiveEditor();\n    const beforeChangeResult = instance.runHooks('beforeChange', changes, source || 'edit');\n    // The `beforeChange` hook could add a `null` for purpose of cancelling some dataset's change.\n    const filteredChanges = changes.filter(change => change !== null);\n    if (beforeChangeResult === false || filteredChanges.length === 0) {\n      if (activeEditor) {\n        activeEditor.cancelChanges();\n      }\n      return [];\n    }\n    return filteredChanges;\n  }\n\n  /**\r\n   * @description\r\n   * Set new value to a cell. To change many cells at once (recommended way), pass an array of `changes` in format\r\n   * `[[row, col, value],...]` as the first argument.\r\n   *\r\n   * @memberof Core#\r\n   * @function setDataAtCell\r\n   * @param {number|Array} row Visual row index or array of changes in format `[[row, col, value],...]`.\r\n   * @param {number} [column] Visual column index.\r\n   * @param {string} [value] New value.\r\n   * @param {string} [source] String that identifies how this change will be described in the changes array (useful in afterChange or beforeChange callback). Set to 'edit' if left empty.\r\n   */\n  this.setDataAtCell = function (row, column, value, source) {\n    const input = setDataInputToArray(row, column, value);\n    const changes = [];\n    let changeSource = source;\n    let i;\n    let ilen;\n    let prop;\n    for (i = 0, ilen = input.length; i < ilen; i++) {\n      if (typeof input[i] !== 'object') {\n        throw new Error('Method `setDataAtCell` accepts row number or changes array of arrays as its first parameter');\n      }\n      if (typeof input[i][1] !== 'number') {\n        throw new Error('Method `setDataAtCell` accepts row and column number as its parameters. If you want to use object property name, use method `setDataAtRowProp`'); // eslint-disable-line max-len\n      }\n      if (input[i][1] >= this.countCols()) {\n        prop = input[i][1];\n      } else {\n        prop = datamap.colToProp(input[i][1]);\n      }\n      changes.push([input[i][0], prop, dataSource.getAtCell(this.toPhysicalRow(input[i][0]), input[i][1]), input[i][2]]);\n    }\n    if (!changeSource && typeof row === 'object') {\n      changeSource = column;\n    }\n    const processedChanges = processChanges(changes, source);\n    instance.runHooks('afterSetDataAtCell', processedChanges, changeSource);\n    validateChanges(processedChanges, changeSource, () => {\n      applyChanges(processedChanges, changeSource);\n    });\n  };\n\n  /**\r\n   * @description\r\n   * Set new value to a cell. To change many cells at once (recommended way), pass an array of `changes` in format\r\n   * `[[row, prop, value],...]` as the first argument.\r\n   *\r\n   * @memberof Core#\r\n   * @function setDataAtRowProp\r\n   * @param {number|Array} row Visual row index or array of changes in format `[[row, prop, value], ...]`.\r\n   * @param {string} prop Property name or the source string (e.g. `'first.name'` or `'0'`).\r\n   * @param {string} value Value to be set.\r\n   * @param {string} [source] String that identifies how this change will be described in changes array (useful in onChange callback).\r\n   */\n  this.setDataAtRowProp = function (row, prop, value, source) {\n    const input = setDataInputToArray(row, prop, value);\n    const changes = [];\n    let changeSource = source;\n    let i;\n    let ilen;\n    for (i = 0, ilen = input.length; i < ilen; i++) {\n      changes.push([input[i][0], input[i][1], dataSource.getAtCell(this.toPhysicalRow(input[i][0]), input[i][1]), input[i][2]]);\n    }\n\n    // TODO: I don't think `prop` should be used as `changeSource` here, but removing it would be a breaking change.\n    // We should remove it with the next major release.\n    if (!changeSource && typeof row === 'object') {\n      changeSource = prop;\n    }\n    const processedChanges = processChanges(changes, source);\n    instance.runHooks('afterSetDataAtRowProp', processedChanges, changeSource);\n    validateChanges(processedChanges, changeSource, () => {\n      applyChanges(processedChanges, changeSource);\n    });\n  };\n\n  /**\r\n   * Listen to the keyboard input on document body. This allows Handsontable to capture keyboard events and respond\r\n   * in the right way.\r\n   *\r\n   * @memberof Core#\r\n   * @function listen\r\n   * @fires Hooks#afterListen\r\n   */\n  this.listen = function () {\n    if (instance && !instance.isListening()) {\n      foreignHotInstances.forEach(foreignHot => {\n        if (instance !== foreignHot) {\n          foreignHot.unlisten();\n        }\n      });\n      activeGuid = instance.guid;\n      instance.runHooks('afterListen');\n    }\n  };\n\n  /**\r\n   * Stop listening to keyboard input on the document body. Calling this method makes the Handsontable inactive for\r\n   * any keyboard events.\r\n   *\r\n   * @memberof Core#\r\n   * @function unlisten\r\n   */\n  this.unlisten = function () {\n    if (this.isListening()) {\n      activeGuid = null;\n      instance.runHooks('afterUnlisten');\n    }\n  };\n\n  /**\r\n   * Returns `true` if the current Handsontable instance is listening to keyboard input on document body.\r\n   *\r\n   * @memberof Core#\r\n   * @function isListening\r\n   * @returns {boolean} `true` if the instance is listening, `false` otherwise.\r\n   */\n  this.isListening = function () {\n    return activeGuid === instance.guid;\n  };\n\n  /**\r\n   * Destroys the current editor, render the table and prepares the editor of the newly selected cell.\r\n   *\r\n   * @memberof Core#\r\n   * @function destroyEditor\r\n   * @param {boolean} [revertOriginal=false] If `true`, the previous value will be restored. Otherwise, the edited value will be saved.\r\n   * @param {boolean} [prepareEditorIfNeeded=true] If `true` the editor under the selected cell will be prepared to open.\r\n   */\n  this.destroyEditor = function () {\n    let revertOriginal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let prepareEditorIfNeeded = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    editorManager.closeEditor(revertOriginal);\n    instance.view.render();\n    if (prepareEditorIfNeeded && selection.isSelected()) {\n      editorManager.prepareEditor();\n    }\n  };\n\n  /**\r\n   * Populates cells at position with 2D input array (e.g. `[[1, 2], [3, 4]]`). Use `endRow`, `endCol` when you\r\n   * want to cut input when a certain row is reached.\r\n   *\r\n   * The `populateFromArray()` method can't change [`readOnly`](@/api/options.md#readonly) cells.\r\n   *\r\n   * Optional `method` argument has the same effect as pasteMode option (see {@link Options#pasteMode}).\r\n   *\r\n   * @memberof Core#\r\n   * @function populateFromArray\r\n   * @param {number} row Start visual row index.\r\n   * @param {number} column Start visual column index.\r\n   * @param {Array} input 2d array.\r\n   * @param {number} [endRow] End visual row index (use when you want to cut input when certain row is reached).\r\n   * @param {number} [endCol] End visual column index (use when you want to cut input when certain column is reached).\r\n   * @param {string} [source=populateFromArray] Used to identify this call in the resulting events (beforeChange, afterChange).\r\n   * @param {string} [method=overwrite] Populate method, possible values: `'shift_down'`, `'shift_right'`, `'overwrite'`.\r\n   * @returns {object|undefined} Ending td in pasted area (only if any cell was changed).\r\n   */\n  this.populateFromArray = function (row, column, input, endRow, endCol, source, method) {\n    if (!(typeof input === 'object' && typeof input[0] === 'object')) {\n      throw new Error('populateFromArray parameter `input` must be an array of arrays'); // API changed in 0.9-beta2, let's check if you use it correctly\n    }\n    const c = typeof endRow === 'number' ? instance._createCellCoords(endRow, endCol) : null;\n    return grid.populateFromArray(instance._createCellCoords(row, column), input, c, source, method);\n  };\n\n  /**\r\n   * Adds/removes data from the column. This method works the same as Array.splice for arrays.\r\n   *\r\n   * @memberof Core#\r\n   * @function spliceCol\r\n   * @param {number} column Index of the column in which do you want to do splice.\r\n   * @param {number} index Index at which to start changing the array. If negative, will begin that many elements from the end.\r\n   * @param {number} amount An integer indicating the number of old array elements to remove. If amount is 0, no elements are removed.\r\n   * @param {...number} [elements] The elements to add to the array. If you don't specify any elements, spliceCol simply removes elements from the array.\r\n   * @returns {Array} Returns removed portion of columns.\r\n   */\n  this.spliceCol = function (column, index, amount) {\n    for (var _len16 = arguments.length, elements = new Array(_len16 > 3 ? _len16 - 3 : 0), _key16 = 3; _key16 < _len16; _key16++) {\n      elements[_key16 - 3] = arguments[_key16];\n    }\n    return datamap.spliceCol(column, index, amount, ...elements);\n  };\n\n  /**\r\n   * Adds/removes data from the row. This method works the same as Array.splice for arrays.\r\n   *\r\n   * @memberof Core#\r\n   * @function spliceRow\r\n   * @param {number} row Index of column in which do you want to do splice.\r\n   * @param {number} index Index at which to start changing the array. If negative, will begin that many elements from the end.\r\n   * @param {number} amount An integer indicating the number of old array elements to remove. If amount is 0, no elements are removed.\r\n   * @param {...number} [elements] The elements to add to the array. If you don't specify any elements, spliceCol simply removes elements from the array.\r\n   * @returns {Array} Returns removed portion of rows.\r\n   */\n  this.spliceRow = function (row, index, amount) {\n    for (var _len17 = arguments.length, elements = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {\n      elements[_key17 - 3] = arguments[_key17];\n    }\n    return datamap.spliceRow(row, index, amount, ...elements);\n  };\n\n  /**\r\n   * Returns indexes of the currently selected cells as an array of arrays `[[startRow, startCol, endRow, endCol],...]`.\r\n   *\r\n   * Start row and start column are the coordinates of the active cell (where the selection was started).\r\n   *\r\n   * The version 0.36.0 adds a non-consecutive selection feature. Since this version, the method returns an array of arrays.\r\n   * Additionally to collect the coordinates of the currently selected area (as it was previously done by the method)\r\n   * you need to use `getSelectedLast` method.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSelected\r\n   * @returns {Array[]|undefined} An array of arrays of the selection's coordinates.\r\n   */\n  this.getSelected = function () {\n    // https://github.com/handsontable/handsontable/issues/44  //cjl\n    if (selection.isSelected()) {\n      return arrayMap(selection.getSelectedRange(), _ref7 => {\n        let {\n          from,\n          to\n        } = _ref7;\n        return [from.row, from.col, to.row, to.col];\n      });\n    }\n  };\n\n  /**\r\n   * Returns the last coordinates applied to the table as a an array `[startRow, startCol, endRow, endCol]`.\r\n   *\r\n   * @since 0.36.0\r\n   * @memberof Core#\r\n   * @function getSelectedLast\r\n   * @returns {Array|undefined} An array of the selection's coordinates.\r\n   */\n  this.getSelectedLast = function () {\n    const selected = this.getSelected();\n    let result;\n    if (selected && selected.length > 0) {\n      result = selected[selected.length - 1];\n    }\n    return result;\n  };\n\n  /**\r\n   * Returns the current selection as an array of CellRange objects.\r\n   *\r\n   * The version 0.36.0 adds a non-consecutive selection feature. Since this version, the method returns an array of arrays.\r\n   * Additionally to collect the coordinates of the currently selected area (as it was previously done by the method)\r\n   * you need to use `getSelectedRangeLast` method.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSelectedRange\r\n   * @returns {CellRange[]|undefined} Selected range object or undefined if there is no selection.\r\n   */\n  this.getSelectedRange = function () {\n    // https://github.com/handsontable/handsontable/issues/44  //cjl\n    if (selection.isSelected()) {\n      return Array.from(selection.getSelectedRange());\n    }\n  };\n\n  /**\r\n   * Returns the last coordinates applied to the table as a CellRange object.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSelectedRangeLast\r\n   * @since 0.36.0\r\n   * @returns {CellRange|undefined} Selected range object or undefined` if there is no selection.\r\n   */\n  this.getSelectedRangeLast = function () {\n    const selectedRange = this.getSelectedRange();\n    let result;\n    if (selectedRange && selectedRange.length > 0) {\n      result = selectedRange[selectedRange.length - 1];\n    }\n    return result;\n  };\n\n  /**\r\n   * Erases content from cells that have been selected in the table.\r\n   *\r\n   * @memberof Core#\r\n   * @function emptySelectedCells\r\n   * @param {string} [source] String that identifies how this change will be described in the changes array (useful in afterChange or beforeChange callback). Set to 'edit' if left empty.\r\n   * @since 0.36.0\r\n   */\n  this.emptySelectedCells = function (source) {\n    if (!selection.isSelected() || this.countRows() === 0 || this.countCols() === 0) {\n      return;\n    }\n    const changes = [];\n    arrayEach(selection.getSelectedRange(), cellRange => {\n      if (cellRange.isSingleHeader()) {\n        return;\n      }\n      const topStart = cellRange.getTopStartCorner();\n      const bottomEnd = cellRange.getBottomEndCorner();\n      rangeEach(topStart.row, bottomEnd.row, row => {\n        rangeEach(topStart.col, bottomEnd.col, column => {\n          if (!this.getCellMeta(row, column).readOnly) {\n            changes.push([row, column, null]);\n          }\n        });\n      });\n    });\n    if (changes.length > 0) {\n      this.setDataAtCell(changes, source);\n    }\n  };\n\n  /**\r\n   * Checks if the table rendering process was suspended. See explanation in {@link Core#suspendRender}.\r\n   *\r\n   * @memberof Core#\r\n   * @function isRenderSuspended\r\n   * @since 8.3.0\r\n   * @returns {boolean}\r\n   */\n  this.isRenderSuspended = function () {\n    return this.renderSuspendedCounter > 0;\n  };\n\n  /**\r\n   * Suspends the rendering process. It's helpful to wrap the table render\r\n   * cycles triggered by API calls or UI actions (or both) and call the \"render\"\r\n   * once in the end. As a result, it improves the performance of wrapped operations.\r\n   * When the table is in the suspend state, most operations will have no visual\r\n   * effect until the rendering state is resumed. Resuming the state automatically\r\n   * invokes the table rendering. To make sure that after executing all operations,\r\n   * the table will be rendered, it's highly recommended to use the {@link Core#batchRender}\r\n   * method or {@link Core#batch}, which additionally aggregates the logic execution\r\n   * that happens behind the table.\r\n   *\r\n   * The method is intended to be used by advanced users. Suspending the rendering\r\n   * process could cause visual glitches when wrongly implemented.\r\n   *\r\n   * Every [`suspendRender()`](@/api/core.md#suspendrender) call needs to correspond with one [`resumeRender()`](@/api/core.md#resumerender) call.\r\n   * For example, if you call [`suspendRender()`](@/api/core.md#suspendrender) 5 times, you need to call [`resumeRender()`](@/api/core.md#resumerender) 5 times as well.\r\n   *\r\n   * @memberof Core#\r\n   * @function suspendRender\r\n   * @since 8.3.0\r\n   * @example\r\n   * ```js\r\n   * hot.suspendRender();\r\n   * hot.alter('insert_row_above', 5, 45);\r\n   * hot.alter('insert_col_start', 10, 40);\r\n   * hot.setDataAtCell(1, 1, 'John');\r\n   * hot.setDataAtCell(2, 2, 'Mark');\r\n   * hot.setDataAtCell(3, 3, 'Ann');\r\n   * hot.setDataAtCell(4, 4, 'Sophia');\r\n   * hot.setDataAtCell(5, 5, 'Mia');\r\n   * hot.selectCell(0, 0);\r\n   * hot.resumeRender(); // It re-renders the table internally\r\n   * ```\r\n   */\n  this.suspendRender = function () {\n    this.renderSuspendedCounter += 1;\n  };\n\n  /**\r\n   * Resumes the rendering process. In combination with the {@link Core#suspendRender}\r\n   * method it allows aggregating the table render cycles triggered by API calls or UI\r\n   * actions (or both) and calls the \"render\" once in the end. When the table is in\r\n   * the suspend state, most operations will have no visual effect until the rendering\r\n   * state is resumed. Resuming the state automatically invokes the table rendering.\r\n   *\r\n   * The method is intended to be used by advanced users. Suspending the rendering\r\n   * process could cause visual glitches when wrongly implemented.\r\n   *\r\n   * Every [`suspendRender()`](@/api/core.md#suspendrender) call needs to correspond with one [`resumeRender()`](@/api/core.md#resumerender) call.\r\n   * For example, if you call [`suspendRender()`](@/api/core.md#suspendrender) 5 times, you need to call [`resumeRender()`](@/api/core.md#resumerender) 5 times as well.\r\n   *\r\n   * @memberof Core#\r\n   * @function resumeRender\r\n   * @since 8.3.0\r\n   * @example\r\n   * ```js\r\n   * hot.suspendRender();\r\n   * hot.alter('insert_row_above', 5, 45);\r\n   * hot.alter('insert_col_start', 10, 40);\r\n   * hot.setDataAtCell(1, 1, 'John');\r\n   * hot.setDataAtCell(2, 2, 'Mark');\r\n   * hot.setDataAtCell(3, 3, 'Ann');\r\n   * hot.setDataAtCell(4, 4, 'Sophia');\r\n   * hot.setDataAtCell(5, 5, 'Mia');\r\n   * hot.selectCell(0, 0);\r\n   * hot.resumeRender(); // It re-renders the table internally\r\n   * ```\r\n   */\n  this.resumeRender = function () {\n    const nextValue = this.renderSuspendedCounter - 1;\n    this.renderSuspendedCounter = Math.max(nextValue, 0);\n    if (!this.isRenderSuspended() && nextValue === this.renderSuspendedCounter) {\n      if (this.renderCall) {\n        this.render();\n      } else {\n        instance.view.render();\n      }\n    }\n  };\n\n  /**\r\n   * Rerender the table. Calling this method starts the process of recalculating, redrawing and applying the changes\r\n   * to the DOM. While rendering the table all cell renderers are recalled.\r\n   *\r\n   * Calling this method manually is not recommended. Handsontable tries to render itself by choosing the most\r\n   * optimal moments in its lifecycle.\r\n   *\r\n   * @memberof Core#\r\n   * @function render\r\n   */\n  this.render = function () {\n    if (this.view) {\n      this.renderCall = true;\n      this.forceFullRender = true; // used when data was changed or when all cells need to be re-rendered\n\n      if (!this.isRenderSuspended()) {\n        instance.view.render();\n      }\n    }\n  };\n\n  /**\r\n   * The method aggregates multi-line API calls into a callback and postpones the\r\n   * table rendering process. After the execution of the operations, the table is\r\n   * rendered once. As a result, it improves the performance of wrapped operations.\r\n   * Without batching, a similar case could trigger multiple table render calls.\r\n   *\r\n   * @memberof Core#\r\n   * @function batchRender\r\n   * @param {Function} wrappedOperations Batched operations wrapped in a function.\r\n   * @returns {*} Returns result from the wrappedOperations callback.\r\n   * @since 8.3.0\r\n   * @example\r\n   * ```js\r\n   * hot.batchRender(() => {\r\n   *   hot.alter('insert_row_above', 5, 45);\r\n   *   hot.alter('insert_col_start', 10, 40);\r\n   *   hot.setDataAtCell(1, 1, 'John');\r\n   *   hot.setDataAtCell(2, 2, 'Mark');\r\n   *   hot.setDataAtCell(3, 3, 'Ann');\r\n   *   hot.setDataAtCell(4, 4, 'Sophia');\r\n   *   hot.setDataAtCell(5, 5, 'Mia');\r\n   *   hot.selectCell(0, 0);\r\n   *   // The table will be rendered once after executing the callback\r\n   * });\r\n   * ```\r\n   */\n  this.batchRender = function (wrappedOperations) {\n    this.suspendRender();\n    const result = wrappedOperations();\n    this.resumeRender();\n    return result;\n  };\n\n  /**\r\n   * Checks if the table indexes recalculation process was suspended. See explanation\r\n   * in {@link Core#suspendExecution}.\r\n   *\r\n   * @memberof Core#\r\n   * @function isExecutionSuspended\r\n   * @since 8.3.0\r\n   * @returns {boolean}\r\n   */\n  this.isExecutionSuspended = function () {\n    return this.executionSuspendedCounter > 0;\n  };\n\n  /**\r\n   * Suspends the execution process. It's helpful to wrap the table logic changes\r\n   * such as index changes into one call after which the cache is updated. As a result,\r\n   * it improves the performance of wrapped operations.\r\n   *\r\n   * The method is intended to be used by advanced users. Suspending the execution\r\n   * process could cause visual glitches caused by not updated the internal table cache.\r\n   *\r\n   * @memberof Core#\r\n   * @function suspendExecution\r\n   * @since 8.3.0\r\n   * @example\r\n   * ```js\r\n   * hot.suspendExecution();\r\n   * const filters = hot.getPlugin('filters');\r\n   *\r\n   * filters.addCondition(2, 'contains', ['3']);\r\n   * filters.filter();\r\n   * hot.getPlugin('columnSorting').sort({ column: 1, sortOrder: 'desc' });\r\n   * hot.resumeExecution(); // It updates the cache internally\r\n   * ```\r\n   */\n  this.suspendExecution = function () {\n    this.executionSuspendedCounter += 1;\n    this.columnIndexMapper.suspendOperations();\n    this.rowIndexMapper.suspendOperations();\n  };\n\n  /**\r\n   * Resumes the execution process. In combination with the {@link Core#suspendExecution}\r\n   * method it allows aggregating the table logic changes after which the cache is\r\n   * updated. Resuming the state automatically invokes the table cache updating process.\r\n   *\r\n   * The method is intended to be used by advanced users. Suspending the execution\r\n   * process could cause visual glitches caused by not updated the internal table cache.\r\n   *\r\n   * @memberof Core#\r\n   * @function resumeExecution\r\n   * @param {boolean} [forceFlushChanges=false] If `true`, the table internal data cache\r\n   * is recalculated after the execution of the batched operations. For nested\r\n   * {@link Core#batchExecution} calls, it can be desire to recalculate the table\r\n   * after each batch.\r\n   * @since 8.3.0\r\n   * @example\r\n   * ```js\r\n   * hot.suspendExecution();\r\n   * const filters = hot.getPlugin('filters');\r\n   *\r\n   * filters.addCondition(2, 'contains', ['3']);\r\n   * filters.filter();\r\n   * hot.getPlugin('columnSorting').sort({ column: 1, sortOrder: 'desc' });\r\n   * hot.resumeExecution(); // It updates the cache internally\r\n   * ```\r\n   */\n  this.resumeExecution = function () {\n    let forceFlushChanges = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const nextValue = this.executionSuspendedCounter - 1;\n    this.executionSuspendedCounter = Math.max(nextValue, 0);\n    if (!this.isExecutionSuspended() && nextValue === this.executionSuspendedCounter || forceFlushChanges) {\n      this.columnIndexMapper.resumeOperations();\n      this.rowIndexMapper.resumeOperations();\n    }\n  };\n\n  /**\r\n   * The method aggregates multi-line API calls into a callback and postpones the\r\n   * table execution process. After the execution of the operations, the internal table\r\n   * cache is recalculated once. As a result, it improves the performance of wrapped\r\n   * operations. Without batching, a similar case could trigger multiple table cache rebuilds.\r\n   *\r\n   * @memberof Core#\r\n   * @function batchExecution\r\n   * @param {Function} wrappedOperations Batched operations wrapped in a function.\r\n   * @param {boolean} [forceFlushChanges=false] If `true`, the table internal data cache\r\n   * is recalculated after the execution of the batched operations. For nested calls,\r\n   * it can be a desire to recalculate the table after each batch.\r\n   * @returns {*} Returns result from the wrappedOperations callback.\r\n   * @since 8.3.0\r\n   * @example\r\n   * ```js\r\n   * hot.batchExecution(() => {\r\n   *   const filters = hot.getPlugin('filters');\r\n   *\r\n   *   filters.addCondition(2, 'contains', ['3']);\r\n   *   filters.filter();\r\n   *   hot.getPlugin('columnSorting').sort({ column: 1, sortOrder: 'desc' });\r\n   *   // The table cache will be recalculated once after executing the callback\r\n   * });\r\n   * ```\r\n   */\n  this.batchExecution = function (wrappedOperations) {\n    let forceFlushChanges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.suspendExecution();\n    const result = wrappedOperations();\n    this.resumeExecution(forceFlushChanges);\n    return result;\n  };\n\n  /**\r\n   * It batches the rendering process and index recalculations. The method aggregates\r\n   * multi-line API calls into a callback and postpones the table rendering process\r\n   * as well aggregates the table logic changes such as index changes into one call\r\n   * after which the cache is updated. After the execution of the operations, the\r\n   * table is rendered, and the cache is updated once. As a result, it improves the\r\n   * performance of wrapped operations.\r\n   *\r\n   * @memberof Core#\r\n   * @function batch\r\n   * @param {Function} wrappedOperations Batched operations wrapped in a function.\r\n   * @returns {*} Returns result from the wrappedOperations callback.\r\n   * @since 8.3.0\r\n   * @example\r\n   * ```js\r\n   * hot.batch(() => {\r\n   *   hot.alter('insert_row_above', 5, 45);\r\n   *   hot.alter('insert_col_start', 10, 40);\r\n   *   hot.setDataAtCell(1, 1, 'x');\r\n   *   hot.setDataAtCell(2, 2, 'c');\r\n   *   hot.setDataAtCell(3, 3, 'v');\r\n   *   hot.setDataAtCell(4, 4, 'b');\r\n   *   hot.setDataAtCell(5, 5, 'n');\r\n   *   hot.selectCell(0, 0);\r\n   *\r\n   *   const filters = hot.getPlugin('filters');\r\n   *\r\n   *   filters.addCondition(2, 'contains', ['3']);\r\n   *   filters.filter();\r\n   *   hot.getPlugin('columnSorting').sort({ column: 1, sortOrder: 'desc' });\r\n   *   // The table will be re-rendered and cache will be recalculated once after executing the callback\r\n   * });\r\n   * ```\r\n   */\n  this.batch = function (wrappedOperations) {\n    this.suspendRender();\n    this.suspendExecution();\n    const result = wrappedOperations();\n    this.resumeExecution();\n    this.resumeRender();\n    return result;\n  };\n\n  /**\r\n   * Updates dimensions of the table. The method compares previous dimensions with the current ones and updates accordingly.\r\n   *\r\n   * @memberof Core#\r\n   * @function refreshDimensions\r\n   * @fires Hooks#beforeRefreshDimensions\r\n   * @fires Hooks#afterRefreshDimensions\r\n   */\n  this.refreshDimensions = function () {\n    if (!instance.view) {\n      return;\n    }\n    const {\n      width: lastWidth,\n      height: lastHeight\n    } = instance.view.getLastSize();\n    const {\n      width,\n      height\n    } = instance.rootElement.getBoundingClientRect();\n    const isSizeChanged = width !== lastWidth || height !== lastHeight;\n    const isResizeBlocked = instance.runHooks('beforeRefreshDimensions', {\n      width: lastWidth,\n      height: lastHeight\n    }, {\n      width,\n      height\n    }, isSizeChanged) === false;\n    if (isResizeBlocked) {\n      return;\n    }\n    if (isSizeChanged || instance.view._wt.wtOverlays.scrollableElement === instance.rootWindow) {\n      instance.view.setLastSize(width, height);\n      instance.render();\n    }\n    instance.runHooks('afterRefreshDimensions', {\n      width: lastWidth,\n      height: lastHeight\n    }, {\n      width,\n      height\n    }, isSizeChanged);\n  };\n\n  /**\r\n   * The `updateData()` method replaces Handsontable's [`data`](@/api/options.md#data) with a new dataset.\r\n   *\r\n   * The `updateData()` method:\r\n   * - Keeps cells' states (e.g. cells' [formatting](@/guides/cell-features/formatting-cells/formatting-cells.md) and cells' [`readOnly`](@/api/options.md#readonly) states)\r\n   * - Keeps rows' states (e.g. row order)\r\n   * - Keeps columns' states (e.g. column order)\r\n   *\r\n   * To replace Handsontable's [`data`](@/api/options.md#data) and reset states, use the [`loadData()`](#loaddata) method.\r\n   *\r\n   * Read more:\r\n   * - [Binding to data](@/guides/getting-started/binding-to-data/binding-to-data.md)\r\n   * - [Saving data](@/guides/getting-started/saving-data/saving-data.md)\r\n   *\r\n   * @memberof Core#\r\n   * @function updateData\r\n   * @since 11.1.0\r\n   * @param {Array} data An [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays), or an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects), that contains Handsontable's data\r\n   * @param {string} [source] The source of the `updateData()` call\r\n   * @fires Hooks#beforeUpdateData\r\n   * @fires Hooks#afterUpdateData\r\n   * @fires Hooks#afterChange\r\n   */\n  this.updateData = function (data, source) {\n    replaceData(data, newDataMap => {\n      datamap = newDataMap;\n    }, newDataMap => {\n      datamap = newDataMap;\n      instance.columnIndexMapper.fitToLength(this.getInitialColumnCount());\n      instance.rowIndexMapper.fitToLength(this.countSourceRows());\n      grid.adjustRowsAndCols();\n      selection.refresh();\n    }, {\n      hotInstance: instance,\n      dataMap: datamap,\n      dataSource,\n      internalSource: 'updateData',\n      source,\n      metaManager,\n      firstRun\n    });\n  };\n\n  /**\r\n   * The `loadData()` method replaces Handsontable's [`data`](@/api/options.md#data) with a new dataset.\r\n   *\r\n   * Additionally, the `loadData()` method:\r\n   * - Resets cells' states (e.g. cells' [formatting](@/guides/cell-features/formatting-cells/formatting-cells.md) and cells' [`readOnly`](@/api/options.md#readonly) states)\r\n   * - Resets rows' states (e.g. row order)\r\n   * - Resets columns' states (e.g. column order)\r\n   *\r\n   * To replace Handsontable's [`data`](@/api/options.md#data) without resetting states, use the [`updateData()`](#updatedata) method.\r\n   *\r\n   * Read more:\r\n   * - [Binding to data](@/guides/getting-started/binding-to-data/binding-to-data.md)\r\n   * - [Saving data](@/guides/getting-started/saving-data/saving-data.md)\r\n   *\r\n   * @memberof Core#\r\n   * @function loadData\r\n   * @param {Array} data An [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays), or an [array of objects](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-objects), that contains Handsontable's data\r\n   * @param {string} [source] The source of the `loadData()` call\r\n   * @fires Hooks#beforeLoadData\r\n   * @fires Hooks#afterLoadData\r\n   * @fires Hooks#afterChange\r\n   */\n  this.loadData = function (data, source) {\n    replaceData(data, newDataMap => {\n      datamap = newDataMap;\n    }, () => {\n      metaManager.clearCellsCache();\n      instance.initIndexMappers();\n      grid.adjustRowsAndCols();\n      selection.refresh();\n      if (firstRun) {\n        firstRun = [null, 'loadData'];\n      }\n    }, {\n      hotInstance: instance,\n      dataMap: datamap,\n      dataSource,\n      internalSource: 'loadData',\n      source,\n      metaManager,\n      firstRun\n    });\n  };\n\n  /**\r\n   * Gets the initial column count, calculated based on the `columns` setting.\r\n   *\r\n   * @private\r\n   * @returns {number} The calculated number of columns.\r\n   */\n  this.getInitialColumnCount = function () {\n    const columnsSettings = tableMeta.columns;\n    let finalNrOfColumns = 0;\n\n    // We will check number of columns when the `columns` property was defined as an array. Columns option may\n    // narrow down or expand displayed dataset in that case.\n    if (Array.isArray(columnsSettings)) {\n      finalNrOfColumns = columnsSettings.length;\n    } else if (isFunction(columnsSettings)) {\n      if (instance.dataType === 'array') {\n        const nrOfSourceColumns = this.countSourceCols();\n        for (let columnIndex = 0; columnIndex < nrOfSourceColumns; columnIndex += 1) {\n          if (columnsSettings(columnIndex)) {\n            finalNrOfColumns += 1;\n          }\n        }\n\n        // Extended dataset by the `columns` property? Moved code right from the refactored `countCols` method.\n      } else if (instance.dataType === 'object' || instance.dataType === 'function') {\n        finalNrOfColumns = datamap.colToPropCache.length;\n      }\n\n      // In some cases we need to check columns length from the schema, i.e. `data` may be empty.\n    } else if (isDefined(tableMeta.dataSchema)) {\n      const schema = datamap.getSchema();\n\n      // Schema may be defined as an array of objects. Each object will define column.\n      finalNrOfColumns = Array.isArray(schema) ? schema.length : deepObjectSize(schema);\n    } else {\n      // We init index mappers by length of source data to provide indexes also for skipped indexes.\n      finalNrOfColumns = this.countSourceCols();\n    }\n    return finalNrOfColumns;\n  };\n\n  /**\r\n   * Init index mapper which manage indexes assigned to the data.\r\n   *\r\n   * @private\r\n   */\n  this.initIndexMappers = function () {\n    this.columnIndexMapper.initToLength(this.getInitialColumnCount());\n    this.rowIndexMapper.initToLength(this.countSourceRows());\n  };\n\n  /**\r\n   * Returns the current data object (the same one that was passed by `data` configuration option or `loadData` method,\r\n   * unless some modifications have been applied (i.e. Sequence of rows/columns was changed, some row/column was skipped).\r\n   * If that's the case - use the {@link Core#getSourceData} method.).\r\n   *\r\n   * Optionally you can provide cell range by defining `row`, `column`, `row2`, `column2` to get only a fragment of table data.\r\n   *\r\n   * @memberof Core#\r\n   * @function getData\r\n   * @param {number} [row] From visual row index.\r\n   * @param {number} [column] From visual column index.\r\n   * @param {number} [row2] To visual row index.\r\n   * @param {number} [column2] To visual column index.\r\n   * @returns {Array[]} Array with the data.\r\n   * @example\r\n   * ```js\r\n   * // Get all data (in order how it is rendered in the table).\r\n   * hot.getData();\r\n   * // Get data fragment (from top-left 0, 0 to bottom-right 3, 3).\r\n   * hot.getData(3, 3);\r\n   * // Get data fragment (from top-left 2, 1 to bottom-right 3, 3).\r\n   * hot.getData(2, 1, 3, 3);\r\n   * ```\r\n   */\n  this.getData = function (row, column, row2, column2) {\n    if (isUndefined(row)) {\n      return datamap.getAll();\n    }\n    return datamap.getRange(instance._createCellCoords(row, column), instance._createCellCoords(row2, column2), datamap.DESTINATION_RENDERER);\n  };\n\n  /**\r\n   * Returns a string value of the selected range. Each column is separated by tab, each row is separated by a new\r\n   * line character.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCopyableText\r\n   * @param {number} startRow From visual row index.\r\n   * @param {number} startCol From visual column index.\r\n   * @param {number} endRow To visual row index.\r\n   * @param {number} endCol To visual column index.\r\n   * @returns {string}\r\n   */\n  this.getCopyableText = function (startRow, startCol, endRow, endCol) {\n    return datamap.getCopyableText(instance._createCellCoords(startRow, startCol), instance._createCellCoords(endRow, endCol));\n  };\n\n  /**\r\n   * Returns the data's copyable value at specified `row` and `column` index.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCopyableData\r\n   * @param {number} row Visual row index.\r\n   * @param {number} column Visual column index.\r\n   * @returns {string}\r\n   */\n  this.getCopyableData = function (row, column) {\n    return datamap.getCopyable(row, datamap.colToProp(column));\n  };\n\n  /**\r\n   * Returns schema provided by constructor settings. If it doesn't exist then it returns the schema based on the data\r\n   * structure in the first row.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSchema\r\n   * @returns {object} Schema object.\r\n   */\n  this.getSchema = function () {\n    return datamap.getSchema();\n  };\n\n  /**\r\n   * Use it if you need to change configuration after initialization. The `settings` argument is an object containing the changed\r\n   * settings, declared the same way as in the initial settings object.\r\n   *\r\n   * __Note__, that although the `updateSettings` method doesn't overwrite the previously declared settings, it might reset\r\n   * the settings made post-initialization. (for example - ignore changes made using the columnResize feature).\r\n   *\r\n   * Since 8.0.0 passing `columns` or `data` inside `settings` objects will result in resetting states corresponding to rows and columns\r\n   * (for example, row/column sequence, column width, row height, frozen columns etc.).\r\n   *\r\n   * Since 12.0.0 passing `data` inside `settings` objects no longer results in resetting states corresponding to rows and columns\r\n   * (for example, row/column sequence, column width, row height, frozen columns etc.).\r\n   *\r\n   * @memberof Core#\r\n   * @function updateSettings\r\n   * @param {object} settings A settings object (see {@link Options}). Only provide the settings that are changed, not the whole settings object that was used for initialization.\r\n   * @param {boolean} [init=false] Internally used for in initialization mode.\r\n   * @example\r\n   * ```js\r\n   * hot.updateSettings({\r\n   *    contextMenu: true,\r\n   *    colHeaders: true,\r\n   *    fixedRowsTop: 2\r\n   * });\r\n   * ```\r\n   * @fires Hooks#afterCellMetaReset\r\n   * @fires Hooks#afterUpdateSettings\r\n   */\n  this.updateSettings = function (settings) {\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const dataUpdateFunction = (firstRun ? instance.loadData : instance.updateData).bind(this);\n    let columnsAsFunc = false;\n    let i;\n    let j;\n    if (isDefined(settings.rows)) {\n      throw new Error('The \"rows\" setting is no longer supported. Do you mean startRows, minRows or maxRows?');\n    }\n    if (isDefined(settings.cols)) {\n      throw new Error('The \"cols\" setting is no longer supported. Do you mean startCols, minCols or maxCols?');\n    }\n    if (isDefined(settings.ganttChart)) {\n      throw new Error('Since 8.0.0 the \"ganttChart\" setting is no longer supported.');\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (i in settings) {\n      if (i === 'data') {\n        // Do nothing. loadData will be triggered later\n      } else if (i === 'language') {\n        setLanguage(settings.language);\n      } else if (i === 'className') {\n        setClassName('className', settings.className);\n      } else if (i === 'tableClassName' && instance.table) {\n        setClassName('tableClassName', settings.tableClassName);\n        instance.view._wt.wtOverlays.syncOverlayTableClassNames();\n      } else if (Hooks.getSingleton().isRegistered(i) || Hooks.getSingleton().isDeprecated(i)) {\n        if (isFunction(settings[i]) || Array.isArray(settings[i])) {\n          settings[i].initialHook = true;\n          instance.addHook(i, settings[i]);\n        }\n      } else if (!init && hasOwnProperty(settings, i)) {\n        // Update settings\n        globalMeta[i] = settings[i];\n      }\n    }\n\n    // Load data or create data map\n    if (settings.data === undefined && tableMeta.data === undefined) {\n      dataUpdateFunction(null, 'updateSettings'); // data source created just now\n    } else if (settings.data !== undefined) {\n      dataUpdateFunction(settings.data, 'updateSettings'); // data source given as option\n    } else if (settings.columns !== undefined) {\n      datamap.createMap();\n\n      // The `column` property has changed - dataset may be expanded or narrowed down. The `loadData` do the same.\n      instance.initIndexMappers();\n    }\n    const clen = instance.countCols();\n    const columnSetting = tableMeta.columns;\n\n    // Init columns constructors configuration\n    if (columnSetting && isFunction(columnSetting)) {\n      columnsAsFunc = true;\n    }\n\n    // Clear cell meta cache\n    if (settings.cell !== undefined || settings.cells !== undefined || settings.columns !== undefined) {\n      metaManager.clearCache();\n    }\n    if (clen > 0) {\n      for (i = 0, j = 0; i < clen; i++) {\n        // Use settings provided by user\n        if (columnSetting) {\n          const column = columnsAsFunc ? columnSetting(i) : columnSetting[j];\n          if (column) {\n            metaManager.updateColumnMeta(j, column);\n          }\n        }\n        j += 1;\n      }\n    }\n    if (isDefined(settings.cell)) {\n      objectEach(settings.cell, cell => {\n        instance.setCellMetaObject(cell.row, cell.col, cell);\n      });\n    }\n    instance.runHooks('afterCellMetaReset');\n    let currentHeight = instance.rootElement.style.height;\n    if (currentHeight !== '') {\n      currentHeight = parseInt(instance.rootElement.style.height, 10);\n    }\n    let height = settings.height;\n    if (isFunction(height)) {\n      height = height();\n    }\n    if (init) {\n      const initialStyle = instance.rootElement.getAttribute('style');\n      if (initialStyle) {\n        instance.rootElement.setAttribute('data-initialstyle', instance.rootElement.getAttribute('style'));\n      }\n    }\n    if (height === null) {\n      const initialStyle = instance.rootElement.getAttribute('data-initialstyle');\n      if (initialStyle && (initialStyle.indexOf('height') > -1 || initialStyle.indexOf('overflow') > -1)) {\n        instance.rootElement.setAttribute('style', initialStyle);\n      } else {\n        instance.rootElement.style.height = '';\n        instance.rootElement.style.overflow = '';\n      }\n    } else if (height !== undefined) {\n      instance.rootElement.style.height = isNaN(height) ? `${height}` : `${height}px`;\n      instance.rootElement.style.overflow = 'hidden';\n    }\n    if (typeof settings.width !== 'undefined') {\n      let width = settings.width;\n      if (isFunction(width)) {\n        width = width();\n      }\n      instance.rootElement.style.width = isNaN(width) ? `${width}` : `${width}px`;\n    }\n    if (!init) {\n      if (instance.view) {\n        instance.view._wt.wtViewport.resetHasOversizedColumnHeadersMarked();\n        instance.view._wt.exportSettingsAsClassNames();\n      }\n      instance.runHooks('afterUpdateSettings', settings);\n    }\n    grid.adjustRowsAndCols();\n    if (instance.view && !firstRun) {\n      instance.forceFullRender = true; // used when data was changed\n      instance.view.render();\n      instance.view._wt.wtOverlays.adjustElementsSize();\n    }\n    if (!init && instance.view && (currentHeight === '' || height === '' || height === undefined) && currentHeight !== height) {\n      instance.view._wt.wtOverlays.updateMainScrollableElements();\n    }\n  };\n\n  /**\r\n   * Gets the value of the currently focused cell.\r\n   *\r\n   * For column headers and row headers, returns `null`.\r\n   *\r\n   * @memberof Core#\r\n   * @function getValue\r\n   * @returns {*} The value of the focused cell.\r\n   */\n  this.getValue = function () {\n    const sel = instance.getSelectedLast();\n    if (tableMeta.getValue) {\n      if (isFunction(tableMeta.getValue)) {\n        return tableMeta.getValue.call(instance);\n      } else if (sel) {\n        return instance.getData()[sel[0][0]][tableMeta.getValue];\n      }\n    } else if (sel) {\n      return instance.getDataAtCell(sel[0], sel[1]);\n    }\n  };\n\n  /**\r\n   * Returns the object settings.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSettings\r\n   * @returns {TableMeta} Object containing the current table settings.\r\n   */\n  this.getSettings = function () {\n    return tableMeta;\n  };\n\n  /**\r\n   * Clears the data from the table (the table settings remain intact).\r\n   *\r\n   * @memberof Core#\r\n   * @function clear\r\n   */\n  this.clear = function () {\n    this.selectAll();\n    this.emptySelectedCells();\n  };\n\n  /**\r\n   * The `alter()` method lets you alter the grid's structure\r\n   * by adding or removing rows and columns at specified positions.\r\n   *\r\n   * ::: tip\r\n   * The `alter()` method works only when your [`data`](@/api/options.md#data)\r\n   * is an [array of arrays](@/guides/getting-started/binding-to-data/binding-to-data.md#array-of-arrays).\r\n   * :::\r\n   *\r\n   * ```js\r\n   * // above row 10 (by visual index), insert 1 new row\r\n   * hot.alter('insert_row_above', 10);\r\n   * ```\r\n   *\r\n   *  | Action               | With `index` | Without `index` |\r\n   *  | -------------------- | ------------ | --------------- |\r\n   *  | `'insert_row_above'` | Inserts rows above the `index` row. | Inserts rows above the first row. |\r\n   *  | `'insert_row_below'` | Inserts rows below the `index` row. | Inserts rows below the last row. |\r\n   *  | `'remove_row'`       | Removes rows, starting from the `index` row. | Removes rows, starting from the last row. |\r\n   *  | `'insert_col_start'` | Inserts columns before the `index` column. | Inserts columns before the first column. |\r\n   *  | `'insert_col_end'`   | Inserts columns after the `index` column. | Inserts columns after the last column. |\r\n   *  | `'remove_col'`       | Removes columns, starting from the `index` column. | Removes columns, starting from the last column. |\r\n   *\r\n   * Additional information about `'insert_col_start'` and `'insert_col_end'`:\r\n   * - Their behavior depends on your [`layoutDirection`](@/api/options.md#layoutdirection).\r\n   * - If the provided `index` is higher than the actual number of columns, Handsontable doesn't generate\r\n   * the columns missing in between. Instead, the new columns are inserted next to the last column.\r\n   *\r\n   * @memberof Core#\r\n   * @function alter\r\n   * @param {string} action Available operations:\r\n   * <ul>\r\n   *    <li> `'insert_row_above'` </li>\r\n   *    <li> `'insert_row_below'` </li>\r\n   *    <li> `'remove_row'` </li> </li>\r\n   *    <li> `'insert_col_start'` </li>\r\n   *    <li> `'insert_col_end'` </li>\r\n   *    <li> `'remove_col'` </li>\r\n   * </ul>\r\n   * @param {number|number[]} [index] A visual index of the row/column before or after which the new row/column will be\r\n   *                                inserted or removed. Can also be an array of arrays, in format `[[index, amount],...]`.\r\n   * @param {number} [amount] The amount of rows or columns to be inserted or removed (default: `1`).\r\n   * @param {string} [source] Source indicator.\r\n   * @param {boolean} [keepEmptyRows] If set to `true`: prevents removing empty rows.\r\n   * @example\r\n   * ```js\r\n   * // above row 10 (by visual index), insert 1 new row\r\n   * hot.alter('insert_row_above', 10);\r\n   *\r\n   * // below row 10 (by visual index), insert 3 new rows\r\n   * hot.alter('insert_row_below', 10, 3);\r\n   *\r\n   * // in the LTR layout direction: to the left of column 10 (by visual index), insert 3 new columns\r\n   * // in the RTL layout direction: to the right of column 10 (by visual index), insert 3 new columns\r\n   * hot.alter('insert_col_start', 10, 3);\r\n   *\r\n   * // in the LTR layout direction: to the right of column 10 (by visual index), insert 1 new column\r\n   * // in the RTL layout direction: to the left of column 10 (by visual index), insert 1 new column\r\n   * hot.alter('insert_col_end', 10);\r\n   *\r\n   * // remove 2 rows, starting from row 10 (by visual index)\r\n   * hot.alter('remove_row', 10, 2);\r\n   *\r\n   * // remove 3 rows, starting from row 1 (by visual index)\r\n   * // remove 2 rows, starting from row 5 (by visual index)\r\n   * hot.alter('remove_row', [[1, 3], [5, 2]]);\r\n   * ```\r\n   */\n  this.alter = function (action, index, amount, source, keepEmptyRows) {\n    grid.alter(action, index, amount, source, keepEmptyRows);\n  };\n\n  /**\r\n   * Returns a TD element for the given `row` and `column` arguments, if it is rendered on screen.\r\n   * Returns `null` if the TD is not rendered on screen (probably because that part of the table is not visible).\r\n   *\r\n   * @memberof Core#\r\n   * @function getCell\r\n   * @param {number} row Visual row index.\r\n   * @param {number} column Visual column index.\r\n   * @param {boolean} [topmost=false] If set to `true`, it returns the TD element from the topmost overlay. For example,\r\n   * if the wanted cell is in the range of fixed rows, it will return a TD element from the `top` overlay.\r\n   * @returns {HTMLTableCellElement|null} The cell's TD element.\r\n   */\n  this.getCell = function (row, column) {\n    let topmost = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let renderableColumnIndex = column; // Handling also column headers.\n    let renderableRowIndex = row; // Handling also row headers.\n\n    if (column >= 0) {\n      if (this.columnIndexMapper.isHidden(this.toPhysicalColumn(column))) {\n        return null;\n      }\n      renderableColumnIndex = this.columnIndexMapper.getRenderableFromVisualIndex(column);\n    }\n    if (row >= 0) {\n      if (this.rowIndexMapper.isHidden(this.toPhysicalRow(row))) {\n        return null;\n      }\n      renderableRowIndex = this.rowIndexMapper.getRenderableFromVisualIndex(row);\n    }\n    if (renderableRowIndex === null || renderableColumnIndex === null || renderableRowIndex === undefined || renderableColumnIndex === undefined) {\n      return null;\n    }\n    return instance.view.getCellAtCoords(instance._createCellCoords(renderableRowIndex, renderableColumnIndex), topmost);\n  };\n\n  /**\r\n   * Returns the coordinates of the cell, provided as a HTML table cell element.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCoords\r\n   * @param {HTMLTableCellElement} element The HTML Element representing the cell.\r\n   * @returns {CellCoords|null} Visual coordinates object.\r\n   * @example\r\n   * ```js\r\n   * hot.getCoords(hot.getCell(1, 1));\r\n   * // it returns CellCoords object instance with props row: 1 and col: 1.\r\n   * ```\r\n   */\n  this.getCoords = function (element) {\n    const renderableCoords = this.view._wt.wtTable.getCoords(element);\n    if (renderableCoords === null) {\n      return null;\n    }\n    const {\n      row: renderableRow,\n      col: renderableColumn\n    } = renderableCoords;\n    let visualRow = renderableRow;\n    let visualColumn = renderableColumn;\n    if (renderableRow >= 0) {\n      visualRow = this.rowIndexMapper.getVisualFromRenderableIndex(renderableRow);\n    }\n    if (renderableColumn >= 0) {\n      visualColumn = this.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn);\n    }\n    return instance._createCellCoords(visualRow, visualColumn);\n  };\n\n  /**\r\n   * Returns the property name that corresponds with the given column index.\r\n   * If the data source is an array of arrays, it returns the columns index.\r\n   *\r\n   * @memberof Core#\r\n   * @function colToProp\r\n   * @param {number} column Visual column index.\r\n   * @returns {string|number} Column property or physical column index.\r\n   */\n  this.colToProp = function (column) {\n    return datamap.colToProp(column);\n  };\n\n  /**\r\n   * Returns column index that corresponds with the given property.\r\n   *\r\n   * @memberof Core#\r\n   * @function propToCol\r\n   * @param {string|number} prop Property name or physical column index.\r\n   * @returns {number} Visual column index.\r\n   */\n  this.propToCol = function (prop) {\n    return datamap.propToCol(prop);\n  };\n\n  /**\r\n   * Translate physical row index into visual.\r\n   *\r\n   * This method is useful when you want to retrieve visual row index which can be reordered, moved or trimmed\r\n   * based on a physical index.\r\n   *\r\n   * @memberof Core#\r\n   * @function toVisualRow\r\n   * @param {number} row Physical row index.\r\n   * @returns {number} Returns visual row index.\r\n   */\n  this.toVisualRow = row => this.rowIndexMapper.getVisualFromPhysicalIndex(row);\n\n  /**\r\n   * Translate physical column index into visual.\r\n   *\r\n   * This method is useful when you want to retrieve visual column index which can be reordered, moved or trimmed\r\n   * based on a physical index.\r\n   *\r\n   * @memberof Core#\r\n   * @function toVisualColumn\r\n   * @param {number} column Physical column index.\r\n   * @returns {number} Returns visual column index.\r\n   */\n  this.toVisualColumn = column => this.columnIndexMapper.getVisualFromPhysicalIndex(column);\n\n  /**\r\n   * Translate visual row index into physical.\r\n   *\r\n   * This method is useful when you want to retrieve physical row index based on a visual index which can be\r\n   * reordered, moved or trimmed.\r\n   *\r\n   * @memberof Core#\r\n   * @function toPhysicalRow\r\n   * @param {number} row Visual row index.\r\n   * @returns {number} Returns physical row index.\r\n   */\n  this.toPhysicalRow = row => this.rowIndexMapper.getPhysicalFromVisualIndex(row);\n\n  /**\r\n   * Translate visual column index into physical.\r\n   *\r\n   * This method is useful when you want to retrieve physical column index based on a visual index which can be\r\n   * reordered, moved or trimmed.\r\n   *\r\n   * @memberof Core#\r\n   * @function toPhysicalColumn\r\n   * @param {number} column Visual column index.\r\n   * @returns {number} Returns physical column index.\r\n   */\n  this.toPhysicalColumn = column => this.columnIndexMapper.getPhysicalFromVisualIndex(column);\n\n  /**\r\n   * @description\r\n   * Returns the cell value at `row`, `column`.\r\n   *\r\n   * __Note__: If data is reordered, sorted or trimmed, the currently visible order will be used.\r\n   *\r\n   * @memberof Core#\r\n   * @function getDataAtCell\r\n   * @param {number} row Visual row index.\r\n   * @param {number} column Visual column index.\r\n   * @returns {*} Data at cell.\r\n   */\n  this.getDataAtCell = function (row, column) {\n    return datamap.get(row, datamap.colToProp(column));\n  };\n\n  /**\r\n   * Returns value at visual `row` and `prop` indexes.\r\n   *\r\n   * __Note__: If data is reordered, sorted or trimmed, the currently visible order will be used.\r\n   *\r\n   * @memberof Core#\r\n   * @function getDataAtRowProp\r\n   * @param {number} row Visual row index.\r\n   * @param {string} prop Property name.\r\n   * @returns {*} Cell value.\r\n   */\n  this.getDataAtRowProp = function (row, prop) {\n    return datamap.get(row, prop);\n  };\n\n  /**\r\n   * @description\r\n   * Returns array of column values from the data source.\r\n   *\r\n   * __Note__: If columns were reordered or sorted, the currently visible order will be used.\r\n   *\r\n   * @memberof Core#\r\n   * @function getDataAtCol\r\n   * @param {number} column Visual column index.\r\n   * @returns {Array} Array of cell values.\r\n   */\n  this.getDataAtCol = function (column) {\n    const columnData = [];\n    const dataByRows = datamap.getRange(instance._createCellCoords(0, column), instance._createCellCoords(tableMeta.data.length - 1, column), datamap.DESTINATION_RENDERER);\n    for (let i = 0; i < dataByRows.length; i += 1) {\n      for (let j = 0; j < dataByRows[i].length; j += 1) {\n        columnData.push(dataByRows[i][j]);\n      }\n    }\n    return columnData;\n  };\n\n  /**\r\n   * Given the object property name (e.g. `'first.name'` or `'0'`), returns an array of column's values from the table data.\r\n   * You can also provide a column index as the first argument.\r\n   *\r\n   * @memberof Core#\r\n   * @function getDataAtProp\r\n   * @param {string|number} prop Property name or physical column index.\r\n   * @returns {Array} Array of cell values.\r\n   */\n  // TODO: Getting data from `datamap` should work on visual indexes.\n  this.getDataAtProp = function (prop) {\n    const columnData = [];\n    const dataByRows = datamap.getRange(instance._createCellCoords(0, datamap.propToCol(prop)), instance._createCellCoords(tableMeta.data.length - 1, datamap.propToCol(prop)), datamap.DESTINATION_RENDERER);\n    for (let i = 0; i < dataByRows.length; i += 1) {\n      for (let j = 0; j < dataByRows[i].length; j += 1) {\n        columnData.push(dataByRows[i][j]);\n      }\n    }\n    return columnData;\n  };\n\n  /**\r\n   * Returns a clone of the source data object.\r\n   * Optionally you can provide a cell range by using the `row`, `column`, `row2`, `column2` arguments, to get only a\r\n   * fragment of the table data.\r\n   *\r\n   * __Note__: This method does not participate in data transformation. If the visual data of the table is reordered,\r\n   * sorted or trimmed only physical indexes are correct.\r\n   *\r\n   * __Note__: This method may return incorrect values for cells that contain\r\n   * [formulas](@/guides/formulas/formula-calculation/formula-calculation.md). This is because `getSourceData()`\r\n   * operates on source data ([physical indexes](@/api/indexMapper.md)),\r\n   * whereas formulas operate on visual data (visual indexes).\r\n   *\r\n   * @memberof Core#\r\n   * @function getSourceData\r\n   * @param {number} [row] From physical row index.\r\n   * @param {number} [column] From physical column index (or visual index, if data type is an array of objects).\r\n   * @param {number} [row2] To physical row index.\r\n   * @param {number} [column2] To physical column index (or visual index, if data type is an array of objects).\r\n   * @returns {Array[]|object[]} The table data.\r\n   */\n  this.getSourceData = function (row, column, row2, column2) {\n    let data;\n    if (row === undefined) {\n      data = dataSource.getData();\n    } else {\n      data = dataSource.getByRange(instance._createCellCoords(row, column), instance._createCellCoords(row2, column2));\n    }\n    return data;\n  };\n\n  /**\r\n   * Returns the source data object as an arrays of arrays format even when source data was provided in another format.\r\n   * Optionally you can provide a cell range by using the `row`, `column`, `row2`, `column2` arguments, to get only a\r\n   * fragment of the table data.\r\n   *\r\n   * __Note__: This method does not participate in data transformation. If the visual data of the table is reordered,\r\n   * sorted or trimmed only physical indexes are correct.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSourceDataArray\r\n   * @param {number} [row] From physical row index.\r\n   * @param {number} [column] From physical column index (or visual index, if data type is an array of objects).\r\n   * @param {number} [row2] To physical row index.\r\n   * @param {number} [column2] To physical column index (or visual index, if data type is an array of objects).\r\n   * @returns {Array} An array of arrays.\r\n   */\n  this.getSourceDataArray = function (row, column, row2, column2) {\n    let data;\n    if (row === undefined) {\n      data = dataSource.getData(true);\n    } else {\n      data = dataSource.getByRange(instance._createCellCoords(row, column), instance._createCellCoords(row2, column2), true);\n    }\n    return data;\n  };\n\n  /**\r\n   * Returns an array of column values from the data source.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSourceDataAtCol\r\n   * @param {number} column Visual column index.\r\n   * @returns {Array} Array of the column's cell values.\r\n   */\n  // TODO: Getting data from `sourceData` should work always on physical indexes.\n  this.getSourceDataAtCol = function (column) {\n    return dataSource.getAtColumn(column);\n  };\n\n  /* eslint-disable jsdoc/require-param */\n  /**\r\n   * Set the provided value in the source data set at the provided coordinates.\r\n   *\r\n   * @memberof Core#\r\n   * @function setSourceDataAtCell\r\n   * @param {number|Array} row Physical row index or array of changes in format `[[row, prop, value], ...]`.\r\n   * @param {number|string} column Physical column index / prop name.\r\n   * @param {*} value The value to be set at the provided coordinates.\r\n   * @param {string} [source] Source of the change as a string.\r\n   */\n  /* eslint-enable jsdoc/require-param */\n  this.setSourceDataAtCell = function (row, column, value, source) {\n    const input = setDataInputToArray(row, column, value);\n    const isThereAnySetSourceListener = this.hasHook('afterSetSourceDataAtCell');\n    const changesForHook = [];\n    if (isThereAnySetSourceListener) {\n      arrayEach(input, _ref8 => {\n        let [changeRow, changeProp, changeValue] = _ref8;\n        changesForHook.push([changeRow, changeProp, dataSource.getAtCell(changeRow, changeProp),\n        // The previous value.\n        changeValue]);\n      });\n    }\n    arrayEach(input, _ref9 => {\n      let [changeRow, changeProp, changeValue] = _ref9;\n      dataSource.setAtCell(changeRow, changeProp, changeValue);\n    });\n    if (isThereAnySetSourceListener) {\n      this.runHooks('afterSetSourceDataAtCell', changesForHook, source);\n    }\n    this.render();\n    const activeEditor = instance.getActiveEditor();\n    if (activeEditor && isDefined(activeEditor.refreshValue)) {\n      activeEditor.refreshValue();\n    }\n  };\n\n  /**\r\n   * Returns a single row of the data (array or object, depending on what data format you use).\r\n   *\r\n   * __Note__: This method does not participate in data transformation. If the visual data of the table is reordered,\r\n   * sorted or trimmed only physical indexes are correct.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSourceDataAtRow\r\n   * @param {number} row Physical row index.\r\n   * @returns {Array|object} Single row of data.\r\n   */\n  this.getSourceDataAtRow = function (row) {\n    return dataSource.getAtRow(row);\n  };\n\n  /**\r\n   * Returns a single value from the data source.\r\n   *\r\n   * @memberof Core#\r\n   * @function getSourceDataAtCell\r\n   * @param {number} row Physical row index.\r\n   * @param {number} column Visual column index.\r\n   * @returns {*} Cell data.\r\n   */\n  // TODO: Getting data from `sourceData` should work always on physical indexes.\n  this.getSourceDataAtCell = function (row, column) {\n    return dataSource.getAtCell(row, column);\n  };\n\n  /**\r\n   * @description\r\n   * Returns a single row of the data.\r\n   *\r\n   * __Note__: If rows were reordered, sorted or trimmed, the currently visible order will be used.\r\n   *\r\n   * @memberof Core#\r\n   * @function getDataAtRow\r\n   * @param {number} row Visual row index.\r\n   * @returns {Array} Array of row's cell data.\r\n   */\n  this.getDataAtRow = function (row) {\n    const data = datamap.getRange(instance._createCellCoords(row, 0), instance._createCellCoords(row, this.countCols() - 1), datamap.DESTINATION_RENDERER);\n    return data[0] || [];\n  };\n\n  /**\r\n   * @description\r\n   * Returns a data type defined in the Handsontable settings under the `type` key ({@link Options#type}).\r\n   * If there are cells with different types in the selected range, it returns `'mixed'`.\r\n   *\r\n   * __Note__: If data is reordered, sorted or trimmed, the currently visible order will be used.\r\n   *\r\n   * @memberof Core#\r\n   * @function getDataType\r\n   * @param {number} rowFrom From visual row index.\r\n   * @param {number} columnFrom From visual column index.\r\n   * @param {number} rowTo To visual row index.\r\n   * @param {number} columnTo To visual column index.\r\n   * @returns {string} Cell type (e.q: `'mixed'`, `'text'`, `'numeric'`, `'autocomplete'`).\r\n   */\n  this.getDataType = function (rowFrom, columnFrom, rowTo, columnTo) {\n    const coords = rowFrom === undefined ? [0, 0, this.countRows(), this.countCols()] : [rowFrom, columnFrom, rowTo, columnTo];\n    const [rowStart, columnStart] = coords;\n    let [,, rowEnd, columnEnd] = coords;\n    let previousType = null;\n    let currentType = null;\n    if (rowEnd === undefined) {\n      rowEnd = rowStart;\n    }\n    if (columnEnd === undefined) {\n      columnEnd = columnStart;\n    }\n    let type = 'mixed';\n    rangeEach(Math.max(Math.min(rowStart, rowEnd), 0), Math.max(rowStart, rowEnd), row => {\n      let isTypeEqual = true;\n      rangeEach(Math.max(Math.min(columnStart, columnEnd), 0), Math.max(columnStart, columnEnd), column => {\n        const cellType = this.getCellMeta(row, column);\n        currentType = cellType.type;\n        if (previousType) {\n          isTypeEqual = previousType === currentType;\n        } else {\n          previousType = currentType;\n        }\n        return isTypeEqual;\n      });\n      type = isTypeEqual ? currentType : 'mixed';\n      return isTypeEqual;\n    });\n    return type;\n  };\n\n  /**\r\n   * Remove a property defined by the `key` argument from the cell meta object for the provided `row` and `column` coordinates.\r\n   *\r\n   * @memberof Core#\r\n   * @function removeCellMeta\r\n   * @param {number} row Visual row index.\r\n   * @param {number} column Visual column index.\r\n   * @param {string} key Property name.\r\n   * @fires Hooks#beforeRemoveCellMeta\r\n   * @fires Hooks#afterRemoveCellMeta\r\n   */\n  this.removeCellMeta = function (row, column, key) {\n    const [physicalRow, physicalColumn] = [this.toPhysicalRow(row), this.toPhysicalColumn(column)];\n    let cachedValue = metaManager.getCellMetaKeyValue(physicalRow, physicalColumn, key);\n    const hookResult = instance.runHooks('beforeRemoveCellMeta', row, column, key, cachedValue);\n    if (hookResult !== false) {\n      metaManager.removeCellMeta(physicalRow, physicalColumn, key);\n      instance.runHooks('afterRemoveCellMeta', row, column, key, cachedValue);\n    }\n    cachedValue = null;\n  };\n\n  /**\r\n   * Removes or adds one or more rows of the cell meta objects to the cell meta collections.\r\n   *\r\n   * @since 0.30.0\r\n   * @memberof Core#\r\n   * @function spliceCellsMeta\r\n   * @param {number} visualIndex A visual index that specifies at what position to add/remove items.\r\n   * @param {number} [deleteAmount=0] The number of items to be removed. If set to 0, no cell meta objects will be removed.\r\n   * @param {...object} [cellMetaRows] The new cell meta row objects to be added to the cell meta collection.\r\n   */\n  this.spliceCellsMeta = function (visualIndex) {\n    let deleteAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    for (var _len18 = arguments.length, cellMetaRows = new Array(_len18 > 2 ? _len18 - 2 : 0), _key18 = 2; _key18 < _len18; _key18++) {\n      cellMetaRows[_key18 - 2] = arguments[_key18];\n    }\n    if (cellMetaRows.length > 0 && !Array.isArray(cellMetaRows[0])) {\n      throw new Error('The 3rd argument (cellMetaRows) has to be passed as an array of cell meta objects array.');\n    }\n    if (deleteAmount > 0) {\n      metaManager.removeRow(this.toPhysicalRow(visualIndex), deleteAmount);\n    }\n    if (cellMetaRows.length > 0) {\n      arrayEach(cellMetaRows.reverse(), cellMetaRow => {\n        metaManager.createRow(this.toPhysicalRow(visualIndex));\n        arrayEach(cellMetaRow, (cellMeta, columnIndex) => this.setCellMetaObject(visualIndex, columnIndex, cellMeta));\n      });\n    }\n    instance.render();\n  };\n\n  /**\r\n   * Set cell meta data object defined by `prop` to the corresponding params `row` and `column`.\r\n   *\r\n   * @memberof Core#\r\n   * @function setCellMetaObject\r\n   * @param {number} row Visual row index.\r\n   * @param {number} column Visual column index.\r\n   * @param {object} prop Meta object.\r\n   */\n  this.setCellMetaObject = function (row, column, prop) {\n    if (typeof prop === 'object') {\n      objectEach(prop, (value, key) => {\n        this.setCellMeta(row, column, key, value);\n      });\n    }\n  };\n\n  /**\r\n   * Sets a property defined by the `key` property to the meta object of a cell corresponding to params `row` and `column`.\r\n   *\r\n   * @memberof Core#\r\n   * @function setCellMeta\r\n   * @param {number} row Visual row index.\r\n   * @param {number} column Visual column index.\r\n   * @param {string} key Property name.\r\n   * @param {string} value Property value.\r\n   * @fires Hooks#beforeSetCellMeta\r\n   * @fires Hooks#afterSetCellMeta\r\n   */\n  this.setCellMeta = function (row, column, key, value) {\n    const allowSetCellMeta = instance.runHooks('beforeSetCellMeta', row, column, key, value);\n    if (allowSetCellMeta === false) {\n      return;\n    }\n    let physicalRow = row;\n    let physicalColumn = column;\n    if (row < this.countRows()) {\n      physicalRow = this.toPhysicalRow(row);\n    }\n    if (column < this.countCols()) {\n      physicalColumn = this.toPhysicalColumn(column);\n    }\n    metaManager.setCellMeta(physicalRow, physicalColumn, key, value);\n    instance.runHooks('afterSetCellMeta', row, column, key, value);\n  };\n\n  /**\r\n   * Get all the cells meta settings at least once generated in the table (in order of cell initialization).\r\n   *\r\n   * @memberof Core#\r\n   * @function getCellsMeta\r\n   * @returns {Array} Returns an array of ColumnSettings object instances.\r\n   */\n  this.getCellsMeta = function () {\n    return metaManager.getCellsMeta();\n  };\n\n  /**\r\n   * Returns the cell properties object for the given `row` and `column` coordinates.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCellMeta\r\n   * @param {number} row Visual row index.\r\n   * @param {number} column Visual column index.\r\n   * @returns {object} The cell properties object.\r\n   * @fires Hooks#beforeGetCellMeta\r\n   * @fires Hooks#afterGetCellMeta\r\n   */\n  this.getCellMeta = function (row, column) {\n    let physicalRow = this.toPhysicalRow(row);\n    let physicalColumn = this.toPhysicalColumn(column);\n    if (physicalRow === null) {\n      physicalRow = row;\n    }\n    if (physicalColumn === null) {\n      physicalColumn = column;\n    }\n    return metaManager.getCellMeta(physicalRow, physicalColumn, {\n      visualRow: row,\n      visualColumn: column\n    });\n  };\n\n  /**\r\n   * Returns the meta information for the provided column.\r\n   *\r\n   * @since 14.5.0\r\n   * @memberof Core#\r\n   * @function getColumnMeta\r\n   * @param {number} column Visual column index.\r\n   * @returns {object}\r\n   */\n  this.getColumnMeta = function (column) {\n    return metaManager.getColumnMeta(this.toPhysicalColumn(column));\n  };\n\n  /**\r\n   * Returns an array of cell meta objects for specified physical row index.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCellMetaAtRow\r\n   * @param {number} row Physical row index.\r\n   * @returns {Array}\r\n   */\n  this.getCellMetaAtRow = function (row) {\n    return metaManager.getCellsMetaAtRow(row);\n  };\n\n  /**\r\n   * Checks if your [data format](@/guides/getting-started/binding-to-data/binding-to-data.md#compatible-data-types)\r\n   * and [configuration options](@/guides/getting-started/configuration-options/configuration-options.md)\r\n   * allow for changing the number of columns.\r\n   *\r\n   * Returns `false` when your data is an array of objects,\r\n   * or when you use the [`columns`](@/api/options.md#columns) option.\r\n   * Otherwise, returns `true`.\r\n   *\r\n   * @memberof Core#\r\n   * @function isColumnModificationAllowed\r\n   * @returns {boolean}\r\n   */\n  this.isColumnModificationAllowed = function () {\n    return !(instance.dataType === 'object' || tableMeta.columns);\n  };\n\n  /**\r\n   * Returns the cell renderer function by given `row` and `column` arguments.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCellRenderer\r\n   * @param {number|object} rowOrMeta Visual row index or cell meta object (see {@link Core#getCellMeta}).\r\n   * @param {number} column Visual column index.\r\n   * @returns {Function} Returns the renderer function.\r\n   * @example\r\n   * ```js\r\n   * // Get cell renderer using `row` and `column` coordinates.\r\n   * hot.getCellRenderer(1, 1);\r\n   * // Get cell renderer using cell meta object.\r\n   * hot.getCellRenderer(hot.getCellMeta(1, 1));\r\n   * ```\r\n   */\n  this.getCellRenderer = function (rowOrMeta, column) {\n    const cellRenderer = typeof rowOrMeta === 'number' ? instance.getCellMeta(rowOrMeta, column).renderer : rowOrMeta.renderer;\n    if (typeof cellRenderer === 'string') {\n      return getRenderer(cellRenderer);\n    }\n    return isUndefined(cellRenderer) ? getRenderer('text') : cellRenderer;\n  };\n\n  /**\r\n   * Returns the cell editor class by the provided `row` and `column` arguments.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCellEditor\r\n   * @param {number} rowOrMeta Visual row index or cell meta object (see {@link Core#getCellMeta}).\r\n   * @param {number} column Visual column index.\r\n   * @returns {Function|boolean} Returns the editor class or `false` is cell editor is disabled.\r\n   * @example\r\n   * ```js\r\n   * // Get cell editor class using `row` and `column` coordinates.\r\n   * hot.getCellEditor(1, 1);\r\n   * // Get cell editor class using cell meta object.\r\n   * hot.getCellEditor(hot.getCellMeta(1, 1));\r\n   * ```\r\n   */\n  this.getCellEditor = function (rowOrMeta, column) {\n    const cellEditor = typeof rowOrMeta === 'number' ? instance.getCellMeta(rowOrMeta, column).editor : rowOrMeta.editor;\n    if (typeof cellEditor === 'string') {\n      return getEditor(cellEditor);\n    }\n    return isUndefined(cellEditor) ? getEditor('text') : cellEditor;\n  };\n\n  /**\r\n   * Returns the cell validator by `row` and `column`.\r\n   *\r\n   * @memberof Core#\r\n   * @function getCellValidator\r\n   * @param {number|object} rowOrMeta Visual row index or cell meta object (see {@link Core#getCellMeta}).\r\n   * @param {number} column Visual column index.\r\n   * @returns {Function|RegExp|undefined} The validator function.\r\n   * @example\r\n   * ```js\r\n   * // Get cell validator using `row` and `column` coordinates.\r\n   * hot.getCellValidator(1, 1);\r\n   * // Get cell validator using cell meta object.\r\n   * hot.getCellValidator(hot.getCellMeta(1, 1));\r\n   * ```\r\n   */\n  this.getCellValidator = function (rowOrMeta, column) {\n    const cellValidator = typeof rowOrMeta === 'number' ? instance.getCellMeta(rowOrMeta, column).validator : rowOrMeta.validator;\n    if (typeof cellValidator === 'string') {\n      return getValidator(cellValidator);\n    }\n    return cellValidator;\n  };\n\n  /**\r\n   * Validates every cell in the data set,\r\n   * using a [validator function](@/guides/cell-functions/cell-validator/cell-validator.md) configured for each cell.\r\n   *\r\n   * Doesn't validate cells that are currently [trimmed](@/guides/rows/row-trimming/row-trimming.md),\r\n   * [hidden](@/guides/rows/row-hiding/row-hiding.md), or [filtered](@/guides/columns/column-filter/column-filter.md),\r\n   * as such cells are not included in the data set until you bring them back again.\r\n   *\r\n   * After the validation, the `callback` function is fired, with the `valid` argument set to:\r\n   * - `true` for valid cells\r\n   * - `false` for invalid cells\r\n   *\r\n   * @memberof Core#\r\n   * @function validateCells\r\n   * @param {Function} [callback] The callback function.\r\n   * @example\r\n   * ```js\r\n   * hot.validateCells((valid) => {\r\n   *   if (valid) {\r\n   *     // ... code for validated cells\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\n  this.validateCells = function (callback) {\n    this._validateCells(callback);\n  };\n\n  /**\r\n   * Validates rows using their validator functions and calls callback when finished.\r\n   *\r\n   * If one of the cells is invalid, the callback will be fired with `'valid'` arguments as `false` - otherwise it\r\n   *  would equal `true`.\r\n   *\r\n   * @memberof Core#\r\n   * @function validateRows\r\n   * @param {Array} [rows] Array of validation target visual row indexes.\r\n   * @param {Function} [callback] The callback function.\r\n   * @example\r\n   * ```js\r\n   * hot.validateRows([3, 4, 5], (valid) => {\r\n   *   if (valid) {\r\n   *     // ... code for validated rows\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\n  this.validateRows = function (rows, callback) {\n    if (!Array.isArray(rows)) {\n      throw new Error('validateRows parameter `rows` must be an array');\n    }\n    this._validateCells(callback, rows);\n  };\n\n  /**\r\n   * Validates columns using their validator functions and calls callback when finished.\r\n   *\r\n   * If one of the cells is invalid, the callback will be fired with `'valid'` arguments as `false` - otherwise it\r\n   *  would equal `true`.\r\n   *\r\n   * @memberof Core#\r\n   * @function validateColumns\r\n   * @param {Array} [columns] Array of validation target visual columns indexes.\r\n   * @param {Function} [callback] The callback function.\r\n   * @example\r\n   * ```js\r\n   * hot.validateColumns([3, 4, 5], (valid) => {\r\n   *   if (valid) {\r\n   *     // ... code for validated columns\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\n  this.validateColumns = function (columns, callback) {\n    if (!Array.isArray(columns)) {\n      throw new Error('validateColumns parameter `columns` must be an array');\n    }\n    this._validateCells(callback, undefined, columns);\n  };\n\n  /**\r\n   * Validates all cells using their validator functions and calls callback when finished.\r\n   *\r\n   * If one of the cells is invalid, the callback will be fired with `'valid'` arguments as `false` - otherwise it would equal `true`.\r\n   *\r\n   * Private use intended.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function _validateCells\r\n   * @param {Function} [callback] The callback function.\r\n   * @param {Array} [rows] An array of validation target visual row indexes.\r\n   * @param {Array} [columns] An array of validation target visual column indexes.\r\n   */\n  this._validateCells = function (callback, rows, columns) {\n    const waitingForValidator = new ValidatorsQueue();\n    if (callback) {\n      waitingForValidator.onQueueEmpty = callback;\n    }\n    let i = instance.countRows() - 1;\n    while (i >= 0) {\n      if (rows !== undefined && rows.indexOf(i) === -1) {\n        i -= 1;\n        continue;\n      }\n      let j = instance.countCols() - 1;\n      while (j >= 0) {\n        if (columns !== undefined && columns.indexOf(j) === -1) {\n          j -= 1;\n          continue;\n        }\n        waitingForValidator.addValidatorToQueue();\n        instance.validateCell(instance.getDataAtCell(i, j), instance.getCellMeta(i, j), result => {\n          if (typeof result !== 'boolean') {\n            throw new Error('Validation error: result is not boolean');\n          }\n          if (result === false) {\n            waitingForValidator.valid = false;\n          }\n          waitingForValidator.removeValidatorFormQueue();\n        }, 'validateCells');\n        j -= 1;\n      }\n      i -= 1;\n    }\n    waitingForValidator.checkIfQueueIsEmpty();\n  };\n\n  /**\r\n   * Returns an array of row headers' values (if they are enabled). If param `row` was given, it returns the header of the given row as a string.\r\n   *\r\n   * @memberof Core#\r\n   * @function getRowHeader\r\n   * @param {number} [row] Visual row index.\r\n   * @fires Hooks#modifyRowHeader\r\n   * @returns {Array|string|number} Array of header values / single header value.\r\n   */\n  this.getRowHeader = function (row) {\n    let rowHeader = tableMeta.rowHeaders;\n    let physicalRow = row;\n    if (physicalRow !== undefined) {\n      physicalRow = instance.runHooks('modifyRowHeader', physicalRow);\n    }\n    if (physicalRow === undefined) {\n      rowHeader = [];\n      rangeEach(instance.countRows() - 1, i => {\n        rowHeader.push(instance.getRowHeader(i));\n      });\n    } else if (Array.isArray(rowHeader) && rowHeader[physicalRow] !== undefined) {\n      rowHeader = rowHeader[physicalRow];\n    } else if (isFunction(rowHeader)) {\n      rowHeader = rowHeader(physicalRow);\n    } else if (rowHeader && typeof rowHeader !== 'string' && typeof rowHeader !== 'number') {\n      rowHeader = physicalRow + 1;\n    }\n    return rowHeader;\n  };\n\n  /**\r\n   * Returns information about if this table is configured to display row headers.\r\n   *\r\n   * @memberof Core#\r\n   * @function hasRowHeaders\r\n   * @returns {boolean} `true` if the instance has the row headers enabled, `false` otherwise.\r\n   */\n  this.hasRowHeaders = function () {\n    return !!tableMeta.rowHeaders;\n  };\n\n  /**\r\n   * Returns information about if this table is configured to display column headers.\r\n   *\r\n   * @memberof Core#\r\n   * @function hasColHeaders\r\n   * @returns {boolean} `true` if the instance has the column headers enabled, `false` otherwise.\r\n   */\n  this.hasColHeaders = function () {\n    if (tableMeta.colHeaders !== undefined && tableMeta.colHeaders !== null) {\n      // Polymer has empty value = null\n      return !!tableMeta.colHeaders;\n    }\n    for (let i = 0, ilen = instance.countCols(); i < ilen; i++) {\n      if (instance.getColHeader(i)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\r\n   * Gets the values of column headers (if column headers are [enabled](@/api/options.md#colheaders)).\r\n   *\r\n   * To get an array with the values of all\r\n   * [bottom-most](@/guides/cell-features/clipboard/clipboard.md#copy-with-headers) column headers,\r\n   * call `getColHeader()` with no arguments.\r\n   *\r\n   * To get the value of the bottom-most header of a specific column, use the `column` parameter.\r\n   *\r\n   * To get the value of a [specific-level](@/guides/columns/column-groups/column-groups.md) header\r\n   * of a specific column, use the `column` and `headerLevel` parameters.\r\n   *\r\n   * Read more:\r\n   * - [Guides: Column groups](@/guides/columns/column-groups/column-groups.md)\r\n   * - [Options: `colHeaders`](@/api/options.md#colheaders)\r\n   * - [Guides: Copy with headers](@/guides/cell-features/clipboard/clipboard.md#copy-with-headers)\r\n   *\r\n   * ```js\r\n   * // get the contents of all bottom-most column headers\r\n   * hot.getColHeader();\r\n   *\r\n   * // get the contents of the bottom-most header of a specific column\r\n   * hot.getColHeader(5);\r\n   *\r\n   * // get the contents of a specific column header at a specific level\r\n   * hot.getColHeader(5, -2);\r\n   * ```\r\n   *\r\n   * @memberof Core#\r\n   * @function getColHeader\r\n   * @param {number} [column] A visual column index.\r\n   * @param {number} [headerLevel=-1] (Since 12.3.0) Header level index. Accepts positive (0 to n)\r\n   *                                  and negative (-1 to -n) values. For positive values, 0 points to the\r\n   *                                  topmost header. For negative values, -1 points to the bottom-most\r\n   *                                  header (the header closest to the cells).\r\n   * @fires Hooks#modifyColHeader\r\n   * @fires Hooks#modifyColumnHeaderValue\r\n   * @returns {Array|string|number} Column header values.\r\n   */\n  this.getColHeader = function (column) {\n    let headerLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    const columnIndex = instance.runHooks('modifyColHeader', column);\n    if (columnIndex === undefined) {\n      const out = [];\n      const ilen = instance.countCols();\n      for (let i = 0; i < ilen; i++) {\n        out.push(instance.getColHeader(i));\n      }\n      return out;\n    }\n    let result = tableMeta.colHeaders;\n    const translateVisualIndexToColumns = function (visualColumnIndex) {\n      const arr = [];\n      const columnsLen = instance.countCols();\n      let index = 0;\n      for (; index < columnsLen; index++) {\n        if (isFunction(tableMeta.columns) && tableMeta.columns(index)) {\n          arr.push(index);\n        }\n      }\n      return arr[visualColumnIndex];\n    };\n    const physicalColumn = instance.toPhysicalColumn(columnIndex);\n    const prop = translateVisualIndexToColumns(physicalColumn);\n    if (tableMeta.colHeaders === false) {\n      result = null;\n    } else if (tableMeta.columns && isFunction(tableMeta.columns) && tableMeta.columns(prop) && tableMeta.columns(prop).title) {\n      result = tableMeta.columns(prop).title;\n    } else if (tableMeta.columns && tableMeta.columns[physicalColumn] && tableMeta.columns[physicalColumn].title) {\n      result = tableMeta.columns[physicalColumn].title;\n    } else if (Array.isArray(tableMeta.colHeaders) && tableMeta.colHeaders[physicalColumn] !== undefined) {\n      result = tableMeta.colHeaders[physicalColumn];\n    } else if (isFunction(tableMeta.colHeaders)) {\n      result = tableMeta.colHeaders(physicalColumn);\n    } else if (tableMeta.colHeaders && typeof tableMeta.colHeaders !== 'string' && typeof tableMeta.colHeaders !== 'number') {\n      result = spreadsheetColumnLabel(columnIndex); // see #1458\n    }\n    result = instance.runHooks('modifyColumnHeaderValue', result, column, headerLevel);\n    return result;\n  };\n\n  /**\r\n   * Return column width from settings (no guessing). Private use intended.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function _getColWidthFromSettings\r\n   * @param {number} col Visual col index.\r\n   * @returns {number}\r\n   */\n  this._getColWidthFromSettings = function (col) {\n    let width;\n\n    // We currently don't support cell meta objects for headers (negative values)\n    if (col >= 0) {\n      const cellProperties = instance.getCellMeta(0, col);\n      width = cellProperties.width;\n    }\n    if (width === undefined || width === tableMeta.width) {\n      width = tableMeta.colWidths;\n    }\n    if (width !== undefined && width !== null) {\n      switch (typeof width) {\n        case 'object':\n          // array\n          width = width[col];\n          break;\n        case 'function':\n          width = width(col);\n          break;\n        default:\n          break;\n      }\n      if (typeof width === 'string') {\n        width = parseInt(width, 10);\n      }\n    }\n    return width;\n  };\n\n  /**\r\n   * Returns the width of the requested column.\r\n   *\r\n   * @memberof Core#\r\n   * @function getColWidth\r\n   * @param {number} column Visual column index.\r\n   * @returns {number} Column width.\r\n   * @fires Hooks#modifyColWidth\r\n   */\n  this.getColWidth = function (column) {\n    let width = instance._getColWidthFromSettings(column);\n    width = instance.runHooks('modifyColWidth', width, column);\n    if (width === undefined) {\n      width = DEFAULT_COLUMN_WIDTH;\n    }\n    return width;\n  };\n\n  /**\r\n   * Return row height from settings (no guessing). Private use intended.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function _getRowHeightFromSettings\r\n   * @param {number} row Visual row index.\r\n   * @returns {number}\r\n   */\n  this._getRowHeightFromSettings = function (row) {\n    let height = tableMeta.rowHeights;\n    if (height !== undefined && height !== null) {\n      switch (typeof height) {\n        case 'object':\n          // array\n          height = height[row];\n          break;\n        case 'function':\n          height = height(row);\n          break;\n        default:\n          break;\n      }\n      if (typeof height === 'string') {\n        height = parseInt(height, 10);\n      }\n    }\n    return height;\n  };\n\n  /**\r\n   * Returns a row's height, as recognized by Handsontable.\r\n   *\r\n   * Depending on your configuration, the method returns (in order of priority):\r\n   *   1. The row height set by the [`ManualRowResize`](@/api/manualRowResize.md) plugin\r\n   *     (if the plugin is enabled).\r\n   *   2. The row height set by the [`rowHeights`](@/api/options.md#rowheights) configuration option\r\n   *     (if the option is set).\r\n   *   3. The row height as measured in the DOM by the [`AutoRowSize`](@/api/autoRowSize.md) plugin\r\n   *     (if the plugin is enabled).\r\n   *   4. `undefined`, if neither [`ManualRowResize`](@/api/manualRowResize.md),\r\n   *     nor [`rowHeights`](@/api/options.md#rowheights),\r\n   *     nor [`AutoRowSize`](@/api/autoRowSize.md) is used.\r\n   *\r\n   * The height returned includes 1 px of the row's bottom border.\r\n   *\r\n   * Mind that this method is different from the\r\n   * [`getRowHeight()`](@/api/autoRowSize.md#getrowheight) method\r\n   * of the [`AutoRowSize`](@/api/autoRowSize.md) plugin.\r\n   *\r\n   * @memberof Core#\r\n   * @function getRowHeight\r\n   * @param {number} row A visual row index.\r\n   * @returns {number|undefined} The height of the specified row, in pixels.\r\n   * @fires Hooks#modifyRowHeight\r\n   */\n  this.getRowHeight = function (row) {\n    let height = instance._getRowHeightFromSettings(row);\n    height = instance.runHooks('modifyRowHeight', height, row);\n    return height;\n  };\n\n  /**\r\n   * Returns the total number of rows in the data source.\r\n   *\r\n   * @memberof Core#\r\n   * @function countSourceRows\r\n   * @returns {number} Total number of rows.\r\n   */\n  this.countSourceRows = function () {\n    return dataSource.countRows();\n  };\n\n  /**\r\n   * Returns the total number of columns in the data source.\r\n   *\r\n   * @memberof Core#\r\n   * @function countSourceCols\r\n   * @returns {number} Total number of columns.\r\n   */\n  this.countSourceCols = function () {\n    return dataSource.countFirstRowKeys();\n  };\n\n  /**\r\n   * Returns the total number of visual rows in the table.\r\n   *\r\n   * @memberof Core#\r\n   * @function countRows\r\n   * @returns {number} Total number of rows.\r\n   */\n  this.countRows = function () {\n    return datamap.getLength();\n  };\n\n  /**\r\n   * Returns the total number of visible columns in the table.\r\n   *\r\n   * @memberof Core#\r\n   * @function countCols\r\n   * @returns {number} Total number of columns.\r\n   */\n  this.countCols = function () {\n    const maxCols = tableMeta.maxCols;\n    const dataLen = this.columnIndexMapper.getNotTrimmedIndexesLength();\n    return Math.min(maxCols, dataLen);\n  };\n\n  /**\r\n   * Returns the number of rendered rows including rows that are partially or fully rendered\r\n   * outside the table viewport.\r\n   *\r\n   * @memberof Core#\r\n   * @function countRenderedRows\r\n   * @returns {number} Returns -1 if table is not visible.\r\n   */\n  this.countRenderedRows = function () {\n    return instance.view._wt.drawn ? instance.view._wt.wtTable.getRenderedRowsCount() : -1;\n  };\n\n  /**\r\n   * Returns the number of rendered rows that are only visible in the table viewport.\r\n   * The rows that are partially visible are not counted.\r\n   *\r\n   * @memberof Core#\r\n   * @function countVisibleRows\r\n   * @returns {number} Number of visible rows or -1.\r\n   */\n  this.countVisibleRows = function () {\n    return instance.view._wt.drawn ? instance.view._wt.wtTable.getVisibleRowsCount() : -1;\n  };\n\n  /**\r\n   * Returns the number of rendered rows including columns that are partially or fully rendered\r\n   * outside the table viewport.\r\n   *\r\n   * @memberof Core#\r\n   * @function countRenderedCols\r\n   * @returns {number} Returns -1 if table is not visible.\r\n   */\n  this.countRenderedCols = function () {\n    return instance.view._wt.drawn ? instance.view._wt.wtTable.getRenderedColumnsCount() : -1;\n  };\n\n  /**\r\n   * Returns the number of rendered columns that are only visible in the table viewport.\r\n   * The columns that are partially visible are not counted.\r\n   *\r\n   * @memberof Core#\r\n   * @function countVisibleCols\r\n   * @returns {number} Number of visible columns or -1.\r\n   */\n  this.countVisibleCols = function () {\n    return instance.view._wt.drawn ? instance.view._wt.wtTable.getVisibleColumnsCount() : -1;\n  };\n\n  /**\r\n   * Returns the number of rendered row headers.\r\n   *\r\n   * @since 14.0.0\r\n   * @memberof Core#\r\n   * @function countRowHeaders\r\n   * @returns {number} Number of row headers.\r\n   */\n  this.countRowHeaders = function () {\n    return this.view.getRowHeadersCount();\n  };\n\n  /**\r\n   * Returns the number of rendered column headers.\r\n   *\r\n   * @since 14.0.0\r\n   * @memberof Core#\r\n   * @function countColHeaders\r\n   * @returns {number} Number of column headers.\r\n   */\n  this.countColHeaders = function () {\n    return this.view.getColumnHeadersCount();\n  };\n\n  /**\r\n   * Returns the number of empty rows. If the optional ending parameter is `true`, returns the\r\n   * number of empty rows at the bottom of the table.\r\n   *\r\n   * @memberof Core#\r\n   * @function countEmptyRows\r\n   * @param {boolean} [ending=false] If `true`, will only count empty rows at the end of the data source.\r\n   * @returns {number} Count empty rows.\r\n   */\n  this.countEmptyRows = function () {\n    let ending = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let emptyRows = 0;\n    rangeEachReverse(instance.countRows() - 1, visualIndex => {\n      if (instance.isEmptyRow(visualIndex)) {\n        emptyRows += 1;\n      } else if (ending === true) {\n        return false;\n      }\n    });\n    return emptyRows;\n  };\n\n  /**\r\n   * Returns the number of empty columns. If the optional ending parameter is `true`, returns the number of empty\r\n   * columns at right hand edge of the table.\r\n   *\r\n   * @memberof Core#\r\n   * @function countEmptyCols\r\n   * @param {boolean} [ending=false] If `true`, will only count empty columns at the end of the data source row.\r\n   * @returns {number} Count empty cols.\r\n   */\n  this.countEmptyCols = function () {\n    let ending = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let emptyColumns = 0;\n    rangeEachReverse(instance.countCols() - 1, visualIndex => {\n      if (instance.isEmptyCol(visualIndex)) {\n        emptyColumns += 1;\n      } else if (ending === true) {\n        return false;\n      }\n    });\n    return emptyColumns;\n  };\n\n  /**\r\n   * Check if all cells in the row declared by the `row` argument are empty.\r\n   *\r\n   * @memberof Core#\r\n   * @function isEmptyRow\r\n   * @param {number} row Visual row index.\r\n   * @returns {boolean} `true` if the row at the given `row` is empty, `false` otherwise.\r\n   */\n  this.isEmptyRow = function (row) {\n    return tableMeta.isEmptyRow.call(instance, row);\n  };\n\n  /**\r\n   * Check if all cells in the the column declared by the `column` argument are empty.\r\n   *\r\n   * @memberof Core#\r\n   * @function isEmptyCol\r\n   * @param {number} column Column index.\r\n   * @returns {boolean} `true` if the column at the given `col` is empty, `false` otherwise.\r\n   */\n  this.isEmptyCol = function (column) {\n    return tableMeta.isEmptyCol.call(instance, column);\n  };\n\n  /**\r\n   * Select a single cell, or a single range of adjacent cells.\r\n   *\r\n   * To select a cell, pass its visual row and column indexes, for example: `selectCell(2, 4)`.\r\n   *\r\n   * To select a range, pass the visual indexes of the first and last cell in the range, for example: `selectCell(2, 4, 3, 5)`.\r\n   *\r\n   * If your columns have properties, you can pass those properties' values instead of column indexes, for example: `selectCell(2, 'first_name')`.\r\n   *\r\n   * By default, `selectCell()` also:\r\n   *  - Scrolls the viewport to the newly-selected cells.\r\n   *  - Switches the keyboard focus to Handsontable (by calling Handsontable's [`listen()`](#listen) method).\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // select a single cell\r\n   * hot.selectCell(2, 4);\r\n   *\r\n   * // select a range of cells\r\n   * hot.selectCell(2, 4, 3, 5);\r\n   *\r\n   * // select a single cell, using a column property\r\n   * hot.selectCell(2, 'first_name');\r\n   *\r\n   * // select a range of cells, using column properties\r\n   * hot.selectCell(2, 'first_name', 3, 'last_name');\r\n   *\r\n   * // select a range of cells, without scrolling to them\r\n   * hot.selectCell(2, 4, 3, 5, false);\r\n   *\r\n   * // select a range of cells, without switching the keyboard focus to Handsontable\r\n   * hot.selectCell(2, 4, 3, 5, null, false);\r\n   * ```\r\n   *\r\n   * @memberof Core#\r\n   * @function selectCell\r\n   * @param {number} row A visual row index.\r\n   * @param {number|string} column A visual column index (`number`), or a column property's value (`string`).\r\n   * @param {number} [endRow] If selecting a range: the visual row index of the last cell in the range.\r\n   * @param {number|string} [endColumn] If selecting a range: the visual column index (or a column property's value) of the last cell in the range.\r\n   * @param {boolean} [scrollToCell=true] `true`: scroll the viewport to the newly-selected cells. `false`: keep the previous viewport.\r\n   * @param {boolean} [changeListener=true] `true`: switch the keyboard focus to Handsontable. `false`: keep the previous keyboard focus.\r\n   * @returns {boolean} `true`: the selection was successful, `false`: the selection failed.\r\n   */\n  this.selectCell = function (row, column, endRow, endColumn) {\n    let scrollToCell = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let changeListener = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    if (isUndefined(row) || isUndefined(column)) {\n      return false;\n    }\n    return this.selectCells([[row, column, endRow, endColumn]], scrollToCell, changeListener);\n  };\n\n  /**\r\n   * Select multiple cells or ranges of cells, adjacent or non-adjacent.\r\n   *\r\n   * You can pass one of the below:\r\n   * - An array of arrays (which matches the output of Handsontable's [`getSelected()`](#getselected) method).\r\n   * - An array of [`CellRange`](@/api/cellRange.md) objects (which matches the output of Handsontable's [`getSelectedRange()`](#getselectedrange) method).\r\n   *\r\n   * To select multiple cells, pass the visual row and column indexes of each cell, for example: `hot.selectCells([[1, 1], [5, 5]])`.\r\n   *\r\n   * To select multiple ranges, pass the visual indexes of the first and last cell in each range, for example: `hot.selectCells([[1, 1, 2, 2], [6, 2, 0, 2]])`.\r\n   *\r\n   * If your columns have properties, you can pass those properties' values instead of column indexes, for example: `hot.selectCells([[1, 'first_name'], [5, 'last_name']])`.\r\n   *\r\n   * By default, `selectCell()` also:\r\n   *  - Scrolls the viewport to the newly-selected cells.\r\n   *  - Switches the keyboard focus to Handsontable (by calling Handsontable's [`listen()`](#listen) method).\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // select non-adjacent cells\r\n   * hot.selectCells([[1, 1], [5, 5], [10, 10]]);\r\n   *\r\n   * // select non-adjacent ranges of cells\r\n   * hot.selectCells([[1, 1, 2, 2], [10, 10, 20, 20]]);\r\n   *\r\n   * // select cells and ranges of cells\r\n   * hot.selectCells([[1, 1, 2, 2], [3, 3], [6, 2, 0, 2]]);\r\n   *\r\n   * // select cells, using column properties\r\n   * hot.selectCells([[1, 'id', 2, 'first_name'], [3, 'full_name'], [6, 'last_name', 0, 'first_name']]);\r\n   *\r\n   * // select multiple ranges, using an array of `CellRange` objects\r\n   * const selected = hot.getSelectedRange();\r\n   *\r\n   * selected[0].from.row = 0;\r\n   * selected[0].from.col = 0;\r\n   * selected[0].to.row = 5;\r\n   * selected[0].to.col = 5;\r\n   *\r\n   * selected[1].from.row = 10;\r\n   * selected[1].from.col = 10;\r\n   * selected[1].to.row = 20;\r\n   * selected[1].to.col = 20;\r\n   *\r\n   * hot.selectCells(selected);\r\n   * ```\r\n   *\r\n   * @memberof Core#\r\n   * @since 0.38.0\r\n   * @function selectCells\r\n   * @param {Array[]|CellRange[]} coords Visual coordinates,\r\n   * passed either as an array of arrays (`[[rowStart, columnStart, rowEnd, columnEnd], ...]`)\r\n   * or as an array of [`CellRange`](@/api/cellRange.md) objects.\r\n   * @param {boolean} [scrollToCell=true] `true`: scroll the viewport to the newly-selected cells. `false`: keep the previous viewport.\r\n   * @param {boolean} [changeListener=true] `true`: switch the keyboard focus to Handsontable. `false`: keep the previous keyboard focus.\r\n   * @returns {boolean} `true`: the selection was successful, `false`: the selection failed.\r\n   */\n  this.selectCells = function () {\n    let coords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[]];\n    let scrollToCell = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let changeListener = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (scrollToCell === false) {\n      viewportScroller.suspend();\n    }\n    const wasSelected = selection.selectCells(coords);\n    if (wasSelected && changeListener) {\n      instance.listen();\n    }\n    viewportScroller.resume();\n    return wasSelected;\n  };\n\n  /**\r\n   * Select column specified by `startColumn` visual index, column property or a range of columns finishing at `endColumn`.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // Select column using visual index.\r\n   * hot.selectColumns(1);\r\n   * // Select column using column property.\r\n   * hot.selectColumns('id');\r\n   * // Select range of columns using visual indexes.\r\n   * hot.selectColumns(1, 4);\r\n   * // Select range of columns using visual indexes and mark the first header as highlighted.\r\n   * hot.selectColumns(1, 2, -1);\r\n   * // Select range of columns using visual indexes and mark the second cell as highlighted.\r\n   * hot.selectColumns(2, 1, 1);\r\n   * // Select range of columns using visual indexes and move the focus position somewhere in the middle of the range.\r\n   * hot.selectColumns(2, 5, { row: 2, col: 3 });\r\n   * // Select range of columns using column properties.\r\n   * hot.selectColumns('id', 'last_name');\r\n   * ```\r\n   *\r\n   * @memberof Core#\r\n   * @since 0.38.0\r\n   * @function selectColumns\r\n   * @param {number} startColumn The visual column index from which the selection starts.\r\n   * @param {number} [endColumn=startColumn] The visual column index to which the selection finishes. If `endColumn`\r\n   * is not defined the column defined by `startColumn` will be selected.\r\n   * @param {number | { row: number, col: number } | CellCoords} [focusPosition=0] The argument allows changing the cell/header focus\r\n   * position. The value can take visual row index from -N to N, where negative values point to the headers and positive\r\n   * values point to the cell range. An object with `row` and `col` properties also can be passed to change the focus\r\n   * position horizontally.\r\n   * @returns {boolean} `true` if selection was successful, `false` otherwise.\r\n   */\n  this.selectColumns = function (startColumn) {\n    let endColumn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startColumn;\n    let focusPosition = arguments.length > 2 ? arguments[2] : undefined;\n    return selection.selectColumns(startColumn, endColumn, focusPosition);\n  };\n\n  /**\r\n   * Select row specified by `startRow` visual index or a range of rows finishing at `endRow`.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // Select row using visual index.\r\n   * hot.selectRows(1);\r\n   * // select a range of rows, using visual indexes.\r\n   * hot.selectRows(1, 4);\r\n   * // select a range of rows, using visual indexes, and mark the header as highlighted.\r\n   * hot.selectRows(1, 2, -1);\r\n   * // Select range of rows using visual indexes and mark the second cell as highlighted.\r\n   * hot.selectRows(2, 1, 1);\r\n   * // Select range of rows using visual indexes and move the focus position somewhere in the middle of the range.\r\n   * hot.selectRows(2, 5, { row: 2, col: 3 });\r\n   * ```\r\n   *\r\n   * @memberof Core#\r\n   * @since 0.38.0\r\n   * @function selectRows\r\n   * @param {number} startRow The visual row index from which the selection starts.\r\n   * @param {number} [endRow=startRow] The visual row index to which the selection finishes. If `endRow`\r\n   * is not defined the row defined by `startRow` will be selected.\r\n   * @param {number | { row: number, col: number } | CellCoords} [focusPosition=0] The argument allows changing the cell/header focus\r\n   * position. The value can take visual row index from -N to N, where negative values point to the headers and positive\r\n   * values point to the cell range. An object with `row` and `col` properties also can be passed to change the focus\r\n   * position vertically.\r\n   * @returns {boolean} `true` if selection was successful, `false` otherwise.\r\n   */\n  this.selectRows = function (startRow) {\n    let endRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startRow;\n    let focusPosition = arguments.length > 2 ? arguments[2] : undefined;\n    return selection.selectRows(startRow, endRow, focusPosition);\n  };\n\n  /**\r\n   * Deselects the current cell selection on the table.\r\n   *\r\n   * @memberof Core#\r\n   * @function deselectCell\r\n   */\n  this.deselectCell = function () {\n    selection.deselect();\n  };\n\n  /**\r\n   * Select all cells in the table excluding headers and corner elements.\r\n   *\r\n   * The previous selection is overwritten.\r\n   *\r\n   * ```js\r\n   * // Select all cells in the table along with row headers, including all headers and the corner cell.\r\n   * // Doesn't select column headers and corner elements.\r\n   * hot.selectAll();\r\n   *\r\n   * // Select all cells in the table, including row headers but excluding the corner cell and column headers.\r\n   * hot.selectAll(true, false);\r\n   *\r\n   * // Select all cells in the table, including all headers and the corner cell, but move the focus.\r\n   * // highlight to position 2, 1\r\n   * hot.selectAll(-2, -1, {\r\n   *    focusPosition: { row: 2, col: 1 }\r\n   * });\r\n   *\r\n   * // Select all cells in the table, without headers and corner elements.\r\n   * hot.selectAll(false);\r\n   * ```\r\n   *\r\n   * @since 0.38.2\r\n   * @memberof Core#\r\n   * @function selectAll\r\n   * @param {boolean} [includeRowHeaders=false] `true` If the selection should include the row headers,\r\n   * `false` otherwise.\r\n   * @param {boolean} [includeColumnHeaders=false] `true` If the selection should include the column\r\n   * headers, `false` otherwise.\r\n   *\r\n   * @param {object} [options] Additional object with options. Since 14.0.0\r\n   * @param {{row: number, col: number} | boolean} [options.focusPosition] The argument allows changing the cell/header\r\n   * focus position. The value takes an object with a `row` and `col` properties from -N to N, where\r\n   * negative values point to the headers and positive values point to the cell range. If `false`, the focus\r\n   * position won't be changed. Example:\r\n   * ```js\r\n   * hot.selectAll(0, 0, {\r\n   * focusPosition: { row: 0, col: 1 },\r\n   * disableHeadersHighlight: true\r\n   * })\r\n   * ```\r\n   *\r\n   * @param {boolean} [options.disableHeadersHighlight] If `true`, disables highlighting the headers even when\r\n   * the logical coordinates points on them.\r\n   */\n  this.selectAll = function () {\n    let includeRowHeaders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let includeColumnHeaders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : includeRowHeaders;\n    let options = arguments.length > 2 ? arguments[2] : undefined;\n    viewportScroller.skipNextScrollCycle();\n    selection.selectAll(includeRowHeaders, includeColumnHeaders, options);\n  };\n  const getIndexToScroll = (indexMapper, visualIndex) => {\n    // Looking for a visual index on the right and then (when not found) on the left.\n    return indexMapper.getNearestNotHiddenIndex(visualIndex, 1, true);\n  };\n\n  /**\r\n   * Scroll viewport to coordinates specified by the `row` and/or `col` object properties.\r\n   *\r\n   * ```js\r\n   * // scroll the viewport to the visual row index (leave the horizontal scroll untouched)\r\n   * hot.scrollViewportTo({ row: 50 });\r\n   *\r\n   * // scroll the viewport to the passed coordinates so that the cell at 50, 50 will be snapped to\r\n   * // the bottom-end table's edge.\r\n   * hot.scrollViewportTo({\r\n   *   row: 50,\r\n   *   col: 50,\r\n   *   verticalSnap: 'bottom',\r\n   *   horizontalSnap: 'end',\r\n   * });\r\n   * ```\r\n   *\r\n   * @memberof Core#\r\n   * @function scrollViewportTo\r\n   * @param {object} options A dictionary containing the following parameters:\r\n   * @param {number} [options.row] Specifies the number of visual rows along the Y axis to scroll the viewport.\r\n   * @param {number} [options.col] Specifies the number of visual columns along the X axis to scroll the viewport.\r\n   * @param {'top' | 'bottom'} [options.verticalSnap] Determines to which edge of the table the viewport will be scrolled based on the passed coordinates.\r\n   * This option is a string which must take one of the following values:\r\n   * - `top`: The viewport will be scrolled to a row in such a way that it will be positioned on the top of the viewport;\r\n   * - `bottom`: The viewport will be scrolled to a row in such a way that it will be positioned on the bottom of the viewport;\r\n   * - If the property is not defined the vertical auto-snapping is enabled. Depending on where the viewport is scrolled from, a row will\r\n   * be positioned at the top or bottom of the viewport.\r\n   * @param {'start' | 'end'} [options.horizontalSnap] Determines to which edge of the table the viewport will be scrolled based on the passed coordinates.\r\n   * This option is a string which must take one of the following values:\r\n   * - `start`: The viewport will be scrolled to a column in such a way that it will be positioned on the start (left edge or right, if the layout direction is set to `rtl`) of the viewport;\r\n   * - `end`: The viewport will be scrolled to a column in such a way that it will be positioned on the end (right edge or left, if the layout direction is set to `rtl`) of the viewport;\r\n   * - If the property is not defined the horizontal auto-snapping is enabled. Depending on where the viewport is scrolled from, a column will\r\n   * be positioned at the start or end of the viewport.\r\n   * @param {boolean} [options.considerHiddenIndexes=true] If `true`, we handle visual indexes, otherwise we handle only indexes which\r\n   * may be rendered when they are in the viewport (we don't consider hidden indexes as they aren't rendered).\r\n   * @returns {boolean} `true` if viewport was scrolled, `false` otherwise.\r\n   */\n  this.scrollViewportTo = function (options) {\n    var _options;\n    // Support for backward compatibility arguments: (row, col, snapToBottom, snapToRight, considerHiddenIndexes)\n    if (typeof options === 'number') {\n      var _arguments$;\n      /* eslint-disable prefer-rest-params */\n      options = {\n        row: arguments[0],\n        col: arguments[1],\n        verticalSnap: arguments[2] ? 'bottom' : 'top',\n        horizontalSnap: arguments[3] ? 'end' : 'start',\n        considerHiddenIndexes: (_arguments$ = arguments[4]) !== null && _arguments$ !== void 0 ? _arguments$ : true\n      };\n      /* eslint-enable prefer-rest-params */\n    }\n    const {\n      row,\n      col,\n      verticalSnap,\n      horizontalSnap,\n      considerHiddenIndexes\n    } = (_options = options) !== null && _options !== void 0 ? _options : {};\n    let snapToTop;\n    let snapToBottom;\n    let snapToInlineStart;\n    let snapToInlineEnd;\n    if (verticalSnap !== undefined) {\n      snapToTop = verticalSnap === 'top';\n      snapToBottom = !snapToTop;\n    }\n    if (horizontalSnap !== undefined) {\n      snapToInlineStart = horizontalSnap === 'start';\n      snapToInlineEnd = !snapToInlineStart;\n    }\n    let renderableRow = row;\n    let renderableColumn = col;\n    if (considerHiddenIndexes === undefined || considerHiddenIndexes) {\n      const isValidRowGrid = Number.isInteger(row) && row >= 0;\n      const isValidColumnGrid = Number.isInteger(col) && col >= 0;\n      const visualRowToScroll = isValidRowGrid ? getIndexToScroll(this.rowIndexMapper, row) : undefined;\n      const visualColumnToScroll = isValidColumnGrid ? getIndexToScroll(this.columnIndexMapper, col) : undefined;\n      if (visualRowToScroll === null || visualColumnToScroll === null) {\n        return false;\n      }\n      renderableRow = isValidRowGrid ? instance.rowIndexMapper.getRenderableFromVisualIndex(visualRowToScroll) : row;\n      renderableColumn = isValidColumnGrid ? instance.columnIndexMapper.getRenderableFromVisualIndex(visualColumnToScroll) : col;\n    }\n    const isRowInteger = Number.isInteger(renderableRow);\n    const isColumnInteger = Number.isInteger(renderableColumn);\n    if (isRowInteger && renderableRow >= 0 && isColumnInteger && renderableColumn >= 0) {\n      return instance.view.scrollViewport(instance._createCellCoords(renderableRow, renderableColumn), snapToTop, snapToInlineEnd, snapToBottom, snapToInlineStart);\n    }\n    if (isRowInteger && renderableRow >= 0 && (isColumnInteger && renderableColumn < 0 || !isColumnInteger)) {\n      return instance.view.scrollViewportVertically(renderableRow, snapToTop, snapToBottom);\n    }\n    if (isColumnInteger && renderableColumn >= 0 && (isRowInteger && renderableRow < 0 || !isRowInteger)) {\n      return instance.view.scrollViewportHorizontally(renderableColumn, snapToInlineEnd, snapToInlineStart);\n    }\n    return false;\n  };\n\n  /**\r\n   * Scrolls the viewport to coordinates specified by the currently focused cell.\r\n   *\r\n   * @since 14.0.0\r\n   * @memberof Core#\r\n   * @fires Hooks#afterScroll\r\n   * @function scrollToFocusedCell\r\n   * @param {Function} callback The callback function to call after the viewport is scrolled.\r\n   */\n  this.scrollToFocusedCell = function () {\n    let callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};\n    if (!this.selection.isSelected()) {\n      return;\n    }\n    this.addHookOnce('afterScroll', callback);\n    const {\n      highlight\n    } = this.getSelectedRangeLast();\n    const isScrolled = this.scrollViewportTo(highlight.toObject());\n    if (isScrolled) {\n      this.view.render();\n    } else {\n      this.removeHook('afterScroll', callback);\n      this._registerImmediate(() => callback());\n    }\n  };\n\n  /**\r\n   * Removes the table from the DOM and destroys the instance of the Handsontable.\r\n   *\r\n   * @memberof Core#\r\n   * @function destroy\r\n   * @fires Hooks#afterDestroy\r\n   */\n  this.destroy = function () {\n    instance._clearTimeouts();\n    instance._clearImmediates();\n    if (instance.view) {\n      // in case HT is destroyed before initialization has finished\n      instance.view.destroy();\n    }\n    if (dataSource) {\n      dataSource.destroy();\n    }\n    dataSource = null;\n    this.getShortcutManager().destroy();\n    metaManager.clearCache();\n    foreignHotInstances.delete(this.guid);\n    if (isRootInstance(instance)) {\n      const licenseInfo = this.rootDocument.querySelector('.hot-display-license-info');\n      if (licenseInfo) {\n        licenseInfo.parentNode.removeChild(licenseInfo);\n      }\n    }\n    empty(instance.rootElement);\n    eventManager.destroy();\n    if (editorManager) {\n      editorManager.destroy();\n    }\n\n    // The plugin's `destroy` method is called as a consequence and it should handle\n    // unregistration of plugin's maps. Some unregistered maps reset the cache.\n    instance.batchExecution(() => {\n      instance.rowIndexMapper.unregisterAll();\n      instance.columnIndexMapper.unregisterAll();\n      pluginsRegistry.getItems().forEach(_ref10 => {\n        let [, plugin] = _ref10;\n        plugin.destroy();\n      });\n      pluginsRegistry.clear();\n      instance.runHooks('afterDestroy');\n    }, true);\n    Hooks.getSingleton().destroy(instance);\n    objectEach(instance, (property, key, obj) => {\n      // replace instance methods with post mortem\n      if (isFunction(property)) {\n        obj[key] = postMortem(key);\n      } else if (key !== 'guid') {\n        // replace instance properties with null (restores memory)\n        // it should not be necessary but this prevents a memory leak side effects that show itself in Jasmine tests\n        obj[key] = null;\n      }\n    });\n    instance.isDestroyed = true;\n\n    // replace private properties with null (restores memory)\n    // it should not be necessary but this prevents a memory leak side effects that show itself in Jasmine tests\n    if (datamap) {\n      datamap.destroy();\n    }\n    datamap = null;\n    grid = null;\n    selection = null;\n    editorManager = null;\n    instance = null;\n  };\n\n  /**\r\n   * Replacement for all methods after the Handsontable was destroyed.\r\n   *\r\n   * @private\r\n   * @param {string} method The method name.\r\n   * @returns {Function}\r\n   */\n  function postMortem(method) {\n    return () => {\n      throw new Error(`The \"${method}\" method cannot be called because this Handsontable instance has been destroyed`);\n    };\n  }\n\n  /**\r\n   * Returns the active editor class instance.\r\n   *\r\n   * @memberof Core#\r\n   * @function getActiveEditor\r\n   * @returns {BaseEditor} The active editor instance.\r\n   */\n  this.getActiveEditor = function () {\n    return editorManager.getActiveEditor();\n  };\n\n  /**\r\n   * Returns plugin instance by provided its name.\r\n   *\r\n   * @memberof Core#\r\n   * @function getPlugin\r\n   * @param {string} pluginName The plugin name.\r\n   * @returns {BasePlugin|undefined} The plugin instance or undefined if there is no plugin.\r\n   */\n  this.getPlugin = function (pluginName) {\n    const unifiedPluginName = toUpperCaseFirst(pluginName);\n\n    // Workaround for the UndoRedo plugin which, currently doesn't follow the plugin architecture.\n    if (unifiedPluginName === 'UndoRedo') {\n      return this.undoRedo;\n    }\n    return pluginsRegistry.getItem(unifiedPluginName);\n  };\n\n  /**\r\n   * Returns name of the passed plugin.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @param {BasePlugin} plugin The plugin instance.\r\n   * @returns {string}\r\n   */\n  this.getPluginName = function (plugin) {\n    // Workaround for the UndoRedo plugin which, currently doesn't follow the plugin architecture.\n    if (plugin === this.undoRedo) {\n      return this.undoRedo.constructor.PLUGIN_KEY;\n    }\n    return pluginsRegistry.getId(plugin);\n  };\n\n  /**\r\n   * Returns the Handsontable instance.\r\n   *\r\n   * @memberof Core#\r\n   * @function getInstance\r\n   * @returns {Handsontable} The Handsontable instance.\r\n   */\n  this.getInstance = function () {\n    return instance;\n  };\n\n  /**\r\n   * Adds listener to the specified hook name (only for this Handsontable instance).\r\n   *\r\n   * @memberof Core#\r\n   * @function addHook\r\n   * @see Hooks#add\r\n   * @param {string} key Hook name (see {@link Hooks}).\r\n   * @param {Function|Array} callback Function or array of functions.\r\n   * @param {number} [orderIndex] Order index of the callback.\r\n   *                              If > 0, the callback will be added after the others, for example, with an index of 1, the callback will be added before the ones with an index of 2, 3, etc., but after the ones with an index of 0 and lower.\r\n   *                              If < 0, the callback will be added before the others, for example, with an index of -1, the callback will be added after the ones with an index of -2, -3, etc., but before the ones with an index of 0 and higher.\r\n   *                              If 0 or no order index is provided, the callback will be added between the \"negative\" and \"positive\" indexes.\r\n   * @example\r\n   * ```js\r\n   * hot.addHook('beforeInit', myCallback);\r\n   * ```\r\n   */\n  this.addHook = function (key, callback, orderIndex) {\n    Hooks.getSingleton().add(key, callback, instance, orderIndex);\n  };\n\n  /**\r\n   * Check if for a specified hook name there are added listeners (only for this Handsontable instance). All available\r\n   * hooks you will find {@link Hooks}.\r\n   *\r\n   * @memberof Core#\r\n   * @function hasHook\r\n   * @see Hooks#has\r\n   * @param {string} key Hook name.\r\n   * @returns {boolean}\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const hasBeforeInitListeners = hot.hasHook('beforeInit');\r\n   * ```\r\n   */\n  this.hasHook = function (key) {\n    return Hooks.getSingleton().has(key, instance) || Hooks.getSingleton().has(key);\n  };\n\n  /**\r\n   * Adds listener to specified hook name (only for this Handsontable instance). After the listener is triggered,\r\n   * it will be automatically removed.\r\n   *\r\n   * @memberof Core#\r\n   * @function addHookOnce\r\n   * @see Hooks#once\r\n   * @param {string} key Hook name (see {@link Hooks}).\r\n   * @param {Function|Array} callback Function or array of functions.\r\n   * @param {number} [orderIndex] Order index of the callback.\r\n   *                              If > 0, the callback will be added after the others, for example, with an index of 1, the callback will be added before the ones with an index of 2, 3, etc., but after the ones with an index of 0 and lower.\r\n   *                              If < 0, the callback will be added before the others, for example, with an index of -1, the callback will be added after the ones with an index of -2, -3, etc., but before the ones with an index of 0 and higher.\r\n   *                              If 0 or no order index is provided, the callback will be added between the \"negative\" and \"positive\" indexes.\r\n   * @example\r\n   * ```js\r\n   * hot.addHookOnce('beforeInit', myCallback);\r\n   * ```\r\n   */\n  this.addHookOnce = function (key, callback, orderIndex) {\n    Hooks.getSingleton().once(key, callback, instance, orderIndex);\n  };\n\n  /**\r\n   * Removes the hook listener previously registered with {@link Core#addHook}.\r\n   *\r\n   * @memberof Core#\r\n   * @function removeHook\r\n   * @see Hooks#remove\r\n   * @param {string} key Hook name.\r\n   * @param {Function} callback Reference to the function which has been registered using {@link Core#addHook}.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * hot.removeHook('beforeInit', myCallback);\r\n   * ```\r\n   */\n  this.removeHook = function (key, callback) {\n    Hooks.getSingleton().remove(key, callback, instance);\n  };\n\n  /**\r\n   * Run the callbacks for the hook provided in the `key` argument using the parameters given in the other arguments.\r\n   *\r\n   * @memberof Core#\r\n   * @function runHooks\r\n   * @see Hooks#run\r\n   * @param {string} key Hook name.\r\n   * @param {*} [p1] Argument passed to the callback.\r\n   * @param {*} [p2] Argument passed to the callback.\r\n   * @param {*} [p3] Argument passed to the callback.\r\n   * @param {*} [p4] Argument passed to the callback.\r\n   * @param {*} [p5] Argument passed to the callback.\r\n   * @param {*} [p6] Argument passed to the callback.\r\n   * @returns {*}\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // Run built-in hook\r\n   * hot.runHooks('beforeInit');\r\n   * // Run custom hook\r\n   * hot.runHooks('customAction', 10, 'foo');\r\n   * ```\r\n   */\n  this.runHooks = function (key, p1, p2, p3, p4, p5, p6) {\n    return Hooks.getSingleton().run(instance, key, p1, p2, p3, p4, p5, p6);\n  };\n\n  /**\r\n   * Get language phrase for specified dictionary key.\r\n   *\r\n   * @memberof Core#\r\n   * @function getTranslatedPhrase\r\n   * @since 0.35.0\r\n   * @param {string} dictionaryKey Constant which is dictionary key.\r\n   * @param {*} extraArguments Arguments which will be handled by formatters.\r\n   * @returns {string}\r\n   */\n  this.getTranslatedPhrase = function (dictionaryKey, extraArguments) {\n    return getTranslatedPhrase(tableMeta.language, dictionaryKey, extraArguments);\n  };\n\n  /**\r\n   * Converts instance into outerHTML of HTMLTableElement.\r\n   *\r\n   * @memberof Core#\r\n   * @function toHTML\r\n   * @since 7.1.0\r\n   * @returns {string}\r\n   */\n  this.toHTML = () => instanceToHTML(this);\n\n  /**\r\n   * Converts instance into HTMLTableElement.\r\n   *\r\n   * @memberof Core#\r\n   * @function toTableElement\r\n   * @since 7.1.0\r\n   * @returns {HTMLTableElement}\r\n   */\n  this.toTableElement = () => {\n    const tempElement = this.rootDocument.createElement('div');\n    tempElement.insertAdjacentHTML('afterbegin', instanceToHTML(this));\n    return tempElement.firstElementChild;\n  };\n  this.timeouts = [];\n\n  /**\r\n   * Sets timeout. Purpose of this method is to clear all known timeouts when `destroy` method is called.\r\n   *\r\n   * @param {number|Function} handle Handler returned from setTimeout or function to execute (it will be automatically wraped\r\n   *                                 by setTimeout function).\r\n   * @param {number} [delay=0] If first argument is passed as a function this argument set delay of the execution of that function.\r\n   * @private\r\n   */\n  this._registerTimeout = function (handle) {\n    let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let handleFunc = handle;\n    if (typeof handleFunc === 'function') {\n      handleFunc = setTimeout(handleFunc, delay);\n    }\n    this.timeouts.push(handleFunc);\n  };\n\n  /**\r\n   * Clears all known timeouts.\r\n   *\r\n   * @private\r\n   */\n  this._clearTimeouts = function () {\n    arrayEach(this.timeouts, handler => {\n      clearTimeout(handler);\n    });\n  };\n  this.immediates = [];\n\n  /**\r\n   * Execute function execution to the next event loop cycle. Purpose of this method is to clear all known timeouts when `destroy` method is called.\r\n   *\r\n   * @param {Function} callback Function to be delayed in execution.\r\n   * @private\r\n   */\n  this._registerImmediate = function (callback) {\n    this.immediates.push(setImmediate(callback));\n  };\n\n  /**\r\n   * Clears all known timeouts.\r\n   *\r\n   * @private\r\n   */\n  this._clearImmediates = function () {\n    arrayEach(this.immediates, handler => {\n      clearImmediate(handler);\n    });\n  };\n\n  /**\r\n   * Gets the instance of the EditorManager.\r\n   *\r\n   * @private\r\n   * @returns {EditorManager}\r\n   */\n  this._getEditorManager = function () {\n    return editorManager;\n  };\n\n  /**\r\n   * Check if currently it is RTL direction.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function isRtl\r\n   * @returns {boolean} True if RTL.\r\n   */\n  this.isRtl = function () {\n    return instance.rootWindow.getComputedStyle(instance.rootElement).direction === 'rtl';\n  };\n\n  /**\r\n   * Check if currently it is LTR direction.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function isLtr\r\n   * @returns {boolean} True if LTR.\r\n   */\n  this.isLtr = function () {\n    return !instance.isRtl();\n  };\n\n  /**\r\n   * Returns 1 for LTR; -1 for RTL. Useful for calculations.\r\n   *\r\n   * @private\r\n   * @memberof Core#\r\n   * @function getDirectionFactor\r\n   * @returns {number} Returns 1 for LTR; -1 for RTL.\r\n   */\n  this.getDirectionFactor = function () {\n    return instance.isLtr() ? 1 : -1;\n  };\n  const shortcutManager = createShortcutManager({\n    handleEvent() {\n      return instance.isListening();\n    },\n    beforeKeyDown: event => {\n      return this.runHooks('beforeKeyDown', event);\n    },\n    afterKeyDown: event => {\n      if (this.isDestroyed) {\n        // Handsontable could be destroyed after performing action (executing a callback).\n        return;\n      }\n      instance.runHooks('afterDocumentKeyDown', event);\n    },\n    ownerWindow: this.rootWindow\n  });\n  this.addHook('beforeOnCellMouseDown', event => {\n    // Releasing keys as some browser/system shortcuts break events sequence (thus the `keyup` event isn't triggered).\n    if (event.ctrlKey === false && event.metaKey === false) {\n      shortcutManager.releasePressedKeys();\n    }\n  });\n\n  /**\r\n   * Returns instance of a manager responsible for handling shortcuts stored in some contexts. It run actions after\r\n   * pressing key combination in active Handsontable instance.\r\n   *\r\n   * @memberof Core#\r\n   * @since 12.0.0\r\n   * @function getShortcutManager\r\n   * @returns {ShortcutManager} Instance of {@link ShortcutManager}\r\n   */\n  this.getShortcutManager = function () {\n    return shortcutManager;\n  };\n\n  /**\r\n   * Return the Focus Manager responsible for managing the browser's focus in the table.\r\n   *\r\n   * @memberof Core#\r\n   * @since 14.0.0\r\n   * @function getFocusManager\r\n   * @returns {FocusManager}\r\n   */\n  this.getFocusManager = function () {\n    return focusManager;\n  };\n  getPluginsNames().forEach(pluginName => {\n    const PluginClass = getPlugin(pluginName);\n    pluginsRegistry.addItem(pluginName, new PluginClass(this));\n  });\n  registerAllShortcutContexts(instance);\n  shortcutManager.setActiveContextName('grid');\n  Hooks.getSingleton().run(instance, 'construct');\n}", "/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\r\n * autoResize - resizes a DOM element to the width and height of another DOM element\r\n *\r\n * Copyright 2014, Marcin Warpechowski\r\n * Licensed under the MIT license\r\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\n/**\r\n * Attaches an event listener to the given element.\r\n *\r\n * @param {HTMLElement} element The element to observe.\r\n * @param {string} eventName The name of the event to listen for.\r\n * @param {Function} handler The function to call when the event is triggered.\r\n */\nfunction observe(element, eventName, handler) {\n  element.addEventListener(eventName, handler, false);\n}\n\n/**\r\n * Removes an event listener from an element.\r\n *\r\n * @param {HTMLElement} element The element to remove the event listener from.\r\n * @param {string} eventName The name of the event to remove.\r\n * @param {Function} handler The function to remove as a listener.\r\n */\nfunction unObserve(element, eventName, handler) {\n  element.removeEventListener(eventName, handler, false);\n}\n\n/**\r\n * Returns the computed style of an element.\r\n *\r\n * @param {Element} element The element to get the computed style from.\r\n * @returns {CSSStyleDeclaration} The computed style of the element.\r\n */\nfunction getComputedStyle(element) {\n  return element.ownerDocument.defaultView.getComputedStyle(element);\n}\n\n/**\r\n * @typedef InputElementResizerConfig\r\n * @property {number} minWidth The minimum width of the element.\r\n * @property {number} maxWidth The maximum width of the element.\r\n * @property {number} minHeight The minimum height of the element.\r\n * @property {number} maxHeight The maximum height of the element.\r\n */\n/**\r\n * @typedef InputElementResizer\r\n * @property {function(HTMLElement, InputElementResizerConfig, boolean): void} init Initializes the resizer.\r\n * @property {function(): void} resize Resizes the element.\r\n * @property {function(): void} unObserve Removes the event listeners.\r\n */\n/**\r\n * Creates an input element resizer.\r\n *\r\n * @param {Document} ownerDocument The document to create the resizer for.\r\n * @returns {InputElementResizer}\r\n */\nexport function createInputElementResizer(ownerDocument) {\n  const defaults = {\n    minHeight: 200,\n    maxHeight: 300,\n    minWidth: 100,\n    maxWidth: 300\n  };\n  const body = ownerDocument.body;\n  const textHolder = ownerDocument.createTextNode('');\n  const textContainer = ownerDocument.createElement('span');\n  let observedElement;\n\n  /**\r\n   * Resizes the element.\r\n   */\n  function resize() {\n    textHolder.textContent = observedElement.value;\n    // Won't expand the element size for displaying body as for example, `grid`, `inline-grid` or `flex` with\n    // `flex-direction` set as `column`.\n    textContainer.style.position = 'absolute';\n    textContainer.style.fontSize = getComputedStyle(observedElement).fontSize;\n    textContainer.style.fontFamily = getComputedStyle(observedElement).fontFamily;\n    textContainer.style.whiteSpace = 'pre';\n    body.appendChild(textContainer);\n    const width = textContainer.clientWidth + 2;\n    body.removeChild(textContainer);\n    const elementStyle = observedElement.style;\n    elementStyle.height = `${defaults.minHeight}px`;\n    if (defaults.minWidth > width) {\n      elementStyle.width = `${defaults.minWidth}px`;\n    } else if (width > defaults.maxWidth) {\n      elementStyle.width = `${defaults.maxWidth}px`;\n    } else {\n      elementStyle.width = `${width}px`;\n    }\n    const scrollHeight = observedElement.scrollHeight ? observedElement.scrollHeight - 1 : 0;\n    if (defaults.minHeight > scrollHeight) {\n      elementStyle.height = `${defaults.minHeight}px`;\n    } else if (defaults.maxHeight < scrollHeight) {\n      elementStyle.height = `${defaults.maxHeight}px`;\n      elementStyle.overflowY = 'visible';\n    } else {\n      elementStyle.height = `${scrollHeight}px`;\n    }\n  }\n\n  /**\r\n   * Resizes the element after a delay.\r\n   */\n  function delayedResize() {\n    ownerDocument.defaultView.setTimeout(resize, 0);\n  }\n\n  /**\r\n   * Extends the default configuration.\r\n   *\r\n   * @param {InputElementResizerConfig} config The configuration to extend the defaults with.\r\n   */\n  function extendDefaults(config) {\n    if (config && config.minHeight) {\n      if (config.minHeight === 'inherit') {\n        defaults.minHeight = observedElement.clientHeight;\n      } else {\n        const minHeight = parseInt(config.minHeight, 10);\n        if (!isNaN(minHeight)) {\n          defaults.minHeight = minHeight;\n        }\n      }\n    }\n    if (config && config.maxHeight) {\n      if (config.maxHeight === 'inherit') {\n        defaults.maxHeight = observedElement.clientHeight;\n      } else {\n        const maxHeight = parseInt(config.maxHeight, 10);\n        if (!isNaN(maxHeight)) {\n          defaults.maxHeight = maxHeight;\n        }\n      }\n    }\n    if (config && config.minWidth) {\n      if (config.minWidth === 'inherit') {\n        defaults.minWidth = observedElement.clientWidth;\n      } else {\n        const minWidth = parseInt(config.minWidth, 10);\n        if (!isNaN(minWidth)) {\n          defaults.minWidth = minWidth;\n        }\n      }\n    }\n    if (config && config.maxWidth) {\n      if (config.maxWidth === 'inherit') {\n        defaults.maxWidth = observedElement.clientWidth;\n      } else {\n        const maxWidth = parseInt(config.maxWidth, 10);\n        if (!isNaN(maxWidth)) {\n          defaults.maxWidth = maxWidth;\n        }\n      }\n    }\n    if (!textContainer.firstChild) {\n      textContainer.className = 'autoResize';\n      textContainer.style.display = 'inline-block';\n      textContainer.appendChild(textHolder);\n    }\n  }\n\n  /**\r\n   * Initializes the resizer.\r\n   *\r\n   * @param {HTMLElement} elementToObserve The element to observe.\r\n   * @param {InputElementResizerConfig} config The configuration to extend the defaults with.\r\n   * @param {boolean} [doObserve=false] Whether to observe the element and resize it on every input change.\r\n   */\n  function init(elementToObserve, config) {\n    let doObserve = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    observedElement = elementToObserve;\n    extendDefaults(config);\n    if (observedElement.nodeName === 'TEXTAREA') {\n      observedElement.style.resize = 'none';\n      observedElement.style.height = `${defaults.minHeight}px`;\n      observedElement.style.minWidth = `${defaults.minWidth}px`;\n      observedElement.style.maxWidth = `${defaults.maxWidth}px`;\n      observedElement.style.overflowY = 'hidden';\n    }\n    if (doObserve) {\n      observe(observedElement, 'input', resize);\n      // the keydown event is necessary for undo stack to work properly\n      observe(observedElement, 'keydown', delayedResize);\n    }\n    resize();\n  }\n  return {\n    init,\n    resize,\n    unObserve() {\n      unObserve(observedElement, 'input', resize);\n      unObserve(observedElement, 'keydown', delayedResize);\n    }\n  };\n}", "import { getCaretPosition, setCaretPosition } from \"../../helpers/dom/element.mjs\";\n/**\r\n * Updates the textarea caret position depends on the action executed on that element.\r\n *\r\n * The following actions are supported:\r\n *  - 'home': Move the caret to the beginning of the current line;\r\n *  - 'end': Move the caret to the end of the current line.\r\n *\r\n * @param {'home'|'end'} actionName The action to perform that modifies the caret behavior.\r\n * @param {HTMLTextAreaElement} textareaElement The textarea element where the action is supposed to happen.\r\n */\nexport function updateCaretPosition(actionName, textareaElement) {\n  const caretPosition = getCaretPosition(textareaElement);\n  const textLines = textareaElement.value.split('\\n');\n  let newCaretPosition = caretPosition;\n  let lineStartIndex = 0;\n  for (let i = 0; i < textLines.length; i++) {\n    const textLine = textLines[i];\n    if (i !== 0) {\n      lineStartIndex += textLines[i - 1].length + 1;\n    }\n    const lineEndIndex = lineStartIndex + textLine.length;\n    if (actionName === 'home') {\n      newCaretPosition = lineStartIndex;\n    } else if (actionName === 'end') {\n      newCaretPosition = lineEndIndex;\n    }\n    if (caretPosition <= lineEndIndex) {\n      break;\n    }\n  }\n  setCaretPosition(textareaElement, newCaretPosition);\n}", "import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { BaseEditor, EDITOR_STATE } from \"../baseEditor/index.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { isEdge, isIOS } from \"../../helpers/browser.mjs\";\nimport { addClass, getComputedStyle, isThisHotChild, setCaretPosition, hasClass, removeClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { createInputElementResizer } from \"../../utils/autoResize.mjs\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\nimport { updateCaretPosition } from \"./caretPositioner.mjs\";\nimport { A11Y_HIDDEN, A11Y_TABINDEX } from \"../../helpers/a11y.mjs\";\nconst EDITOR_VISIBLE_CLASS_NAME = 'ht_editor_visible';\nconst EDITOR_HIDDEN_CLASS_NAME = 'ht_editor_hidden';\nconst SHORTCUTS_GROUP = 'textEditor';\nexport const EDITOR_TYPE = 'text';\n\n/**\r\n * @private\r\n * @class TextEditor\r\n */\nexport class TextEditor extends BaseEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n\n  /**\r\n   * Instance of {@link EventManager}.\r\n   *\r\n   * @private\r\n   * @type {EventManager}\r\n   */\n\n  /**\r\n   * @param {Core} hotInstance The Handsontable instance.\r\n   */\n  constructor(hotInstance) {\n    super(hotInstance);\n    _defineProperty(this, \"eventManager\", new EventManager(this));\n    /**\r\n     * Autoresize instance. Automagically resizes editor after changes.\r\n     *\r\n     * @private\r\n     * @type {Function}\r\n     */\n    _defineProperty(this, \"autoResize\", createInputElementResizer(this.hot.rootDocument));\n    /**\r\n     * An TEXTAREA element.\r\n     *\r\n     * @private\r\n     * @type {HTMLTextAreaElement}\r\n     */\n    _defineProperty(this, \"TEXTAREA\", void 0);\n    /**\r\n     * Style declaration object of the TEXTAREA element.\r\n     *\r\n     * @private\r\n     * @type {CSSStyleDeclaration}\r\n     */\n    _defineProperty(this, \"textareaStyle\", void 0);\n    /**\r\n     * Parent element of the TEXTAREA.\r\n     *\r\n     * @private\r\n     * @type {HTMLDivElement}\r\n     */\n    _defineProperty(this, \"TEXTAREA_PARENT\", void 0);\n    /**\r\n     * Style declaration object of the TEXTAREA_PARENT element.\r\n     *\r\n     * @private\r\n     * @type {CSSStyleDeclaration}\r\n     */\n    _defineProperty(this, \"textareaParentStyle\", void 0);\n    /**\r\n     * Z-index class style for the editor.\r\n     *\r\n     * @private\r\n     * @type {string}\r\n     */\n    _defineProperty(this, \"layerClass\", void 0);\n    this.eventManager = new EventManager(this);\n    this.createElements();\n    this.bindEvents();\n    this.hot.addHookOnce('afterDestroy', () => this.destroy());\n  }\n\n  /**\r\n   * Gets current value from editable element.\r\n   *\r\n   * @returns {number}\r\n   */\n  getValue() {\n    return this.TEXTAREA.value;\n  }\n\n  /**\r\n   * Sets new value into editable element.\r\n   *\r\n   * @param {*} newValue The editor value.\r\n   */\n  setValue(newValue) {\n    this.TEXTAREA.value = newValue;\n  }\n\n  /**\r\n   * Opens the editor and adjust its size.\r\n   */\n  open() {\n    this.refreshDimensions(); // need it instantly, to prevent https://github.com/handsontable/handsontable/issues/348\n    this.showEditableElement();\n    this.hot.getShortcutManager().setActiveContextName('editor');\n    this.registerShortcuts();\n  }\n\n  /**\r\n   * Closes the editor.\r\n   */\n  close() {\n    this.autoResize.unObserve();\n    if (isThisHotChild(this.hot.rootDocument.activeElement, this.hot.rootElement)) {\n      this.hot.listen(); // don't refocus the table if user focused some cell outside of HT on purpose\n    }\n    this.hideEditableElement();\n    this.unregisterShortcuts();\n  }\n\n  /**\r\n   * Prepares editor's meta data.\r\n   *\r\n   * @param {number} row The visual row index.\r\n   * @param {number} col The visual column index.\r\n   * @param {number|string} prop The column property (passed when datasource is an array of objects).\r\n   * @param {HTMLTableCellElement} td The rendered cell element.\r\n   * @param {*} value The rendered value.\r\n   * @param {object} cellProperties The cell meta object (see {@link Core#getCellMeta}).\r\n   */\n  prepare(row, col, prop, td, value, cellProperties) {\n    const previousState = this.state;\n    super.prepare(row, col, prop, td, value, cellProperties);\n    if (!cellProperties.readOnly) {\n      this.refreshDimensions(true);\n      const {\n        allowInvalid\n      } = cellProperties;\n      if (allowInvalid && !this.isOpened()) {\n        // Remove an empty space from textarea (added by copyPaste plugin to make copy/paste\n        // functionality work with IME)\n        this.TEXTAREA.value = '';\n      }\n      if (previousState !== EDITOR_STATE.FINISHED && !this.isOpened()) {\n        this.hideEditableElement();\n      }\n    }\n  }\n\n  /**\r\n   * Begins editing on a highlighted cell and hides fillHandle corner if was present.\r\n   *\r\n   * @param {*} newInitialValue The editor initial value.\r\n   * @param {Event} event The keyboard event object.\r\n   */\n  beginEditing(newInitialValue, event) {\n    if (this.state !== EDITOR_STATE.VIRGIN) {\n      return;\n    }\n    this.TEXTAREA.value = ''; // Remove an empty space from textarea (added by copyPaste plugin to make copy/paste functionality work with IME).\n    super.beginEditing(newInitialValue, event);\n  }\n\n  /**\r\n   * Sets focus state on the select element.\r\n   */\n  focus() {\n    // For IME editor textarea element must be focused using \".select\" method.\n    // Using \".focus\" browser automatically scroll into the focused element which\n    // is undesired effect.\n    this.TEXTAREA.select();\n    setCaretPosition(this.TEXTAREA, this.TEXTAREA.value.length);\n  }\n\n  /**\r\n   * Creates an editor's elements and adds necessary CSS classnames.\r\n   */\n  createElements() {\n    const {\n      rootDocument\n    } = this.hot;\n    this.TEXTAREA = rootDocument.createElement('TEXTAREA');\n\n    // Makes the element recognizable by Hot as its own\n    // component's element.\n    setAttribute(this.TEXTAREA, [['data-hot-input', ''], A11Y_TABINDEX(-1)]);\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(this.TEXTAREA, [A11Y_HIDDEN()]);\n    }\n    addClass(this.TEXTAREA, 'handsontableInput');\n    this.textareaStyle = this.TEXTAREA.style;\n    this.textareaStyle.width = 0;\n    this.textareaStyle.height = 0;\n    this.textareaStyle.overflowY = 'visible';\n    this.TEXTAREA_PARENT = rootDocument.createElement('DIV');\n    addClass(this.TEXTAREA_PARENT, 'handsontableInputHolder');\n    if (hasClass(this.TEXTAREA_PARENT, this.layerClass)) {\n      removeClass(this.TEXTAREA_PARENT, this.layerClass);\n    }\n    addClass(this.TEXTAREA_PARENT, EDITOR_HIDDEN_CLASS_NAME);\n    this.textareaParentStyle = this.TEXTAREA_PARENT.style;\n    this.TEXTAREA_PARENT.appendChild(this.TEXTAREA);\n    this.hot.rootElement.appendChild(this.TEXTAREA_PARENT);\n  }\n\n  /**\r\n   * Moves an editable element out of the viewport, but element must be able to hold focus for IME support.\r\n   *\r\n   * @private\r\n   */\n  hideEditableElement() {\n    if (isEdge()) {\n      this.textareaStyle.textIndent = '-99999px';\n    }\n    this.textareaStyle.overflowY = 'visible';\n    this.textareaParentStyle.opacity = '0';\n    this.textareaParentStyle.height = '1px';\n    removeClass(this.TEXTAREA_PARENT, this.layerClass);\n    addClass(this.TEXTAREA_PARENT, EDITOR_HIDDEN_CLASS_NAME);\n  }\n\n  /**\r\n   * Resets an editable element position.\r\n   *\r\n   * @private\r\n   */\n  showEditableElement() {\n    this.textareaParentStyle.height = '';\n    this.textareaParentStyle.overflow = '';\n    this.textareaParentStyle.position = '';\n    this.textareaParentStyle[this.hot.isRtl() ? 'left' : 'right'] = 'auto';\n    this.textareaParentStyle.opacity = '1';\n    this.textareaStyle.textIndent = '';\n    const childNodes = this.TEXTAREA_PARENT.childNodes;\n    let hasClassHandsontableEditor = false;\n    rangeEach(childNodes.length - 1, index => {\n      const childNode = childNodes[index];\n      if (hasClass(childNode, 'handsontableEditor')) {\n        hasClassHandsontableEditor = true;\n        return false;\n      }\n    });\n    if (hasClass(this.TEXTAREA_PARENT, EDITOR_HIDDEN_CLASS_NAME)) {\n      removeClass(this.TEXTAREA_PARENT, EDITOR_HIDDEN_CLASS_NAME);\n    }\n    if (hasClassHandsontableEditor) {\n      this.layerClass = EDITOR_VISIBLE_CLASS_NAME;\n      addClass(this.TEXTAREA_PARENT, this.layerClass);\n    } else {\n      this.layerClass = this.getEditedCellsLayerClass();\n      addClass(this.TEXTAREA_PARENT, this.layerClass);\n    }\n  }\n\n  /**\r\n   * Refreshes editor's value using source data.\r\n   *\r\n   * @private\r\n   */\n  refreshValue() {\n    const physicalRow = this.hot.toPhysicalRow(this.row);\n    const sourceData = this.hot.getSourceDataAtCell(physicalRow, this.col);\n    this.originalValue = sourceData;\n    this.setValue(sourceData);\n    this.refreshDimensions();\n  }\n\n  /**\r\n   * Refreshes editor's size and position.\r\n   *\r\n   * @private\r\n   * @param {boolean} force Indicates if the refreshing editor dimensions should be triggered.\r\n   */\n  refreshDimensions() {\n    let force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (this.state !== EDITOR_STATE.EDITING && !force) {\n      return;\n    }\n    this.TD = this.getEditedCell();\n\n    // TD is outside of the viewport.\n    if (!this.TD) {\n      if (!force) {\n        this.close(); // TODO shouldn't it be this.finishEditing() ?\n      }\n      return;\n    }\n    const {\n      top,\n      start,\n      width,\n      maxWidth,\n      height,\n      maxHeight\n    } = this.getEditedCellRect();\n    this.textareaParentStyle.top = `${top}px`;\n    this.textareaParentStyle[this.hot.isRtl() ? 'right' : 'left'] = `${start}px`;\n    this.showEditableElement();\n    const cellComputedStyle = getComputedStyle(this.TD, this.hot.rootWindow);\n    this.TEXTAREA.style.fontSize = cellComputedStyle.fontSize;\n    this.TEXTAREA.style.fontFamily = cellComputedStyle.fontFamily;\n    this.TEXTAREA.style.backgroundColor = this.TD.style.backgroundColor;\n    const textareaComputedStyle = getComputedStyle(this.TEXTAREA);\n    const horizontalPadding = parseInt(textareaComputedStyle.paddingLeft, 10) + parseInt(textareaComputedStyle.paddingRight, 10);\n    const verticalPadding = parseInt(textareaComputedStyle.paddingTop, 10) + parseInt(textareaComputedStyle.paddingBottom, 10);\n    const finalWidth = width - horizontalPadding;\n    const finalHeight = height - verticalPadding;\n    const finalMaxWidth = maxWidth - horizontalPadding;\n    const finalMaxHeight = maxHeight - verticalPadding;\n    this.autoResize.init(this.TEXTAREA, {\n      minWidth: Math.min(finalWidth, finalMaxWidth),\n      minHeight: Math.min(finalHeight, finalMaxHeight),\n      // TEXTAREA should never be wider than visible part of the viewport (should not cover the scrollbar)\n      maxWidth: finalMaxWidth,\n      maxHeight: finalMaxHeight\n    }, true);\n  }\n\n  /**\r\n   * Binds events and hooks.\r\n   *\r\n   * @private\r\n   */\n  bindEvents() {\n    if (isIOS()) {\n      // on iOS after click \"Done\" the edit isn't hidden by default, so we need to handle it manually.\n      this.eventManager.addEventListener(this.TEXTAREA, 'focusout', () => this.finishEditing(false));\n    }\n    this.addHook('afterScrollHorizontally', () => this.refreshDimensions());\n    this.addHook('afterScrollVertically', () => this.refreshDimensions());\n    this.addHook('afterColumnResize', () => {\n      this.refreshDimensions();\n      if (this.state === EDITOR_STATE.EDITING) {\n        this.focus();\n      }\n    });\n    this.addHook('afterRowResize', () => {\n      this.refreshDimensions();\n      if (this.state === EDITOR_STATE.EDITING) {\n        this.focus();\n      }\n    });\n  }\n\n  /**\r\n   * Ugly hack for autocompleteEditor.\r\n   *\r\n   * @private\r\n   */\n  allowKeyEventPropagation() {}\n\n  /**\r\n   * Destroys the internal event manager and clears attached hooks.\r\n   *\r\n   * @private\r\n   */\n  destroy() {\n    this.eventManager.destroy();\n    this.clearHooks();\n  }\n\n  /**\r\n   * Register shortcuts responsible for handling editor.\r\n   *\r\n   * @private\r\n   */\n  registerShortcuts() {\n    const shortcutManager = this.hot.getShortcutManager();\n    const editorContext = shortcutManager.getContext('editor');\n    const contextConfig = {\n      runOnlyIf: () => isDefined(this.hot.getSelected()),\n      group: SHORTCUTS_GROUP\n    };\n    const insertNewLine = () => {\n      this.hot.rootDocument.execCommand('insertText', false, '\\n');\n    };\n    editorContext.addShortcuts([{\n      keys: [['Control', 'Enter']],\n      callback: () => {\n        insertNewLine();\n        return false; // Will block closing editor.\n      },\n      runOnlyIf: event => !this.hot.selection.isMultiple() &&\n      // We trigger a data population for multiple selection.\n      // catch CTRL but not right ALT (which in some systems triggers ALT+CTRL)\n      !event.altKey\n    }, {\n      keys: [['Meta', 'Enter']],\n      callback: () => {\n        insertNewLine();\n        return false; // Will block closing editor.\n      },\n      runOnlyIf: () => !this.hot.selection.isMultiple() // We trigger a data population for multiple selection.\n    }, {\n      keys: [['Alt', 'Enter']],\n      callback: () => {\n        insertNewLine();\n        return false; // Will block closing editor.\n      }\n    }, {\n      keys: [['Home']],\n      callback: (event, _ref) => {\n        let [keyName] = _ref;\n        updateCaretPosition(keyName, this.TEXTAREA);\n      }\n    }, {\n      keys: [['End']],\n      callback: (event, _ref2) => {\n        let [keyName] = _ref2;\n        updateCaretPosition(keyName, this.TEXTAREA);\n      }\n    }], contextConfig);\n  }\n\n  /**\r\n   * Unregister shortcuts responsible for handling editor.\r\n   *\r\n   * @private\r\n   */\n  unregisterShortcuts() {\n    const shortcutManager = this.hot.getShortcutManager();\n    const editorContext = shortcutManager.getContext('editor');\n    editorContext.removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n}", "import \"core-js/modules/es.array.push.js\";\n/**\r\n * Adds appropriate CSS class to table cell, based on cellProperties.\r\n */\nimport { addClass, removeAttribute, removeClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { A11Y_INVALID, A11Y_READONLY } from \"../../helpers/a11y.mjs\";\nexport const RENDERER_TYPE = 'base';\n\n/**\r\n * @param {Core} hotInstance The Handsontable instance.\r\n * @param {HTMLTableCellElement} TD The rendered cell element.\r\n * @param {number} row The visual row index.\r\n * @param {number} col The visual column index.\r\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\r\n * @param {*} value The rendered value.\r\n * @param {object} cellProperties The cell meta object (see {@link Core#getCellMeta}).\r\n */\nexport function baseRenderer(hotInstance, TD, row, col, prop, value, cellProperties) {\n  const ariaEnabled = cellProperties.ariaTags;\n  const classesToAdd = [];\n  const classesToRemove = [];\n  const attributesToRemove = [];\n  const attributesToAdd = [];\n  if (cellProperties.className) {\n    addClass(TD, cellProperties.className);\n  }\n  if (cellProperties.readOnly) {\n    classesToAdd.push(cellProperties.readOnlyCellClassName);\n    if (ariaEnabled) {\n      attributesToAdd.push(A11Y_READONLY());\n    }\n  } else if (ariaEnabled) {\n    attributesToRemove.push(A11Y_READONLY()[0]);\n  }\n  if (cellProperties.valid === false && cellProperties.invalidCellClassName) {\n    classesToAdd.push(cellProperties.invalidCellClassName);\n    if (ariaEnabled) {\n      attributesToAdd.push(A11Y_INVALID());\n    }\n  } else {\n    classesToRemove.push(cellProperties.invalidCellClassName);\n    if (ariaEnabled) {\n      attributesToRemove.push(A11Y_INVALID()[0]);\n    }\n  }\n  if (cellProperties.wordWrap === false && cellProperties.noWordWrapClassName) {\n    classesToAdd.push(cellProperties.noWordWrapClassName);\n  }\n  if (!value && cellProperties.placeholder) {\n    classesToAdd.push(cellProperties.placeholderCellClassName);\n  }\n  removeClass(TD, classesToRemove);\n  addClass(TD, classesToAdd);\n  removeAttribute(TD, attributesToRemove);\n  setAttribute(TD, attributesToAdd);\n}\nbaseRenderer.RENDERER_TYPE = RENDERER_TYPE;", "import { baseRenderer } from \"../baseRenderer/index.mjs\";\nimport { empty, fastInnerText } from \"../../helpers/dom/element.mjs\";\nimport { stringify } from \"../../helpers/mixed.mjs\";\nexport const RENDERER_TYPE = 'text';\n\n/**\r\n * Default text renderer.\r\n *\r\n * @private\r\n * @param {Core} hotInstance The Handsontable instance.\r\n * @param {HTMLTableCellElement} TD The rendered cell element.\r\n * @param {number} row The visual row index.\r\n * @param {number} col The visual column index.\r\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\r\n * @param {*} value The rendered value.\r\n * @param {object} cellProperties The cell meta object (see {@link Core#getCellMeta}).\r\n */\nexport function textRenderer(hotInstance, TD, row, col, prop, value, cellProperties) {\n  baseRenderer.apply(this, [hotInstance, TD, row, col, prop, value, cellProperties]);\n  let escaped = value;\n  if (!escaped && cellProperties.placeholder) {\n    escaped = cellProperties.placeholder;\n  }\n  escaped = stringify(escaped);\n  if (cellProperties.trimWhitespace) {\n    escaped = escaped.trim();\n  }\n  if (cellProperties.rendererTemplate) {\n    empty(TD);\n    const TEMPLATE = hotInstance.rootDocument.createElement('TEMPLATE');\n    TEMPLATE.setAttribute('bind', '{{}}');\n    TEMPLATE.innerHTML = cellProperties.rendererTemplate;\n    HTMLTemplateElement.decorate(TEMPLATE);\n    TEMPLATE.model = hotInstance.getSourceDataAtRow(row);\n    TD.appendChild(TEMPLATE);\n  } else {\n    // this is faster than innerHTML. See: https://github.com/handsontable/handsontable/wiki/JavaScript-&-DOM-performance-tips\n    fastInnerText(TD, escaped);\n  }\n}\ntextRenderer.RENDERER_TYPE = RENDERER_TYPE;", "import { TextEditor } from \"../../editors/textEditor/index.mjs\";\nimport { textRenderer } from \"../../renderers/textRenderer/index.mjs\";\nexport const CELL_TYPE = 'text';\nexport const TextCellType = {\n  CELL_TYPE,\n  editor: TextEditor,\n  renderer: textRenderer\n};", "import Core from \"./core.mjs\";\nimport { rootInstanceSymbol } from \"./utils/rootInstance.mjs\";\nimport { metaSchemaFactory } from \"./dataMap/index.mjs\";\nimport Hooks from \"./pluginHooks.mjs\"; // FIXME: Bug in eslint-plugin-import: https://github.com/benmosher/eslint-plugin-import/issues/1883\n/* eslint-disable import/named */\nimport { dictionaryKeys, getTranslatedPhrase, registerLanguageDictionary, getLanguagesDictionaries, getLanguageDictionary } from \"./i18n/registry.mjs\";\n/* eslint-enable import/named */\nimport { registerCellType } from \"./cellTypes/registry.mjs\";\nimport { TextCellType } from \"./cellTypes/textType/index.mjs\";\nimport { BaseEditor } from \"./editors/baseEditor/index.mjs\";\nimport { CellCoords, CellRange } from \"./3rdparty/walkontable/src/index.mjs\"; // register default mandatory cell type for the Base package\nregisterCellType(TextCellType);\n\n// export the `BaseEditor` class to the Handsontable global namespace\nHandsontable.editors = {\n  BaseEditor\n};\n\n/**\r\n * @param {HTMLElement} rootElement The element to which the Handsontable instance is injected.\r\n * @param {object} userSettings The user defined options.\r\n * @returns {Core}\r\n */\nfunction Handsontable(rootElement, userSettings) {\n  const instance = new Core(rootElement, userSettings || {}, rootInstanceSymbol);\n  instance.init();\n  return instance;\n}\nHandsontable.Core = function (rootElement) {\n  let userSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Core(rootElement, userSettings, rootInstanceSymbol);\n};\nHandsontable.DefaultSettings = metaSchemaFactory();\nHandsontable.hooks = Hooks.getSingleton();\nHandsontable.CellCoords = CellCoords;\nHandsontable.CellRange = CellRange;\nHandsontable.packageName = 'handsontable';\nHandsontable.buildDate = \"30/07/2024 11:21:58\";\nHandsontable.version = \"14.5.0\";\nHandsontable.languages = {\n  dictionaryKeys,\n  getLanguageDictionary,\n  getLanguagesDictionaries,\n  registerLanguageDictionary,\n  getTranslatedPhrase\n};\nexport { CellCoords, CellRange };\nexport default Handsontable;"],
  "mappings": "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AA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAasCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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AAA;AAAA;AAAA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6BxB,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgHrB,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2Cf,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsCN,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA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AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAoBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgDT,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BZ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAoBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA4BT,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqBd,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA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",
  "names": ["exec", "error", "fails", "fails", "call", "getOwnPropertyDescriptor", "call", "uncurryThis", "toString", "stringSlice", "uncurryThis", "fails", "isNullOrUndefined", "$TypeError", "requireObjectCoercible", "isCallable", "globalThis", "isCallable", "uncurryThis", "globalThis", "navigator", "globalThis", "Deno", "fails", "globalThis", "$String", "NATIVE_SYMBOL", "getBuiltIn", "isCallable", "$String", "error", "isCallable", "$TypeError", "isNullOrUndefined", "call", "isCallable", "isObject", "$TypeError", "globalThis", "error", "IS_PURE", "globalThis", "requireObjectCoercible", "uncurryThis", "toObject", "hasOwnProperty", "uncurryThis", "toString", "globalThis", "NATIVE_SYMBOL", "Symbol", "call", "isObject", "isSymbol", "getMethod", "wellKnownSymbol", "$TypeError", "isSymbol", "globalThis", "isObject", "document", "fails", "call", "getOwnPropertyDescriptor", "error", "fails", "isObject", "$String", "$TypeError", "$TypeError", "error", "uncurryThis", "isCallable", "globalThis", "isCallable", "WeakMap", "globalThis", "isObject", "TypeError", "WeakMap", "uncurryThis", "fails", "isCallable", "$String", "stringSlice", "replace", "error", "toString", "isCallable", "error", "toIntegerOrInfinity", "max", "index", "toIntegerOrInfinity", "lengthOfArrayLike", "index", "uncurryThis", "indexOf", "push", "getBuiltIn", "uncurryThis", "getOwnPropertyDescriptor", "fails", "isCallable", "globalThis", "getOwnPropertyDescriptor", "FORCED", "apply", "call", "uncurryThis", "error", "isObject", "$String", "$TypeError", "isObject", "requireObjectCoercible", "error", "setPrototypeOf", "isCallable", "isObject", "setPrototypeOf", "wellKnownSymbol", "isCallable", "wellKnownSymbol", "error", "$String", "toString", "isObject", "uncurryThis", "replace", "fails", "error", "error", "getBuiltIn", "setPrototypeOf", "IS_PURE", "FORCED", "error", "$TypeError", "getOwnPropertyDescriptor", "error", "$TypeError", "uncurryThis", "call", "uncurryThis", "Set", "Set", "call", "toIntegerOrInfinity", "$TypeError", "max", "clone", "getBuiltIn", "Set", "error", "$", "Set", "$", "fails", "call", "getMethod", "error", "$", "$", "$", "clone", "$", "clone", "$", "uncurryThis", "uncurryThis", "getBuiltIn", "uncurryThis", "$TypeError", "globalThis", "globalThis", "apply", "isCallable", "fails", "html", "arraySlice", "Function", "String", "setImmediate", "clearImmediate", "$", "globalThis", "clearImmediate", "globalThis", "apply", "isCallable", "arraySlice", "Function", "$", "globalThis", "setImmediate", "global", "isObject", "isUndefined", "extend", "format", "locale", "to", "from", "warn", "isFunction", "now", "sign", "token", "ordinal", "i", "diff", "localeData", "indexOf", "hours", "minutes", "tokens", "meridiem", "max", "years", "months", "weeks", "days", "seconds", "milliseconds", "offset", "clone", "toString", "toObject", "index", "thresholds", "uncurryThis", "isCallable", "toString", "push", "index", "html", "activeXDocument", "error", "create", "wellKnownSymbol", "create", "isObject", "wellKnownSymbol", "isRegExp", "call", "uncurryThis", "toObject", "charAt", "replace", "stringSlice", "globalThis", "Error", "RangeError", "TypeError", "$", "error", "FORCED", "obj", "_setPrototypeOf", "o", "p", "_construct", "Parent", "args", "Class", "apply", "freeze", "seal", "construct", "getGlobal", "_createTrustedTypesPolicy", "document", "html", "window", "DOMPurify", "HTMLTemplateElement", "Node", "isRegexOrFunction", "_parseConfig", "_checkValidNamespace", "_forceRemove", "_", "_removeAttribute", "_initDocument", "_createIterator", "_isClobbered", "_isNode", "_executeHook", "_sanitizeElements", "_isValidAttribute", "_basicCustomElementTest", "_sanitizeAttributes", "_sanitizeShadowDOM", "index", "index", "_ref", "moment", "text", "clone", "hasOwnProperty", "$", "apply", "fails", "offset", "stringify", "clone", "index", "hasOwnProperty", "holder", "tester", "_ref", "offset", "index", "_ref", "register", "getItem", "hasItem", "getNames", "getValues", "instances", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_selection", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_assertClassBrand", "_classPrivateFieldGet2", "_classPrivateFieldGet3", "_classPrivateFieldGet4", "_classPrivateFieldGet5", "_classPrivateFieldGet6", "$", "call", "uncurryThis", "isCallable", "isRegExp", "replace", "index", "index", "hasItem", "_ref", "getItem", "register", "getItem", "hasItem", "getNames", "getValues", "_getItem", "_register", "register", "getItem", "hasItem", "getNames", "getValues", "_getItem", "_register", "$", "toObject", "lengthOfArrayLike", "addToUnscopables", "index", "$", "uncurryThis", "requireObjectCoercible", "toIntegerOrInfinity", "toString", "fails", "charAt", "FORCED", "at", "index", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_ref", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_ref", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_ref", "index", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_ref", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_ref", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "_isRtl", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "_defineProperty", "_toPropertyKey", "_toPrimitive", "offset", "index", "_defineProperty", "_toPropertyKey", "_toPrimitive", "offset", "index", "_defineProperty", "_toPropertyKey", "_toPrimitive", "offset", "_defineProperty", "_toPropertyKey", "_toPrimitive", "offset", "_defineProperty", "_toPropertyKey", "_toPrimitive", "offset", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "performanceWarningAppeared", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "_ref", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "holder", "index", "MIXIN_NAME", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_assertClassBrand", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "clone", "_defineProperty", "_toPropertyKey", "_toPrimitive", "holder", "clone", "MIXIN_NAME", "_defineProperty", "_toPropertyKey", "_toPrimitive", "holder", "MIXIN_NAME", "MIXIN_NAME", "addToUnscopables", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "index", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "_activeOverlaysWot", "border", "_classPrivateFieldGet2", "_classPrivateFieldGet3", "_classPrivateFieldGet4", "_ref", "_classPrivateFieldGet5", "_classPrivateFieldGet6", "holder", "offset", "MIXIN_NAME", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "holder", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldSet", "_assertClassBrand", "_classPrivateFieldGet", "holder", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_ref", "isLeftClick", "isRightClick", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "holder", "_ref", "offset", "index", "index", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "index", "index", "getListWithInsertedItems", "getListWithRemovedItems", "index", "index", "_defineProperty", "_toPropertyKey", "_toPrimitive", "index", "getListWithRemovedItems", "getListWithInsertedItems", "getListWithRemovedItems", "index", "getListWithInsertedItems", "getListWithRemovedItems", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "index", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldSet", "_assertClassBrand", "_classPrivateFieldGet", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "index", "getListWithRemovedItems", "getListWithInsertedItems", "register", "register", "dictionary", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_ref", "_ref", "createHighlight", "_ref", "createHighlight", "_ref", "createHighlight", "_ref", "createHighlight", "_ref", "createHighlight", "_ref", "createHighlight", "_ref", "createHighlight", "_ref", "createHighlight", "_ref", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_assertClassBrand", "_classPrivateMethodInitSpec", "_defineProperty", "createHighlight", "_assertClassBrand", "_defineProperty", "_toPropertyKey", "_toPrimitive", "index", "range_default", "_classPrivateMethodInitSpec", "_checkPrivateRedeclaration", "_classPrivateFieldInitSpec", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "_ref", "index", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_assertClassBrand", "_classPrivateFieldSet", "Selection", "range_default", "tester", "range", "selection_default", "stringify", "_defineProperty", "_toPropertyKey", "_toPrimitive", "index", "hasOwnProperty", "stringify", "register", "getItem", "hasItem", "getNames", "getValues", "_getItem", "_register", "hasOwnProperty", "_getItem", "TableMeta", "ColumnMeta", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "index", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_defineProperty", "_toPropertyKey", "_toPrimitive", "ColumnMeta", "_ref", "_defineProperty", "_toPropertyKey", "_toPrimitive", "hasOwnProperty", "_classPrivateFieldInitSpec", "_checkPrivateRedeclaration", "_defineProperty", "_toPropertyKey", "_toPrimitive", "_classPrivateFieldGet", "_assertClassBrand", "self", "MIXIN_NAME", "_defineProperty", "_toPropertyKey", "_toPrimitive", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "getAllCommands", "command", "command", "_ref", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "command", "_ref", "command", "getAllCommands", "command", "command", "command", "command", "command", "command", "getAllCommands", "command", "_ref", "_ref", "_ref", "_ref", "_ref", "_ref", "index", "rootInstanceSymbol", "selection_default", "_ref", "index", "offset", "getInputValue", "hasOwnProperty", "_getItem", "_options", "getComputedStyle", "_defineProperty", "_toPropertyKey", "_toPrimitive", "EDITOR_TYPE", "index", "_ref", "RENDERER_TYPE", "_register"]
}
